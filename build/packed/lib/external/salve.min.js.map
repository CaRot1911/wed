{"version":3,"sources":["webpack://salve/webpack/universalModuleDefinition","webpack://salve/webpack/bootstrap","webpack://salve/./node_modules/tslib/tslib.es6.js","webpack://salve/./build/dist/lib/salve/patterns/base.js","webpack://salve/./build/dist/lib/salve/conversion/parser.js","webpack://salve/./build/dist/lib/salve/conversion/schema-validation.js","webpack://salve/./build/dist/lib/salve/errors.js","webpack://salve/./build/dist/lib/salve/conversion/simplifier/util.js","webpack://salve/./node_modules/readable-stream/lib/_stream_duplex.js","webpack://salve/./node_modules/inherits/inherits_browser.js","webpack://salve/(webpack)/buildin/global.js","webpack://salve/./build/dist/lib/salve/set.js","webpack://salve/./node_modules/core-util-is/lib/util.js","webpack://salve/./build/dist/lib/salve/name_resolver.js","webpack://salve/./build/dist/lib/salve/tools.js","webpack://salve/./build/dist/lib/salve/patterns.js","webpack://salve/./node_modules/safe-buffer/index.js","webpack://salve/./node_modules/process-nextick-args/index.js","webpack://salve/./node_modules/process/browser.js","webpack://salve/./build/dist/lib/salve/name_patterns.js","webpack://salve/./build/dist/lib/salve/datatypes.js","webpack://salve/./node_modules/string_decoder/lib/string_decoder.js","webpack://salve/./node_modules/readable-stream/lib/_stream_writable.js","webpack://salve/./node_modules/readable-stream/readable-browser.js","webpack://salve/./node_modules/events/events.js","webpack://salve/./node_modules/buffer/index.js","webpack://salve/./build/dist/lib/salve/conversion/schema-simplifiers/internal.js","webpack://salve/./build/dist/lib/salve/datatypes/errors.js","webpack://salve/./build/dist/lib/salve/ename.js","webpack://salve/./build/dist/lib/salve/conversion/schema-simplifiers/common.js","webpack://salve/./build/dist/lib/salve/conversion/schema-simplification.js","webpack://salve/./build/dist/lib/salve/json-format/common.js","webpack://salve/./build/dist/lib/salve/json-format/read.js","webpack://salve/./node_modules/readable-stream/lib/_stream_transform.js","webpack://salve/./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://salve/./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack://salve/./node_modules/readable-stream/lib/_stream_readable.js","webpack://salve/./node_modules/isarray/index.js","webpack://salve/./build/dist/lib/salve/conversion/resource-loader.js","webpack://salve/./build/dist/lib/salve/conversion/conversion-walker.js","webpack://salve/./build/dist/lib/salve/conversion.js","webpack://salve/./build/dist/lib/salve/patterns/not_allowed.js","webpack://salve/./build/dist/lib/salve/datatypes/xmlcharacters.js","webpack://salve/./build/dist/lib/salve/patterns/empty.js","webpack://salve/./build/dist/lib/salve/json-format/write.js","webpack://salve/./build/dist/lib/salve/conversion/serializer.js","webpack://salve/./build/dist/lib/salve/conversion/schema-simplifiers/base.js","webpack://salve/./build/dist/lib/salve/conversion/simplifier/step18.js","webpack://salve/./build/dist/lib/salve/conversion/simplifier/step17.js","webpack://salve/./build/dist/lib/salve/conversion/simplifier/step16.js","webpack://salve/./build/dist/lib/salve/conversion/simplifier/step15.js","webpack://salve/./build/dist/lib/salve/conversion/simplifier/step14.js","webpack://salve/./build/dist/lib/salve/conversion/simplifier/step10.js","webpack://salve/./build/dist/lib/salve/conversion/simplifier/step9.js","webpack://salve/./build/dist/lib/salve/conversion/simplifier/step6.js","webpack://salve/./build/dist/lib/salve/conversion/simplifier/step4.js","webpack://salve/./build/dist/lib/salve/conversion/simplifier/step1.js","webpack://salve/./build/dist/lib/salve/conversion/simplifier.js","webpack://salve/./build/dist/lib/salve/conversion/schema-validators/internal.js","webpack://salve/./build/dist/lib/salve/conversion/schema-validators/autoload.js","webpack://salve/./build/dist/lib/salve/conversion/schema-simplifiers/autoload.js","webpack://salve/./node_modules/readable-stream/passthrough.js","webpack://salve/./node_modules/readable-stream/transform.js","webpack://salve/./node_modules/readable-stream/duplex-browser.js","webpack://salve/./node_modules/readable-stream/writable-browser.js","webpack://salve/./node_modules/readable-stream/lib/_stream_passthrough.js","webpack://salve/./node_modules/util-deprecate/browser.js","webpack://salve/./node_modules/setimmediate/setImmediate.js","webpack://salve/./node_modules/timers-browserify/main.js","webpack://salve/./node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack://salve/./node_modules/stream-browserify/index.js","webpack://salve/./node_modules/ieee754/index.js","webpack://salve/./node_modules/base64-js/index.js","webpack://salve/./node_modules/sax/lib/sax.js","webpack://salve/./build/dist/lib/salve/conversion/resource-loaders/fetch.js","webpack://salve/./build/dist/lib/salve/conversion/convert-simplified.js","webpack://salve/./build/dist/lib/salve/conversion/convert.js","webpack://salve/./build/dist/lib/salve/patterns/grammar.js","webpack://salve/./build/dist/lib/salve/patterns/ref.js","webpack://salve/./build/dist/lib/salve/patterns/value.js","webpack://salve/./build/dist/lib/salve/patterns/text.js","webpack://salve/./build/dist/lib/salve/patterns/param.js","webpack://salve/./build/dist/lib/salve/patterns/one_or_more.js","webpack://salve/./build/dist/lib/salve/patterns/list.js","webpack://salve/./build/dist/lib/salve/patterns/interleave.js","webpack://salve/./build/dist/lib/salve/patterns/group.js","webpack://salve/./build/dist/lib/salve/patterns/element.js","webpack://salve/./build/dist/lib/salve/patterns/define.js","webpack://salve/./node_modules/xregexp/tools/output/scripts.js","webpack://salve/./node_modules/xregexp/lib/addons/unicode-scripts.js","webpack://salve/./node_modules/xregexp/tools/output/properties.js","webpack://salve/./node_modules/xregexp/lib/addons/unicode-properties.js","webpack://salve/./node_modules/xregexp/tools/output/categories.js","webpack://salve/./node_modules/xregexp/lib/addons/unicode-categories.js","webpack://salve/./node_modules/xregexp/tools/output/blocks.js","webpack://salve/./node_modules/xregexp/lib/addons/unicode-blocks.js","webpack://salve/./node_modules/xregexp/lib/addons/unicode-base.js","webpack://salve/./node_modules/xregexp/lib/addons/matchrecursive.js","webpack://salve/./node_modules/xregexp/lib/addons/build.js","webpack://salve/./node_modules/xregexp/lib/xregexp.js","webpack://salve/./node_modules/xregexp/lib/index.js","webpack://salve/./build/dist/lib/salve/datatypes/regexp.js","webpack://salve/./build/dist/lib/salve/datatypes/xmlschema.js","webpack://salve/./build/dist/lib/salve/datatypes/builtin.js","webpack://salve/./build/dist/lib/salve/patterns/data.js","webpack://salve/./build/dist/lib/salve/patterns/choice.js","webpack://salve/./build/dist/lib/salve/util.js","webpack://salve/./build/dist/lib/salve/patterns/attribute.js","webpack://salve/./build/dist/lib/salve/validate.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__importDefault","extendStatics","setPrototypeOf","__proto__","Array","b","__extends","__","this","constructor","create","__assign","assign","t","arguments","length","__rest","e","indexOf","getOwnPropertySymbols","__decorate","decorators","target","key","desc","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__exportStar","__values","__read","ar","error","__spread","concat","__await","__asyncGenerator","asyncIterator","q","a","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","k","default","tslib_1","InternalFireEventResult","matched","errors","refs","fromEndResult","combine","other","undefined","BasePattern","xmlPath","_prepare","definitions","namespaces","hasAttrs","hasEmptyPattern","Pattern","_super","newWalker","resolver","Error","OneSubpattern","pat","_this","ret","_cachedHasAttrs","_cachedHasEmptyPattern","_computeHasEmptyPattern","TwoSubpatterns","patA","patB","aRefs","bRefs","Event","args","_i","params","isAttributeEvent","toString","join","eventsToTreeString","evs","eventArray","Set","from","hash","Map","forEach","ev","node","last","set","nextNode","dumpTree","toDump","indent","e_1","_a","keys","sort","keys_1","keys_1_1","sub","e_1_1","cloneIfNeeded","obj","memo","clone","BaseWalker","_clone","el","InternalWalker","end","endAttributes","name_resolver_1","tools_1","util_1","Parser","saxParser","name_1","lastIndexOf","bind","Node","_parent","setParent","remove","parent","removeChild","replaceWith","replacement","replaceChildWith","emptyNS","Element","prefix","local","uri","ns","attributes","children","children_1","children_1_1","fromSax","makeElement","_path","XML1_NAMESPACE","XMLNS_NAMESPACE","_resolve","map","x","text","makePath","e_2","_c","path","getAttribute","_b","child","e_2_1","splice","indexOfChild","removeChildAt","replaceChildAt","appendChild","appendChildren","children_2","children_2_1","e_3_1","e_3","prependChild","unshift","insertAt","index","toInsert","toInsert_1","toInsert_1_1","e_4_1","e_4","empty","e_5","children_3","children_3_1","e_5_1","grabChildren","src","e_6","children_4","children_4_1","e_6_1","replaceContent","e_7","e_8","prev","prev_1","prev_1_1","e_7_1","children_5","children_5_1","e_8_1","setAttribute","setXMLNS","xmlns","removeAttribute","attr","getRawAttributes","mustGetAttribute","e_9","e_9_1","Text","Validator","grammar","contextStack","textBuf","walker","flushTextBuf","fireEvent","onopentag","e_10","_d","hasContext","attributeEvents","name_2","enterContext","definePrefix","e_10_1","onclosetag","leaveContext","ontext","NullValidator","BasicParser","validator","drop","stack","filter","RELAXNG_URI","topNode","ConversionParser","trim","Found","fixPrototype","IncludeParser","found","autoload_1","SchemaValidationError","message","err","availableValidators","getAvailableValidators","isValidatorAvailable","registerValidator","ctor","makeValidator","options","autoload","ValidationError","msg","toStringWithNames","getNames","names","equals","SingleNameError","AttributeNameError","AttributeValueError","ElementNameError","ChoiceError","namesA","namesB","first","slice","second","parser_1","_findDescendantsByLocalName","findMultiDescendantsByLocalName","names_1","names_1_1","_findMultiDescendantsByLocalName","includes","findChildrenByLocalName","findDescendantsByLocalName","findMultiNames","nameClass","descendants","indexBy","arr","makeKey","arr_1","arr_1_1","groupBy","arr_2","arr_2_1","list","getName","removeUnreferencedDefs","seen","ix","has","pna","objectKeys","Duplex","util","inherits","Readable","Writable","method","readable","writable","allowHalfOpen","once","onend","_writableState","ended","nextTick","onEndNT","self","highWaterMark","_readableState","destroyed","_destroy","cb","superCtor","super_","TempCtor","Function","eval","union","me","s_1","s_1_1","add","me_1","me_1_1","me_2","me_2_1","Buffer","objectToString","isArray","arg","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isObject","isDate","isError","isFunction","isPrimitive","isBuffer","ename_1","NameResolver","id","__newID","_contextStack","forward","backwards","top","prefixes","resolveName","attribute","parts","split","EName","unresolveName","cIx","pre","prefixFromURI","__id","copy","source","extend","sources","sources_1","sources_1_1","getPrototypeOf","attribute_1","Attribute","choice_1","Choice","data_1","Data","define_1","Define","element_1","empty_1","Empty","group_1","Group","interleave_1","Interleave","list_1","List","not_allowed_1","NotAllowed","one_or_more_1","OneOrMore","param_1","Param","text_1","value_1","Value","ref_1","Ref","name_patterns_1","Name","NameChoice","NsName","AnyName","base_1","grammar_1","Grammar","GrammarWalker","RefError","buffer","copyProps","dst","SafeBuffer","encodingOrOffset","alloc","allocUnsafe","allocUnsafeSlow","size","fill","encoding","buf","SlowBuffer","process","version","fn","arg1","arg2","arg3","len","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","title","browser","env","argv","versions","on","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","escapeString","str","replace","Base","getNamespaces","_recordNamespaces","toJSON","toObject","_asString","asString","match","intersects","intersection","wildcardMatch","simple","toArray","recordEmpty","makeTree","top_1","applyRecursively","newA","newB","aArr","bArr","except","theseNames","otherNames","reduce","acc","values","subtract","some","thisName","negation","pattern","_recordEmpty","builtin_1","xmlschema_1","Registry","libraries","library","find","registry","builtin","xmlschema","errors_1","ParameterParsingError","ValueValidationError","ValueError","isEncoding","toLowerCase","StringDecoder","nb","enc","nenc","retried","_normalizeEncoding","normalizeEncoding","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","write","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","charCodeAt","total","j","utf8CheckIncomplete","setImmediate","global","CorkedRequest","state","entry","finish","corkReq","callback","pendingcb","corkedRequestsFree","onCorkedFinish","asyncWrite","WritableState","internalUtil","deprecate","Stream","OurUint8Array","Uint8Array","realHasInstance","destroyImpl","nop","stream","isDuplex","objectMode","writableObjectMode","hwm","writableHwm","writableHighWaterMark","defaultHwm","Math","floor","finalCalled","needDrain","ending","finished","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","er","writecb","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","_write","writev","_writev","destroy","final","_final","doWrite","chunk","onwriteDrain","holder","count","allBuffers","isBuf","callFinal","need","prefinish","getBuffer","current","out","hasInstance","pipe","_uint8ArrayToBuffer","writeAfterEnd","valid","validChunk","newChunk","decodeChunk","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_undestroy","undestroy","Transform","PassThrough","EventEmitter","_events","_maxListeners","defaultMaxListeners","setMaxListeners","isNaN","type","handler","context","listener","newListener","warned","console","trace","fired","position","listenerCount","evlistener","emitter","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","ArrayBuffer","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","actual","fromString","checked","val","data","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","arrayIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","fromByteArray","utf8Slice","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","_isBuffer","compare","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","inspect","max","thisStart","thisEnd","thisCopy","targetCopy","isFinite","_arr","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","sax","datatypes_1","read_1","patterns_1","relaxng","schema_simplification_1","schema_validation_1","simplifier","common_1","makeNamePattern","cachedGrammar","ProhibitedPath","ProhibitedAttributePath","ProhibitedListPath","ProhibitedStartPath","ProhibitedDataExceptPath","EMPTY_ELEMENT_ARRAY","GeneralChecker","attrNameCache","defineNameToElementNames","typeWarnings","check","definesByName","_check","inStart","inAttribute","inList","inDataExcept","inOneOrMore","inOneOrMoreGroup","inOneOrMoreInterleave","inInterlave","inGroup","elementHandler","attributeHandler","anyName","nsName","contentType","occurringAttributes","occurringRefs","occurringTexts","exceptHandler","newState","oneOrMoreHandler","groupHandler","groupInterleaveHandler","interleaveHandler","choiceHandler","firstCt","firstAttributes","firstRefs","firstTexts","secondCt","secondAttributes","secondRefs","secondTexts","listHandler","dataHandler","typeAttr","libname","lib","datatype","types","hasExcept","parseParams","valueHandler","needsContext","fromQNameToURI","localName","nr","parseValue","textHandler","refHandler","emptyHandler","notAllowedHandler","defineHandler","startHandler","grammarHandler","getAttrName","getElementNamesForDefine","isInterleave","_f","_e","firstAttributes_1","firstAttributes_1_1","attr1","secondAttributes_1","secondAttributes_1_1","attr2","name1","name2","names1","names2","names1_1","names1_1_1","names2_1","names2_1_1","InternalSimplifier","timing","verbose","parse","filePath","schema","parser","resourceLoader","load","validate","readTreeFromJSON","JSON","stringify","strictEntities","stepStart","no","stepTiming","log","lastStepStart","Date","now","simplify","schemaPath","startTime","warnings","tree","checkStart","checker","simplifyTo","step1","step4","step6","step9","step10","step14","step15","step16","step17","step18","simplified","validates","BaseSimplifier","registerSimplifier","ParamError","location","equal","datatypes","conversion_walker_1","warnAboutTheseTypes","sep","DatatypeProcessor","walk","walkChildren","ConversionWalker","availableSimplifiers","getAvailableSimplifiers","isAvailable","makeSimplifier","codeToConstructor","nameToCode","OPTION_NO_PATHS","OldFormatError","namedOnePatternFilter","twoPatternFilter","kindToArgFilter","newParams","V2Constructor","_processObject","kind","V2JSONWalker","addPath","walkObject","_transformArray","elIx","constructTree","_transformState","afterTransform","ts","transforming","writechunk","rs","reading","needReadable","_read","needTransform","writeencoding","transform","_transform","flush","_flush","_this2","err2","emitErrorNT","readableDestroyed","writableDestroyed","endEmitted","ReadableState","EElistenerCount","debugUtil","debug","debuglog","BufferList","kProxyEvents","readableObjectMode","readableHwm","readableHighWaterMark","pipes","pipesCount","flowing","emittedReadable","readableListening","resumeScheduled","awaitDrain","readingMore","decoder","readableAddChunk","addToFront","skipChunkCheck","emitReadable","onEofChunk","chunkInvalid","addChunk","maybeReadMore","needMoreData","isPaused","setEncoding","MAX_HWM","howMuchToRead","head","computeNewHighWaterMark","emitReadable_","flow","maybeReadMore_","nReadingNextTick","resume_","fromList","clear","hasStrings","tail","copyFromBufferString","copyFromBuffer","fromListPartial","endReadable","endReadableNT","xs","nOrig","doRead","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","pipeOnDrain","increasedAwaitDrain","pause","event","dests","wrap","paused","_fromList","fetch","makeResourceLoader","NodeResourceLoader","FetchResourceLoader","startAt","endAt","convert_1","convertRNGToPattern","resource_loader_1","serializer_1","serialize","singleton","NotAllowedWalker","canEnd","canEndAttribute","possible","possibleAttributes","xmlLetter","xmlBaseChar","xmlDigit","xmlCombiningChar","xmlNameChar","xmlName","xmlNameRe","RegExp","xmlNcname","xmlNcnameRe","EmptyWalker","test","conversion_1","DefaultConversionWalker","includePaths","inNameClass","_output","_firstItem","arrayStart","reset","openConstruct","open","closeConstruct","close","newItem","outputItem","item","outputAsString","thing","openArray","elName","capitalized","charAt","toUpperCase","skipToChildren","datatypeLibraryAttr","nsAttr","hasParams","renameRefsDefines","gatherNamed","all","name_3","els","sorted","entries","elsA","strId","els_1","els_1_1","writeTreeToJSON","formatVersion","output","escape","isAttr","_serialize","mixed","curIndent","_g","attrs","childrenMixed","prettyPrint","childIndent","processDatatypes","processor","skip","firstEmpty","secondEmpty","handlers","choice","tmp","group","interleave","oneOrMore","firstNA","secondNA","parent_1","currentTree","grammarEl","removedDefines","seenRefs","toAppend","elementCount","ref","defEl","wrapElements","keep","topElement","used","removeDefsWithoutElement","substituteRefs","seenNames","def","newNames","substitute","GrammarNode","childGrammars","defines","parentRefs","refNames","parentRefNames","defineNames","latestId","gatherGrammars","thisGrammar","multiple","transformGrammars","toRename","suffix","toRename_1","toRename_1_1","_h","_j","_k","_l","_m","_o","_p","makeName","combineAs","undefinedCombine","combineAttr","wrapper","newWrapper","grammars","grammars_1","grammars_1_1","defs","grouped","checkNames","anyNames","nsNames","attrName","replaced","parentNs","currentNs","keepNs","resolvedNs","nameEl","parentLibrary","currentLibrary","url","URL","href","endsWith","resolveURL","base","loadFromElement","currentBase","seenURLs","resolved","reverse","Step1","parentBase","currentRoot","baseAttr","clean","externalRef","includedTree","treeNs","include","includeStarts","includeDefs","grammarStarts","grammarDefs","grammarStarts_1","grammarStarts_1_1","includeDefsMap","grammarDefsMap","defs_1","defs_1_1","documentBase","step1_1","step4_1","step6_1","step9_1","step10_1","step14_1","step15_1","step16_1","step17_1","step18_1","internal_1","InternalValidator","config","localStorage","warn","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","port2","createElement","documentElement","script","onreadystatechange","random","addEventListener","attachEvent","task","clearImmediate","scope","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","instance","Constructor","_classCallCheck","custom","EE","_isStdio","didOnEnd","cleanup","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","strict","opt","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","buffers","clearBuffers","bufferCheckPosition","lowercase","lowercasetags","looseCase","tags","closed","closedRoot","sawRoot","tag","noscript","S","BEGIN","ENTITIES","XML_ENTITIES","attribList","rootNS","trackPosition","line","column","EVENTS","F","BEGIN_WHITESPACE","beginWhiteSpace","TEXT","starti","textNode","substring","isWhitespace","strictFail","TEXT_ENTITY","OPEN_WAKA","startTagPosition","SCRIPT","SCRIPT_ENDING","CLOSE_TAG","SGML_DECL","sgmlDecl","isMatch","nameStart","OPEN_TAG","tagName","PROC_INST","procInstName","procInstBody","pad","CDATA","emitNode","cdata","COMMENT","comment","DOCTYPE","doctype","isQuote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","textopts","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","nameBody","newTag","openTag","OPEN_TAG_SLASH","ATTRIB","closeTag","attribName","attribValue","ATTRIB_NAME","ATTRIB_VALUE","attrib","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","isAttribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","notMatch","returnState","parseEntity","entity","entityBody","entityStart","maxAllowed","maxActual","closeText","checkBufferLength","ex","streamWraps","_parser","_decoder","h","SD","XML_NAMESPACE","xml","regex","stringFromCharCode","fromCodePoint","STATE","COMMENT_STARTING","amp","gt","lt","quot","apos","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","nodeType","normalize","qname","qualName","qn","selfClosing","nv","isSelfClosing","closeTo","entityLC","numStr","highSurrogate","lowSurrogate","codeUnits","response","protocol","ok","walkNameClass","makePatternFromSimplifiedSchema","length_1","param","convert_simplified_1","keepTemp","set_1","references","_namespaces","definitions_1","definitions_1_1","missing","_elementDefinitions","newDef","whollyContextIndependent","elementDefinitions","allRefs","startRefs","defRefs","make","MisplacedElementWalker","elOrWalker","nameResolver","_swallowAttributeValue","ignoreNextWs","elementWalkerStack","misplacedDepth","walkers","suspendedWs","wsErr","_fireOnCurrentWalkers","newWalkers","boundName","element","candidates","remainingWalkers","walkers_1","walkers_1_1","finalResult","stackElement","stackElement_1","stackElement_1_1","valueEvs","poss","resolvesTo","_nameResolver","RefWalker","startName","startTagEvent","datatypeLibrary","rawValue","_value","ValueWalker","nameResolverOrMemo","TextWalker","_textEvent","OneOrMoreWalker","subPat","currentIteration","nextIteration","evIsAttributeEvent","nextRet","ListWalker","subwalker","trimmed","tokens","tokens_1","tokens_1_1","token","InterleaveWalker","walkerA","walkerB","retA","retB","GroupWalker","endedA","retA_1","retA_1_1","endA","endB","notAllowed","ElementWalker","endedStartTag","endTagEvent","_leaveStartTagEvent","posses","attrRet","walkerRet","astral","bmp","_scripts","_scripts2","XRegExp","addUnicodeData","ReferenceError","isBmpLast","_properties","_properties2","unicodeData","inverseOf","alias","_categories","_categories2","_blocks","_blocks2","unicode","dec","_dec","hex","_hex","pad4","_pad4","charCode","chr","esc","exec","cacheInvertedBmp","slug","range","lastEnd","cacheAstral","isNegated","combined","buildAstral","addToken","flags","isAstralMode","SyntaxError","optionalFlags","leadChar","cache","_getUnicodeProperty","row","matchRecursive","left","right","sticky","basicFlags","escapeChar","vN","valueNames","openTokens","delimStart","delimEnd","lastOuterEnd","outerStart","innerStart","leftMatch","rightMatch","conjunction","REGEX_DATA","subParts","deanchor","leadingAnchor","trailingAnchor","asXRegExp","addFlagX","captureNames","interpolate","substitution","reduceToSubpatternsObject","subpatterns","interpolated","subpatternIndex","embedSubpatternAfter","rawLiterals","literals","_len","substitutions","_key","build","subs","inlineFlags","_clipDuplicates","patternAsRegex","numCaps","numPriorCaps","numOuterCaps","outerCapsMap","outerCapNames","$0","$1","$2","$3","$4","subName","capName","intro","localCapIndex","paren","backref","features","namespacing","nativ","fixed","regexCache","patternCache","defaultScope","classScope","nativeTokens","class","replacementToken","correctExecNpcg","hasFlagsProp","hasNativeFlag","flag","isSupported","exception","hasNativeU","hasNativeY","registeredFlags","u","augment","xSource","xFlags","isInternalOnly","clipDuplicates","copyRegex","xData","getNativeFlags","flagsToAdd","flagsToRemove","xregexpSource","xregexpFlags","removeG","removeY","addG","addY","hasNamedCapture","getContextualTokenSeparator","input","isQuantifierNext","isType","prepareOptions","registerFlag","runTokens","matchLength","reparse","setAstral","setNamespacing","isInstalled","applied","prepareFlags","appliedPattern","appliedFlags","captures","generated","_hasNativeFlag","cacheName","cacheKey","fakeY","r2","lastIndex","globalize","install","feature","matchChain","chain","recurseChain","level","matches","addMatch","ERR_UNDEFINED_GROUP","isNamedBackref","groups","backrefValue","search","isRegex","s2","replaceEach","replacements","separator","uninstall","patterns","numCaptures","numPriorCaptures","rewrite","origLastIndex","groupsObject","_len2","_key2","_len3","_key3","bracketed","angled","dollarToken","lastLastIndex","lastLength","endIndex","_xregexp2","_interopRequireDefault","_build2","_matchrecursive2","_unicodeBase2","_unicodeBlocks2","_unicodeCategories2","_unicodeProperties2","_unicodeScripts2","JisonParserError","stacktrace","ex2","captureStackTrace","rv","yy","hasPartialLrUpgradeOnConflict","errorRecoveryTokenDiscardCount","symbols_","$accept","$end","(",")","*","+",",","-","?","CATESC","CHAR","CLASSSUBTRACTION","COMPLESC","EOF","MULTICHARESC","NUMBER","SINGLECHARESC","SingleCharEsc","WILDCARDESC","XMLCHAR","[","[^","]","atom","branch","charClass","charClassEsc","charClassExpr","charClassExprStart","charClassSub","charGroup","charOrEsc","charRange","piece","posCharGroup","posCharGroups","quantifier","quantity","regexp","seRange","{","|","}","terminals_","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","TERROR","originalQuoteName","originalParseError","cleanupAfterParse","constructParseErrorInfo","yyMergeLocationInfo","__reentrant_call_depth","__error_infos","__error_recovery_infos","quoteName","id_str","getSymbolName","symbol","describeSymbol","terminal_descriptions_","collect_expected_token_set","do_not_describe","tokenset","state_descriptions_","table","productions_","rule","bp","performAction","yystate","yysp","yyvstack","lexer","$","parseError","outputType","needsXRegExpRe","groupState","capturedMultiChar","subtraction","negative","multiCharEscapesInGroup","unshiftGroupState","repl","multiCharEscapes","mode","goto","z","bt","defaultActions","idx","bda","ExceptionClass","recoverable","sstack","vstack","sp","NO_ACTION","__lexer__","sharedState_yy","pre_parse","post_parse","pre_lex","post_lex","fastLex","assert","yyGetSharedState","shallow_copy_noclobber","resultValue","invoke_post_methods","do_not_nuke_errorinfos","cleanupAfterLex","expected","pei","errStr","yytext","token_id","yylineno","action","new_state","symbol_stack","state_stack","value_stack","stack_pointer","rec","yyrulelen","this_production","lex","yyval","_$","retval","setInput","canIUse","errSymbolDescr","showPosition","ntsymbol","JisonLexerError","ERROR","__currentRuleSet__","__decompressed","_backtrack","_input","_more","_signaled_error_token","conditionStack","yyleng","yylloc","constructLexErrorInfo","show_input_position","prettyPrintRange","pos_str","loc","yyerror","lineno_msg","lexerErrorsAreRecoverable","extra_error_attributes","col","last_column","first_line","first_column","last_line","rules","rule_re","conditions","spec","rule_ids","rule_regexes","rule_new_ids","__rule_regexes","__rule_count","editRemainingInput","cpsArg","ch","slice_len","lines","ch2","unput","pre_lines","more","backtrack_lexer","less","pastInput","maxSize","maxLines","past","upcomingInput","maxPrefix","maxPostfix","deriveLocationInfo","preceding","following","context_loc","context_loc2","l0","l1","lineno_display_width","log10","ws_prefix","nonempty_line_indexes","lno","errpfx","clip_start","MINIMUM_VISIBLE_NONEMPTY_LINE_COUNT","clip_end","intermediate_line","describeYYLLOC","display_range_too","l2","c1","c2","r1","test_match","indexed_rule","backup","match_str","match_str_len","tempMatch","_currentRules","topState","regexes","flex","pendingInput","activeCondition","conditionStackDepth","begin","condition","pushState","popState","stateStackSize","yyrulenumber","YY_START","simpleCaseActionClusters","0","QUANTITY","inclusive","CHARCLASS","INITIAL","xmlcharacters","SalveParsingError","\\s","\\S","\\i","\\I","\\c","\\C","\\d","\\D","\\w","\\W","xmlcharacters_1","failIfNotInteger","convertToInternalNumber","convertInternalNumberToString","Parameter","repeatable","NumericParameter","convert","NonNegativeIntegerParameter","isInvalidParam","failIfNotNonNegativeInteger","lengthP","LengthP","isInvalidValue","valueLength","minLengthP","MinLengthP","maxLengthP","MaxLengthP","reCache","patternP","PatternP","internal","rng","failedOn","param_1_1","totalDigitsP","TotalDigitsP","failIfNotPositiveInteger","FractionDigitsP","NumericTypeDependentParameter","disallows","fractionDigitsP","maxInclusiveP","MaxInclusiveP","repr","maxExclusiveP","MaxExclusiveP","minInclusiveP","MinInclusiveP","minExclusiveP","MinExclusiveP","whitespacePreserve","whitespaceCollapse","whitespaceReplace","processWhitespace","throwMissingLocation","paramNameToObj","_paramNameToObj","validParams","defaultParams","_defaultParams","convertValue","params_1","params_1_1","invalid","schemaValue","converted","typeErrorMsg","paramNames","paramNames_1","paramNames_1_1","CommonStringBased","string_","normalizedString","tokenInternal","language","NCName","NMTOKEN","NMTOKENS","ID","IDREF","IDREFS","ENTITY","decimalPattern","decimal","integerPattern","integer","fail","highestVal","lowestVal","nonPositiveInteger","negativeInteger","nonNegativeInteger","positiveInteger","long_","int_","short_","byte_","unsignedLong","unsignedInt","unsignedShort","unsignedByte","boolean_","_location","B64","B64S","base64BinaryRe","base64Binary","hexBinary","doubleRe","float_","double_","QName","NOTATION","duration","yearPattern","monthPattern","domPattern","timePattern","tzPattern","tzRe","dateGroupingRe","maxDoms","checkDate","year","leap","isLeapYear","month","dom","maxDom","timeParts","minutes","seconds","hoursLimit","tzParts","tzHours","tzSeconds","reJsRfc3986UriReference","dateTime","time","date","gYearMonth","gYear","gMonthDay","gDay","gMonth","anyURI","types_1","types_1_1","normalizeSpace","stringT","StringT","Token","rngParams","_params","allowsEmptyContent","DataWalker","optional","OptionalChoiceWalker","ChoiceWalker","deactivateA","deactivateB","possibleB","combineChoices","notAChoiceError","AttributeWalker","seenName","write_1","BaseName"],"mappings":"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CAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,KAAA,IACA7pC,KAAA,IACA8pC,IAAA,IACAC,KAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,OAAA,IACAC,KAAA,IACAC,IAAA,IACAC,KAAA,IACAC,MAAA,IACAC,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,IAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,QAAA,IACAC,GAAA,IACAC,IAAA,IACAC,MAAA,IACAC,IAAA,IACAC,QAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA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D,KAAA,qBACA23D,OAAA,gCAGA33D,KAAA,SACA23D,OAAA,uCAGA33D,KAAA,OACA43D,IAAA,iBAGA53D,KAAA,WACA43D,IAAA,cAGA53D,KAAA,SACA43D,IAAA,sOACAD,OAAA,y9BAGA33D,KAAA,SACA43D,IAAA,cAGA53D,KAAA,YACA23D,OAAA,0EAGA33D,KAAA,UACA23D,OAAA,qEAGA33D,KAAA,WACA43D,IAAA,wBAGA53D,KAAA,UACA23D,OAAA,0BAGA33D,KAAA,aACA43D,IAAA,iBAGA53D,KAAA,WACA23D,OAAA,8EAGA33D,KAAA,uBACA23D,OAAA,gDAGA33D,KAAA,UACA23D,OAAA,0BAGA33D,KAAA,WACA43D,IAAA,iGAGA53D,KAAA,WACA43D,IAAA,qBAGA53D,KAAA,aACA43D,IAAA,SACAD,OAAA,6EAGA33D,KAAA,SACA23D,OAAA,0BAGA33D,KAAA,UACA23D,OAAA,+LAGA33D,KAAA,QACA43D,IAAA,kFACAD,OAAA,sDAGA33D,KAAA,WACA43D,IAAA,4CAGA53D,KAAA,WACA43D,IAAA,0CAGA53D,KAAA,MACA43D,IAAA,gCACAD,OAAA,kQAGA33D,KAAA,SACA43D,IAAA,8CAGA53D,KAAA,UACA43D,IAAA,QAGA53D,KAAA,SACA23D,OAAA,mDAGA33D,KAAA,SACA43D,IAAA,4BAGA53D,KAAA,WACA43D,IAAA,SACAD,OAAA,6BAGA33D,KAAA,mBACA23D,OAAA,uCAGA33D,KAAA,YACA43D,IAAA,oDACAD,OAAA,4GAGA33D,KAAA,wBACA23D,OAAA,uCAGA33D,KAAA,yBACA23D,OAAA,uCAGA33D,KAAA,WACA43D,IAAA,aAGA53D,KAAA,SACA23D,OAAA,0BAGA33D,KAAA,UACA43D,IAAA,2CAGA53D,KAAA,WACA43D,IAAA,wBACAD,OAAA,OAGA33D,KAAA,WACA43D,IAAA,SAGA53D,KAAA,aACA23D,OAAA,oHAGA33D,KAAA,QACA43D,IAAA,iBAGA53D,KAAA,SACA23D,OAAA,uCAGA33D,KAAA,YACA23D,OAAA,uCAGA33D,KAAA,MACA43D,IAAA,4CAGA53D,KAAA,QACA43D,IAAA,qFAGA53D,KAAA,SACA43D,IAAA,cAGA53D,KAAA,QACA43D,IAAA,kBAGA53D,KAAA,WACA23D,OAAA,oDAGA33D,KAAA,WACA23D,OAAA,uGAGA33D,KAAA,OACA43D,IAAA,QAGA53D,KAAA,SACA23D,OAAA,0BAGA33D,KAAA,SACA23D,OAAA,gCAGA33D,KAAA,WACA23D,OAAA,0BAGA33D,KAAA,YACA43D,IAAA,6BAGA53D,KAAA,UACA43D,IAAA,SAGA53D,KAAA,aACA23D,OAAA,uCAGA33D,KAAA,UACA23D,OAAA,oDAGA33D,KAAA,gBACA23D,OAAA,+FAGA33D,KAAA,eACA43D,IAAA,cAGA53D,KAAA,gBACA23D,OAAA,uCAGA33D,KAAA,mBACA23D,OAAA,oDAGA33D,KAAA,uBACA23D,OAAA,0BAGA33D,KAAA,OACA23D,OAAA,oDAGA33D,KAAA,OACA23D,OAAA,uCAGA33D,KAAA,YACA43D,IAAA,kBACAD,OAAA,0BAGA33D,KAAA,MACA23D,OAAA,mDAGA33D,KAAA,UACA23D,OAAA,uEAGA33D,KAAA,UACA43D,IAAA,cAGA53D,KAAA,YACA23D,OAAA,uCAGA33D,KAAA,cACA43D,IAAA,gBAGA53D,KAAA,OACA23D,OAAA,sCAGA33D,KAAA,MACA43D,IAAA,QAGA53D,KAAA,QACA23D,OAAA,6BAGA33D,KAAA,QACA43D,IAAA,QAGA53D,KAAA,WACA43D,IAAA,QAGA53D,KAAA,gBACA23D,OAAA,oDAGA33D,KAAA,aACA23D,OAAA,uCAGA33D,KAAA,oBACA23D,OAAA,0BAGA33D,KAAA,aACA23D,OAAA,0BAGA33D,KAAA,cACA23D,OAAA,uCAGA33D,KAAA,oBACA23D,OAAA,0BAGA33D,KAAA,aACA23D,OAAA,0BAGA33D,KAAA,QACA43D,IAAA,0CAGA53D,KAAA,QACA23D,OAAA,uCAGA33D,KAAA,UACA23D,OAAA,uCAGA33D,KAAA,eACA23D,OAAA,8EAGA33D,KAAA,YACA23D,OAAA,0BAGA33D,KAAA,cACA23D,OAAA,0BAGA33D,KAAA,WACA43D,IAAA,QAGA53D,KAAA,aACA23D,OAAA,gCAGA33D,KAAA,kBACA23D,OAAA,oDAGA33D,KAAA,SACA43D,IAAA,SAGA53D,KAAA,QACA43D,IAAA,WAGA53D,KAAA,YACA43D,IAAA,WAGA53D,KAAA,aACA43D,IAAA,WAGA53D,KAAA,UACA23D,OAAA,uCAGA33D,KAAA,UACA23D,OAAA,0BAGA33D,KAAA,UACA23D,OAAA,uCAGA33D,KAAA,cACA23D,OAAA,oDAGA33D,KAAA,UACA43D,IAAA,gCACAD,OAAA,0BAGA33D,KAAA,eACA23D,OAAA,uCAGA33D,KAAA,UACA23D,OAAA,oDAGA33D,KAAA,YACA43D,IAAA,WAGA53D,KAAA,eACA43D,IAAA,QAGA53D,KAAA,SACA43D,IAAA,iBAGA53D,KAAA,UACA43D,IAAA,WAGA53D,KAAA,WACA43D,IAAA,aAGA53D,KAAA,SACA43D,IAAA,WAGA53D,KAAA,WACA43D,IAAA,oBAGA53D,KAAA,WACA43D,IAAA,WAGA53D,KAAA,QACA23D,OAAA,uCAGA33D,KAAA,QACA43D,IAAA,2CAGA53D,KAAA,SACA23D,OAAA,kFAGA33D,KAAA,SACA43D,IAAA,2CAGA53D,KAAA,SACA43D,IAAA,QAGA53D,KAAA,OACA43D,IAAA,WAGA53D,KAAA,UACA43D,IAAA,yBAGA53D,KAAA,WACA43D,IAAA,WAGA53D,KAAA,UACA23D,OAAA,uCAGA33D,KAAA,WACA23D,OAAA,gCAGA33D,KAAA,MACA43D,IAAA,QAGA53D,KAAA,cACA23D,OAAA,gCAGA33D,KAAA,KACA43D,IAAA,WAGA53D,KAAA,mBACA23D,OAAA,wDC5jBAx3D,OAAAC,eAAAnB,EAAA,cACAwB,OAAA,IAGA,IAIA2K,EAJAysD,EAAAt4D,EAAA,IAEAu4D,GAEA1sD,EAFAysD,IAEsCzsD,EAAAzK,WAAAyK,GAAuClE,QAAAkE,GAE7EnM,EAAAiI,QAAA,SAAA6wD,GAWA,IAAAA,EAAAC,eACA,UAAAC,eAAA,sDAGAF,EAAAC,eAAAF,EAAA5wD;;;;;;;AAQAhI,EAAAD,UAAA,uBCnCAC,EAAAD,UAEAe,KAAA,QACA43D,IAAA,SAGA53D,KAAA,aACA43D,IAAA,ilCACAD,OAAA,siGAGA33D,KAAA,MACAk4D,WAAA,EACAN,IAAA,OACAD,OAAA,mCAGA33D,KAAA,+BACA43D,IAAA,oCACAD,OAAA,+EAGA33D,KAAA,YACA43D,IAAA,muBACAD,OAAA,gdAGA33D,KAAA,0BACA43D,IAAA,QACAD,OAAA,qHAGA33D,KAAA,YACA43D,IAAA,wrBACAD,OAAA,qhBAGA33D,KAAA,cACA43D,IAAA,8DCpCAz3D,OAAAC,eAAAnB,EAAA,cACAwB,OAAA,IAGA,IAIA2K,EAJA+sD,EAAA54D,EAAA,IAEA64D,GAEAhtD,EAFA+sD,IAEsC/sD,EAAAzK,WAAAyK,GAAuClE,QAAAkE,GAE7EnM,EAAAiI,QAAA,SAAA6wD,GAyCA,IAAAA,EAAAC,eACA,UAAAC,eAAA,yDAGA,IAAAI,EAAAD,EAAAlxD,QAGAmxD,EAAA5yD,MACAzF,KAAA,WAGAs4D,UAAA,OAGAP,EAAAC,eAAAK;;;;;;;AAQAn5D,EAAAD,UAAA,uBC3EAC,EAAAD,UAEAe,KAAA,IACAu4D,MAAA,QACAL,WAAA,EACAN,IAAA,6uBACAD,OAAA,k/GAGA33D,KAAA,KACAu4D,MAAA,UACAX,IAAA,YAGA53D,KAAA,KACAu4D,MAAA,SACAX,IAAA,iCACAD,OAAA,+EAGA33D,KAAA,KACAu4D,MAAA,aACAX,IAAA,wtBACAD,OAAA,+gHAGA33D,KAAA,KACAu4D,MAAA,cACAX,IAAA,MACAD,OAAA,8EAGA33D,KAAA,KACAu4D,MAAA,YACAX,IAAA,kBAGA53D,KAAA,IACAu4D,MAAA,SACAX,IAAA,i7BACAD,OAAA,qrFAGA33D,KAAA,KACAu4D,MAAA,eACAX,IAAA,iOACAD,OAAA,2fAGA33D,KAAA,KACAu4D,MAAA,mBACAX,IAAA,mtBACAD,OAAA,gdAGA33D,KAAA,KACAu4D,MAAA,kBACAX,IAAA,yFACAD,OAAA,4DAGA33D,KAAA,KACAu4D,MAAA,eACAX,IAAA,kuBACAD,OAAA,ysEAGA33D,KAAA,KACAu4D,MAAA,mBACAX,IAAA,qBAGA53D,KAAA,KACAu4D,MAAA,mBACAX,IAAA,krBACAD,OAAA,qeAGA33D,KAAA,IACAu4D,MAAA,OACAX,IAAA,6bACAD,OAAA,yiCAGA33D,KAAA,KACAu4D,MAAA,eACAX,IAAA,sNACAD,OAAA,4hBAGA33D,KAAA,KACAu4D,MAAA,iBACAX,IAAA,iBAGA53D,KAAA,KACAu4D,MAAA,kBACAX,IAAA,iaACAD,OAAA,ksCAGA33D,KAAA,IACAu4D,MAAA,SACAX,IAAA,mMACAD,OAAA,8uBAGA33D,KAAA,KACAu4D,MAAA,iBACAX,IAAA,kHACAD,OAAA,sTAGA33D,KAAA,KACAu4D,MAAA,gBACAX,IAAA,sBACAD,OAAA,yEAGA33D,KAAA,KACAu4D,MAAA,eACAX,IAAA,+EACAD,OAAA,sfAGA33D,KAAA,IACAu4D,MAAA,cACAX,IAAA,4RACAD,OAAA,+hBAGA33D,KAAA,KACAu4D,MAAA,wBACAX,IAAA,eAGA53D,KAAA,KACAu4D,MAAA,mBACAX,IAAA,4BAGA53D,KAAA,KACAu4D,MAAA,oBACAX,IAAA,oFAGA53D,KAAA,KACAu4D,MAAA,oBACAX,IAAA,eAGA53D,KAAA,KACAu4D,MAAA,sBACAX,IAAA,iBAGA53D,KAAA,KACAu4D,MAAA,oBACAX,IAAA,4QACAD,OAAA,+hBAGA33D,KAAA,KACAu4D,MAAA,mBACAX,IAAA,sFAGA53D,KAAA,IACAu4D,MAAA,SACAX,IAAA,uUACAD,OAAA,02BAGA33D,KAAA,KACAu4D,MAAA,kBACAX,IAAA,+BAGA53D,KAAA,KACAu4D,MAAA,kBACAX,IAAA,0DACAD,OAAA,0BAGA33D,KAAA,KACAu4D,MAAA,cACAX,IAAA,2GACAD,OAAA,8FAGA33D,KAAA,KACAu4D,MAAA,eACAX,IAAA,+PACAD,OAAA,gxBAGA33D,KAAA,IACAu4D,MAAA,YACAX,IAAA,0BAGA53D,KAAA,KACAu4D,MAAA,iBACAX,IAAA,WAGA53D,KAAA,KACAu4D,MAAA,sBACAX,IAAA,WAGA53D,KAAA,KACAu4D,MAAA,kBACAX,IAAA,4CCnNAz3D,OAAAC,eAAAnB,EAAA,cACAwB,OAAA,IAGA,IAIA2K,EAJAotD,EAAAj5D,EAAA,IAEAk5D,GAEArtD,EAFAotD,IAEsCptD,EAAAzK,WAAAyK,GAAuClE,QAAAkE,GAE7EnM,EAAAiI,QAAA,SAAA6wD,GAYA,IAAAA,EAAAC,eACA,UAAAC,eAAA,yDAGAF,EAAAC,eAAAS,EAAAvxD;;;;;;;AAQAhI,EAAAD,UAAA,uBCpCAC,EAAAD,UAEAe,KAAA,UACA23D,OAAA,0BAGA33D,KAAA,mBACA23D,OAAA,0BAGA33D,KAAA,SACA23D,OAAA,0BAGA33D,KAAA,uBACA23D,OAAA,0BAGA33D,KAAA,kCACA43D,IAAA,QAGA53D,KAAA,0BACA23D,OAAA,0BAGA33D,KAAA,mCACA23D,OAAA,0BAGA33D,KAAA,0BACA23D,OAAA,0BAGA33D,KAAA,oBACA23D,OAAA,0BAGA33D,KAAA,WACA43D,IAAA,QAGA53D,KAAA,sBACA43D,IAAA,QAGA53D,KAAA,2CACA23D,OAAA,0BAGA33D,KAAA,gCACA43D,IAAA,QAGA53D,KAAA,gCACA43D,IAAA,aAGA53D,KAAA,sBACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,WACA43D,IAAA,QAGA53D,KAAA,YACA23D,OAAA,0BAGA33D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,UACA43D,IAAA,QAGA53D,KAAA,qBACA23D,OAAA,0BAGA33D,KAAA,gBACA43D,IAAA,SAGA53D,KAAA,cACA23D,OAAA,0BAGA33D,KAAA,UACA43D,IAAA,QAGA53D,KAAA,YACA43D,IAAA,QAGA53D,KAAA,cACA23D,OAAA,0BAGA33D,KAAA,mBACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,sBACA43D,IAAA,QAGA53D,KAAA,gBACA43D,IAAA,QAGA53D,KAAA,WACA23D,OAAA,0BAGA33D,KAAA,qBACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,UACA43D,IAAA,QAGA53D,KAAA,8BACA23D,OAAA,0BAGA33D,KAAA,sBACA43D,IAAA,QAGA53D,KAAA,4BACA43D,IAAA,QAGA53D,KAAA,iCACA43D,IAAA,QAGA53D,KAAA,4CACA23D,OAAA,0BAGA33D,KAAA,4BACA43D,IAAA,QAGA53D,KAAA,gBACA43D,IAAA,QAGA53D,KAAA,gCACA43D,IAAA,QAGA53D,KAAA,2BACA43D,IAAA,QAGA53D,KAAA,uCACA43D,IAAA,QAGA53D,KAAA,uCACA23D,OAAA,yDAGA33D,KAAA,uCACA23D,OAAA,+EAGA33D,KAAA,uCACA23D,OAAA,gDAGA33D,KAAA,uCACA23D,OAAA,+EAGA33D,KAAA,uCACA23D,OAAA,+EAGA33D,KAAA,WACA23D,OAAA,0BAGA33D,KAAA,uBACA23D,OAAA,0BAGA33D,KAAA,WACA23D,OAAA,0BAGA33D,KAAA,SACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,wBACA43D,IAAA,QAGA53D,KAAA,gCACA43D,IAAA,QAGA53D,KAAA,yCACA43D,IAAA,QAGA53D,KAAA,4CACA43D,IAAA,QAGA53D,KAAA,2CACA43D,IAAA,QAGA53D,KAAA,yBACA43D,IAAA,QAGA53D,KAAA,8BACA43D,IAAA,QAGA53D,KAAA,qBACA43D,IAAA,QAGA53D,KAAA,WACA43D,IAAA,QAGA53D,KAAA,yBACA23D,OAAA,0BAGA33D,KAAA,0BACA23D,OAAA,0BAGA33D,KAAA,cACA23D,OAAA,0BAGA33D,KAAA,sCACA23D,OAAA,0BAGA33D,KAAA,qBACA43D,IAAA,QAGA53D,KAAA,sBACA23D,OAAA,0BAGA33D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,wBACA43D,IAAA,QAGA53D,KAAA,wBACA43D,IAAA,QAGA53D,KAAA,wBACA43D,IAAA,QAGA53D,KAAA,wBACA43D,IAAA,QAGA53D,KAAA,YACA23D,OAAA,0BAGA33D,KAAA,eACA43D,IAAA,QAGA53D,KAAA,wBACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,iBACA23D,OAAA,0BAGA33D,KAAA,aACA23D,OAAA,0BAGA33D,KAAA,6BACA23D,OAAA,0BAGA33D,KAAA,yBACA23D,OAAA,gDAGA33D,KAAA,YACA23D,OAAA,0BAGA33D,KAAA,cACA23D,OAAA,0BAGA33D,KAAA,qCACA23D,OAAA,0BAGA33D,KAAA,2BACA43D,IAAA,QAGA53D,KAAA,oCACA43D,IAAA,QAGA53D,KAAA,oCACA23D,OAAA,0BAGA33D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,sBACA43D,IAAA,QAGA53D,KAAA,wBACA43D,IAAA,QAGA53D,KAAA,wBACA43D,IAAA,QAGA53D,KAAA,wBACA43D,IAAA,QAGA53D,KAAA,qBACA43D,IAAA,QAGA53D,KAAA,8BACA23D,OAAA,0BAGA33D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,wBACA43D,IAAA,QAGA53D,KAAA,eACA43D,IAAA,QAGA53D,KAAA,0BACA23D,OAAA,0BAGA33D,KAAA,WACA23D,OAAA,0BAGA33D,KAAA,YACA23D,OAAA,0BAGA33D,KAAA,qBACA43D,IAAA,QAGA53D,KAAA,mBACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,kCACA43D,IAAA,QAGA53D,KAAA,8BACA43D,IAAA,QAGA53D,KAAA,gBACA43D,IAAA,QAGA53D,KAAA,2BACA43D,IAAA,QAGA53D,KAAA,2BACA43D,IAAA,QAGA53D,KAAA,qBACA43D,IAAA,QAGA53D,KAAA,YACA43D,IAAA,QAGA53D,KAAA,WACA23D,OAAA,0BAGA33D,KAAA,WACA43D,IAAA,QAGA53D,KAAA,gCACA43D,IAAA,kBAGA53D,KAAA,oBACA43D,IAAA,kBAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,mBACA43D,IAAA,QAGA53D,KAAA,uCACA43D,IAAA,QAGA53D,KAAA,wCACA23D,OAAA,0BAGA33D,KAAA,qBACA23D,OAAA,0BAGA33D,KAAA,0BACA23D,OAAA,0BAGA33D,KAAA,2BACA23D,OAAA,0BAGA33D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,WACA23D,OAAA,0BAGA33D,KAAA,oBACA23D,OAAA,0BAGA33D,KAAA,oBACA23D,OAAA,0BAGA33D,KAAA,WACA43D,IAAA,QAGA53D,KAAA,oBACA43D,IAAA,QAGA53D,KAAA,YACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,iCACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,eACA23D,OAAA,0BAGA33D,KAAA,UACA43D,IAAA,QAGA53D,KAAA,kBACA43D,IAAA,QAGA53D,KAAA,WACA23D,OAAA,0BAGA33D,KAAA,cACA23D,OAAA,0BAGA33D,KAAA,QACA43D,IAAA,QAGA53D,KAAA,uBACA43D,IAAA,QAGA53D,KAAA,qBACA43D,IAAA,QAGA53D,KAAA,8BACA43D,IAAA,QAGA53D,KAAA,qBACA43D,IAAA,QAGA53D,KAAA,qBACA43D,IAAA,QAGA53D,KAAA,qBACA43D,IAAA,QAGA53D,KAAA,qBACA43D,IAAA,QAGA53D,KAAA,WACA43D,IAAA,QAGA53D,KAAA,uBACA43D,IAAA,QAGA53D,KAAA,UACA43D,IAAA,QAGA53D,KAAA,aACA23D,OAAA,0BAGA33D,KAAA,uBACA23D,OAAA,0BAGA33D,KAAA,uBACA23D,OAAA,0BAGA33D,KAAA,SACA43D,IAAA,QAGA53D,KAAA,mBACA43D,IAAA,kBAGA53D,KAAA,WACA23D,OAAA,0BAGA33D,KAAA,WACA23D,OAAA,0BAGA33D,KAAA,aACA23D,OAAA,0BAGA33D,KAAA,kBACA23D,OAAA,0BAGA33D,KAAA,cACA43D,IAAA,QAGA53D,KAAA,YACA43D,IAAA,QAGA53D,KAAA,eACA23D,OAAA,0BAGA33D,KAAA,YACA23D,OAAA,0BAGA33D,KAAA,kBACA23D,OAAA,0BAGA33D,KAAA,sCACA23D,OAAA,0BAGA33D,KAAA,2BACA43D,IAAA,QAGA53D,KAAA,iBACA43D,IAAA,QAGA53D,KAAA,4BACA43D,IAAA,QAGA53D,KAAA,kBACA23D,OAAA,0BAGA33D,KAAA,qBACA23D,OAAA,0BAGA33D,KAAA,yBACA23D,OAAA,0BAGA33D,KAAA,SACA23D,OAAA,0BAGA33D,KAAA,yCACA43D,IAAA,QAGA53D,KAAA,yCACA43D,IAAA,QAGA53D,KAAA,0BACA43D,IAAA,QAGA53D,KAAA,qCACA43D,IAAA,QAGA53D,KAAA,0CACA23D,OAAA,gDAGA33D,KAAA,4BACA43D,IAAA,QAGA53D,KAAA,SACA23D,OAAA,0BAGA33D,KAAA,0BACA43D,IAAA,QAGA53D,KAAA,cACA43D,IAAA,QAGA53D,KAAA,yBACA23D,OAAA,0BAGA33D,KAAA,QACA23D,OAAA,0BAGA33D,KAAA,YACA23D,OAAA,0BAGA33D,KAAA,oBACA23D,OAAA,0BAGA33D,KAAA,YACA43D,IAAA,QAGA53D,KAAA,uBACA43D,IAAA,QAGA53D,KAAA,uBACA43D,IAAA,QAGA53D,KAAA,QACA43D,IAAA,QAGA53D,KAAA,cACA23D,OAAA,0BAGA33D,KAAA,gBACA43D,IAAA,QAGA53D,KAAA,SACA23D,OAAA,0BAGA33D,KAAA,iBACA43D,IAAA,QAGA53D,KAAA,UACA23D,OAAA,0BAGA33D,KAAA,UACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,kBACA23D,OAAA,0BAGA33D,KAAA,eACA23D,OAAA,0BAGA33D,KAAA,sBACA23D,OAAA,0BAGA33D,KAAA,eACA23D,OAAA,0BAGA33D,KAAA,gBACA23D,OAAA,0BAGA33D,KAAA,sBACA23D,OAAA,0BAGA33D,KAAA,eACA23D,OAAA,0BAGA33D,KAAA,kCACA43D,IAAA,QAGA53D,KAAA,UACA43D,IAAA,QAGA53D,KAAA,wBACA23D,OAAA,0BAGA33D,KAAA,UACA23D,OAAA,0BAGA33D,KAAA,YACA23D,OAAA,0BAGA33D,KAAA,iBACA23D,OAAA,0BAGA33D,KAAA,cACA23D,OAAA,0BAGA33D,KAAA,gBACA23D,OAAA,0BAGA33D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,kBACA23D,OAAA,0BAGA33D,KAAA,eACA23D,OAAA,0BAGA33D,KAAA,wBACA43D,IAAA,QAGA53D,KAAA,mCACA43D,IAAA,QAGA53D,KAAA,kBACA23D,OAAA,0BAGA33D,KAAA,qBACA43D,IAAA,QAGA53D,KAAA,oBACA23D,OAAA,0BAGA33D,KAAA,WACA43D,IAAA,QAGA53D,KAAA,yBACA23D,OAAA,0BAGA33D,KAAA,UACA43D,IAAA,QAGA53D,KAAA,cACA43D,IAAA,QAGA53D,KAAA,eACA43D,IAAA,QAGA53D,KAAA,YACA23D,OAAA,0BAGA33D,KAAA,YACA23D,OAAA,0BAGA33D,KAAA,8BACA23D,OAAA,0BAGA33D,KAAA,YACA23D,OAAA,0BAGA33D,KAAA,YACA43D,IAAA,QAGA53D,KAAA,4BACA23D,OAAA,0BAGA33D,KAAA,wBACA43D,IAAA,QAGA53D,KAAA,iBACA23D,OAAA,0BAGA33D,KAAA,YACA23D,OAAA,0BAGA33D,KAAA,6BACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,cACA43D,IAAA,QAGA53D,KAAA,yBACA43D,IAAA,QAGA53D,KAAA,gCACA43D,IAAA,QAGA53D,KAAA,0BACA43D,IAAA,QAGA53D,KAAA,0BACA43D,IAAA,QAGA53D,KAAA,0BACA23D,OAAA,0BAGA33D,KAAA,wCACA43D,IAAA,QAGA53D,KAAA,6BACA43D,IAAA,QAGA53D,KAAA,yCACA23D,OAAA,0BAGA33D,KAAA,qCACA23D,OAAA,mCAGA33D,KAAA,qCACA23D,OAAA,mCAGA33D,KAAA,uBACA23D,OAAA,0BAGA33D,KAAA,iBACA43D,IAAA,QAGA53D,KAAA,WACA43D,IAAA,QAGA53D,KAAA,sBACA43D,IAAA,QAGA53D,KAAA,YACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,SACA23D,OAAA,0BAGA33D,KAAA,WACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,aACA43D,IAAA,QAGA53D,KAAA,0BACA23D,OAA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gC,EAAA,GAAAC,kBAAAnmE,KAAA4lE,EAAAD,IACAzpE,KAAA4pE,EAAA,IAGA5pE,KAAA4pE,EAAAU,OAIAtqE,KAAA4pE,EAAAW,EAAAb,EAAAD,MAMAN,MA/lBA,SAAA7pE,GAQA,IAPA,IAAAgkE,KACAllE,EAAAkB,EAAA4e,IACApb,EAAAxD,EAAAspE,OACAvoE,EAAAf,EAAAqsB,KACAjnB,EAAApF,EAAAqmB,MACAznB,EAAAoB,EAAAkrE,KACAznE,EAAAzD,EAAAmrE,KACA3sE,EAAA,EAAAC,EAAAK,EAAAmC,OAAyCzC,EAAAC,EAAOD,IAAA,CAGhD,IAFA,IAAAiB,EAAAX,EAAAN,GACA2G,KACA6gB,EAAA,EAA+BA,EAAAvmB,EAAOumB,IAAA,CACtC,IAAAolD,EAAA5nE,EAAAgC,QACA,OAAAzE,EAAAyE,SACA,OACAL,EAAAimE,IACAxsE,EAAA4G,QACA/B,EAAA+B,SAEA,MAEA,OACAL,EAAAimE,GAAAhmE,EAAAI,QACA,MAEA,QAEAL,EAAAimE,IACA,IAIApH,EAAAx/D,KAAAW,GAEA,OAAA6+D,EA6jBAqH,EACAzsD,IAAAy/C,GACA,GACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,EACAx/D,GACA,KACAmB,GACA,KACA,GACAA,GACA,KACAnB,GACA,MACA,EACA,EACA,EACA,GACAmB,GACA,KACA,EACAA,GACA,KACA,EACA,EACAA,GACA,KACA,EACA,EACA,EACAnB,GACA,OAEAyqE,OAAAjL,GACA,EACA,GACA,GACA,GACA,GACA,GACAr+D,GACA,QACAA,GACA,QACA,GACAA,GACA,KACA,EACA,GACA,GACAnB,GACA,MACAA,GACA,MACAmB,GACA,OACAnB,GACA,OACA,GACAA,GACA,MACAA,GACA,MACA,GACAmB,GACA,QACAA,GACA,QACAnB,GACA,OACA,GACA,GACA,GACA,GACA,GACA,GACAmB,GACA,QACA,GACAnB,GACA,MACAA,GACA,MACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,KAEAwtB,KAAAgyC,GACAr+D,GACA,MACAA,GACA,MACA,EACAA,GACA,MACAA,GACA,KACAA,GACA,MACAnB,GACA,OACAmB,GACA,KACAnB,GACA,OACAA,GACA,OACAA,GACA,OACAA,GACA,OACAA,GACA,MACAA,GACA,OAEAwnB,MAAAg4C,GACA,EACA,EACAr+D,GACA,OACA,EACA,GACA,GACA,GACA,GACAnB,GACA,KACA,GACA,GACAA,GACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACAA,GACA,MACA,GACA,GACAA,GACA,MACA,GACA,GACA,KAEAqsE,KAAA7M,GACAr+D,GACA,MACA,EACAnB,GACA,KACAA,GACA,MACAA,GACA,MACAmB,GACA,MACAA,GACA,MACAnB,GACA,OACAA,GACA,MACAA,GACA,MACA,EACA,IAEAssE,KAAA9M,GACA,EACA,GACA,GACA,EACA,GACA,GACAr+D,GACA,QACA,GACA,EACA,GACA,GACA,EACAnB,GACA,MACA,EACA,EACAmB,GACA,QACAA,GACA,MACAnB,GACA,MACA,GACA,GACA,GACAA,GACA,KACAA,GACA,MACA,GACA,GACA,GACA,GACA,GACA,GACAA,GACA,MACA,GACA,GACAmB,GACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,OAGAsrE,eAh2BA,SAAAtrE,GAIA,IAHA,IAAAgkE,KACAllE,EAAAkB,EAAAurE,IACA9nE,EAAAzD,EAAAmrE,KACA3sE,EAAA,EAAAC,EAAAK,EAAAmC,OAAyCzC,EAAAC,EAAOD,IAEhDwlE,EADAllE,EAAAN,IACAiF,EAAAjF,GAEA,OAAAwlE,EAw1BAwH,EACAD,IAAAlN,GACA,EACA,EACA,EACA,EACA,EACAr+D,GACA,QACA,GACA,GACA,GACAA,GACA,QACAA,GACA,QACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAEAmrE,KAAA9M,GACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACAr+D,GACA,QACA,GACA,GACA,EACA,EACAA,GACA,OACA,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","file":"salve.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"salve\"] = factory();\n\telse\n\t\troot[\"salve\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 109);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\"use strict\";\n/**\n * Classes that model RNG patterns.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util = require(\"../util\");\n// XML validation against a schema could work without any lookahead if it were\n// not for namespaces. However, namespace support means that the interpretation\n// of a tag or of an attribute may depend on information which appears *later*\n// than the earliest time at which a validation decision might be called for:\n//\n// Consider:\n//    <elephant a=\"a\" b=\"b\"... xmlns=\"elephant_uri\"/>\n//\n// It is not until xmlns is encountered that the validator will know that\n// elephant belongs to the elephant_uri namespace. This is not too troubling for\n// a validator that can access the whole document but for validators used in a\n// line-by-line process (which is the case if the validator is driven by a\n// CodeMirror or Ace tokenizer, and anything based on them), this can be\n// problematic because the attributes could appear on lines other than the line\n// on which the start of the tag appears:\n//\n// <elephant\n//  a=\"a\"\n//  b=\"b\"\n//  xmlns=\"elephant_uri\"/>\n//\n// The validator encounters the start of the tag and the attributes, without\n// knowing that eventually this elephant tag belongs to the elephant_uri\n// namespace. This discovery might result in things that were seen previously\n// and deemed valid becoming invalid. Or things that were invalid becoming\n// valid.\n//\n// Handling namespaces will require lookahead. Although the validator would\n// still expect all events that have tag and attribute names to have a proper\n// namespace uri, upon ``enterStartTag`` the parsing code which feeds events to\n// the validator would look ahead for these cases:\n//\n// * There is a valid ``>`` character ending the start tag. Scan the start tag\n//   for all namespace declarations.\n//\n// * The tag ends at EOF. Scan from beginning of tag to EOF for namespace\n//   declarations.\n//\n// * The tag is terminated by an invalid token. Scan from beginning of tag to\n//   error.\n//\n// Then issue the enterStartTag and attributeName events on the basis of what\n// was found in scanning.\n//\n// When the parsing code discovers a change in namespace declarations, for\n// instance because the user typed xmlns=\"...\" or removed a declaration, the\n// parsing code must *restart* validation *from* the location of the original\n// enterStartTag event.\n// A note on performance and the presence of the debug code here. We did a\n// profiling test with the debug code entirely removed. It made no\n// difference. Though TypeScript does not eliminate the code when DEBUG is\n// false, its impact on real-world test runs is undetectable. (Note that\n// uglification strips it from the minified code.)\nvar DEBUG = false;\n// This is here to shut the compiler up about unused variables.\n/* tslint:disable: no-empty no-invalid-this */\nfunction noop() {\n    var _args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        _args[_i] = arguments[_i];\n    }\n}\n// tslint:disable-next-line:strict-boolean-expressions\nif (DEBUG) {\n    //\n    // Debugging utilities\n    //\n    var trace_1 = function (msg) {\n        console.log(msg); // tslint:disable-line:no-console\n    };\n    var stackTrace = function () {\n        trace_1(new Error().stack);\n    };\n    noop(stackTrace);\n    // tslint:disable:no-var-keyword\n    // @ts-ignore\n    var possibleTracer;\n    // @ts-ignore\n    var fireEventTracer;\n    // @ts-ignore\n    var plainTracer;\n    var callDump;\n    // tslint:enable:no-var-keyword\n    // tslint:disable-next-line:only-arrow-functions no-void-expression\n    (function buildTracingCode() {\n        var buf = \"\";\n        var step = \" \";\n        var nameOrPath = function (walker) {\n            var el = walker.el;\n            if (el == null) {\n                return \"\";\n            }\n            if (el.name === undefined) {\n                return \" with path \" + el.xmlPath;\n            }\n            var named = \" named \" + el.name.toString();\n            if (walker.boundName == null) {\n                return named;\n            }\n            return named + \" (bound to \" + walker.boundName.toString() + \")\";\n        };\n        callDump = function (msg, name, me) {\n            trace_1(\"\" + buf + msg + name + \" on class \" + me.constructor.name +\n                (\" id \" + me.id + nameOrPath(me)));\n        };\n        // tslint:disable-next-line:only-arrow-functions\n        possibleTracer = function _possibleTracer(oldMethod, name, args) {\n            buf += step;\n            callDump(\"calling \", name, this);\n            var ret = oldMethod.apply(this, args);\n            callDump(\"called \", name, this);\n            trace_1(buf + \"return from the call: \" + util.inspect(ret));\n            buf = buf.slice(step.length);\n            return ret;\n        };\n        // tslint:disable-next-line:only-arrow-functions\n        fireEventTracer = function _fireEventTracer(oldMethod, name, args) {\n            buf += step;\n            callDump(\"calling \", name, this);\n            trace_1(buf + util.inspect(args[0]));\n            var ret = oldMethod.apply(this, args);\n            callDump(\"called \", name, this);\n            if (ret !== false) {\n                trace_1(buf + \"return from the call: \" + util.inspect(ret));\n            }\n            buf = buf.slice(step.length);\n            return ret;\n        };\n        // tslint:disable-next-line:only-arrow-functions\n        plainTracer = function _plainTracer(oldMethod, name, args) {\n            buf += step;\n            callDump(\"calling \", name, this);\n            var ret = oldMethod.apply(this, args);\n            callDump(\"called \", name, this);\n            trace_1(buf + \"return from the call: \" + util.inspect(ret));\n            buf = buf.slice(step.length);\n            return ret;\n        };\n    }());\n    /**\n     * Utility function for debugging. Wraps ``me[name]`` in a wrapper\n     * function. ``me[name]`` must be a function.  ``me`` could be an instance or\n     * could be a prototype. This function cannot trivially wrap the same field on\n     * the same object twice.\n     *\n     * @private\n     * @param me The object to modify.\n     * @param name The field name to modify in the object.\n     * @param f The function that should serve as wrapper.\n     *\n     */\n    // tslint:disable-next-line:only-arrow-functions no-var-keyword prefer-const\n    var wrap = function (me, name, f) {\n        var mangledName = \"___\" + name;\n        me[mangledName] = me[name];\n        // tslint:disable-next-line:only-arrow-functions\n        me[name] = function wrapper() {\n            return f.call(this, me[mangledName], name, arguments);\n        };\n    };\n    noop(wrap);\n    /* tslint:enable */\n}\nvar InternalFireEventResult = /** @class */ (function () {\n    function InternalFireEventResult(matched, errors, refs) {\n        this.matched = matched;\n        this.errors = errors;\n        this.refs = refs;\n    }\n    InternalFireEventResult.fromEndResult = function (result) {\n        return (result === false) ?\n            new InternalFireEventResult(true) :\n            new InternalFireEventResult(false, result);\n    };\n    InternalFireEventResult.prototype.combine = function (other) {\n        if (this.errors === undefined) {\n            this.errors = other.errors;\n        }\n        else if (other.errors !== undefined) {\n            this.errors = this.errors.concat(other.errors);\n        }\n        if (this.refs === undefined) {\n            this.refs = other.refs;\n        }\n        else if (other.refs !== undefined) {\n            this.refs = this.refs.concat(other.refs);\n        }\n        return this;\n    };\n    return InternalFireEventResult;\n}());\nexports.InternalFireEventResult = InternalFireEventResult;\n/**\n * These patterns form a JavaScript representation of the simplified RNG\n * tree. The base class implements a leaf in the RNG tree. In other words, it\n * does not itself refer to children Patterns. (To put it in other words, it has\n * no subpatterns.)\n */\nvar BasePattern = /** @class */ (function () {\n    /**\n     * @param xmlPath This is a string which uniquely identifies the element from\n     * the simplified RNG tree. Used in debugging.\n     */\n    function BasePattern(xmlPath) {\n        this.xmlPath = xmlPath;\n    }\n    /**\n     * This method must be called after resolution has been performed.\n     * ``_prepare`` recursively calls children but does not traverse ref-define\n     * boundaries to avoid infinite regress...\n     *\n     * This function now performs these tasks:\n     *\n     * - it precomputes the values returned by ``hasAttr``,\n     *\n     * - it precomputes the values returned by ``hasEmptyPattern``,\n     *\n     * - it gathers all the namespaces seen in the schema.\n     *\n     * - it resolves the references.\n     *\n     * @param definitions The definitions present in the schema.\n     *\n     * @param namespaces An object whose keys are the namespaces seen in\n     * the schema. This method populates the object.\n     *\n     * @returns The references that cannot be resolved, or ``undefined`` if no\n     * references cannot be resolved. The caller is free to modify the value\n     * returned as needed.\n     *\n     */\n    BasePattern.prototype._prepare = function (definitions, namespaces) {\n        return undefined;\n    };\n    /**\n     * This method tests whether a pattern is an attribute pattern or contains\n     * attribute patterns. This method does not cross element boundaries. That is,\n     * if element X cannot have attributes of its own but can contain elements\n     * that can have attributes, the return value if this method is called on the\n     * pattern contained by element X's pattern will be ``false``.\n     *\n     * @returns True if the pattern is or has attributes. False if not.\n     */\n    BasePattern.prototype.hasAttrs = function () {\n        return false;\n    };\n    /**\n     * This method determines whether a pattern has the ``empty``\n     * pattern. Generally, this means that either this pattern is the ``empty``\n     * pattern or has ``empty`` as a child.\n     */\n    BasePattern.prototype.hasEmptyPattern = function () {\n        return false;\n    };\n    return BasePattern;\n}());\nexports.BasePattern = BasePattern;\n/**\n * This is the common class from which patterns are derived. Most patterns\n * create a new walker by passing a name resolver. The one exception is\n * [[Grammar]], which creates the name resolver that are used by other\n * patterns. So when calling it we do not need a ``resolver`` parameter and thus\n * it inherits from [[BasePattern]] rather than [[Pattern]].\n */\nvar Pattern = /** @class */ (function (_super) {\n    tslib_1.__extends(Pattern, _super);\n    function Pattern() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates a new walker to walk this pattern.\n     *\n     * @returns A walker.\n     */\n    Pattern.prototype.newWalker = function (resolver) {\n        // Rather than make it abstract, we provide a default implementation for\n        // this method, which throws an exception if called. We could probably\n        // reorganize the code to do without but a) we would not gain much b) it\n        // would complicate the type hierarchy. The cost is not worth the\n        // benefits. There are two patterns that land on this default implementation\n        // and neither can have newWalker called on them anyway.\n        throw new Error(\"derived classes must override this\");\n    };\n    return Pattern;\n}(BasePattern));\nexports.Pattern = Pattern;\n/**\n * Pattern objects of this class have exactly one child pattern.\n */\nvar OneSubpattern = /** @class */ (function (_super) {\n    tslib_1.__extends(OneSubpattern, _super);\n    function OneSubpattern(xmlPath, pat) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.pat = pat;\n        return _this;\n    }\n    OneSubpattern.prototype._prepare = function (definitions, namespaces) {\n        var ret = this.pat._prepare(definitions, namespaces);\n        this._cachedHasAttrs = this.pat.hasAttrs();\n        this._cachedHasEmptyPattern = this._computeHasEmptyPattern();\n        return ret;\n    };\n    OneSubpattern.prototype.hasAttrs = function () {\n        // tslint:disable-next-line:no-non-null-assertion\n        return this._cachedHasAttrs;\n    };\n    OneSubpattern.prototype.hasEmptyPattern = function () {\n        // tslint:disable-next-line:no-non-null-assertion\n        return this._cachedHasEmptyPattern;\n    };\n    return OneSubpattern;\n}(Pattern));\nexports.OneSubpattern = OneSubpattern;\n/**\n * Pattern objects of this class have exactly two child patterns.\n *\n */\nvar TwoSubpatterns = /** @class */ (function (_super) {\n    tslib_1.__extends(TwoSubpatterns, _super);\n    function TwoSubpatterns(xmlPath, patA, patB) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.patA = patA;\n        _this.patB = patB;\n        return _this;\n    }\n    TwoSubpatterns.prototype._prepare = function (definitions, namespaces) {\n        var aRefs = this.patA._prepare(definitions, namespaces);\n        var bRefs = this.patB._prepare(definitions, namespaces);\n        this._cachedHasAttrs = this.patA.hasAttrs() || this.patB.hasAttrs();\n        this._cachedHasEmptyPattern = this._computeHasEmptyPattern();\n        if (aRefs !== undefined) {\n            return bRefs === undefined ? aRefs : aRefs.concat(bRefs);\n        }\n        return bRefs;\n    };\n    TwoSubpatterns.prototype.hasAttrs = function () {\n        // tslint:disable-next-line:no-non-null-assertion\n        return this._cachedHasAttrs;\n    };\n    TwoSubpatterns.prototype.hasEmptyPattern = function () {\n        // tslint:disable-next-line:no-non-null-assertion\n        return this._cachedHasEmptyPattern;\n    };\n    return TwoSubpatterns;\n}(Pattern));\nexports.TwoSubpatterns = TwoSubpatterns;\n/**\n * This class models events occurring during parsing. Upon encountering the\n * start of a start tag, an \"enterStartTag\" event is generated, etc. Event\n * objects are held to be immutable. No precautions have been made to enforce\n * this. Users of these objects simply must not modify them.\n *\n * An event is made of a list of event parameters, with the first one being the\n * type of the event and the rest of the list varying depending on this type.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param args... The event parameters may be passed directly in the call\n     * ``(new Event(a, b, ...))`` or the first call parameter may be a list\n     * containing all the event parameters ``(new Event([a, b, ])``. All of the\n     * event parameters must be strings.\n     */\n    function Event() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var params = (args.length === 1 && args[0] instanceof Array) ? args[0] : args;\n        this.params = params;\n        this.isAttributeEvent = (this.params[0] === \"attributeName\" ||\n            this.params[0] === \"attributeValue\" ||\n            this.params[0] === \"attributeNameAndValue\");\n    }\n    /**\n     * @returns A string representation of the event.\n     */\n    Event.prototype.toString = function () {\n        return \"Event: \" + this.params.join(\", \");\n    };\n    return Event;\n}());\nexports.Event = Event;\nfunction isAttributeEvent(name) {\n    return (name === \"attributeName\" || name === \"attributeValue\" ||\n        name === \"attributeNameAndValue\");\n}\nexports.isAttributeEvent = isAttributeEvent;\n/**\n * Utility function used mainly in testing to transform a set of\n * events into a string containing a tree structure.  The principle is to\n * combine events of a same type together and among events of a same type\n * combine those which are in the same namespace. So for instance if there is a\n * set of events that are all attributeName events plus one ``leaveStartTag``\n * event, the output could be:\n *\n * <pre>``\n * attributeName:\n * ..uri A:\n * ....name 1\n * ....name 2\n * ..uri B:\n * ....name 3\n * ....name 4\n * leaveStartTag\n * ``</pre>\n *\n * The dots above are to represent more visually the indentation. Actual output\n * does not contain leading dots.  In this list there are two attributeName\n * events in the \"uri A\" namespace and two in the \"uri B\" namespace.\n *\n * @param evs Events to turn into a string.\n * @returns A string which contains the tree described above.\n */\nfunction eventsToTreeString(evs) {\n    var eventArray = (evs instanceof Set) ? Array.from(evs) : evs;\n    var hash = new Map();\n    eventArray.forEach(function (ev) {\n        var params = ev.params;\n        var node = hash;\n        var last = params.length - 1;\n        for (var i = 0; i < params.length; ++i) {\n            var key = params[i].toString();\n            if (i === last) {\n                node.set(key, false);\n            }\n            else {\n                var nextNode = node.get(key);\n                if (nextNode === undefined) {\n                    nextNode = new Map();\n                    node.set(key, nextNode);\n                }\n                node = nextNode;\n            }\n        }\n    });\n    function dumpTree(toDump, indent) {\n        var ret = \"\";\n        var keys = Array.from(toDump.keys());\n        keys.sort();\n        try {\n            for (var keys_1 = tslib_1.__values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                var key = keys_1_1.value;\n                // tslint:disable-next-line:no-non-null-assertion\n                var sub = toDump.get(key);\n                if (sub !== false) {\n                    ret += \"\" + indent + key + \":\\n\";\n                    ret += dumpTree(sub, indent + \"    \");\n                }\n                else {\n                    ret += \"\" + indent + key + \"\\n\";\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return ret;\n        var e_1, _a;\n    }\n    return dumpTree(hash, \"\");\n    /* tslint:enable */\n}\nexports.eventsToTreeString = eventsToTreeString;\n/**\n * Helper method for cloning. This method should be called to clone objects that\n * do not participate in the ``clone``, protocol. This typically means instance\n * properties that are not ``Walker`` objects and not immutable.\n *\n * This method will call a ``clone`` method on ``obj``, when it determines\n * that cloning must happen.\n *\n * @param obj The object to clone.\n *\n * @param memo A mapping of old object to copy object. As a tree of patterns\n * is being cloned, this memo is populated. So if A is cloned to B then a\n * mapping from A to B is stored in the memo. If A is seen again in the same\n * cloning operation, then it will be substituted with B instead of creating a\n * new object. This should be the same object as the one passed to the\n * constructor.\n *\n * @returns A clone of ``obj``.\n */\nfunction cloneIfNeeded(obj, memo) {\n    var other = memo.get(obj);\n    if (other !== undefined) {\n        return other;\n    }\n    other = obj.clone();\n    memo.set(obj, other);\n    return other;\n}\nexports.cloneIfNeeded = cloneIfNeeded;\n/**\n * Roughly speaking each [[Pattern]] object has a corresponding ``Walker`` class\n * that models an object which is able to walk the pattern to which it\n * belongs. So an ``Element`` has an ``ElementWalker`` and an ``Attribute`` has\n * an ``AttributeWalker``. A ``Walker`` object responds to parsing events and\n * reports whether the structure represented by these events is valid.\n *\n * This base class records only a minimal number of properties so that child\n * classes can avoid keeping useless properties. A prime example is the walker\n * for ``<empty>`` which is a terminal walker (it has no subwalker) so does not\n * need to record the name resolver.\n *\n * Note that users of this API do not instantiate Walker objects themselves.\n */\nvar BaseWalker = /** @class */ (function () {\n    function BaseWalker() {\n    }\n    // These functions return true if there is no problem, or a list of\n    // ValidationError objects otherwise.\n    /**\n     * Deep copy the Walker.\n     *\n     * @returns A deep copy of the Walker.\n     */\n    BaseWalker.prototype.clone = function () {\n        return this._clone(new Map());\n    };\n    BaseWalker.prototype.hasEmptyPattern = function () {\n        return this.el.hasEmptyPattern();\n    };\n    return BaseWalker;\n}());\nexports.BaseWalker = BaseWalker;\n/**\n * This is the class of all walkers that are used internally to Salve.\n */\nvar InternalWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(InternalWalker, _super);\n    function InternalWalker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * End the walker.\n     *\n     * @returns ``false`` if the walker ended without error. Otherwise, the\n     * errors.\n     */\n    InternalWalker.prototype.end = function () {\n        return false;\n    };\n    /**\n     * End the processing of attributes.\n     *\n     * @returns ``false`` if the walker ended without error. Otherwise, the\n     * errors.\n     */\n    InternalWalker.prototype.endAttributes = function () {\n        return false;\n    };\n    return InternalWalker;\n}(BaseWalker));\nexports.InternalWalker = InternalWalker;\n//  LocalWords:  RNG MPL lookahead xmlns uri CodeMirror tokenizer enterStartTag\n//  LocalWords:  EOF attributeName el xmlPath buf nameOrPath util ret EventSet\n//  LocalWords:  NameResolver args unshift HashSet subpatterns newID NG vm pre\n//  LocalWords:  firstName lastName attributeValue leaveStartTag dumpTree const\n//  LocalWords:  dumpTreeBuf subwalker fireEvent suppressAttributes HashMap\n//  LocalWords:  ValidationError RefWalker DefineWalker\n//# sourceMappingURL=base.js.map","\"use strict\";\n/**\n * This module contains classes for a conversion parser.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar name_resolver_1 = require(\"../name_resolver\");\nvar tools_1 = require(\"../tools\");\nvar util_1 = require(\"./simplifier/util\");\n/**\n * A base class for classes that perform parsing based on SAX parsers.\n *\n * Derived classes should add methods named ``on<eventname>`` so as to form a\n * full name which matches the ``on<eventname>`` methods supported by SAX\n * parsers. The constructor will attach these methods to the SAX parser passed\n * and bind them so in them ``this`` is the ``Parser`` object. This allows\n * neatly packaged methods and private parameters.\n *\n */\nvar Parser = /** @class */ (function () {\n    /**\n     * @param saxParser A parser created by the ``sax-js`` library or something\n     * compatible.\n     */\n    function Parser(saxParser) {\n        this.saxParser = saxParser;\n        for (var name_1 in this) {\n            if (name_1.lastIndexOf(\"on\", 0) === 0) {\n                this.saxParser[name_1] = this[name_1].bind(this);\n            }\n        }\n    }\n    return Parser;\n}());\nexports.Parser = Parser;\nvar Node = /** @class */ (function () {\n    function Node() {\n    }\n    Object.defineProperty(Node.prototype, \"parent\", {\n        get: function () {\n            return this._parent;\n        },\n        set: function (value) {\n            this.setParent(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype.setParent = function (value) {\n        this._parent = value;\n    };\n    Node.prototype.remove = function () {\n        var parent = this.parent;\n        if (parent !== undefined) {\n            parent.removeChild(this);\n        }\n    };\n    Node.prototype.replaceWith = function (replacement) {\n        var parent = this.parent;\n        if (parent === undefined) {\n            throw new Error(\"no parent\");\n        }\n        parent.replaceChildWith(this, replacement);\n    };\n    return Node;\n}());\nexports.Node = Node;\nvar emptyNS = Object.create(null);\n/**\n * An Element produced by [[Parser]].\n *\n * This constructor will insert the created object into the parent automatically\n * if the parent is provided.\n */\nvar Element = /** @class */ (function (_super) {\n    tslib_1.__extends(Element, _super);\n    /**\n     * @param node The value of the ``node`` created by the SAX parser.\n     *\n     * @param children The children of this element. **These children must not yet\n     * be children of any element.**\n     */\n    function Element(prefix, local, uri, ns, attributes, children) {\n        if (children === void 0) { children = []; }\n        var _this = _super.call(this) || this;\n        _this.children = children;\n        _this.prefix = prefix;\n        _this.local = local;\n        _this.uri = uri;\n        // Namespace declarations are immutable.\n        // Cast to cheat and read it from the Element being cloned.\n        _this.ns = ns;\n        _this.attributes = attributes;\n        try {\n            for (var children_1 = tslib_1.__values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                var child = children_1_1.value;\n                child.parent = _this;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return _this;\n        var e_1, _a;\n    }\n    Element.fromSax = function (node, children) {\n        return new Element(node.prefix, node.local, node.uri, \n        // We create a new object even when using a sax node. Sax uses a prototype\n        // trick to flatten the hierarchy of namespace declarations but that\n        // screws us over when we mutate the tree. It is simpler to just undo the\n        // trick and have a resolve() method that searches up the tree. We don't\n        // do that many searches anyway.\n        Object.assign(Object.create(null), node.ns), node.attributes, children);\n    };\n    Element.makeElement = function (name) {\n        return new Element(\"\", name, \"\", \n        // We always pass the same object as ns. So we save an unnecessary object\n        // creation.\n        emptyNS, Object.create(null));\n    };\n    Element.prototype.setParent = function (value) {\n        //\n        // The cost of looking for cycles is noticeable. So we should use this\n        // only when debugging new code.\n        //\n        // let scan = value;\n        // while (scan !== undefined) {\n        //   if (scan === this) {\n        //     throw new Error(\"creating reference loop!\");\n        //   }\n        //   scan = scan.parent;\n        // }\n        this._path = undefined; // This becomes void.\n        // We inline super.setParent here:\n        this._parent = value;\n    };\n    Element.prototype.resolve = function (name) {\n        if (name === \"xml\") {\n            return name_resolver_1.XML1_NAMESPACE;\n        }\n        if (name === \"xmlns\") {\n            return name_resolver_1.XMLNS_NAMESPACE;\n        }\n        return this._resolve(name);\n    };\n    Element.prototype._resolve = function (name) {\n        var ret = this.ns[name];\n        if (ret !== undefined) {\n            return ret;\n        }\n        return (this.parent === undefined) ? undefined : this.parent._resolve(name);\n    };\n    Object.defineProperty(Element.prototype, \"text\", {\n        get: function () {\n            return this.children.map(function (x) { return x.text; }).join(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"path\", {\n        get: function () {\n            if (this._path === undefined) {\n                this._path = this.makePath();\n            }\n            return this._path;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Element.prototype.makePath = function () {\n        var ret = ((this.parent !== undefined) ? this.parent.path : \"\") + \"/\" + this.local;\n        var name = this.getAttribute(\"name\");\n        if (name !== undefined) {\n            // tslint:disable-next-line:no-string-literal\n            ret += \"[@name='\" + name + \"']\";\n        }\n        else {\n            try {\n                for (var _a = tslib_1.__values(this.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n                    var child = _b.value;\n                    if (child instanceof Element && child.local === \"name\") {\n                        ret += \"[@name='\" + child.text + \"']\";\n                        break;\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        return ret;\n        var e_2, _c;\n    };\n    Element.prototype.removeChild = function (child) {\n        // We purposely don't call removeChildAt, so as to save a call.\n        //\n        // We don't check whether there's an element at [0]. If not, a hard fail is\n        // appropriate. It shouldn't happen.\n        this.children.splice(this.indexOfChild(child), 1)[0].parent = undefined;\n    };\n    Element.prototype.removeChildAt = function (i) {\n        // We don't check whether there's an element at [0]. If not, a hard fail is\n        // appropriate. It shouldn't happen.\n        this.children.splice(i, 1)[0].parent = undefined;\n    };\n    Element.prototype.replaceChildWith = function (child, replacement) {\n        this.replaceChildAt(this.indexOfChild(child), replacement);\n    };\n    Element.prototype.replaceChildAt = function (i, replacement) {\n        var child = this.children[i];\n        // In practice this is not a great optimization.\n        //\n        // if (child === replacement) {\n        //   return;\n        // }\n        if (replacement.parent !== undefined) {\n            replacement.parent.removeChild(replacement);\n        }\n        this.children[i] = replacement;\n        child.parent = undefined;\n        replacement.parent = this;\n    };\n    Element.prototype.appendChild = function (child) {\n        // It is faster to use custom code than to rely on insertAt: splice\n        // operations are costly.\n        if (child.parent !== undefined) {\n            child.parent.removeChild(child);\n        }\n        child.parent = this;\n        this.children.push(child);\n    };\n    Element.prototype.appendChildren = function (children) {\n        try {\n            // It is faster to use custom code than to rely on insertAt: splice\n            // operations are costly.\n            for (var children_2 = tslib_1.__values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {\n                var el = children_2_1.value;\n                if (el.parent !== undefined) {\n                    el.parent.removeChild(el);\n                }\n                el.parent = this;\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        (_b = this.children).push.apply(_b, tslib_1.__spread(children));\n        var e_3, _a, _b;\n    };\n    Element.prototype.prependChild = function (child) {\n        // It is faster to do this than to rely on insertAt: splice operations\n        // are costly.\n        if (child.parent !== undefined) {\n            child.parent.removeChild(child);\n        }\n        child.parent = this;\n        this.children.unshift(child);\n    };\n    Element.prototype.insertAt = function (index, toInsert) {\n        try {\n            for (var toInsert_1 = tslib_1.__values(toInsert), toInsert_1_1 = toInsert_1.next(); !toInsert_1_1.done; toInsert_1_1 = toInsert_1.next()) {\n                var el = toInsert_1_1.value;\n                if (el.parent !== undefined) {\n                    el.parent.removeChild(el);\n                }\n                el.parent = this;\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (toInsert_1_1 && !toInsert_1_1.done && (_a = toInsert_1.return)) _a.call(toInsert_1);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        (_b = this.children).splice.apply(_b, tslib_1.__spread([index, 0], toInsert));\n        var e_4, _a, _b;\n    };\n    Element.prototype.empty = function () {\n        var children = this.children.splice(0, this.children.length);\n        try {\n            for (var children_3 = tslib_1.__values(children), children_3_1 = children_3.next(); !children_3_1.done; children_3_1 = children_3.next()) {\n                var child = children_3_1.value;\n                child.parent = undefined;\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (children_3_1 && !children_3_1.done && (_a = children_3.return)) _a.call(children_3);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        var e_5, _a;\n    };\n    /**\n     * Gets all the children from another element and append them to this\n     * element. This is a faster operation than done through other means.\n     *\n     * @param src The element form which to get the children.\n     */\n    Element.prototype.grabChildren = function (src) {\n        var children = src.children.splice(0, src.children.length);\n        (_a = this.children).push.apply(_a, tslib_1.__spread(children));\n        try {\n            for (var children_4 = tslib_1.__values(children), children_4_1 = children_4.next(); !children_4_1.done; children_4_1 = children_4.next()) {\n                var child = children_4_1.value;\n                child.parent = this;\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (children_4_1 && !children_4_1.done && (_b = children_4.return)) _b.call(children_4);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n        var _a, e_6, _b;\n    };\n    Element.prototype.replaceContent = function (children) {\n        var prev = (_a = this.children).splice.apply(_a, tslib_1.__spread([0, this.children.length], children));\n        try {\n            for (var prev_1 = tslib_1.__values(prev), prev_1_1 = prev_1.next(); !prev_1_1.done; prev_1_1 = prev_1.next()) {\n                var child = prev_1_1.value;\n                child.parent = undefined;\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (prev_1_1 && !prev_1_1.done && (_b = prev_1.return)) _b.call(prev_1);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        try {\n            for (var children_5 = tslib_1.__values(children), children_5_1 = children_5.next(); !children_5_1.done; children_5_1 = children_5.next()) {\n                var child = children_5_1.value;\n                child.parent = this;\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (children_5_1 && !children_5_1.done && (_c = children_5.return)) _c.call(children_5);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        var _a, e_7, _b, e_8, _c;\n    };\n    Element.prototype.indexOfChild = function (child) {\n        var parent = child.parent;\n        if (parent !== this) {\n            throw new Error(\"the child is not a child of this\");\n        }\n        var index = parent.children.indexOf(child);\n        if (index === -1) {\n            throw new Error(\"child not among children\");\n        }\n        return index;\n    };\n    /**\n     * Set an attribute on an element.\n     *\n     * @param name The attribute name.\n     *\n     * @param value The new value of the attribute.\n     */\n    Element.prototype.setAttribute = function (name, value) {\n        if (name.indexOf(\":\") !== -1) {\n            throw new Error(\"we don't support namespaces on this function\");\n        }\n        this.attributes[name] = {\n            name: name,\n            prefix: \"\",\n            local: name,\n            uri: \"\",\n            value: value,\n        };\n    };\n    Element.prototype.setXMLNS = function (value) {\n        this.attributes.xmlns = {\n            name: \"xmlns\",\n            prefix: \"xmlns\",\n            uri: name_resolver_1.XMLNS_NAMESPACE,\n            value: value,\n            local: \"\",\n        };\n    };\n    Element.prototype.removeAttribute = function (name) {\n        delete this.attributes[name];\n    };\n    Element.prototype.getAttribute = function (name) {\n        var attr = this.attributes[name];\n        return (attr !== undefined) ? attr.value : undefined;\n    };\n    Element.prototype.getRawAttributes = function () {\n        return this.attributes;\n    };\n    Element.prototype.mustGetAttribute = function (name) {\n        var attr = this.getAttribute(name);\n        if (attr === undefined) {\n            throw new Error(\"no attribute named \" + name);\n        }\n        return attr;\n    };\n    Element.prototype.clone = function () {\n        // The strategy of pre-filling the new object and then updating the keys\n        // appears to be faster than inserting new keys one by one.\n        var attributes = Object.assign(Object.create(null), this.attributes);\n        try {\n            for (var _a = tslib_1.__values(Object.keys(attributes)), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var key = _b.value;\n                // We do not use Object.create(null) here because there's no advantage\n                // to it.\n                attributes[key] = tslib_1.__assign({}, attributes[key]);\n            }\n        }\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_9) throw e_9.error; }\n        }\n        return new Element(this.prefix, this.local, this.uri, this.ns, attributes, this.children.map(function (child) { return child.clone(); }));\n        var e_9, _c;\n    };\n    return Element;\n}(Node));\nexports.Element = Element;\nvar Text = /** @class */ (function (_super) {\n    tslib_1.__extends(Text, _super);\n    /**\n     * @param text The textual value.\n     */\n    function Text(text) {\n        var _this = _super.call(this) || this;\n        _this.text = text;\n        return _this;\n    }\n    Text.prototype.clone = function () {\n        return new Text(this.text);\n    };\n    return Text;\n}(Node));\nexports.Text = Text;\nvar Validator = /** @class */ (function () {\n    function Validator(grammar) {\n        /** Whether we ran into an error. */\n        this.errors = [];\n        /** The context stack. */\n        this.contextStack = [];\n        /** A text buffer... */\n        this.textBuf = \"\";\n        this.walker = grammar.newWalker();\n    }\n    Validator.prototype.flushTextBuf = function () {\n        if (this.textBuf === \"\") {\n            return;\n        }\n        this.fireEvent(\"text\", [this.textBuf]);\n        this.textBuf = \"\";\n    };\n    Validator.prototype.fireEvent = function (name, args) {\n        var ret = this.walker.fireEvent(name, args);\n        if (ret) {\n            (_a = this.errors).push.apply(_a, tslib_1.__spread(ret));\n        }\n        var _a;\n    };\n    Validator.prototype.onopentag = function (node) {\n        this.flushTextBuf();\n        var hasContext = false;\n        var attributeEvents = [];\n        try {\n            for (var _a = tslib_1.__values(Object.keys(node.attributes)), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var name_2 = _b.value;\n                var _c = node.attributes[name_2], uri = _c.uri, prefix = _c.prefix, local = _c.local, value = _c.value;\n                if ((local === \"\" && name_2 === \"xmlns\") ||\n                    prefix === \"xmlns\") { // xmlns=\"...\" or xmlns:q=\"...\"\n                    if (!hasContext) {\n                        this.walker.enterContext();\n                        hasContext = true;\n                    }\n                    this.walker.definePrefix(local, value);\n                }\n                else {\n                    attributeEvents.push(uri, local, value);\n                }\n            }\n        }\n        catch (e_10_1) { e_10 = { error: e_10_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n            }\n            finally { if (e_10) throw e_10.error; }\n        }\n        this.fireEvent(\"startTagAndAttributes\", tslib_1.__spread([node.uri, node.local], attributeEvents));\n        this.contextStack.unshift(hasContext);\n        var e_10, _d;\n    };\n    Validator.prototype.onclosetag = function (node) {\n        this.flushTextBuf();\n        var hasContext = this.contextStack.shift();\n        if (hasContext === undefined) {\n            throw new Error(\"stack underflow\");\n        }\n        this.fireEvent(\"endTag\", [node.uri, node.local]);\n        if (hasContext) {\n            this.walker.leaveContext();\n        }\n    };\n    Validator.prototype.ontext = function (text) {\n        this.textBuf += text;\n    };\n    return Validator;\n}());\nexports.Validator = Validator;\n// A validator that does not validate.\nvar NullValidator = /** @class */ (function () {\n    function NullValidator() {\n    }\n    // tslint:disable-next-line:no-empty\n    NullValidator.prototype.onopentag = function () { };\n    // tslint:disable-next-line:no-empty\n    NullValidator.prototype.onclosetag = function () { };\n    // tslint:disable-next-line:no-empty\n    NullValidator.prototype.ontext = function () { };\n    return NullValidator;\n}());\n/**\n * A simple parser used for loading a XML document into memory.  Parsers of this\n * class use [[Node]] objects to represent the tree of nodes.\n */\nvar BasicParser = /** @class */ (function (_super) {\n    tslib_1.__extends(BasicParser, _super);\n    function BasicParser(saxParser, validator) {\n        if (validator === void 0) { validator = new NullValidator(); }\n        var _this = _super.call(this, saxParser) || this;\n        _this.validator = validator;\n        _this.drop = 0;\n        _this.stack = [{\n                // We cheat. The node field of the top level stack item won't ever be\n                // accessed.\n                node: undefined,\n                children: [],\n            }];\n        return _this;\n    }\n    Object.defineProperty(BasicParser.prototype, \"root\", {\n        /**\n         * The root of the parsed XML.\n         */\n        get: function () {\n            return this.stack[0].children\n                .filter(function (x) { return x instanceof Element; })[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BasicParser.prototype.onopentag = function (node) {\n        // We have to validate the node even if we are not going to record it,\n        // because RelaxNG does not allow foreign nodes everywhere.\n        this.validator.onopentag(node);\n        // We can skip creating Element objects for foreign nodes and their\n        // children.\n        if (node.uri !== util_1.RELAXNG_URI || this.drop !== 0) {\n            this.drop++;\n            return;\n        }\n        this.stack.unshift({\n            node: node,\n            children: [],\n        });\n    };\n    BasicParser.prototype.onclosetag = function (node) {\n        // We have to validate the node even if we are not going to record it,\n        // because RelaxNG does not allow foreign nodes everywhere.\n        this.validator.onclosetag(node);\n        if (this.drop !== 0) {\n            this.drop--;\n            return;\n        }\n        // tslint:disable-next-line:no-non-null-assertion\n        var _a = this.stack.shift(), topNode = _a.node, children = _a.children;\n        this.stack[0].children.push(Element.fromSax(topNode, children));\n    };\n    BasicParser.prototype.ontext = function (text) {\n        this.validator.ontext(text);\n        if (this.drop !== 0) {\n            return;\n        }\n        this.stack[0].children.push(new Text(text));\n    };\n    return BasicParser;\n}(Parser));\nexports.BasicParser = BasicParser;\n/**\n * This parser is specifically dedicated to the task of reading simplified Relax\n * NG schemas. In a Relax NG schema, text nodes that consist entirely of white\n * space are expandable, except in the ``param`` and ``value`` elements, where\n * they do potentially carry significant information.\n *\n * This parser strips nodes that consist entirely of white space because this\n * simplifies code that needs to process the resulting tree, but preserve those\n * nodes that are potentially significant.\n *\n * This parser does not allow elements which are not in the Relax NG namespace.\n */\nvar ConversionParser = /** @class */ (function (_super) {\n    tslib_1.__extends(ConversionParser, _super);\n    function ConversionParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ConversionParser.prototype.onopentag = function (node) {\n        // tslint:disable-next-line: no-http-string\n        if (node.uri !== \"http://relaxng.org/ns/structure/1.0\") {\n            throw new Error(\"node in unexpected namespace: \" + node.uri);\n        }\n        _super.prototype.onopentag.call(this, node);\n    };\n    ConversionParser.prototype.ontext = function (text) {\n        // We ignore text appearing before or after the top level element.\n        if (this.stack.length <= 1 || this.drop !== 0) {\n            return;\n        }\n        var top = this.stack[0];\n        var local = top.node.local;\n        // The parser does not allow non-RNG nodes, so we don't need to check the\n        // namespace.\n        var keepWhitespaceNodes = local === \"param\" || local === \"value\";\n        if (keepWhitespaceNodes || text.trim() !== \"\") {\n            _super.prototype.ontext.call(this, text);\n        }\n    };\n    return ConversionParser;\n}(BasicParser));\nexports.ConversionParser = ConversionParser;\n// Exception used to terminate the sax parser early.\nvar Found = /** @class */ (function (_super) {\n    tslib_1.__extends(Found, _super);\n    function Found() {\n        var _this = _super.call(this) || this;\n        tools_1.fixPrototype(_this, Found);\n        return _this;\n    }\n    return Found;\n}(Error));\nexports.Found = Found;\nvar IncludeParser = /** @class */ (function (_super) {\n    tslib_1.__extends(IncludeParser, _super);\n    function IncludeParser(saxParser) {\n        var _this = _super.call(this, saxParser) || this;\n        _this.found = false;\n        return _this;\n    }\n    IncludeParser.prototype.onopentag = function (node) {\n        // tslint:disable-next-line:no-http-string\n        if (node.uri === \"http://relaxng.org/ns/structure/1.0\" &&\n            (node.local === \"include\" || node.local === \"externalRef\")) {\n            this.found = true;\n            throw new Found(); // Stop early.\n        }\n    };\n    return IncludeParser;\n}(Parser));\nexports.IncludeParser = IncludeParser;\n//  LocalWords:  MPL NG param RNG\n//# sourceMappingURL=parser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar autoload_1 = require(\"./schema-validators/autoload\");\nvar tools_1 = require(\"../tools\");\nvar SchemaValidationError = /** @class */ (function (_super) {\n    tslib_1.__extends(SchemaValidationError, _super);\n    function SchemaValidationError(message) {\n        var _this = _super.call(this) || this;\n        var err = new Error(message);\n        _this.name = \"SchemaValidationError\";\n        _this.stack = err.stack;\n        _this.message = err.message;\n        tools_1.fixPrototype(_this, SchemaValidationError);\n        return _this;\n    }\n    return SchemaValidationError;\n}(Error));\nexports.SchemaValidationError = SchemaValidationError;\nvar availableValidators = Object.create(null);\nfunction getAvailableValidators() {\n    return Object.keys(availableValidators);\n}\nexports.getAvailableValidators = getAvailableValidators;\nfunction isValidatorAvailable(name) {\n    return availableValidators[name] !== undefined;\n}\nexports.isValidatorAvailable = isValidatorAvailable;\nfunction registerValidator(name, ctor) {\n    availableValidators[name] = ctor;\n}\nexports.registerValidator = registerValidator;\nfunction makeValidator(name, options) {\n    var ctor = availableValidators[name];\n    if (ctor === undefined) {\n        throw new Error(\"unknown validator name: \" + name);\n    }\n    return new ctor(options);\n}\nexports.makeValidator = makeValidator;\nautoload_1.autoload();\n//# sourceMappingURL=schema-validation.js.map","\"use strict\";\n/**\n * Validation errors.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * The ``fireEvent`` methods return an array of objects of this class to\n * notify the caller of errors in the file being validated.\n *\n * Note that these error objects do not record what (element, attribute, text,\n * etc.) in the XML document was responsible for the error. It is the\n * responsibility of the code that uses salve to combine the error message with\n * an object that points into the document being validated.\n *\n * This is particularly important when considering the equality of errors. Two\n * errors are considered equal if their messages (with names) are the\n * same. *They could still be associated with two different locations in the\n * document being validated.* The code calling salve must distinguish such\n * cases.\n */\nvar ValidationError = /** @class */ (function () {\n    /**\n     *\n     * @param msg The error message.\n     */\n    function ValidationError(msg) {\n        this.msg = msg;\n        // May be useful for debugging:\n        // this.stack_trace = new Error().stack;\n    }\n    /**\n     * The default implementation is to return the value of calling\n     * ``this.toStringWithNames(this.getNames())``.\n     *\n     * @returns The text representation of the error.\n     */\n    ValidationError.prototype.toString = function () {\n        return this.toStringWithNames(this.getNames());\n    };\n    /**\n     * This method provides the caller with the list of all names that are used in\n     * the error message.\n     *\n     * @returns The list of names used in the error message.\n     */\n    ValidationError.prototype.getNames = function () {\n        return [];\n    };\n    /**\n     * This method transforms this object to a string but uses the names in the\n     * parameter passed to it to format the string.\n     *\n     * Since salve does not work with namespace prefixes, someone using salve\n     * would typically use this method so as to replace the name patterns passed\n     * in error messages with qualified names.\n     *\n     * @param names The array of names to use. This should be an array of the same\n     * length as that returned by [[getNames]] . Each element of the array\n     * corresponds to each name in [[getNames]] and should be something that can\n     * be converted to a meaningful string.\n     *\n     * @returns The object formatted as a string.\n     */\n    ValidationError.prototype.toStringWithNames = function (names) {\n        // We do not have names in ValidationError\n        return this.msg;\n    };\n    /**\n     * Two [[ValidationError]] objects are considered equal if the values returned\n     * by [[toString]] are equal.\n     *\n     * @param other The other validation error to compare against.\n     *\n     * @returns Whether ``this`` and ``other`` are equal.\n     */\n    ValidationError.prototype.equals = function (other) {\n        return (this === other) || (this.toString() === other.toString());\n    };\n    return ValidationError;\n}());\nexports.ValidationError = ValidationError;\n/**\n * This class serves as a base for all those errors that have only\n * one name involved.\n */\nvar SingleNameError = /** @class */ (function (_super) {\n    tslib_1.__extends(SingleNameError, _super);\n    /**\n     * @param msg The error message.\n     *\n     * @param name The name of the XML entity at stake.\n     */\n    function SingleNameError(msg, name) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = name;\n        return _this;\n    }\n    SingleNameError.prototype.getNames = function () {\n        return [this.name];\n    };\n    SingleNameError.prototype.toStringWithNames = function (names) {\n        return this.msg + \": \" + names[0].toString();\n    };\n    return SingleNameError;\n}(ValidationError));\nexports.SingleNameError = SingleNameError;\n/**\n * Error returned when an attribute name is invalid.\n */\nvar AttributeNameError = /** @class */ (function (_super) {\n    tslib_1.__extends(AttributeNameError, _super);\n    function AttributeNameError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AttributeNameError;\n}(SingleNameError));\nexports.AttributeNameError = AttributeNameError;\n/**\n * Error returned when an attribute value is invalid.\n */\nvar AttributeValueError = /** @class */ (function (_super) {\n    tslib_1.__extends(AttributeValueError, _super);\n    function AttributeValueError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AttributeValueError;\n}(SingleNameError));\nexports.AttributeValueError = AttributeValueError;\n/**\n * Error returned when an element is invalid.\n */\nvar ElementNameError = /** @class */ (function (_super) {\n    tslib_1.__extends(ElementNameError, _super);\n    function ElementNameError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ElementNameError;\n}(SingleNameError));\nexports.ElementNameError = ElementNameError;\n/**\n * Error returned when choice was not satisfied.\n */\nvar ChoiceError = /** @class */ (function (_super) {\n    tslib_1.__extends(ChoiceError, _super);\n    /**\n     * @param namesA The names of the first XML entities at stake.\n     *\n     * @param namesB The names of the second XML entities at stake.\n     */\n    function ChoiceError(namesA, namesB) {\n        var _this = _super.call(this, \"\") || this;\n        _this.namesA = namesA;\n        _this.namesB = namesB;\n        return _this;\n    }\n    ChoiceError.prototype.getNames = function () {\n        return this.namesA.concat(this.namesB);\n    };\n    ChoiceError.prototype.toStringWithNames = function (names) {\n        var first = names.slice(0, this.namesA.length);\n        var second = names.slice(this.namesA.length);\n        return \"must choose either \" + first.join(\", \") + \" or \" + second.join(\", \");\n    };\n    return ChoiceError;\n}(ValidationError));\nexports.ChoiceError = ChoiceError;\n//  LocalWords:  MPL ValidationError toStringWithNames getNames toString\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Utilities for simplification support for trees produced by the parser module.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2013, 2014 Mangalam Research Center for Buddhist Languages\n */\nvar parser_1 = require(\"../parser\");\n// tslint:disable-next-line:no-http-string\nexports.RELAXNG_URI = \"http://relaxng.org/ns/structure/1.0\";\nfunction findChildrenByLocalName(el, name) {\n    return el\n        .children\n        .filter(function (child) { return (child instanceof parser_1.Element) &&\n        child.local === name; });\n}\nexports.findChildrenByLocalName = findChildrenByLocalName;\nfunction findDescendantsByLocalName(el, name) {\n    var ret = [];\n    _findDescendantsByLocalName(el, name, ret);\n    return ret;\n}\nexports.findDescendantsByLocalName = findDescendantsByLocalName;\nfunction _findDescendantsByLocalName(el, name, ret) {\n    try {\n        for (var _a = tslib_1.__values(el.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            if (!(child instanceof parser_1.Element)) {\n                continue;\n            }\n            if (child.local === name) {\n                ret.push(child);\n            }\n            _findDescendantsByLocalName(child, name, ret);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    var e_1, _c;\n}\nexports._findDescendantsByLocalName = _findDescendantsByLocalName;\nfunction findMultiDescendantsByLocalName(el, names) {\n    var ret = Object.create(null);\n    try {\n        for (var names_1 = tslib_1.__values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {\n            var name_1 = names_1_1.value;\n            ret[name_1] = [];\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    _findMultiDescendantsByLocalName(el, names, ret);\n    return ret;\n    var e_2, _a;\n}\nexports.findMultiDescendantsByLocalName = findMultiDescendantsByLocalName;\nfunction _findMultiDescendantsByLocalName(el, names, ret) {\n    try {\n        for (var _a = tslib_1.__values(el.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            if (!(child instanceof parser_1.Element)) {\n                continue;\n            }\n            var name_2 = child.local;\n            if (names.includes(name_2)) {\n                ret[name_2].push(child);\n            }\n            _findMultiDescendantsByLocalName(child, names, ret);\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    var e_3, _c;\n}\n/**\n * This is a specialized version of [[findMultiDescendantsByLocalName]] that\n * searches through the first child element and its descendants. ``element`` and\n * ``attribute`` elements during simplification get their name class recorded as\n * their first child element.\n *\n * @param el The element in which to search.\n *\n * @param names The name class elements to look for.\n *\n * @returns A map of name to element list.\n */\nfunction findMultiNames(el, names) {\n    var nameClass = el.children[0];\n    var descendants = findMultiDescendantsByLocalName(nameClass, names);\n    var name = nameClass.local;\n    if (names.includes(name)) {\n        if (!(name in descendants)) {\n            descendants[name] = [];\n        }\n        descendants[name].unshift(nameClass);\n    }\n    return descendants;\n}\nexports.findMultiNames = findMultiNames;\n/**\n * Index the elements of ``arr`` by the keys obtained through calling\n * ``makeKey``. If two elements resolve to the same key, the later element\n * overwrites the earlier.\n *\n * @param arr The array to index.\n *\n * @param makeKey A function that takes an array element and makes a key by\n * which this element will be indexed.\n *\n * @return The indexed elements.\n */\nfunction indexBy(arr, makeKey) {\n    var ret = new Map();\n    try {\n        for (var arr_1 = tslib_1.__values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {\n            var x = arr_1_1.value;\n            ret.set(makeKey(x), x);\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    return ret;\n    var e_4, _a;\n}\nexports.indexBy = indexBy;\n/**\n * Group the elements of ``arr`` by the keys obtained through calling\n * ``makeKey``. Contrarily to [[indexBy]], this function allows for multiple\n * elements with the same key to coexist in the results because the resulting\n * object maps keys to arrays of elements rather than keys to single elements.\n *\n * @param arr The array to index.\n *\n * @param makeKey A function that takes an array element and makes a key by\n * which this element will be indexed.\n *\n * @return The grouped elements.\n */\nfunction groupBy(arr, makeKey) {\n    var ret = new Map();\n    try {\n        for (var arr_2 = tslib_1.__values(arr), arr_2_1 = arr_2.next(); !arr_2_1.done; arr_2_1 = arr_2.next()) {\n            var x = arr_2_1.value;\n            var key = makeKey(x);\n            var list = ret.get(key);\n            if (list === undefined) {\n                list = [];\n                ret.set(key, list);\n            }\n            list.push(x);\n        }\n    }\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n    finally {\n        try {\n            if (arr_2_1 && !arr_2_1.done && (_a = arr_2.return)) _a.call(arr_2);\n        }\n        finally { if (e_5) throw e_5.error; }\n    }\n    return ret;\n    var e_5, _a;\n}\nexports.groupBy = groupBy;\n/**\n * Get the value of the @name attribute.\n *\n * @param el The element to process.\n */\nfunction getName(el) {\n    return el.mustGetAttribute(\"name\");\n}\nexports.getName = getName;\n/**\n * Removes unreferenced ``define`` elements from a grammar.\n *\n * **Important**: this is a very ad-hoc function, not meant for general\n * consumption. For one thing, this function works only if called with ``el``\n * pointing to a top-level ``grammar`` element **after** all ``grammar``\n * elements have been reduced to a single ``grammar``, all ``define`` elements\n * moved to that single ``grammar``, and ``grammar`` contains ``start`` as the\n * first element, and the rest of the children are all ``define`` elements.\n *\n * This function does no check these constraints!!! You must call it from a\n * stage where these constraints hold.\n *\n * This function does not guard against misuse. It must be called from steps\n * that execute after the above assumption holds.\n *\n * @param el The element that contains the ``define`` elements.\n *\n * @param seen A set of ``define`` names. If the name is in the set, then there\n * was a reference to the name, and the ``define`` is kept. Otherwise, the\n * ``define`` is removed.\n */\nfunction removeUnreferencedDefs(el, seen) {\n    var children = el.children;\n    for (var ix = 1; ix < children.length; ++ix) {\n        if (seen.has(children[ix].mustGetAttribute(\"name\"))) {\n            continue;\n        }\n        el.removeChildAt(ix);\n        --ix;\n    }\n}\nexports.removeUnreferencedDefs = removeUnreferencedDefs;\n//# sourceMappingURL=util.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","\"use strict\";\n/**\n * Naive set implementation.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n * @private\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Add the elements of another set to this set. This mutates this set.\n *\n * @param me The set to mutate.\n *\n * @param s The set to add.\n */\nfunction union(me, s) {\n    try {\n        for (var s_1 = tslib_1.__values(s), s_1_1 = s_1.next(); !s_1_1.done; s_1_1 = s_1.next()) {\n            var x = s_1_1.value;\n            me.add(x);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (s_1_1 && !s_1_1.done && (_a = s_1.return)) _a.call(s_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    var e_1, _a;\n}\nexports.union = union;\n/**\n * Selects a subset of values.\n *\n * @param me The set to filter.\n *\n * @param f A function that selects values.\n *\n * @returns An object of the same class as the object on which the method is\n * called. This object contains only the value selected by the function.\n */\nfunction filter(me, f) {\n    var ret = new me.constructor();\n    // The fat arrow is used to prevent a caller from accessing ``this.b``\n    // through the 3rd parameter that would be passed to ``f``.\n    var index = 0;\n    try {\n        for (var me_1 = tslib_1.__values(me), me_1_1 = me_1.next(); !me_1_1.done; me_1_1 = me_1.next()) {\n            var x = me_1_1.value;\n            if (f(x, index++, me)) {\n                ret.add(x);\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (me_1_1 && !me_1_1.done && (_a = me_1.return)) _a.call(me_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return ret;\n    var e_2, _a;\n}\nexports.filter = filter;\n/**\n * This method works like Array.map but with a provision for eliminating\n * elements.\n *\n * @param me The set to map.\n *\n * @param f This parameter plays the same role as for ``Array``'s ``map``\n * method.  However, when it returns an undefined value, this return value is\n * not added to set that will be returned.\n *\n * @returns The new set. This set is of the same class as the original set.\n */\nfunction map(me, f) {\n    var ret = new me.constructor();\n    var index = 0;\n    try {\n        for (var me_2 = tslib_1.__values(me), me_2_1 = me_2.next(); !me_2_1.done; me_2_1 = me_2.next()) {\n            var x = me_2_1.value;\n            var result = f(x, index++, me);\n            if (result !== undefined) {\n                ret.add(result);\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (me_2_1 && !me_2_1.done && (_a = me_2.return)) _a.call(me_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return ret;\n    var e_3, _a;\n}\nexports.map = map;\n//  LocalWords:  param NaiveSet Mangalam MPL Dubeau HashSet hashstructs\n//# sourceMappingURL=set.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","\"use strict\";\n/**\n * Implements a name resolver for handling namespace changes in XML.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ename_1 = require(\"./ename\");\n//\n// Both defined at:\n// http://www.w3.org/TR/REC-xml-names/#ns-decl\n//\n/**\n * The namespace URI for the \"xml\" prefix. This is part of the [XML\n * spec](http://www.w3.org/TR/REC-xml-names/#ns-decl).\n */\n// tslint:disable-next-line: no-http-string\nexports.XML1_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n/**\n * The namespace URI for the \"xmlns\" prefix. This is part of the [XML\n * spec](http://www.w3.org/TR/REC-xml-names/#ns-decl).\n */\n// tslint:disable-next-line: no-http-string\nexports.XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\";\n/**\n * A name resolver for handling namespace changes in XML. This name\n * resolver maintains mappings from namespace prefix to namespace URI.\n */\nvar NameResolver = /** @class */ (function () {\n    function NameResolver(other) {\n        this.id = \"N\" + this.__newID();\n        if (other !== undefined) {\n            this._contextStack = other._contextStack.slice();\n        }\n        else {\n            // Both namespaces defined at:\n            // http://www.w3.org/TR/REC-xml-names/#ns-decl\n            // Skip definePrefix for these initial values.\n            this._contextStack = [{\n                    forward: new Map([[\"xml\", exports.XML1_NAMESPACE],\n                        [\"xmlns\", exports.XMLNS_NAMESPACE]]),\n                    backwards: new Map([[exports.XML1_NAMESPACE, [\"xml\"]],\n                        [exports.XMLNS_NAMESPACE, [\"xmlns\"]]]),\n                }];\n        }\n    }\n    /**\n     * This method is mainly used to be able to use [[NameResolver]] objects in a\n     * collection.\n     *\n     * Returns a hash guaranteed to be unique to this object. There are some\n     * limitations. First, if this module is instantiated twice, the objects\n     * created by the two instances cannot mix without violating the uniqueness\n     * guarantee. Second, the hash is a monotonically increasing counter, so when\n     * it reaches beyond the maximum integer that the JavaScript vm can handle,\n     * things go kaboom.\n     *\n     * @returns A number unique to this object.\n     */\n    NameResolver.prototype.hash = function () {\n        return this.id;\n    };\n    /**\n     * Makes a deep copy.\n     *\n     * @returns A deep copy of the resolver.\n     */\n    NameResolver.prototype.clone = function () {\n        return new NameResolver(this);\n    };\n    /**\n     * Defines a (prefix, URI) mapping.\n     *\n     * @param prefix The namespace prefix to associate with the URI.\n     *\n     * @param uri The namespace URI associated with the prefix.\n     */\n    NameResolver.prototype.definePrefix = function (prefix, uri) {\n        // http://www.w3.org/TR/REC-xml-names/#ns-decl\n        if (prefix === \"xmlns\") {\n            throw new Error(\"trying to define 'xmlns' but the XML Namespaces \" +\n                \"standard stipulates that 'xmlns' cannot be \" +\n                \"declared (= \\\"defined\\\")\");\n        }\n        if (prefix === \"xml\" && uri !== exports.XML1_NAMESPACE) {\n            throw new Error(\"trying to define 'xml' to an incorrect URI\");\n        }\n        var top = this._contextStack[0];\n        top.forward.set(prefix, uri);\n        var prefixes = top.backwards.get(uri);\n        if (prefixes === undefined) {\n            prefixes = [];\n            top.backwards.set(uri, prefixes);\n        }\n        // This ensure that the default namespace is given priority when\n        // unresolving names.\n        if (prefix === \"\") {\n            prefixes.unshift(\"\");\n        }\n        else {\n            prefixes.push(prefix);\n        }\n    };\n    /**\n     * This method is called to indicate the start of a new context.  Contexts\n     * enable this class to support namespace redeclarations. In XML, each start\n     * tag can potentially redefine a prefix that was already defined by an\n     * ancestor. When using this class, such redefinition must appear in a new\n     * context, otherwise it would merely overwrite the old definition.\n     *\n     * At creation, a [[NameResolver]] has a default context already\n     * created. There is no need to create it and it is not possible to leave it.\n     */\n    NameResolver.prototype.enterContext = function () {\n        this._contextStack.unshift({\n            forward: new Map(),\n            backwards: new Map(),\n        });\n    };\n    /**\n     * This method is called to indicate the end of a context. Whatever context\n     * was in effect when the current context ends becomes effective.\n     *\n     * @throws {Error} If this method is called when there is no context created\n     * by [[NameResolver.enterContext]].\n     */\n    NameResolver.prototype.leaveContext = function () {\n        if (this._contextStack.length > 1) {\n            this._contextStack.shift();\n        }\n        else {\n            throw new Error(\"trying to leave the default context\");\n        }\n    };\n    /**\n     * Resolves a qualified name to an expanded name. A qualified name is an XML\n     * name optionally prefixed by a namespace prefix. For instance, in ``<html\n     * xml:lang=\"en\">``, \"html\" is a name without a prefix, and \"xml:lang\" is a\n     * name with the \"xml\" prefix. An expanded name is a (URI, name) pair.\n     *\n     * @param name The name to resolve.\n     *\n     * @param attribute Whether this name appears as an attribute.\n     *\n     * @throws {Error} If the name is malformed. For instance, a name with two\n     * colons would be malformed.\n     *\n     * @returns The expanded name, or ``undefined`` if the name cannot be\n     * resolved.\n     */\n    NameResolver.prototype.resolveName = function (name, attribute) {\n        if (attribute === void 0) { attribute = false; }\n        var parts = name.split(\":\");\n        var prefix;\n        var local;\n        switch (parts.length) {\n            case 2:\n                _a = tslib_1.__read(parts, 2), prefix = _a[0], local = _a[1];\n                break;\n            case 1:\n                if (attribute) { // Attribute in undefined namespace\n                    return new ename_1.EName(\"\", name);\n                }\n                // We are searching for the default namespace currently in effect.\n                prefix = \"\";\n                local = name;\n                break;\n            default:\n                throw new Error(\"invalid name passed to resolveName\");\n        }\n        try {\n            // Search through the contexts.\n            for (var _b = tslib_1.__values(this._contextStack), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var context = _c.value;\n                var uri = context.forward.get(prefix);\n                if (uri !== undefined) {\n                    return new ename_1.EName(uri, local);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_d = _b.return)) _d.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        // If we get here uri is necessarily undefined.\n        return (prefix === \"\") ? new ename_1.EName(\"\", local) : undefined;\n        var _a, e_1, _d;\n    };\n    /**\n     * Unresolves an expanded name to a qualified name. An expanded name is a\n     * (URI, name) pair. Note that if we execute:\n     *\n     * <pre>\n     *   var nameResolver = new NameResolver();\n     *   var ename = nameResolver.resolveName(qname);\n     *   var qname2 = nameResolver.unresolveName(ename.ns, ename.name);\n     * </pre>\n     *\n     * then ``qname === qname2`` is not necessarily true. This would happen if two\n     * prefixes map to the same URI. In such case the prefix provided in the\n     * return value is arbitrarily chosen.\n     *\n     * @param uri The URI part of the expanded name. An empty string is\n     * valid, and basically means \"no namespace\". This occurs for unprefixed\n     * attributes but could also happen if the default namespace is undeclared.\n     *\n     * @param  name The name part.\n     *\n     * @returns The qualified name that corresponds to the expanded name, or\n     * ``undefined`` if it cannot be resolved.\n     */\n    NameResolver.prototype.unresolveName = function (uri, name) {\n        if (uri === \"\") {\n            return name;\n        }\n        // Search through the contexts.\n        var prefixes;\n        for (var cIx = 0; (prefixes === undefined) &&\n            (cIx < this._contextStack.length); ++cIx) {\n            prefixes = this._contextStack[cIx].backwards.get(uri);\n        }\n        if (prefixes === undefined) {\n            return undefined;\n        }\n        var pre = prefixes[0];\n        return (pre !== \"\") ? pre + \":\" + name : name;\n    };\n    /**\n     * Returns a prefix that, in the current context, is mapped to the URI\n     * specified. Note that this function will return the first prefix that\n     * satisfies the requirement, starting from the innermost context.\n     *\n     * @param uri A URI for which to get a prefix.\n     *\n     * @returns A prefix that maps to this URI. Undefined if there is no prefix\n     * available.\n     */\n    NameResolver.prototype.prefixFromURI = function (uri) {\n        var prefixes;\n        for (var cIx = 0; (prefixes === undefined) &&\n            (cIx < this._contextStack.length); ++cIx) {\n            prefixes = this._contextStack[cIx].backwards.get(uri);\n        }\n        if (prefixes === undefined) {\n            return undefined;\n        }\n        return prefixes[0];\n    };\n    /**\n     * Gets a new Pattern id.\n     *\n     * @returns The new id.\n     */\n    NameResolver.prototype.__newID = function () {\n        return NameResolver.__id++;\n    };\n    /**\n     * The next id to associate to the next NameResolver object to be created.\n     * This is used so that [[NameResolver.hash]] can return unique values.\n     */\n    NameResolver.__id = 0; // tslint:disable-line: variable-name\n    return NameResolver;\n}());\nexports.NameResolver = NameResolver;\n//  LocalWords:  unprefixed nameResolver pre definePrefix Unresolves qname vm\n//  LocalWords:  redeclarations newID ename lang html NameResolver Mangalam uri\n//  LocalWords:  xmlns URI Dubeau resolveName xml MPL unresolving namespace\n//# sourceMappingURL=name_resolver.js.map","\"use strict\";\n/**\n * Common tools for salve.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * @private\n */\nfunction copy(target, source) {\n    for (var i in source) { // tslint:disable-line: forin\n        target[i] = source[i];\n    }\n}\n/**\n * Modify ``target`` by copying the sources into it. This function is designed\n * to fit the internal needs of salve and is not meant as a general purpose\n * \"extend\" function like provided by jQuery or Lodash (for instance).\n *\n * @param target The target to copy into.\n *\n * @param sources The sources from which to copy. These sources are\n * processed in order.\n *\n * @returns The target, modified.\n */\nfunction extend(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    try {\n        for (var sources_1 = tslib_1.__values(sources), sources_1_1 = sources_1.next(); !sources_1_1.done; sources_1_1 = sources_1.next()) {\n            var source = sources_1_1.value;\n            copy(target, source);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (sources_1_1 && !sources_1_1.done && (_a = sources_1.return)) _a.call(sources_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return target;\n    var e_1, _a;\n}\nexports.extend = extend;\n/**\n * This is required to work around a problem when extending built-in classes\n * like ``Error``. Some of the constructors for these classes return a value\n * from the constructor, which is then picked up by the constructors generated\n * by TypeScript (same with ES6 code transpiled through Babel), and this messes\n * up the inheritance chain.\n *\n * See https://github.com/Microsoft/TypeScript/issues/12123.\n */\nfunction fixPrototype(obj, parent) {\n    var oldProto = Object.getPrototypeOf !== undefined ?\n        Object.getPrototypeOf(obj) : obj.__proto__;\n    if (oldProto !== parent) {\n        if (Object.setPrototypeOf !== undefined) {\n            Object.setPrototypeOf(obj, parent.prototype);\n        }\n        else {\n            obj.__proto__ = parent.prototype;\n        }\n    }\n}\nexports.fixPrototype = fixPrototype;\n//  LocalWords:  MPL jQuery Lodash\n//# sourceMappingURL=tools.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Classes that model RNG patterns.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar ename_1 = require(\"./ename\");\nexports.EName = ename_1.EName;\nvar attribute_1 = require(\"./patterns/attribute\");\nexports.Attribute = attribute_1.Attribute;\nvar choice_1 = require(\"./patterns/choice\");\nexports.Choice = choice_1.Choice;\nvar data_1 = require(\"./patterns/data\");\nexports.Data = data_1.Data;\nvar define_1 = require(\"./patterns/define\");\nexports.Define = define_1.Define;\nvar element_1 = require(\"./patterns/element\");\nexports.Element = element_1.Element;\nvar empty_1 = require(\"./patterns/empty\");\nexports.Empty = empty_1.Empty;\nvar group_1 = require(\"./patterns/group\");\nexports.Group = group_1.Group;\nvar interleave_1 = require(\"./patterns/interleave\");\nexports.Interleave = interleave_1.Interleave;\nvar list_1 = require(\"./patterns/list\");\nexports.List = list_1.List;\nvar not_allowed_1 = require(\"./patterns/not_allowed\");\nexports.NotAllowed = not_allowed_1.NotAllowed;\nvar one_or_more_1 = require(\"./patterns/one_or_more\");\nexports.OneOrMore = one_or_more_1.OneOrMore;\nvar param_1 = require(\"./patterns/param\");\nexports.Param = param_1.Param;\nvar text_1 = require(\"./patterns/text\");\nexports.Text = text_1.Text;\nvar value_1 = require(\"./patterns/value\");\nexports.Value = value_1.Value;\nvar ref_1 = require(\"./patterns/ref\");\nexports.Ref = ref_1.Ref;\nvar name_patterns_1 = require(\"./name_patterns\");\nexports.Name = name_patterns_1.Name;\nexports.NameChoice = name_patterns_1.NameChoice;\nexports.NsName = name_patterns_1.NsName;\nexports.AnyName = name_patterns_1.AnyName;\nvar base_1 = require(\"./patterns/base\");\nexports.eventsToTreeString = base_1.eventsToTreeString;\nexports.Event = base_1.Event;\nexports.BasePattern = base_1.BasePattern;\nexports.Pattern = base_1.Pattern;\nvar grammar_1 = require(\"./patterns/grammar\");\nexports.Grammar = grammar_1.Grammar;\nexports.GrammarWalker = grammar_1.GrammarWalker;\nexports.RefError = grammar_1.RefError;\n//  LocalWords:  EName NotAllowed oneOrMore RNG MPL Dubeau GrammarWalker rng\n//  LocalWords:  notAllowed Mangalam EventSet\n//# sourceMappingURL=patterns.js.map","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\n/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nfunction escapeString(str) {\n    return str.replace(/([\"\\\\])/g, \"\\\\$1\");\n}\n/**\n * Base class for all name patterns.\n */\nvar Base = /** @class */ (function () {\n    /**\n     * @param path The XML path of the element that corresponds to this\n     * object in the Relax NG schema from which this object was constructed.\n     */\n    function Base(path) {\n        this.path = path;\n    }\n    /**\n     * Gets the list of namespaces used in the pattern. An ``::except`` entry\n     * indicates that there are exceptions in the pattern. A ``*`` entry indicates\n     * that any namespace is allowed.\n     *\n     * This method should be used by client code to help determine how to prompt\n     * the user for a namespace. If the return value is a list without\n     * ``::except`` or ``*``, the client code knows there is a finite list of\n     * namespaces expected, and what the possible values are. So it could present\n     * the user with a choice from the set. If ``::except`` or ``*`` appears in\n     * the list, then a different strategy must be used.\n     *\n     * @returns The list of namespaces.\n     */\n    Base.prototype.getNamespaces = function () {\n        var namespaces = new Set();\n        this._recordNamespaces(namespaces, true);\n        return Array.from(namespaces);\n    };\n    /**\n     * Alias of [[Base.toObject]].\n     *\n     * ``toJSON`` is a misnomer, as the data returned is not JSON but a JavaScript\n     * object. This method exists so that ``JSON.stringify`` can use it.\n     */\n    Base.prototype.toJSON = function () {\n        return this.toObject();\n    };\n    /**\n     * Stringify the pattern to a JSON string.\n     *\n     * @returns The stringified instance.\n     */\n    Base.prototype.toString = function () {\n        // Profiling showed that caching the string representation helps\n        // performance.\n        if (this._asString === undefined) {\n            this._asString = this.asString();\n        }\n        return this._asString;\n    };\n    return Base;\n}());\nexports.Base = Base;\n/**\n * Models the Relax NG ``<name>`` element.\n *\n */\nvar Name = /** @class */ (function (_super) {\n    tslib_1.__extends(Name, _super);\n    /**\n     * @param path See parent class.\n     *\n     * @param ns The namespace URI for this name. Corresponds to the\n     * ``ns`` attribute in the simplified Relax NG syntax.\n     *\n     * @param name The name. Corresponds to the content of ``<name>``\n     * in the simplified Relax NG syntax.\n     */\n    function Name(path, ns, name) {\n        var _this = _super.call(this, path) || this;\n        _this.ns = ns;\n        _this.name = name;\n        return _this;\n    }\n    Name.prototype.match = function (ns, name) {\n        return this.name === name && this.ns === ns;\n    };\n    Name.prototype.intersects = function (other) {\n        return other instanceof Name ?\n            this.match(other.ns, other.name) :\n            // Delegate to the other classes.\n            other.intersects(this);\n    };\n    Name.prototype.intersection = function (other) {\n        if (other === 0) {\n            return 0;\n        }\n        if (other instanceof Name) {\n            return this.match(other.ns, other.name) ? this : 0;\n        }\n        // Delegate to the other classes.\n        return other.intersection(this);\n    };\n    Name.prototype.wildcardMatch = function (ns, name) {\n        return false; // This is not a wildcard.\n    };\n    Name.prototype.toObject = function () {\n        return {\n            ns: this.ns,\n            name: this.name,\n        };\n    };\n    Name.prototype.asString = function () {\n        // We don't need to escape this.name because names cannot contain\n        // things that need escaping.\n        return \"{\\\"ns\\\":\\\"\" + escapeString(this.ns) + \"\\\",\\\"name\\\":\\\"\" + this.name + \"\\\"}\";\n    };\n    Name.prototype.simple = function () {\n        return true;\n    };\n    Name.prototype.toArray = function () {\n        return [this];\n    };\n    Name.prototype._recordNamespaces = function (namespaces, recordEmpty) {\n        if (this.ns === \"\" && !recordEmpty) {\n            return;\n        }\n        namespaces.add(this.ns);\n    };\n    return Name;\n}(Base));\nexports.Name = Name;\n/**\n * Models the Relax NG ``<choice>`` element when it appears in a name\n * class.\n */\nvar NameChoice = /** @class */ (function (_super) {\n    tslib_1.__extends(NameChoice, _super);\n    /**\n     * @param path See parent class.\n     *\n     * @param a The first choice.\n     *\n     * @param b The second choice.\n     */\n    function NameChoice(path, a, b) {\n        var _this = _super.call(this, path) || this;\n        _this.a = a;\n        _this.b = b;\n        return _this;\n    }\n    /**\n     * Makes a tree of NameChoice objects out of a list of names.\n     *\n     * @param names The names from which to build a tree.\n     *\n     * @return If the list is a single name, then just that name. Otherwise,\n     * the names from the list in a tree of [[NameChoice]].\n     */\n    NameChoice.makeTree = function (names) {\n        if (names.length === 0) {\n            throw new Error(\"trying to make a tree out of nothing\");\n        }\n        var ret;\n        if (names.length > 1) {\n            // More than one name left. Convert them to a tree.\n            var top_1 = new NameChoice(\"\", names[0], names[1]);\n            for (var ix = 2; ix < names.length; ix++) {\n                top_1 = new NameChoice(\"\", top_1, names[ix]);\n            }\n            ret = top_1;\n        }\n        else {\n            // Only one name: we can use it as-is for the except.\n            ret = names[0];\n        }\n        return ret;\n    };\n    NameChoice.prototype.match = function (ns, name) {\n        return this.a.match(ns, name) || this.b.match(ns, name);\n    };\n    NameChoice.prototype.intersects = function (other) {\n        return this.a.intersects(other) || this.b.intersects(other);\n    };\n    NameChoice.prototype.intersection = function (other) {\n        if (other === 0) {\n            return 0;\n        }\n        var a = this.a.intersection(other);\n        var b = this.b.intersection(other);\n        if (a !== 0 && b !== 0) {\n            return new NameChoice(\"\", a, b);\n        }\n        if (a !== 0) {\n            return a;\n        }\n        return (b !== 0) ? b : 0;\n    };\n    /**\n     * Recursively apply a transformation to a NameChoice tree.\n     *\n     * @param fn The transformation to apply. It may return 0 to indicate that the\n     * child has been transformed to the empty set.\n     *\n     * @returns The transformed tree, or 0 if the tree has been transformed to\n     * nothing.\n     */\n    NameChoice.prototype.applyRecursively = function (fn) {\n        var _a = this, a = _a.a, b = _a.b;\n        var newA = a instanceof NameChoice ? a.applyRecursively(fn) : fn(a);\n        var newB = b instanceof NameChoice ? b.applyRecursively(fn) : fn(b);\n        if (newA !== 0 && newB !== 0) {\n            return new NameChoice(this.path, newA, newB);\n        }\n        if (newA !== 0) {\n            return newA;\n        }\n        if (newB !== 0) {\n            return newB;\n        }\n        return 0;\n    };\n    NameChoice.prototype.wildcardMatch = function (ns, name) {\n        return this.a.wildcardMatch(ns, name) || this.b.wildcardMatch(ns, name);\n    };\n    NameChoice.prototype.toObject = function () {\n        return {\n            a: this.a.toObject(),\n            b: this.b.toObject(),\n        };\n    };\n    NameChoice.prototype.asString = function () {\n        return \"{\\\"a\\\":\" + this.a.toString() + \",\\\"b\\\":\" + this.b.toString() + \"}\";\n    };\n    NameChoice.prototype.simple = function () {\n        return this.a.simple() && this.b.simple();\n    };\n    NameChoice.prototype.toArray = function () {\n        var aArr = this.a.toArray();\n        if (aArr === null) {\n            return null;\n        }\n        var bArr = this.b.toArray();\n        if (bArr === null) {\n            return null;\n        }\n        return aArr.concat(bArr);\n    };\n    NameChoice.prototype._recordNamespaces = function (namespaces, recordEmpty) {\n        this.a._recordNamespaces(namespaces, recordEmpty);\n        this.b._recordNamespaces(namespaces, recordEmpty);\n    };\n    return NameChoice;\n}(Base));\nexports.NameChoice = NameChoice;\n/**\n * Models the Relax NG ``<nsName>`` element.\n */\nvar NsName = /** @class */ (function (_super) {\n    tslib_1.__extends(NsName, _super);\n    /**\n     *\n     * @param path See parent class.\n     *\n     * @param ns The namespace URI for this name. Corresponds to the ``ns``\n     * attribute in the simplified Relax NG syntax.\n     *\n     * @param except Corresponds to an ``<except>`` element appearing as a child\n     * of the ``<nsName>`` element in the Relax NG schema.\n     */\n    function NsName(path, ns, except) {\n        var _this = _super.call(this, path) || this;\n        _this.ns = ns;\n        _this.except = except;\n        return _this;\n    }\n    NsName.prototype.match = function (ns, name) {\n        return this.ns === ns && !(this.except !== undefined &&\n            this.except.match(ns, name));\n    };\n    NsName.prototype.intersects = function (other) {\n        if (other instanceof Name) {\n            return this.ns === other.ns &&\n                (this.except === undefined || !other.intersects(this.except));\n        }\n        return other instanceof NsName ? this.ns === other.ns :\n            // Delegate the logic to the other classes.\n            other.intersects(this);\n    };\n    NsName.prototype.intersection = function (other) {\n        if (other === 0) {\n            return 0;\n        }\n        if (other instanceof Name) {\n            if (this.ns !== other.ns) {\n                return 0;\n            }\n            if (this.except !== undefined) {\n                // We're computing other - other ^ this.except\n                //\n                // Since other is a single name, there are only two possible values for\n                // other ^ this.except: other and 0.\n                //\n                // Consequently the whole equation can also only resolve to other and 0.\n                return other.intersection(this.except) === 0 ? other : 0;\n            }\n            return other;\n        }\n        if (other instanceof NsName) {\n            if (this.ns !== other.ns) {\n                return 0;\n            }\n            if (this.except !== undefined && other.except !== undefined) {\n                // We have to create a new except that does not duplicate exceptions.\n                // For instance if this excepts {q}foo and other excepts {q}foo too, we\n                // don't want to have an exception that has {q}foo twice.\n                // Due to Relax NG restrictions on NsName, both excepts necessarily\n                // contain only Name or NameChoice elements.\n                var theseNames = this.except.toArray();\n                var otherNames = other.except.toArray();\n                // And so these cannot be null.\n                if (theseNames === null || otherNames === null) {\n                    throw new Error(\"complex pattern found in NsName except\");\n                }\n                // Find the unique names.\n                var map = theseNames.concat(otherNames).reduce(function (acc, name) {\n                    acc.set(\"{\" + name.ns + \"}\" + name.name, name);\n                    return acc;\n                }, new Map());\n                var names = Array.from(map.values());\n                return new NsName(this.path, this.ns, NameChoice.makeTree(names));\n            }\n            return (other.except !== undefined) ? other : this;\n        }\n        // Delegate the logic to the other classes.\n        return other.intersection(this);\n    };\n    /**\n     * Subtract a [[Name]] or [[NsName]] from this one, or a [[NameChoice]] that\n     * contains only a mix of these two. We support subtracting only these two\n     * types because only these two cases are required by Relax NG.\n     *\n     * @param other The object to subtract from this one.\n     *\n     * @returns An object that represents the subtraction. If the result is the\n     * empty set, 0 is returned.\n     */\n    NsName.prototype.subtract = function (other) {\n        var _this = this;\n        if (other instanceof NameChoice) {\n            // x - (a U b) = x - a U x - b\n            return other\n                .applyRecursively(function (child) {\n                if (!(child instanceof Name || child instanceof NsName)) {\n                    throw new Error(\"child is not Name or NsName\");\n                }\n                return _this.subtract(child);\n            });\n        }\n        if (this.ns !== other.ns) {\n            return this;\n        }\n        if (other instanceof Name) {\n            return new NsName(this.path, this.ns, (this.except === undefined) ?\n                other :\n                new NameChoice(this.path, this.except, other));\n        }\n        if (other.except === undefined) {\n            return 0;\n        }\n        if (this.except === undefined) {\n            return other.except;\n        }\n        // Otherwise, return other.except - this.except. Yes, the order is\n        // correct.\n        // Due to Relax NG restrictions on NsName, both excepts may contain only\n        // Name or NameChoice, so only simple patterns that can be converted to\n        // arrays.\n        var theseNames = this.except.toArray();\n        var otherNames = other.except.toArray();\n        if (theseNames === null || otherNames === null) {\n            throw new Error(\"NsName contains an except pattern which is not simple.\");\n        }\n        var result = otherNames\n            .filter(function (name) {\n            return !theseNames.some(function (thisName) { return name.ns === thisName.ns &&\n                name.name === thisName.name; });\n        });\n        return result.length === 0 ? 0 : NameChoice.makeTree(result);\n    };\n    NsName.prototype.wildcardMatch = function (ns, name) {\n        return this.match(ns, name);\n    };\n    NsName.prototype.toObject = function () {\n        var ret = {\n            ns: this.ns,\n        };\n        if (this.except !== undefined) {\n            ret.except = this.except.toObject();\n        }\n        return ret;\n    };\n    NsName.prototype.asString = function () {\n        var except = this.except === undefined ? \"\" :\n            \",\\\"except\\\":\" + this.except.toString();\n        return \"{\\\"ns\\\":\\\"\" + escapeString(this.ns) + \"\\\"\" + except + \"}\";\n    };\n    NsName.prototype.simple = function () {\n        return false;\n    };\n    NsName.prototype.toArray = function () {\n        return null;\n    };\n    NsName.prototype._recordNamespaces = function (namespaces, recordEmpty) {\n        if (this.ns !== \"\" || recordEmpty) {\n            namespaces.add(this.ns);\n        }\n        if (this.except !== undefined) {\n            namespaces.add(\"::except\");\n        }\n    };\n    return NsName;\n}(Base));\nexports.NsName = NsName;\n/**\n * Models the Relax NG ``<anyName>`` element.\n */\nvar AnyName = /** @class */ (function (_super) {\n    tslib_1.__extends(AnyName, _super);\n    /**\n     * @param path See parent class.\n     *\n     * @param except Corresponds to an ``<except>`` element appearing as a child\n     * of the ``<anyName>`` element in the Relax NG schema.\n     */\n    function AnyName(path, except) {\n        var _this = _super.call(this, path) || this;\n        _this.except = except;\n        return _this;\n    }\n    AnyName.prototype.match = function (ns, name) {\n        return (this.except === undefined) || !this.except.match(ns, name);\n    };\n    AnyName.prototype.intersects = function (other) {\n        if (this.except === undefined || other instanceof AnyName) {\n            return true;\n        }\n        if (other instanceof Name) {\n            return !this.except.intersects(other);\n        }\n        if (other instanceof NsName) {\n            // Reminder: the except can only be one of three things: Name, NsName or\n            // NameChoice so negation can only be 0, Name, NsName or NameChoice.\n            var negation = this.except.intersection(other);\n            if (negation === 0) {\n                return true;\n            }\n            if (negation instanceof Name || negation instanceof NsName ||\n                negation instanceof NameChoice) {\n                return other.subtract(negation) !== 0;\n            }\n            throw new Error(\"negation should be 0, Name, NsName or NameChoice\");\n        }\n        throw new Error(\"cannot compute intersection!\");\n    };\n    AnyName.prototype.intersection = function (other) {\n        if (other === 0) {\n            return 0;\n        }\n        if (this.except === undefined) {\n            return other;\n        }\n        if (other instanceof Name) {\n            return this.except.intersection(other) === 0 ? other : 0;\n        }\n        if (other instanceof NsName) {\n            // Reminder: the except can only be one of three things: Name, NsName or\n            // NameChoice so negation can only be 0, Name, NsName or NameChoice.\n            var negation = this.except.intersection(other);\n            if (negation === 0) {\n                return other;\n            }\n            if (negation instanceof Name || negation instanceof NsName ||\n                negation instanceof NameChoice) {\n                return other.subtract(negation);\n            }\n            throw new Error(\"negation should be 0, Name, NsName or NameChoice\");\n        }\n        if (other instanceof AnyName) {\n            if (other.except !== undefined && this.except !== undefined) {\n                return new AnyName(this.path, new NameChoice(this.path, this.except, other.except));\n            }\n            return (other.except !== undefined) ? other : this;\n        }\n        throw new Error(\"cannot compute intersection!\");\n    };\n    AnyName.prototype.wildcardMatch = function (ns, name) {\n        return this.match(ns, name);\n    };\n    AnyName.prototype.toObject = function () {\n        var ret = {\n            pattern: \"AnyName\",\n        };\n        if (this.except !== undefined) {\n            ret.except = this.except.toObject();\n        }\n        return ret;\n    };\n    AnyName.prototype.asString = function () {\n        var except = this.except === undefined ? \"\" :\n            \",\\\"except\\\":\" + this.except.toString();\n        return \"{\\\"pattern\\\":\\\"AnyName\\\"\" + except + \"}\";\n    };\n    AnyName.prototype.simple = function () {\n        return false;\n    };\n    AnyName.prototype.toArray = function () {\n        return null;\n    };\n    AnyName.prototype._recordNamespaces = function (namespaces, _recordEmpty) {\n        namespaces.add(\"*\");\n        if (this.except !== undefined) {\n            namespaces.add(\"::except\");\n        }\n    };\n    return AnyName;\n}(Base));\nexports.AnyName = AnyName;\n//  LocalWords:  MPL NG Stringify stringified AnyName\n//# sourceMappingURL=name_patterns.js.map","\"use strict\";\n/**\n * Classes that model datatypes used in RNG schemas.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar builtin_1 = require(\"./datatypes/builtin\");\nvar xmlschema_1 = require(\"./datatypes/xmlschema\");\n/**\n * The registry of types.\n */\nvar Registry = /** @class */ (function () {\n    function Registry() {\n        this.libraries = Object.create(null);\n    }\n    /**\n     * Adds a library to the registry.\n     *\n     * @param library The library to add to the registry.\n     *\n     * @throws {Error} If the URI is already registered.\n     */\n    Registry.prototype.add = function (library) {\n        var uri = library.uri;\n        if (uri in this.libraries) {\n            throw new Error(\"URI clash: \" + uri);\n        }\n        this.libraries[uri] = library;\n    };\n    /**\n     * Searches for a URI in the library.\n     *\n     * @param uri The URI to search for.\n     *\n     * @returns The library that corresponds to the URI or ``undefined`` if no\n     * such library exists.\n     */\n    Registry.prototype.find = function (uri) {\n        return this.libraries[uri];\n    };\n    /**\n     * Gets the library corresponding to a URI.\n     *\n     * @param uri The URI.\n     *\n     * @returns The library that corresponds to the URI.\n     *\n     * @throws {Error} If the library does not exist.\n     */\n    // tslint:disable-next-line: no-reserved-keywords\n    Registry.prototype.get = function (uri) {\n        var ret = this.find(uri);\n        if (ret === undefined) {\n            throw new Error(\"can't get library with URI: \" + uri);\n        }\n        return ret;\n    };\n    return Registry;\n}());\nexports.Registry = Registry;\nexports.registry = new Registry();\nexports.registry.add(builtin_1.builtin);\nexports.registry.add(xmlschema_1.xmlschema);\nvar errors_1 = require(\"./datatypes/errors\");\nexports.ParameterParsingError = errors_1.ParameterParsingError;\nexports.ValueValidationError = errors_1.ValueValidationError;\nexports.ValueError = errors_1.ValueError;\n//  LocalWords:  datatypes RNG MPL uri\n//# sourceMappingURL=datatypes.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * A simplifier implemented in TypeScript (thus internal to Salve).\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar sax = require(\"sax\");\nvar datatypes_1 = require(\"../../datatypes\");\nvar read_1 = require(\"../../json-format/read\");\nvar name_resolver_1 = require(\"../../name_resolver\");\nvar patterns_1 = require(\"../../patterns\");\nvar relaxng = require(\"../../schemas/relaxng\");\nvar parser_1 = require(\"../parser\");\nvar schema_simplification_1 = require(\"../schema-simplification\");\nvar schema_validation_1 = require(\"../schema-validation\");\nvar simplifier = require(\"../simplifier\");\nvar util_1 = require(\"../simplifier/util\");\nvar base_1 = require(\"./base\");\nvar common_1 = require(\"./common\");\nfunction makeNamePattern(el) {\n    var first = el.children[0];\n    var second = el.children[1];\n    switch (el.local) {\n        case \"name\":\n            return new patterns_1.Name(\"\", el.mustGetAttribute(\"ns\"), el.text);\n        case \"choice\":\n            return new patterns_1.NameChoice(\"\", makeNamePattern(first), makeNamePattern(second));\n        case \"anyName\": {\n            return new patterns_1.AnyName(\"\", first !== undefined ? makeNamePattern(first) :\n                undefined);\n        }\n        case \"nsName\": {\n            return new patterns_1.NsName(\"\", el.mustGetAttribute(\"ns\"), first !== undefined ? makeNamePattern(first) :\n                undefined);\n        }\n        case \"except\":\n            return makeNamePattern(first);\n        default:\n            throw new Error(\"unexpected element in name pattern \" + el.local);\n    }\n}\nvar ProhibitedPath = /** @class */ (function (_super) {\n    tslib_1.__extends(ProhibitedPath, _super);\n    function ProhibitedPath(path) {\n        return _super.call(this, \"prohibited path: \" + path) || this;\n    }\n    return ProhibitedPath;\n}(schema_validation_1.SchemaValidationError));\nvar ProhibitedAttributePath = /** @class */ (function (_super) {\n    tslib_1.__extends(ProhibitedAttributePath, _super);\n    function ProhibitedAttributePath(name) {\n        return _super.call(this, \"attribute//\" + name) || this;\n    }\n    return ProhibitedAttributePath;\n}(schema_validation_1.SchemaValidationError));\nvar ProhibitedListPath = /** @class */ (function (_super) {\n    tslib_1.__extends(ProhibitedListPath, _super);\n    function ProhibitedListPath(name) {\n        return _super.call(this, \"list//\" + name) || this;\n    }\n    return ProhibitedListPath;\n}(schema_validation_1.SchemaValidationError));\nvar ProhibitedStartPath = /** @class */ (function (_super) {\n    tslib_1.__extends(ProhibitedStartPath, _super);\n    function ProhibitedStartPath(name) {\n        return _super.call(this, \"start//\" + name) || this;\n    }\n    return ProhibitedStartPath;\n}(schema_validation_1.SchemaValidationError));\nvar ProhibitedDataExceptPath = /** @class */ (function (_super) {\n    tslib_1.__extends(ProhibitedDataExceptPath, _super);\n    function ProhibitedDataExceptPath(name) {\n        return _super.call(this, \"data/except//\" + name) || this;\n    }\n    return ProhibitedDataExceptPath;\n}(schema_validation_1.SchemaValidationError));\nvar EMPTY_ELEMENT_ARRAY = [];\n/**\n * Perform the final constraint checks, and record some information\n * for checkInterleaveRestriction.\n */\nvar GeneralChecker = /** @class */ (function () {\n    function GeneralChecker() {\n        this.attrNameCache = new Map();\n        this.defineNameToElementNames = new Map();\n        this.typeWarnings = [];\n    }\n    GeneralChecker.prototype.check = function (el) {\n        this.definesByName = util_1.indexBy(el.children.slice(1), util_1.getName);\n        this._check(el, {\n            inStart: false,\n            inAttribute: false,\n            inList: false,\n            inDataExcept: false,\n            inOneOrMore: false,\n            inOneOrMoreGroup: false,\n            inOneOrMoreInterleave: false,\n            inInterlave: false,\n            inGroup: false,\n        });\n    };\n    // tslint:disable-next-line:max-func-body-length\n    GeneralChecker.prototype._check = function (el, state) {\n        var name = el.local;\n        var method = this[name + \"Handler\"];\n        return method.call(this, el, state);\n    };\n    GeneralChecker.prototype.elementHandler = function (el, state) {\n        // The first child is the name class, which we do not need to walk.\n        return this._check(el.children[1], state);\n    };\n    GeneralChecker.prototype.attributeHandler = function (el, state) {\n        if (state.inOneOrMoreGroup) {\n            throw new ProhibitedPath(\"oneOrMore//group//attribute\");\n        }\n        if (state.inOneOrMoreInterleave) {\n            throw new ProhibitedPath(\"oneOrMore//interleave//attribute\");\n        }\n        if (state.inAttribute) {\n            throw new ProhibitedAttributePath(el.local);\n        }\n        if (state.inList) {\n            throw new ProhibitedListPath(el.local);\n        }\n        if (state.inStart) {\n            throw new ProhibitedStartPath(el.local);\n        }\n        if (state.inDataExcept) {\n            throw new ProhibitedDataExceptPath(el.local);\n        }\n        var nameClass = util_1.findMultiNames(el, [\"anyName\", \"nsName\"]);\n        if (nameClass.anyName.length + nameClass.nsName.length !== 0 &&\n            !state.inOneOrMore) {\n            throw new schema_validation_1.SchemaValidationError(\"an attribute with an infinite name \\\nclass must be a descendant of oneOrMore (section 7.3)\");\n        }\n        // The first child is the name class, which we do not need to walk.\n        this._check(el.children[1], tslib_1.__assign({}, state, { inAttribute: true }));\n        return {\n            contentType: 0 /* EMPTY */,\n            occurringAttributes: [el],\n            occurringRefs: EMPTY_ELEMENT_ARRAY,\n            occurringTexts: 0,\n        };\n    };\n    GeneralChecker.prototype.exceptHandler = function (el, state) {\n        // parent cannot be undefined here.\n        var newState = state;\n        // tslint:disable-next-line:no-non-null-assertion\n        if (!state.inDataExcept && el.parent.local === \"data\") {\n            newState = tslib_1.__assign({}, state, { inDataExcept: true });\n        }\n        this._check(el.children[0], newState);\n        return {\n            contentType: null,\n            occurringAttributes: EMPTY_ELEMENT_ARRAY,\n            occurringRefs: EMPTY_ELEMENT_ARRAY,\n            occurringTexts: 0,\n        };\n    };\n    GeneralChecker.prototype.oneOrMoreHandler = function (el, state) {\n        if (state.inStart) {\n            throw new ProhibitedStartPath(el.local);\n        }\n        if (state.inDataExcept) {\n            throw new ProhibitedDataExceptPath(el.local);\n        }\n        var _a = this._check(el.children[0], tslib_1.__assign({}, state, { inOneOrMore: true })), contentType = _a.contentType, occurringAttributes = _a.occurringAttributes, occurringRefs = _a.occurringRefs, occurringTexts = _a.occurringTexts;\n        // The test would be\n        //\n        // ct !== null && groupable(ct, ct)\n        //\n        // but the only thing not groupable with itself is ContentType.SIMPLE\n        // and if ct === null then forcibly ct !== ContentType.SIMPLE\n        // is true so we can simplify to the following.\n        return {\n            contentType: contentType !== 2 /* SIMPLE */ ? contentType : null,\n            occurringAttributes: occurringAttributes,\n            occurringRefs: occurringRefs,\n            occurringTexts: occurringTexts,\n        };\n    };\n    GeneralChecker.prototype.groupHandler = function (el, state) {\n        if (state.inStart) {\n            throw new ProhibitedStartPath(el.local);\n        }\n        if (state.inDataExcept) {\n            throw new ProhibitedDataExceptPath(el.local);\n        }\n        return this.groupInterleaveHandler(el.children, tslib_1.__assign({}, state, { inGroup: true, inOneOrMoreGroup: state.inOneOrMore }), false);\n    };\n    GeneralChecker.prototype.interleaveHandler = function (el, state) {\n        if (state.inStart) {\n            throw new ProhibitedStartPath(el.local);\n        }\n        if (state.inList) {\n            throw new ProhibitedListPath(el.local);\n        }\n        if (state.inDataExcept) {\n            throw new ProhibitedDataExceptPath(el.local);\n        }\n        return this.groupInterleaveHandler(el.children, tslib_1.__assign({}, state, { inInterlave: true, inOneOrMoreInterleave: state.inOneOrMore }), true);\n    };\n    GeneralChecker.prototype.choiceHandler = function (el, state) {\n        var _a = this._check(el.children[0], state), firstCt = _a.contentType, firstAttributes = _a.occurringAttributes, firstRefs = _a.occurringRefs, firstTexts = _a.occurringTexts;\n        var _b = this._check(el.children[1], state), secondCt = _b.contentType, secondAttributes = _b.occurringAttributes, secondRefs = _b.occurringRefs, secondTexts = _b.occurringTexts;\n        return {\n            contentType: firstCt !== null && secondCt !== null ?\n                (firstCt > secondCt ? firstCt : secondCt) : null,\n            occurringAttributes: firstAttributes.concat(secondAttributes),\n            occurringRefs: firstRefs.concat(secondRefs),\n            occurringTexts: firstTexts + secondTexts,\n        };\n    };\n    GeneralChecker.prototype.listHandler = function (el, state) {\n        if (state.inList) {\n            throw new ProhibitedListPath(el.local);\n        }\n        if (state.inStart) {\n            throw new ProhibitedStartPath(el.local);\n        }\n        if (state.inDataExcept) {\n            throw new ProhibitedDataExceptPath(el.local);\n        }\n        this._check(el.children[0], tslib_1.__assign({}, state, { inList: true }));\n        return {\n            contentType: 2 /* SIMPLE */,\n            occurringAttributes: EMPTY_ELEMENT_ARRAY,\n            occurringRefs: EMPTY_ELEMENT_ARRAY,\n            occurringTexts: 0,\n        };\n    };\n    GeneralChecker.prototype.dataHandler = function (el, state) {\n        if (state.inStart) {\n            throw new ProhibitedStartPath(el.local);\n        }\n        var typeAttr = el.mustGetAttribute(\"type\");\n        var libname = el.mustGetAttribute(\"datatypeLibrary\");\n        var lib = datatypes_1.registry.find(libname);\n        if (lib === undefined) {\n            throw new datatypes_1.ValueValidationError(el.path, [new datatypes_1.ValueError(\"unknown datatype library: \" + libname)]);\n        }\n        var datatype = lib.types[typeAttr];\n        if (datatype === undefined) {\n            throw new datatypes_1.ValueValidationError(el.path, [new datatypes_1.ValueError(\"unknown datatype \" + typeAttr + \" in \" + ((libname === \"\") ? \"default library\" : \"library \" + libname))]);\n        }\n        var children = el.children;\n        var last = children[children.length - 1];\n        // We only need to scan the possible except child, which is necessarily\n        // last.\n        var hasExcept = (children.length !== 0 && last.local === \"except\");\n        var limit = hasExcept ? children.length - 1 : children.length;\n        // Running parseParams if we have no params is expensive. And if there are\n        // no params, there's nothing to check so don't run parseParams without\n        // params.\n        if (limit > 0) {\n            var params = [];\n            for (var ix = 0; ix < limit; ++ix) {\n                var child = children[ix];\n                params.push({\n                    name: child.mustGetAttribute(\"name\"),\n                    value: child.text,\n                });\n            }\n            datatype.parseParams(el.path, params);\n        }\n        // tslint:disable-next-line: no-http-string\n        if (libname === \"http://www.w3.org/2001/XMLSchema-datatypes\" &&\n            (typeAttr === \"ENTITY\" || typeAttr === \"ENTITIES\")) {\n            this.typeWarnings.push(\"WARNING: \" + el.path + \" uses the \" + typeAttr + \" type in library \" + libname);\n        }\n        if (hasExcept) {\n            this._check(last, state);\n        }\n        return {\n            contentType: 2 /* SIMPLE */,\n            occurringAttributes: EMPTY_ELEMENT_ARRAY,\n            occurringRefs: EMPTY_ELEMENT_ARRAY,\n            occurringTexts: 0,\n        };\n    };\n    GeneralChecker.prototype.valueHandler = function (el, state) {\n        if (state.inStart) {\n            throw new ProhibitedStartPath(el.local);\n        }\n        var typeAttr = el.mustGetAttribute(\"type\");\n        var libname = el.mustGetAttribute(\"datatypeLibrary\");\n        var ns = el.mustGetAttribute(\"ns\");\n        var lib = datatypes_1.registry.find(libname);\n        if (lib === undefined) {\n            throw new datatypes_1.ValueValidationError(el.path, [new datatypes_1.ValueError(\"unknown datatype library: \" + libname)]);\n        }\n        var datatype = lib.types[typeAttr];\n        if (datatype === undefined) {\n            throw new datatypes_1.ValueValidationError(el.path, [new datatypes_1.ValueError(\"unknown datatype \" + typeAttr + \" in \" + ((libname === \"\") ? \"default library\" : \"library \" + libname))]);\n        }\n        var value = el.text;\n        var context;\n        if (datatype.needsContext) {\n            // Change ns to the namespace we need.\n            ns = common_1.fromQNameToURI(value, el);\n            el.setAttribute(\"ns\", ns);\n            value = common_1.localName(value);\n            el.empty();\n            el.appendChild(new parser_1.Text(value));\n            var nr = new name_resolver_1.NameResolver();\n            nr.definePrefix(\"\", ns);\n            context = { resolver: nr };\n        }\n        datatype.parseValue(el.path, value, context);\n        // tslint:disable-next-line: no-http-string\n        if (libname === \"http://www.w3.org/2001/XMLSchema-datatypes\" &&\n            (typeAttr === \"ENTITY\" || typeAttr === \"ENTITIES\")) {\n            this.typeWarnings.push(\"WARNING: \" + el.path + \" uses the \" + typeAttr + \" type in library \" + libname);\n        }\n        // The child of value can only be a text node.\n        return {\n            contentType: 2 /* SIMPLE */,\n            occurringAttributes: EMPTY_ELEMENT_ARRAY,\n            occurringRefs: EMPTY_ELEMENT_ARRAY,\n            occurringTexts: 0,\n        };\n    };\n    GeneralChecker.prototype.textHandler = function (el, state) {\n        if (state.inList) {\n            throw new ProhibitedListPath(el.local);\n        }\n        if (state.inStart) {\n            throw new ProhibitedStartPath(el.local);\n        }\n        if (state.inDataExcept) {\n            throw new ProhibitedDataExceptPath(el.local);\n        }\n        return {\n            contentType: 1 /* COMPLEX */,\n            occurringAttributes: EMPTY_ELEMENT_ARRAY,\n            occurringRefs: EMPTY_ELEMENT_ARRAY,\n            occurringTexts: 1,\n        };\n    };\n    GeneralChecker.prototype.refHandler = function (el, state) {\n        if (state.inList) {\n            throw new ProhibitedListPath(el.local);\n        }\n        if (state.inAttribute) {\n            throw new ProhibitedAttributePath(el.local);\n        }\n        if (state.inDataExcept) {\n            throw new ProhibitedDataExceptPath(el.local);\n        }\n        return {\n            contentType: 1 /* COMPLEX */,\n            occurringAttributes: EMPTY_ELEMENT_ARRAY,\n            occurringRefs: [el],\n            occurringTexts: 0,\n        };\n    };\n    GeneralChecker.prototype.emptyHandler = function (el, state) {\n        if (state.inStart) {\n            throw new ProhibitedStartPath(el.local);\n        }\n        if (state.inDataExcept) {\n            throw new ProhibitedDataExceptPath(el.local);\n        }\n        return {\n            contentType: 0 /* EMPTY */,\n            occurringAttributes: EMPTY_ELEMENT_ARRAY,\n            occurringRefs: EMPTY_ELEMENT_ARRAY,\n            occurringTexts: 0,\n        };\n    };\n    GeneralChecker.prototype.notAllowedHandler = function () {\n        return {\n            contentType: null,\n            occurringAttributes: EMPTY_ELEMENT_ARRAY,\n            occurringRefs: EMPTY_ELEMENT_ARRAY,\n            occurringTexts: 0,\n        };\n    };\n    GeneralChecker.prototype.defineHandler = function (el, state) {\n        var contentType = this._check(el.children[0], state).contentType;\n        if (contentType === null) {\n            throw new schema_validation_1.SchemaValidationError(\"definition \" + el.mustGetAttribute(\"name\") + \" violates the constraint on string values (section 7.2)\");\n        }\n        return {\n            contentType: null,\n            occurringAttributes: EMPTY_ELEMENT_ARRAY,\n            occurringRefs: EMPTY_ELEMENT_ARRAY,\n            occurringTexts: 0,\n        };\n    };\n    GeneralChecker.prototype.startHandler = function (el, state) {\n        this._check(el.children[0], tslib_1.__assign({}, state, { inStart: true }));\n        return {\n            contentType: null,\n            occurringAttributes: EMPTY_ELEMENT_ARRAY,\n            occurringRefs: EMPTY_ELEMENT_ARRAY,\n            occurringTexts: 0,\n        };\n    };\n    GeneralChecker.prototype.grammarHandler = function (el, state) {\n        try {\n            for (var _a = tslib_1.__values(el.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var child = _b.value;\n                this._check(child, state);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return {\n            contentType: null,\n            occurringAttributes: EMPTY_ELEMENT_ARRAY,\n            occurringRefs: EMPTY_ELEMENT_ARRAY,\n            occurringTexts: 0,\n        };\n        var e_1, _c;\n    };\n    GeneralChecker.prototype.getAttrName = function (attr) {\n        var pattern = this.attrNameCache.get(attr);\n        if (pattern === undefined) {\n            var namePattern = attr.children[0];\n            pattern = makeNamePattern(namePattern);\n            this.attrNameCache.set(attr, pattern);\n        }\n        return pattern;\n    };\n    GeneralChecker.prototype.getElementNamesForDefine = function (name) {\n        var pattern = this.defineNameToElementNames.get(name);\n        if (pattern === undefined) {\n            var def = this.definesByName.get(name);\n            // tslint:disable-next-line:no-non-null-assertion\n            var element = def.children[0];\n            var namePattern = element.children[0];\n            pattern = makeNamePattern(namePattern);\n            this.defineNameToElementNames.set(name, pattern);\n        }\n        return pattern;\n    };\n    GeneralChecker.prototype.groupInterleaveHandler = function (children, newState, isInterleave) {\n        var _this = this;\n        var _a = this._check(children[0], newState), firstCt = _a.contentType, firstAttributes = _a.occurringAttributes, firstRefs = _a.occurringRefs, firstTexts = _a.occurringTexts;\n        var _b = this._check(children[1], newState), secondCt = _b.contentType, secondAttributes = _b.occurringAttributes, secondRefs = _b.occurringRefs, secondTexts = _b.occurringTexts;\n        try {\n            for (var firstAttributes_1 = tslib_1.__values(firstAttributes), firstAttributes_1_1 = firstAttributes_1.next(); !firstAttributes_1_1.done; firstAttributes_1_1 = firstAttributes_1.next()) {\n                var attr1 = firstAttributes_1_1.value;\n                try {\n                    for (var secondAttributes_1 = tslib_1.__values(secondAttributes), secondAttributes_1_1 = secondAttributes_1.next(); !secondAttributes_1_1.done; secondAttributes_1_1 = secondAttributes_1.next()) {\n                        var attr2 = secondAttributes_1_1.value;\n                        var name1 = this.getAttrName(attr1);\n                        var name2 = this.getAttrName(attr2);\n                        if (name1.intersects(name2)) {\n                            throw new schema_validation_1.SchemaValidationError(\"the name classes of two attributes in the same group or\\ninterleave intersect (section 7.3): \" + name1 + \" and \" + name2);\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (secondAttributes_1_1 && !secondAttributes_1_1.done && (_c = secondAttributes_1.return)) _c.call(secondAttributes_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (firstAttributes_1_1 && !firstAttributes_1_1.done && (_d = firstAttributes_1.return)) _d.call(firstAttributes_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (isInterleave) {\n            if (firstTexts !== 0 && secondTexts !== 0) {\n                throw new schema_validation_1.SchemaValidationError(\"text present in both patterns of an interleave (section 7.4)\");\n            }\n            var names1 = firstRefs\n                .map(function (x) { return _this.getElementNamesForDefine(x.mustGetAttribute(\"name\")); });\n            var names2 = secondRefs\n                .map(function (x) { return _this.getElementNamesForDefine(x.mustGetAttribute(\"name\")); });\n            try {\n                for (var names1_1 = tslib_1.__values(names1), names1_1_1 = names1_1.next(); !names1_1_1.done; names1_1_1 = names1_1.next()) {\n                    var name1 = names1_1_1.value;\n                    try {\n                        for (var names2_1 = tslib_1.__values(names2), names2_1_1 = names2_1.next(); !names2_1_1.done; names2_1_1 = names2_1.next()) {\n                            var name2 = names2_1_1.value;\n                            if (name1.intersects(name2)) {\n                                throw new schema_validation_1.SchemaValidationError(\"name classes of elements in both patterns of an interleave intersect (section 7.4): \" + name1 + \" and \" + name2);\n                            }\n                        }\n                    }\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                    finally {\n                        try {\n                            if (names2_1_1 && !names2_1_1.done && (_e = names2_1.return)) _e.call(names2_1);\n                        }\n                        finally { if (e_4) throw e_4.error; }\n                    }\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (names1_1_1 && !names1_1_1.done && (_f = names1_1.return)) _f.call(names1_1);\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n        }\n        // These tests combine the groupable(firstCt, secondCt) test together with\n        // the requirement that we return the content type which is the greatest.\n        var contentType;\n        if (firstCt === 1 /* COMPLEX */ && secondCt === 1 /* COMPLEX */) {\n            contentType = 1 /* COMPLEX */;\n        }\n        else if (firstCt === 0 /* EMPTY */) {\n            contentType = secondCt;\n        }\n        else {\n            contentType = (secondCt === 0 /* EMPTY */) ? firstCt : null;\n        }\n        return {\n            contentType: contentType,\n            occurringAttributes: firstAttributes.concat(secondAttributes),\n            occurringRefs: firstRefs.concat(secondRefs),\n            occurringTexts: firstTexts + secondTexts,\n        };\n        var e_3, _d, e_2, _c, e_5, _f, e_4, _e;\n    };\n    return GeneralChecker;\n}());\nvar cachedGrammar;\nfunction getGrammar() {\n    if (cachedGrammar === undefined) {\n        cachedGrammar = read_1.readTreeFromJSON(JSON.stringify(relaxng));\n    }\n    return cachedGrammar;\n}\n/**\n * A simplifier implemented in TypeScript (thus internal to Salve).\n */\nvar InternalSimplifier = /** @class */ (function (_super) {\n    tslib_1.__extends(InternalSimplifier, _super);\n    function InternalSimplifier(options) {\n        var _this = _super.call(this, options) || this;\n        if (options.timing) {\n            options.verbose = true;\n        }\n        return _this;\n    }\n    InternalSimplifier.prototype.parse = function (filePath) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var schema, validator, parser, message;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.options.resourceLoader.load(filePath)];\n                    case 1:\n                        schema = _a.sent();\n                        if (this.options.validate) {\n                            validator = new parser_1.Validator(getGrammar());\n                        }\n                        parser = new parser_1.BasicParser(sax.parser(true, { xmlns: true,\n                            strictEntities: true }), validator);\n                        parser.saxParser.write(schema);\n                        if (validator !== undefined) {\n                            if (validator.errors.length !== 0) {\n                                message = validator.errors.map(function (x) { return x.toString(); }).join(\"\\n\");\n                                throw new schema_validation_1.SchemaValidationError(message);\n                            }\n                        }\n                        return [2 /*return*/, parser.root];\n                }\n            });\n        });\n    };\n    InternalSimplifier.prototype.stepStart = function (no) {\n        this.stepTiming();\n        if (this.options.verbose) {\n            // tslint:disable-next-line:no-console\n            console.log(\"Simplification step \" + no);\n        }\n    };\n    InternalSimplifier.prototype.stepTiming = function () {\n        if (this.lastStepStart !== undefined) {\n            // tslint:disable-next-line:no-console\n            console.log(Date.now() - this.lastStepStart + \"ms\");\n            this.lastStepStart = undefined;\n        }\n        if (this.options.timing) {\n            this.lastStepStart = Date.now();\n        }\n    };\n    InternalSimplifier.prototype.simplify = function (schemaPath) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var startTime, warnings, tree, checkStart, checker;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.options.verbose) {\n                            // tslint:disable-next-line:no-console\n                            console.log(\"Simplifying...\");\n                            if (this.options.timing) {\n                                startTime = Date.now();\n                            }\n                        }\n                        warnings = [];\n                        if (!(this.options.simplifyTo >= 1)) return [3 /*break*/, 3];\n                        this.stepStart(1);\n                        return [4 /*yield*/, this.parse(schemaPath)];\n                    case 1:\n                        tree = _a.sent();\n                        return [4 /*yield*/, simplifier.step1(schemaPath, tree, this.parse.bind(this))];\n                    case 2:\n                        tree = _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        if (this.options.simplifyTo >= 4) {\n                            this.stepStart(4);\n                            tree = simplifier.step4(tree);\n                        }\n                        if (this.options.simplifyTo >= 6) {\n                            this.stepStart(6);\n                            tree = simplifier.step6(tree);\n                        }\n                        if (this.options.simplifyTo >= 9) {\n                            this.stepStart(9);\n                            tree = simplifier.step9(tree);\n                        }\n                        if (this.options.simplifyTo >= 10) {\n                            this.stepStart(10);\n                            tree = simplifier.step10(tree, this.options.validate);\n                        }\n                        if (this.options.simplifyTo >= 14) {\n                            this.stepStart(14);\n                            tree = simplifier.step14(tree);\n                        }\n                        if (this.options.simplifyTo >= 15) {\n                            this.stepStart(15);\n                            tree = simplifier.step15(tree);\n                        }\n                        if (this.options.simplifyTo >= 16) {\n                            this.stepStart(16);\n                            tree = simplifier.step16(tree);\n                        }\n                        if (this.options.simplifyTo >= 17) {\n                            this.stepStart(17);\n                            tree = simplifier.step17(tree);\n                        }\n                        if (this.options.simplifyTo >= 18) {\n                            this.stepStart(18);\n                            tree = simplifier.step18(tree);\n                            if (this.options.validate) {\n                                checkStart = void 0;\n                                if (this.options.timing) {\n                                    checkStart = Date.now();\n                                }\n                                checker = new GeneralChecker();\n                                checker.check(tree);\n                                warnings = checker.typeWarnings;\n                                if (this.options.timing) {\n                                    // tslint:disable-next-line:no-non-null-assertion no-console\n                                    console.log(\"Step 18 check delta: \" + (Date.now() - checkStart));\n                                }\n                            }\n                        }\n                        if (this.options.timing) {\n                            this.stepTiming(); // Output the last timing.\n                            // tslint:disable-next-line:no-non-null-assertion no-console\n                            console.log(\"Simplification delta: \" + (Date.now() - startTime));\n                        }\n                        return [2 /*return*/, { simplified: tree, warnings: warnings }];\n                }\n            });\n        });\n    };\n    InternalSimplifier.validates = true;\n    return InternalSimplifier;\n}(base_1.BaseSimplifier));\nexports.InternalSimplifier = InternalSimplifier;\nschema_simplification_1.registerSimplifier(\"internal\", InternalSimplifier);\n//# sourceMappingURL=internal.js.map","\"use strict\";\n/**\n * Errors that can be raised during parsing of types.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tools_1 = require(\"../tools\");\n/**\n * Records an error due to an incorrect parameter (``<param>``) value. This is\n * an error in the **schema** used to validate a document. Note that these\n * errors are *returned* by salve's internal code. They are not *thrown*.\n */\nvar ParamError = /** @class */ (function () {\n    /**\n     *\n     * @param message The actual error description.\n     */\n    function ParamError(message) {\n        this.message = message;\n    }\n    ParamError.prototype.toString = function () {\n        return this.message;\n    };\n    return ParamError;\n}());\nexports.ParamError = ParamError;\n/**\n * Records an error due to an incorrect value (``<value>``).  This is an error\n * in the **schema** used to validate a document. Note that these errors are\n * *returned* by salve's internal code. They are not *thrown*.\n */\nvar ValueError = /** @class */ (function () {\n    /**\n     * @param message The actual error description.\n     */\n    function ValueError(message) {\n        this.message = message;\n    }\n    ValueError.prototype.toString = function () {\n        return this.message;\n    };\n    return ValueError;\n}());\nexports.ValueError = ValueError;\n/**\n * Records the failure of parsing a parameter (``<param>``) value. Whereas\n * [[ParamError]] records each individual issue with a parameter's parsing, this\n * object is used to throw a single failure that collects all the individual\n * issues that were encountered.\n */\nvar ParameterParsingError = /** @class */ (function (_super) {\n    tslib_1.__extends(ParameterParsingError, _super);\n    /**\n     *\n     * @param location The location of the ``<param>`` in the schema.\n     *\n     * @param errors The errors encountered.\n     */\n    function ParameterParsingError(location, errors) {\n        var _this = _super.call(this) || this;\n        _this.errors = errors;\n        // This is crap to work around the fact that Error is a terribly badly\n        // designed class or prototype or whatever. Unfortunately the stack trace is\n        // off...\n        var msg = location + \": \" + errors.map(function (x) { return x.toString(); }).join(\"\\n\");\n        var err = new Error(msg);\n        _this.name = \"ParameterParsingError\";\n        _this.stack = err.stack;\n        _this.message = err.message;\n        tools_1.fixPrototype(_this, ParameterParsingError);\n        return _this;\n    }\n    return ParameterParsingError;\n}(Error));\nexports.ParameterParsingError = ParameterParsingError;\n/**\n * Records the failure of parsing a value (``<value>``). Whereas [[ValueError]]\n * records each individual issue with a value's parsing, this object is used to\n * throw a single failure that collects all the individual issues that were\n * encountered.\n */\nvar ValueValidationError = /** @class */ (function (_super) {\n    tslib_1.__extends(ValueValidationError, _super);\n    /**\n     * @param location The location of the ``<value>`` in the schema.\n     *\n     * @param errors The errors encountered.\n     */\n    function ValueValidationError(location, errors) {\n        var _this = _super.call(this) || this;\n        _this.errors = errors;\n        // This is crap to work around the fact that Error is a terribly badly\n        // designed class or prototype or whatever. Unfortunately the stack trace is\n        // off...\n        var msg = location + \": \" + errors.map(function (x) { return x.toString(); }).join(\"\\n\");\n        var err = new Error(msg);\n        _this.name = \"ValueValidationError\";\n        _this.stack = err.stack;\n        _this.message = err.message;\n        tools_1.fixPrototype(_this, ValueValidationError);\n        return _this;\n    }\n    return ValueValidationError;\n}(Error));\nexports.ValueValidationError = ValueValidationError;\n//  LocalWords:  MPL ParamError ParameterParsingError ValueValidationError\n//# sourceMappingURL=errors.js.map","\"use strict\";\n/**\n * Class for XML Expanded Names.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Immutable objects modeling XML Expanded Names.\n */\nvar EName = /** @class */ (function () {\n    /**\n     * @param ns The namespace URI.\n     *\n     * @param name The local name of the entity.\n     */\n    function EName(ns, name) {\n        this.ns = ns;\n        this.name = name;\n    }\n    /**\n     * @returns A string representing the expanded name.\n     */\n    EName.prototype.toString = function () {\n        return \"{\" + this.ns + \"}\" + this.name;\n    };\n    /**\n     * Compares two expanded names.\n     *\n     * @param other The other object to compare this object with.\n     *\n     * @returns  ``true`` if this object equals the other.\n     */\n    EName.prototype.equal = function (other) {\n        return this.ns === other.ns && this.name === other.name;\n    };\n    return EName;\n}());\nexports.EName = EName;\n//  LocalWords:  MPL ns\n//# sourceMappingURL=ename.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar datatypes = require(\"../../datatypes\");\nvar patterns_1 = require(\"../../patterns\");\nvar conversion_walker_1 = require(\"../conversion-walker\");\nvar parser_1 = require(\"../parser\");\nvar warnAboutTheseTypes = [\n    \"ENTITY\",\n    \"ENTITIES\",\n];\n/**\n * @private\n *\n * @param el Element to start the search from.\n *\n * @returns ``true`` if ``el`` is an attribute or is in an RNG\n * ``<attribute>`` element. ``false`` otherwise.\n */\nfunction inAttribute(el) {\n    var current = el;\n    while (current !== undefined) {\n        if (current.local === \"attribute\") {\n            return true;\n        }\n        current = current.parent;\n    }\n    return false;\n}\nfunction localName(value) {\n    var sep = value.indexOf(\":\");\n    return (sep === -1) ? value : value.slice(sep + 1);\n}\nexports.localName = localName;\nfunction fromQNameToURI(value, el) {\n    var attribute = inAttribute(el);\n    var parts = value.split(\":\");\n    if (parts.length === 1) { // If there is no prefix\n        if (attribute) { // Attribute in undefined namespace\n            return \"\";\n        }\n        // We are searching for the default namespace currently in effect.\n        parts = [\"\", value];\n    }\n    if (parts.length > 2) {\n        throw new Error(\"invalid name\");\n    }\n    if (parts[0] === \"\") {\n        // Yes, we return the empty string even if that what @ns is set to:\n        // there is no default namespace when @ns is set to ''.\n        return el.mustGetAttribute(\"ns\");\n    }\n    //\n    // We have a prefix, in which case @ns is useless. We have to get the\n    // namespace from the namespaces declared in the XML file that contains the\n    // schema. At this stage, @xmlns and @xmlns:prefix attributes should no longer\n    // be available available. So we just ask the element to use its internal\n    // namespace data to resolve the prefix.\n    //\n    // (Note: in fact in the current implementation of the simplifiers the xmlns\n    // nodes are still available. The XSLT simplifier *cannot* carry the namespace\n    // information we need without keeping those nodes around, or producing a\n    // workaround. The internal simplifier does the same thing as the XSLT\n    // simplifier for ease of debugging (we can expect the same results from\n    // both). However... in any case the information is available through the\n    // namespace information stored on the nodes. So...)\n    //\n    var uri = el.resolve(parts[0]);\n    if (uri === undefined) {\n        throw new Error(\"cannot resolve prefix: \" + parts[0]);\n    }\n    return uri;\n}\nexports.fromQNameToURI = fromQNameToURI;\n/**\n * This walker checks that the types used in the tree can be used, and does\n * special processing for ``QName`` and ``NOTATION``.\n */\nvar DatatypeProcessor = /** @class */ (function (_super) {\n    tslib_1.__extends(DatatypeProcessor, _super);\n    function DatatypeProcessor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * The warnings generated during the walk. This array is populated while\n         * walking.\n         */\n        _this.warnings = [];\n        return _this;\n    }\n    DatatypeProcessor.prototype.walk = function (el) {\n        var libname;\n        var type; // tslint:disable-line: no-reserved-keywords\n        var name = el.local;\n        switch (name) {\n            case \"value\": {\n                var value = el.text;\n                type = el.mustGetAttribute(\"type\");\n                libname = el.mustGetAttribute(\"datatypeLibrary\");\n                var ns = el.mustGetAttribute(\"ns\");\n                var lib = datatypes.registry.find(libname);\n                if (lib === undefined) {\n                    throw new datatypes.ValueValidationError(el.path, [new datatypes.ValueError(\"unknown datatype library: \" + libname)]);\n                }\n                var datatype = lib.types[type];\n                if (datatype === undefined) {\n                    throw new datatypes.ValueValidationError(el.path, [new datatypes.ValueError(\"unknown datatype \" + type + \" in \" + ((libname === \"\") ? \"default library\" : \"library \" + libname))]);\n                }\n                if (datatype.needsContext &&\n                    // tslint:disable-next-line: no-http-string\n                    !(libname === \"http://www.w3.org/2001/XMLSchema-datatypes\" &&\n                        (type === \"QName\" || type === \"NOTATION\"))) {\n                    throw new Error(\"datatype needs context but is not \" +\n                        \"QName or NOTATION form the XML Schema \" +\n                        \"library: don't know how to handle\");\n                }\n                if (datatype.needsContext) {\n                    // Change ns to the namespace we need.\n                    ns = fromQNameToURI(value, el);\n                    el.setAttribute(\"ns\", ns);\n                    value = localName(value);\n                    el.empty();\n                    el.appendChild(new parser_1.Text(value));\n                }\n                var valuePattern = new patterns_1.Value(el.path, value, type, libname, ns);\n                // Accessing the value will cause it to be validated.\n                // tslint:disable-next-line:no-unused-expression\n                valuePattern.value;\n                break;\n            }\n            case \"data\": {\n                // Except is necessarily last.\n                var hasExcept = (el.children.length !== 0 &&\n                    el.children[el.children.length - 1]\n                        .local === \"except\");\n                type = el.mustGetAttribute(\"type\");\n                libname = el.mustGetAttribute(\"datatypeLibrary\");\n                var lib = datatypes.registry.find(libname);\n                if (lib === undefined) {\n                    throw new datatypes.ValueValidationError(el.path, [new datatypes.ValueError(\"unknown datatype library: \" + libname)]);\n                }\n                if (lib.types[type] === undefined) {\n                    throw new datatypes.ValueValidationError(el.path, [new datatypes.ValueError(\"unknown datatype \" + type + \" in \" + ((libname === \"\") ? \"default library\" : \"library \" + libname))]);\n                }\n                var params = el.children.slice(0, hasExcept ? el.children.length - 1 : undefined).map(function (child) { return ({\n                    name: child.mustGetAttribute(\"name\"),\n                    value: child.text,\n                }); });\n                var data = new patterns_1.Data(el.path, type, libname, params);\n                // This causes the parameters to be checked. We do not need to do\n                // anything with the value.\n                // tslint:disable-next-line:no-unused-expression\n                data.params;\n                break;\n            }\n            default:\n        }\n        // tslint:disable-next-line: no-http-string\n        if (libname === \"http://www.w3.org/2001/XMLSchema-datatypes\" &&\n            // tslint:disable-next-line:no-non-null-assertion\n            warnAboutTheseTypes.indexOf(type) !== -1) {\n            this.warnings.push(\"WARNING: \" + el.path + \" uses the \" + type + \" type in library \" + libname);\n        }\n        this.walkChildren(el);\n    };\n    return DatatypeProcessor;\n}(conversion_walker_1.ConversionWalker));\nexports.DatatypeProcessor = DatatypeProcessor;\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar autoload_1 = require(\"./schema-simplifiers/autoload\");\nvar availableSimplifiers = Object.create(null);\nfunction getAvailableSimplifiers() {\n    return Object.keys(availableSimplifiers);\n}\nexports.getAvailableSimplifiers = getAvailableSimplifiers;\nfunction isAvailable(name) {\n    return availableSimplifiers[name] !== undefined;\n}\nexports.isAvailable = isAvailable;\nfunction registerSimplifier(name, ctor) {\n    availableSimplifiers[name] = ctor;\n}\nexports.registerSimplifier = registerSimplifier;\nfunction makeSimplifier(name, options) {\n    var ctor = availableSimplifiers[name];\n    if (ctor === undefined) {\n        throw new Error(\"unknown simplifier name: \" + name);\n    }\n    return new ctor(options);\n}\nexports.makeSimplifier = makeSimplifier;\nautoload_1.autoload();\n//# sourceMappingURL=schema-simplification.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This module contains constants common to both reading and writing schemas in\n * the JSON format internal to salve.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar patterns_1 = require(\"../patterns\");\n//\n// MODIFICATIONS TO THIS TABLE MUST BE REFLECTED IN ALL OTHER TABLES IN THIS\n// MODULE.\n//\nexports.codeToConstructor = [\n    Array,\n    patterns_1.Empty,\n    patterns_1.Data,\n    patterns_1.List,\n    patterns_1.Param,\n    patterns_1.Value,\n    patterns_1.NotAllowed,\n    patterns_1.Text,\n    patterns_1.Ref,\n    patterns_1.OneOrMore,\n    patterns_1.Choice,\n    patterns_1.Group,\n    patterns_1.Attribute,\n    patterns_1.Element,\n    patterns_1.Define,\n    patterns_1.Grammar,\n    // EName used to be in this slot. Yes, we cheat with a cast. salve will\n    // crash hard if this slot is accessed, which is what we want.\n    undefined,\n    patterns_1.Interleave,\n    patterns_1.Name,\n    patterns_1.NameChoice,\n    patterns_1.NsName,\n    patterns_1.AnyName,\n];\n//\n// MODIFICATIONS TO THIS MAP MUST BE REFLECTED IN ALL OTHER TABLES IN THIS\n// MODULE.\n//\nexports.nameToCode = Object.create(null);\nexports.nameToCode.Array = 0;\nexports.nameToCode.Empty = 1;\nexports.nameToCode.Data = 2;\nexports.nameToCode.List = 3;\nexports.nameToCode.Param = 4;\nexports.nameToCode.Value = 5;\nexports.nameToCode.NotAllowed = 6;\nexports.nameToCode.Text = 7;\nexports.nameToCode.Ref = 8;\nexports.nameToCode.OneOrMore = 9;\nexports.nameToCode.Choice = 10;\nexports.nameToCode.Group = 11;\nexports.nameToCode.Attribute = 12;\nexports.nameToCode.Element = 13;\nexports.nameToCode.Define = 14;\nexports.nameToCode.Grammar = 15;\n// Historical value.\n// nameToCode.EName = 16;\nexports.nameToCode.Interleave = 17;\nexports.nameToCode.Name = 18;\nexports.nameToCode.NameChoice = 19;\nexports.nameToCode.NsName = 20;\nexports.nameToCode.AnyName = 21;\n// This is a bit field\nexports.OPTION_NO_PATHS = 1;\n// var OPTION_WHATEVER = 2;\n// var OPTION_WHATEVER_PLUS_1 = 4;\n// etc...\n//# sourceMappingURL=common.js.map","\"use strict\";\n/**\n * This module contains data and utilities to work with the schema format that\n * salve uses natively.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tools_1 = require(\"../tools\");\nvar common_1 = require(\"./common\");\nvar OldFormatError = /** @class */ (function (_super) {\n    tslib_1.__extends(OldFormatError, _super);\n    function OldFormatError() {\n        var _this = _super.call(this, \"your schema file must be recreated with a newer \" +\n            \"version of salve-convert\") || this;\n        tools_1.fixPrototype(_this, OldFormatError);\n        return _this;\n    }\n    return OldFormatError;\n}(Error));\n/**\n * A class for walking the JSON object representing a schema.\n */\nvar V2JSONWalker = /** @class */ (function () {\n    /**\n     *\n     * @param options The options object from the file that contains the\n     * schema.\n     */\n    function V2JSONWalker(options) {\n        this.options = options;\n        // tslint:disable-next-line:no-bitwise\n        this.addPath = (this.options & common_1.OPTION_NO_PATHS) !== 0;\n    }\n    /**\n     * Walks a V2 representation of a JavaScript object.\n     *\n     * @param array The array representing the object.\n     *\n     * @throws {Error} If the object is malformed.\n     *\n     * @returns The return value of [[V2JSONWalker._processObject]].\n     */\n    V2JSONWalker.prototype.walkObject = function (array) {\n        var kind = array[0];\n        var ctor = common_1.codeToConstructor[kind];\n        if (ctor === undefined) {\n            if (array.length < 1) {\n                throw new Error(\"array too small to contain object\");\n            }\n            throw new Error(\"undefined type: \" + kind);\n        }\n        if (ctor === Array) {\n            throw new Error(\"trying to build array with walkObject\");\n        }\n        var args = array.slice(1);\n        if (args.length !== 0) {\n            this._transformArray(args);\n        }\n        if (this.addPath) {\n            args.unshift(\"\");\n        }\n        // We do not pass Array to this function.\n        return this._processObject(kind, ctor, args);\n    };\n    /**\n     * Processes an object. Derived classes will want to override this method to\n     * perform their work.\n     *\n     * @param kind The object \"kind\". A numeric code.\n     *\n     * @param ctor The object's constructor.\n     *\n     * @param args The arguments that should be passed to the constructor.\n     *\n     * @returns If the ``V2JSONWalker`` instance is meant to convert the JSON\n     * data, then this method should return an Object. If the ``V2JSONWalker``\n     * instance is meant to check the JSON data, then it should return\n     * ``undefined``.\n     */\n    V2JSONWalker.prototype._processObject = function (kind, ctor, args) {\n        return undefined; // Do nothing\n    };\n    V2JSONWalker.prototype._transformArray = function (arr) {\n        var limit = arr.length;\n        for (var elIx = 0; elIx < limit; elIx++) {\n            var el = arr[elIx];\n            if (el instanceof Array) {\n                if (el[0] !== 0) {\n                    arr[elIx] = this.walkObject(el);\n                }\n                else {\n                    el.shift(); // Drop the leading 0.\n                    this._transformArray(el);\n                }\n            }\n        }\n    };\n    return V2JSONWalker;\n}());\nfunction namedOnePatternFilter(args) {\n    // Same thing as for OneOrMore, but for these elements the array of patterns\n    // is at index 2 rather than index 1 because index 1 contains a name.\n    if (args[2].length !== 1) {\n        throw new Error(\"PatternOnePattern with an array of patterns that \" +\n            \"contains other than 1 pattern\");\n    }\n    return [args[0], args[1], args[2][0]];\n}\nfunction twoPatternFilter(args) {\n    if (args[1].length !== 2) {\n        throw new Error(\"PatternTwoPatterns with an array of patterns that \" +\n            \"contains other than 2 pattern\");\n    }\n    return [args[0], args[1][0], args[1][1]];\n}\nvar kindToArgFilter = [\n    undefined,\n    undefined,\n    // Data\n    function (args) {\n        if (args.length >= 4) {\n            // Parameters are represented as an array of strings in the file.\n            // Transform this array of strings into an array of objects.\n            var params = args[3];\n            if (params.length % 2 !== 0) {\n                throw new Error(\"parameter array length not a multiple of 2\");\n            }\n            // tslint:disable-next-line: prefer-array-literal\n            var newParams = new Array(params.length / 2);\n            var limit = params.length;\n            for (var i = 0; i < limit; i += 2) {\n                newParams[i / 2] = { name: params[i], value: params[i + 1] };\n            }\n            args[3] = newParams;\n        }\n        return args;\n    },\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    // OneOrMore\n    function (args) {\n        //\n        // In the file we have two arguments: the XML path, an array of length 1\n        // that contains the one subpattern.\n        //\n        // Here we ditch the array and replace it with its lone subpattern.\n        //\n        if (args[1].length !== 1) {\n            throw new Error(\"OneOrMore with an array of patterns that \" +\n                \"contains other than 1 pattern\");\n        }\n        return [args[0], args[1][0]];\n    },\n    twoPatternFilter,\n    twoPatternFilter,\n    namedOnePatternFilter,\n    namedOnePatternFilter,\n    namedOnePatternFilter,\n    undefined,\n    undefined,\n    twoPatternFilter,\n    undefined,\n    twoPatternFilter,\n    undefined,\n    undefined,\n];\n/**\n * A JSON walker that constructs a pattern tree as it walks the JSON object.\n *\n * @private\n */\nvar V2Constructor = /** @class */ (function (_super) {\n    tslib_1.__extends(V2Constructor, _super);\n    function V2Constructor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    V2Constructor.prototype._processObject = function (kind, ctor, args) {\n        var filter = kindToArgFilter[kind];\n        return new (ctor.bind.apply(ctor, tslib_1.__spread([void 0], (filter === undefined ? args : filter(args)))))();\n    };\n    return V2Constructor;\n}(V2JSONWalker));\n/**\n * Constructs a tree of patterns from the data structure produced by running\n * ``salve-convert`` on an RNG file.\n *\n * @param code The JSON representation (a string) or the deserialized JSON. **If\n * you pass an object, it will be mutated while producing the result.** So you\n * cannot pass the same object twice to this function. Note that if you are\n * calling this function on the same input repeatedly, you are probably \"doing\n * it wrong\". You should be caching the results rather than building multiple\n * identical trees.\n *\n * @throws {Error} When the version of the data is not supported.\n *\n * @returns The tree.\n */\nfunction readTreeFromJSON(code) {\n    var parsed = (typeof code === \"string\" ? JSON.parse(code) : code);\n    if (typeof parsed === \"object\" && parsed.v === undefined) {\n        throw new OldFormatError(); // version 0\n    }\n    var version = parsed.v, options = parsed.o, data = parsed.d;\n    if (version === 3) {\n        return new V2Constructor(options).walkObject(data);\n    }\n    throw new Error(\"unknown version: \" + version);\n}\nexports.readTreeFromJSON = readTreeFromJSON;\nexports.constructTree = readTreeFromJSON;\n//  LocalWords:  deserialized PatternTwoPatterns PatternOnePattern OneOrMore js\n//  LocalWords:  codeToConstructor nameToConstructor RNG subpattern JSON xsl\n//  LocalWords:  rng MPL\n//# sourceMappingURL=read.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","module.exports = require('events').EventEmitter;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// tslint:disable-next-line:no-typeof-undefined\nif (typeof fetch === \"undefined\") {\n    throw new Error(\"all resource loaders require fetch to be available\");\n}\nfunction makeResourceLoader() {\n    // tslint:disable-next-line:no-typeof-undefined\n    if (typeof window === \"undefined\") {\n        // tslint:disable-next-line:no-require-imports\n        var node = require(\"./resource-loaders/node\");\n        return new node.NodeResourceLoader();\n    }\n    // tslint:disable-next-line:no-require-imports\n    var fetch = require(\"./resource-loaders/fetch\");\n    return new fetch.FetchResourceLoader();\n}\nexports.makeResourceLoader = makeResourceLoader;\n//# sourceMappingURL=resource-loader.js.map","\"use strict\";\n/**\n * Walking parsed trees.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_1 = require(\"./parser\");\n/**\n * Base class for conversion walkers.\n */\nvar ConversionWalker = /** @class */ (function () {\n    function ConversionWalker() {\n    }\n    /**\n     * Walks an element's children.\n     *\n     * @param el The element whose children must be walked.\n     *\n     * @param startAt Index at which to start walking.\n     *\n     * @param endAt Index at which to end walking. If unspecified, go to the end\n     * of the children of ``el``.\n     */\n    ConversionWalker.prototype.walkChildren = function (el, startAt, endAt) {\n        if (startAt === void 0) { startAt = 0; }\n        var children = el.children;\n        var limit = (endAt === undefined) ? children.length :\n            Math.min(endAt, children.length);\n        if (limit < startAt) {\n            throw new Error(\"invalid parameters passed\");\n        }\n        for (var i = startAt; i < limit; ++i) {\n            var child = children[i];\n            if (child instanceof parser_1.Element) {\n                this.walk(child);\n            }\n        }\n    };\n    return ConversionWalker;\n}());\nexports.ConversionWalker = ConversionWalker;\n//  LocalWords:  MPL DefaultConversionWalker param includePaths NameChoice ns\n//  LocalWords:  datatypeLibrary params oneOrMore nsName RNG xmlns libname el\n//  LocalWords:  QName stringify\n//# sourceMappingURL=conversion-walker.js.map","/**\n * This module contains utilities used for converting Relax NG files to the\n * format required by salve.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n *\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar conversion_walker_1 = require(\"./conversion/conversion-walker\");\nexports.ConversionWalker = conversion_walker_1.ConversionWalker;\nvar convert_1 = require(\"./conversion/convert\");\nexports.convertRNGToPattern = convert_1.convertRNGToPattern;\nvar parser_1 = require(\"./conversion/parser\");\nexports.BasicParser = parser_1.BasicParser;\nexports.ConversionParser = parser_1.ConversionParser;\nexports.Element = parser_1.Element;\nexports.Found = parser_1.Found;\nexports.IncludeParser = parser_1.IncludeParser;\nexports.Node = parser_1.Node;\nexports.Text = parser_1.Text;\nvar resource_loader_1 = require(\"./conversion/resource-loader\");\nexports.makeResourceLoader = resource_loader_1.makeResourceLoader;\nvar serializer_1 = require(\"./conversion/serializer\");\nexports.serialize = serializer_1.serialize;\nvar schema_simplification_1 = require(\"./conversion/schema-simplification\");\nexports.getAvailableSimplifiers = schema_simplification_1.getAvailableSimplifiers;\nexports.makeSimplifier = schema_simplification_1.makeSimplifier;\nvar schema_validation_1 = require(\"./conversion/schema-validation\");\nexports.getAvailableValidators = schema_validation_1.getAvailableValidators;\nexports.makeValidator = schema_validation_1.makeValidator;\nexports.SchemaValidationError = schema_validation_1.SchemaValidationError;\n//# sourceMappingURL=conversion.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Pattern and walker for RNG's ``notAllowed`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar base_1 = require(\"./base\");\n/**\n * Pattern for ``<notAllowed/>``.\n */\nvar NotAllowed = /** @class */ (function (_super) {\n    tslib_1.__extends(NotAllowed, _super);\n    function NotAllowed() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NotAllowed.prototype.newWalker = function () {\n        // tslint:disable-next-line:no-use-before-declare\n        return singleton;\n    };\n    return NotAllowed;\n}(base_1.Pattern));\nexports.NotAllowed = NotAllowed;\n/**\n * Walker for [[NotAllowed]];\n */\nvar NotAllowedWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(NotAllowedWalker, _super);\n    /**\n     * @param el The pattern for which this walker was created.\n     */\n    function NotAllowedWalker(el) {\n        var _this = _super.call(this) || this;\n        _this.el = el;\n        _this.canEnd = true;\n        _this.canEndAttribute = true;\n        return _this;\n    }\n    // Since NotAllowedWalker is a singleton, the cloning operation just\n    // returns the original walker.\n    NotAllowedWalker.prototype.clone = function () {\n        return this;\n    };\n    // Since NotAllowedWalker is a singleton, the cloning operation just\n    // returns the original walker.\n    NotAllowedWalker.prototype._clone = function () {\n        return this;\n    };\n    NotAllowedWalker.prototype.possible = function () {\n        return new Set();\n    };\n    NotAllowedWalker.prototype.possibleAttributes = function () {\n        return new Set();\n    };\n    NotAllowedWalker.prototype.fireEvent = function () {\n        return new base_1.InternalFireEventResult(false); // we never match!\n    };\n    return NotAllowedWalker;\n}(base_1.InternalWalker));\nexports.NotAllowedWalker = NotAllowedWalker;\nvar singleton = new NotAllowedWalker(new NotAllowed(\"FAKE ELEMENT\"));\n//  LocalWords:  RNG's MPL possibleCached\n//# sourceMappingURL=not_allowed.js.map","\"use strict\";\n/**\n * Collection of constants that model the way XML refers to various\n * characters and groups of characters. This module is essentially private to\n * salve.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// The constants here are just representations in JavaScript of the character\n// classes that the XML standard uses. So we don't document them.  See the XML\n// standard and read salve's code to figure out what they are for.\n/* tslint:disable max-line-length */\nvar xmlBaseChar = \"A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF\\u0100-\\u0131\\u0134-\\u013E\\u0141-\\u0148\\u014A-\\u017E\\u0180-\\u01C3\\u01CD-\\u01F0\\u01F4-\\u01F5\\u01FA-\\u0217\\u0250-\\u02A8\\u02BB-\\u02C1\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D6\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2-\\u03F3\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E-\\u0481\\u0490-\\u04C4\\u04C7-\\u04C8\\u04CB-\\u04CC\\u04D0-\\u04EB\\u04EE-\\u04F5\\u04F8-\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0586\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0641-\\u064A\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D3\\u06D5\\u06E5-\\u06E6\\u0905-\\u0939\\u093D\\u0958-\\u0961\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AE0\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B36-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CDE\\u0CE0-\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D60-\\u0D61\\u0E01-\\u0E2E\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E45\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EAE\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0F40-\\u0F47\\u0F49-\\u0F69\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100\\u1102-\\u1103\\u1105-\\u1107\\u1109\\u110B-\\u110C\\u110E-\\u1112\\u113C\\u113E\\u1140\\u114C\\u114E\\u1150\\u1154-\\u1155\\u1159\\u115F-\\u1161\\u1163\\u1165\\u1167\\u1169\\u116D-\\u116E\\u1172-\\u1173\\u1175\\u119E\\u11A8\\u11AB\\u11AE-\\u11AF\\u11B7-\\u11B8\\u11BA\\u11BC-\\u11C2\\u11EB\\u11F0\\u11F9\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2126\\u212A-\\u212B\\u212E\\u2180-\\u2182\\u3041-\\u3094\\u30A1-\\u30FA\\u3105-\\u312C\\uAC00-\\uD7A3\";\nvar xmlIdeographic = \"\\u4E00-\\u9FA5\\u3007\\u3021-\\u3029\";\nexports.xmlLetter = xmlBaseChar + xmlIdeographic;\nvar xmlDigit = \"\\u0030-\\u0039\\u0660-\\u0669\\u06F0-\\u06F9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE7-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\";\nvar xmlCombiningChar = \"\\u0300-\\u0345\\u0360-\\u0361\\u0483-\\u0486\\u0591-\\u05A1\\u05A3-\\u05B9\\u05BB-\\u05BD\\u05BF\\u05C1-\\u05C2\\u05C4\\u064B-\\u0652\\u0670\\u06D6-\\u06DC\\u06DD-\\u06DF\\u06E0-\\u06E4\\u06E7-\\u06E8\\u06EA-\\u06ED\\u0901-\\u0903\\u093C\\u093E-\\u094C\\u094D\\u0951-\\u0954\\u0962-\\u0963\\u0981-\\u0983\\u09BC\\u09BE\\u09BF\\u09C0-\\u09C4\\u09C7-\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2-\\u09E3\\u0A02\\u0A3C\\u0A3E\\u0A3F\\u0A40-\\u0A42\\u0A47-\\u0A48\\u0A4B-\\u0A4D\\u0A70-\\u0A71\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B43\\u0B47-\\u0B48\\u0B4B-\\u0B4D\\u0B56-\\u0B57\\u0B82-\\u0B83\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C01-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55-\\u0C56\\u0C82-\\u0C83\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5-\\u0CD6\\u0D02-\\u0D03\\u0D3E-\\u0D43\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB-\\u0EBC\\u0EC8-\\u0ECD\\u0F18-\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86-\\u0F8B\\u0F90-\\u0F95\\u0F97\\u0F99-\\u0FAD\\u0FB1-\\u0FB7\\u0FB9\\u20D0-\\u20DC\\u20E1\\u302A-\\u302F\\u3099\\u309A\";\nvar xmlExtender = \"\\u00B7\\u02D0\\u02D1\\u0387\\u0640\\u0E46\\u0EC6\\u3005\\u3031-\\u3035\\u309D-\\u309E\\u30FC-\\u30FE\";\n// It is important to have the dash first to avoid issues with ranges in\n// regexps. Also, the following contain periods. However, they are doing to\n// appear inside square bracket in the regexps.\nexports.xmlNameChar = \"-\" + exports.xmlLetter + xmlDigit + \"._:\" + xmlCombiningChar + xmlExtender;\nvar xmlName = \"[\" + exports.xmlLetter + \"_:](?:[\" + exports.xmlNameChar + \"])*\";\nexports.xmlNameRe = new RegExp(\"^\\\\s*\" + xmlName + \"\\\\s*$\");\nexports.xmlNcname = \"[\" + exports.xmlLetter + \"_](?:[-\" + exports.xmlLetter + xmlDigit + \"._\" + xmlCombiningChar +\n    (xmlExtender + \"])*\");\nexports.xmlNcnameRe = new RegExp(\"^\\\\s*\" + exports.xmlNcname + \"\\\\s*$\");\n//  LocalWords:  MPL\n//# sourceMappingURL=xmlcharacters.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Pattern and walker for RNG's ``empty`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar base_1 = require(\"./base\");\n/**\n * Pattern for ``<empty/>``.\n */\nvar Empty = /** @class */ (function (_super) {\n    tslib_1.__extends(Empty, _super);\n    function Empty() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Empty.prototype.hasEmptyPattern = function () {\n        return true;\n    };\n    Empty.prototype.newWalker = function () {\n        // tslint:disable-next-line:no-use-before-declare\n        return singleton;\n    };\n    return Empty;\n}(base_1.Pattern));\nexports.Empty = Empty;\n/**\n * Walker for [[Empty]].\n *\n * @param el The pattern for which this walker was created.\n *\n * @param resolver Ignored by this walker.\n */\nvar EmptyWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(EmptyWalker, _super);\n    function EmptyWalker(el) {\n        var _this = _super.call(this) || this;\n        _this.el = el;\n        _this.canEnd = true;\n        _this.canEndAttribute = true;\n        return _this;\n    }\n    // Since the Empty walker is a singleton, the cloning operation just\n    // returns the original walker.\n    EmptyWalker.prototype.clone = function () {\n        return this;\n    };\n    // Since the Empty walker is a singleton, the cloning operation just\n    // returns the original walker.\n    EmptyWalker.prototype._clone = function () {\n        return this;\n    };\n    EmptyWalker.prototype.possible = function () {\n        return new Set();\n    };\n    EmptyWalker.prototype.possibleAttributes = function () {\n        return new Set();\n    };\n    EmptyWalker.prototype.fireEvent = function (name, params) {\n        return new base_1.InternalFireEventResult((name === \"text\") &&\n            !/\\S/.test(params[0]));\n    };\n    return EmptyWalker;\n}(base_1.InternalWalker));\nvar singleton = new EmptyWalker(new Empty(\"FAKE ELEMENT\"));\n//  LocalWords:  RNG's MPL possibleCached\n//# sourceMappingURL=empty.js.map","\"use strict\";\n/**\n * This module contains classes for walking a parsed tree.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar conversion_1 = require(\"../conversion\");\nvar common_1 = require(\"./common\");\n/**\n * [[ConversionWalker]] for the default version generated by salve.\n */\nvar DefaultConversionWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(DefaultConversionWalker, _super);\n    /**\n     * @param version The version of the format to produce.\n     *\n     * @param includePaths Whether to include paths in the output.\n     *\n     * @param verbose Whether to output verbosely.\n     *\n     * @throws {Error} If the version requested in ``version`` is not supported.\n     */\n    function DefaultConversionWalker(version, includePaths, verbose) {\n        if (includePaths === void 0) { includePaths = false; }\n        if (verbose === void 0) { verbose = false; }\n        var _this = _super.call(this) || this;\n        _this.includePaths = includePaths;\n        _this.verbose = verbose;\n        _this.inNameClass = false;\n        _this._output = \"\";\n        _this._firstItem = true;\n        if (version !== 3) {\n            throw new Error(\"DefaultConversionWalker only supports version 3\");\n        }\n        _this.arrayStart = _this.verbose ? \"\\\"Array\\\"\" : 0;\n        return _this;\n    }\n    Object.defineProperty(DefaultConversionWalker.prototype, \"output\", {\n        /** The output of the conversion. */\n        get: function () {\n            return this._output;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the walker to a blank state. This allows using the same walker for\n     * multiple walks.\n     */\n    DefaultConversionWalker.prototype.reset = function () {\n        this._output = \"\";\n        this._firstItem = true;\n    };\n    /**\n     * Opens a construct in the output.\n     *\n     * @param open The opening string.\n     *\n     * @param close The closing string. This will be used to check that the\n     * construct is closed properly.\n     */\n    DefaultConversionWalker.prototype.openConstruct = function (open) {\n        this._firstItem = true;\n        this._output += open;\n    };\n    /**\n     * Closes a construct in the output.\n     *\n     * @param close The closing string. This will be used to check that the\n     * construct is closed properly.\n     *\n     * @throws {Error} If the ``close`` parameter does not match what was passed\n     * to [[openConstruct]].\n     */\n    DefaultConversionWalker.prototype.closeConstruct = function (close) {\n        this._output += close;\n    };\n    /**\n     * Indicates that a new item is about to start in the current construct.\n     * Outputs a separator (\",\") if this is not the first item in the construct.\n     */\n    DefaultConversionWalker.prototype.newItem = function () {\n        if (this._firstItem) {\n            this._firstItem = false;\n            return;\n        }\n        this._output += \",\";\n    };\n    /**\n     * Outputs an item in the current construct. Outputs a separator (\",\") if this\n     * is not the first item in the construct.\n     *\n     * @param item The item to output.\n     */\n    DefaultConversionWalker.prototype.outputItem = function (item) {\n        this.newItem();\n        this._output += (typeof item === \"number\") ? item.toString() : item;\n    };\n    /**\n     * Outputs a string in the current construct. Outputs a separator (\",\") if\n     * this is not the first item in the construct. The double-quotes in the\n     * string will be escaped and the string will be surrounded by double quotes\n     * in the output.\n     *\n     * @param thing The string to output.\n     */\n    DefaultConversionWalker.prototype.outputAsString = function (thing) {\n        this.newItem();\n        var text = (thing instanceof conversion_1.Node ? thing.text : thing)\n            .replace(/([\"\\\\])/g, \"\\\\$1\");\n        this._output += \"\\\"\" + text + \"\\\"\";\n    };\n    /**\n     * Open an array in the output.\n     */\n    DefaultConversionWalker.prototype.openArray = function () {\n        this.openConstruct(\"[\");\n        this.outputItem(this.arrayStart);\n    };\n    // tslint:disable-next-line: max-func-body-length\n    DefaultConversionWalker.prototype.walk = function (el) {\n        var elName = el.local;\n        switch (elName) {\n            case \"start\":\n                this.walkChildren(el);\n                break;\n            case \"param\":\n                this.outputAsString(el.mustGetAttribute(\"name\"));\n                this.outputAsString(el.children[0]);\n                break;\n            case \"grammar\": {\n                this.openConstruct(\"{\");\n                this.outputItem(\"\\\"v\\\":3,\\\"o\\\":\" + (this.includePaths ? 0 :\n                    common_1.OPTION_NO_PATHS) + \",\\\"d\\\":\");\n                // tslint:disable:no-string-literal\n                var ctor = common_1.nameToCode[\"Grammar\"];\n                if (ctor === undefined) {\n                    throw new Error(\"can't find constructor for Grammar\");\n                }\n                this.openConstruct(\"[\");\n                if (this.verbose) {\n                    this.outputAsString(\"Grammar\");\n                }\n                else {\n                    this.outputItem(ctor);\n                }\n                if (this.includePaths) {\n                    this.outputAsString(el.path);\n                }\n                this.walk(el.children[0]);\n                this.newItem();\n                this.openArray();\n                this.walkChildren(el, 1);\n                this.closeConstruct(\"]\");\n                this.closeConstruct(\"]\");\n                this.closeConstruct(\"}\");\n                break;\n            }\n            default: {\n                var capitalized = el.local.charAt(0).toUpperCase() +\n                    el.local.slice(1);\n                var skipToChildren = (capitalized === \"Except\");\n                if (this.inNameClass) {\n                    // When we are in an name class, some elements are converted\n                    // differently from when outside it. For instance, choice can appear\n                    // as a general pattern to encode a choice between two elements or\n                    // two attributes, and it can be used inside a name class to encode a\n                    // choice between two names. We convert such elements to a different\n                    // class.\n                    if (capitalized === \"Choice\") {\n                        capitalized = \"NameChoice\";\n                    }\n                }\n                // We do not output anything for this element itself but instead go\n                // straight to its children.\n                if (skipToChildren) {\n                    this.walkChildren(el);\n                    return;\n                }\n                this.newItem();\n                var ctor = common_1.nameToCode[capitalized];\n                if (ctor === undefined) {\n                    throw new Error(\"can't find constructor for \" + capitalized);\n                }\n                this.openConstruct(\"[\");\n                if (this.verbose) {\n                    this.outputAsString(capitalized);\n                }\n                else {\n                    this.outputItem(ctor);\n                }\n                if (this.includePaths) {\n                    this.outputAsString(el.path);\n                }\n                switch (elName) {\n                    case \"ref\": {\n                        var name_1 = el.mustGetAttribute(\"name\");\n                        if (/^\\d+$/.test(name_1)) {\n                            this.outputItem(parseInt(name_1));\n                        }\n                        else {\n                            this.outputAsString(name_1);\n                        }\n                        break;\n                    }\n                    case \"define\": {\n                        var name_2 = el.mustGetAttribute(\"name\");\n                        if (/^\\d+$/.test(name_2)) {\n                            this.outputItem(parseInt(name_2));\n                        }\n                        else {\n                            this.outputAsString(name_2);\n                        }\n                        this.newItem();\n                        this.openArray();\n                        this.walkChildren(el);\n                        this.closeConstruct(\"]\");\n                        break;\n                    }\n                    case \"value\": {\n                        // Output a variable number of items.\n                        // Suppose item 0 is called it0 and so forth. Then:\n                        //\n                        // Number of items  value  type    datatypeLibrary  ns\n                        // 1                it0    \"token\" \"\"               \"\"\n                        // 2                it0     it1    \"\"               \"\"\n                        // 3                it0     it1    it2              \"\"\n                        // 4                it0     it1    it2              it3\n                        //\n                        this.outputAsString(el);\n                        var typeAttr = el.mustGetAttribute(\"type\");\n                        var datatypeLibraryAttr = el.mustGetAttribute(\"datatypeLibrary\");\n                        var nsAttr = el.mustGetAttribute(\"ns\");\n                        if (typeAttr !== \"token\" || datatypeLibraryAttr !== \"\" ||\n                            nsAttr !== \"\") {\n                            this.outputAsString(typeAttr);\n                            if (datatypeLibraryAttr !== \"\" || nsAttr !== \"\") {\n                                this.outputAsString(datatypeLibraryAttr);\n                                // No value === empty string.\n                                if (nsAttr !== \"\") {\n                                    this.outputAsString(nsAttr);\n                                }\n                            }\n                        }\n                        break;\n                    }\n                    case \"data\": {\n                        // Output a variable number of items.\n                        // Suppose item 0 is called it0 and so forth. Then:\n                        //\n                        // Number of items  type    datatypeLibrary params except\n                        // 0                \"token\" \"\"              {}     undefined\n                        // 1                it0     \"\"              {}     undefined\n                        // 2                it0     it1             {}     undefined\n                        // 3                it0     it1             it2    undefined\n                        // 4                it0     it1             it2    it3\n                        //\n                        // Parameters are necessarily first among the children.\n                        var hasParams = (el.children.length !== 0 &&\n                            (el.children[0].local === \"param\"));\n                        // Except is necessarily last.\n                        var hasExcept = (el.children.length !== 0 &&\n                            el.children[el.children.length - 1].local ===\n                                \"except\");\n                        var typeAttr = el.mustGetAttribute(\"type\");\n                        var datatypeLibraryAttr = el.mustGetAttribute(\"datatypeLibrary\");\n                        if (typeAttr !== \"token\" || datatypeLibraryAttr !== \"\" ||\n                            hasParams || hasExcept) {\n                            this.outputAsString(typeAttr);\n                            if (datatypeLibraryAttr !== \"\" || hasParams || hasExcept) {\n                                this.outputAsString(datatypeLibraryAttr);\n                                if (hasParams || hasExcept) {\n                                    this.newItem();\n                                    this.openArray();\n                                    if (hasParams) {\n                                        this.walkChildren(el, 0, hasExcept ? el.children.length - 1 :\n                                            undefined);\n                                    }\n                                    this.closeConstruct(\"]\");\n                                    if (hasExcept) {\n                                        this.walk(el.children[el.children.length - 1]);\n                                    }\n                                }\n                            }\n                        }\n                        break;\n                    }\n                    case \"group\":\n                    case \"interleave\":\n                    case \"choice\":\n                    case \"oneOrMore\":\n                        this.newItem();\n                        this.openArray();\n                        this.walkChildren(el);\n                        this.closeConstruct(\"]\");\n                        break;\n                    case \"element\":\n                    case \"attribute\":\n                        // The first element of `<element>` or `<attribute>` is necessarily\n                        // a name class. Note that there is no need to worry about recursion\n                        // since it is not possible to get here recursively from the\n                        // `this.walk` call that follows. (A name class cannot contain\n                        // `<element>` or `<attribute>`.\n                        this.inNameClass = true;\n                        this.walk(el.children[0]);\n                        this.inNameClass = false;\n                        this.newItem();\n                        this.openArray();\n                        this.walkChildren(el, 1);\n                        this.closeConstruct(\"]\");\n                        break;\n                    case \"name\":\n                        this.outputAsString(el.mustGetAttribute(\"ns\"));\n                        this.outputAsString(el);\n                        break;\n                    case \"nsName\":\n                        this.outputAsString(el.mustGetAttribute(\"ns\"));\n                        this.walkChildren(el);\n                        break;\n                    default:\n                        this.walkChildren(el);\n                }\n                this.closeConstruct(\"]\");\n            }\n        }\n    };\n    return DefaultConversionWalker;\n}(conversion_1.ConversionWalker));\nfunction gatherNamed(el, all) {\n    try {\n        for (var _a = tslib_1.__values(el.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            if (!(child instanceof conversion_1.Element)) {\n                continue;\n            }\n            if (child.local === \"define\" || child.local === \"ref\") {\n                var name_3 = child.mustGetAttribute(\"name\");\n                var els = all.get(name_3);\n                if (els === undefined) {\n                    els = [];\n                    all.set(name_3, els);\n                }\n                els.push(child);\n            }\n            gatherNamed(child, all);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    var e_1, _c;\n}\n/**\n * Rename the ``ref`` and ``define`` elements in a schema. The modifications are\n * done in-place. The new names are numbers. Using numbers saves some characters\n * because numbers can be put as-is in JSON (whereas strings require\n * delimiters). Lower numbers are assigned to the most frequent names, so as to\n * optimize for lower final JSON size.\n *\n * @param tree The schema to modify, in the form of a tree of elements.\n */\nfunction renameRefsDefines(tree) {\n    var names = new Map();\n    gatherNamed(tree, names);\n    // Now assign new names with shorter new names being assigned to those\n    // original names that are most frequent.\n    var sorted = Array.from(names.entries());\n    // Yes, we want to sort in reverse order of frequency, highest first.\n    sorted.sort(function (_a, _b) {\n        var _c = tslib_1.__read(_a, 2), _keyA = _c[0], elsA = _c[1];\n        var _d = tslib_1.__read(_b, 2), _keyB = _d[0], elsB = _d[1];\n        return elsB.length - elsA.length;\n    });\n    var id = 1;\n    sorted.forEach(function (_a) {\n        var _b = tslib_1.__read(_a, 2), _ = _b[0], els = _b[1];\n        var strId = String(id++);\n        try {\n            for (var els_1 = tslib_1.__values(els), els_1_1 = els_1.next(); !els_1_1.done; els_1_1 = els_1.next()) {\n                var el = els_1_1.value;\n                el.setAttribute(\"name\", strId);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (els_1_1 && !els_1_1.done && (_c = els_1.return)) _c.call(els_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var e_2, _c;\n    });\n}\nexports.renameRefsDefines = renameRefsDefines;\nfunction writeTreeToJSON(tree, formatVersion, includePaths, verbose) {\n    if (includePaths === void 0) { includePaths = false; }\n    if (verbose === void 0) { verbose = false; }\n    var walker = new DefaultConversionWalker(formatVersion, includePaths, verbose);\n    walker.walk(tree);\n    return walker.output;\n}\nexports.writeTreeToJSON = writeTreeToJSON;\n//# sourceMappingURL=write.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Serialization support for trees produced by the {@link\n * module:conversion/parser parser} module.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2013, 2014 Mangalam Research Center for Buddhist Languages\n */\nvar parser_1 = require(\"./parser\");\n/**\n * Serialize a tree previously produced by [[\"conversion/parser\".Parser]].\n *\n * @param tree The tree to serialize.\n *\n * @param options Options specifying how to perform the serialization.\n *\n * @returns The serialized tree.\n */\nfunction serialize(tree, options) {\n    if (options === void 0) { options = {}; }\n    var normalized = {\n        prettyPrint: options.prettyPrint === true,\n    };\n    var out = \"<?xml version=\\\"1.0\\\"?>\\n\" + _serialize(false, \"\", tree, normalized);\n    if (out[out.length - 1] !== \"\\n\") {\n        out += \"\\n\";\n    }\n    return out;\n}\nexports.serialize = serialize;\n/**\n * Escape characters that cannot be represented literally in XML.\n *\n * @param text The text to escape.\n *\n * @param isAttr Whether the text is part of an attribute.\n *\n * @returns The escaped text.\n */\nfunction escape(text, isAttr) {\n    // Even though the > escape is not *mandatory* in all cases, we still do it\n    // everywhere.\n    var ret = text.replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\");\n    if (isAttr) {\n        ret = ret.replace(/\"/g, \"&quot;\");\n    }\n    return ret;\n}\n/**\n * Serialize an element and its children, recursively.\n *\n * @param mixed Whether or not the element being converted is in mixed contents.\n *\n * @param curIndent The current indentation. This is represented as a string of\n * white spaces.\n *\n * @param el The element to serialize.\n *\n * @param options Options specifying how to perform the serialization.\n *\n * @returns The serialization.\n */\nfunction _serialize(mixed, curIndent, el, options) {\n    var buf = \"\";\n    buf += curIndent + \"<\" + el.local;\n    var attrs = el.getRawAttributes();\n    var names = Object.keys(attrs);\n    names.sort();\n    try {\n        for (var names_1 = tslib_1.__values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {\n            var name_1 = names_1_1.value;\n            buf += \" \" + name_1 + \"=\\\"\" + escape(el.mustGetAttribute(name_1), true) + \"\\\"\";\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    if (el.children.length === 0) {\n        buf += \"/>\";\n    }\n    else {\n        var childrenMixed = false;\n        try {\n            for (var _b = tslib_1.__values(el.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child instanceof parser_1.Text) {\n                    childrenMixed = true;\n                    break;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_d = _b.return)) _d.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        buf += \">\";\n        if (options.prettyPrint && !childrenMixed) {\n            buf += \"\\n\";\n        }\n        var childIndent = options.prettyPrint ? curIndent + \"  \" : \"\";\n        try {\n            for (var _e = tslib_1.__values(el.children), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var child = _f.value;\n                buf += (child instanceof parser_1.Text) ?\n                    escape(child.text, false) :\n                    _serialize(childrenMixed, childIndent, child, options);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_f && !_f.done && (_g = _e.return)) _g.call(_e);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (!childrenMixed) {\n            buf += curIndent;\n        }\n        buf += \"</\" + el.local + \">\";\n    }\n    if (options.prettyPrint && !mixed) {\n        buf += \"\\n\";\n    }\n    return buf;\n    var e_1, _a, e_2, _d, e_3, _g;\n}\n//# sourceMappingURL=serializer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = require(\"./common\");\nvar BaseSimplifier = /** @class */ (function () {\n    function BaseSimplifier(options) {\n        this.options = options;\n        if (options.timing) {\n            options.verbose = true;\n        }\n        if (options.validate &&\n            !this.constructor.validates) {\n            throw new Error(\"requested validation on a simplifier that does not validate\");\n        }\n    }\n    BaseSimplifier.prototype.processDatatypes = function (tree) {\n        var processor = new common_1.DatatypeProcessor();\n        processor.walk(tree);\n        return processor.warnings;\n    };\n    return BaseSimplifier;\n}());\nexports.BaseSimplifier = BaseSimplifier;\n//# sourceMappingURL=base.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Simplification step 18.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2013, 2014 Mangalam Research Center for Buddhist Languages\n */\nvar parser_1 = require(\"../parser\");\n// These are elements that cannot contain empty.\nvar skip = new Set([\"name\", \"anyName\", \"nsName\", \"param\", \"empty\",\n    \"text\", \"value\", \"notAllowed\", \"ref\"]);\nfunction groupHandler(el, firstEmpty, secondEmpty) {\n    if (firstEmpty && secondEmpty) {\n        // A group (or interleave) with two empty elements is replaced with empty.\n        el.replaceWith(parser_1.Element.makeElement(\"empty\"));\n    }\n    else {\n        // A group (or interleave) with only one empty element is replaced with\n        // the non-empty one.\n        el.replaceWith(el.children[firstEmpty ? 1 : 0]);\n    }\n}\nvar handlers = {\n    choice: function (el, firstEmpty, secondEmpty) {\n        if (secondEmpty) {\n            if (!firstEmpty) {\n                // If a choice has empty in the 2nd position, the children are\n                // swapped.\n                var tmp = el.children[0];\n                el.children[0] = el.children[1];\n                el.children[1] = tmp;\n            }\n            else {\n                // A choice with two empty elements is replaced with empty.\n                el.replaceWith(parser_1.Element.makeElement(\"empty\"));\n            }\n        }\n    },\n    group: groupHandler,\n    interleave: groupHandler,\n    oneOrMore: function (el) {\n        // A oneOrMore with an empty element is replaced with empty. (This won't\n        // be called if there are no empty elements in the oneOrMore so we don't\n        // test here.)\n        el.replaceWith(parser_1.Element.makeElement(\"empty\"));\n    },\n};\nfunction walk(el) {\n    try {\n        for (var _a = tslib_1.__values(el.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            if (child instanceof parser_1.Element && !skip.has(child.local)) {\n                walk(child);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    var handler = handlers[el.local];\n    if (handler === undefined) {\n        return;\n    }\n    var firstEmpty = el.children[0].local === \"empty\";\n    var second = el.children[1];\n    var secondEmpty = (second !== undefined && second.local === \"empty\");\n    if (!(firstEmpty || secondEmpty)) {\n        return;\n    }\n    handler(el, firstEmpty, secondEmpty);\n    var e_1, _c;\n}\n/**\n * Implements step 18 of the XSL pipeline. Namely:\n *\n * - All ``group``, ``interleave`` and ``choice`` elements with two ``empty``\n *   children are replaced with ``empty``.\n *\n * - All ``group`` and ``interleave`` elements with one ``empty`` child\n *   are transformed into their other child.\n *\n * - All ``choice`` elements with ``empty`` as the second child have their\n *   children swapped.\n *\n * - All ``oneOrMore`` elements with an ``empty`` child are replaced with\n *   ``empty``.\n *\n * These transformations are repeated until they no longer modify the tree. (The\n * way we apply the transformations obviates the need to repeat them.)\n *\n * Note that none of the transformations above remove ``ref`` elements from the\n * schema. So it is not necessary to check for unreferenced ``define``\n * elements. (To ascertain that this is the case, you need to take into account\n * the previous transformations. For instance, ``oneOrMore`` by this stage has\n * only one possible child so replacing ``oneOrMore`` with ``empty`` if it has\n * an ``empty`` child **cannot** remove a ``ref`` element from the tree. Similar\n * reasoning applies to the other transformations.)\n *\n * @param tree The tree to process. It is modified in-place.\n *\n * @returns The new root of the tree.\n */\nfunction step18(tree) {\n    walk(tree);\n    return tree;\n}\nexports.step18 = step18;\n//  LocalWords:  XSL oneOrMore\n//# sourceMappingURL=step18.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Simplification step 17.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2013, 2014 Mangalam Research Center for Buddhist Languages\n */\nvar parser_1 = require(\"../parser\");\nvar util_1 = require(\"./util\");\n// These are elements that cannot contain notAllowed and cannot contain\n// references.\nvar skip = new Set([\"name\", \"anyName\", \"nsName\", \"param\", \"empty\",\n    \"text\", \"value\", \"notAllowed\", \"ref\"]);\nfunction walk(el, refs) {\n    var local = el.local;\n    try {\n        // Since we walk the children first, all the transformations that pertain to\n        // the children are applied before we deal with the parent, and there should\n        // not be any need to process the tree multiple times.\n        for (var _a = tslib_1.__values(el.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            if (!(child instanceof parser_1.Element)) {\n                continue;\n            }\n            // Skip those elements that cannot contain notAllowed.\n            if (skip.has(child.local)) {\n                continue;\n            }\n            walk(child, refs);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    // Elements may be removed in the above loop.\n    if (el.children.length === 0) {\n        return;\n    }\n    var firstNA = el.children[0].local === \"notAllowed\";\n    var second = el.children[1];\n    var secondNA = second !== undefined && second.local === \"notAllowed\";\n    if (firstNA || secondNA) {\n        // tslint:disable-next-line:no-non-null-assertion\n        var parent_1 = el.parent;\n        // We used to have a map from which we'd get a handler to call but that\n        // method is not faster than this switch.\n        switch (local) {\n            case \"choice\":\n                if (firstNA && secondNA) {\n                    // A choice with two notAllowed is replaced with notAllowed.\n                    parent_1.replaceChildWith(el, parser_1.Element.makeElement(\"notAllowed\"));\n                }\n                else {\n                    // A choice with exactly one notAllowed is replaced with the other\n                    // child of the choice.\n                    parent_1.replaceChildWith(el, el.children[firstNA ? 1 : 0]);\n                }\n                break;\n            case \"group\":\n            case \"oneOrMore\":\n            case \"interleave\":\n            case \"attribute\":\n            case \"list\":\n                // An attribute (or list, group, interleave, oneOrMore) with at least\n                // one notAllowed is replaced with notAllowed.\n                parent_1.replaceChildWith(el, parser_1.Element.makeElement(\"notAllowed\"));\n                break;\n            case \"except\":\n                // An except with notAllowed is removed.\n                el.remove();\n                break;\n            default:\n        }\n    }\n    if (el.parent === undefined) {\n        // We've been removed.\n        return;\n    }\n    try {\n        for (var _d = tslib_1.__values(el.children), _e = _d.next(); !_e.done; _e = _d.next()) {\n            var child = _e.value;\n            if (!(child instanceof parser_1.Element)) {\n                continue;\n            }\n            var childLocal = child.local;\n            if (childLocal === \"ref\") {\n                refs.add(child.mustGetAttribute(\"name\"));\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_e && !_e.done && (_f = _d.return)) _f.call(_d);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    var e_1, _c, e_2, _f;\n}\n/**\n * Implements step 17 of the XSL pipeline. Namely:\n *\n * - All ``attribute``, ``list``, ``group``, ``interleave``, and ``oneOrMore``\n *   elements having a ``notAllowed`` child are replaced with a ``notAllowed``\n *   element.\n *\n * - A ``choice`` element with two ``notAllowed`` children is replaced with a\n *   ``notAllowed`` element.\n *\n * - A ``choice`` element with a single ``notAllowed`` child is replaced with\n *   the other child.\n *\n * - An ``except`` element with a ``notAllowed`` child is removed.\n *\n * These transformations are repeated until they no longer modify the tree. (The\n * way we apply the transformations obviates the need to repeat them.)\n *\n * Any ``define`` element that becomes unreachable after transformation is\n * removed.\n *\n * @param tree The tree to process. It is modified in-place.\n *\n * @returns The new root of the tree.\n */\nfunction step17(tree) {\n    var refs = new Set();\n    walk(tree, refs);\n    util_1.removeUnreferencedDefs(tree, refs);\n    return tree;\n}\nexports.step17 = step17;\n//# sourceMappingURL=step17.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Simplification step 16.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2013, 2014 Mangalam Research Center for Buddhist Languages\n */\nvar parser_1 = require(\"../parser\");\nvar schema_validation_1 = require(\"../schema-validation\");\nvar util_1 = require(\"./util\");\n// Elements that cannot contain references.\nvar skip = new Set([\"name\", \"anyName\", \"nsName\", \"param\", \"empty\",\n    \"text\", \"value\", \"notAllowed\", \"ref\"]);\nfunction wrapElements(state, root) {\n    var elementCount = 0;\n    var seenRefs = state.seenRefs;\n    var toAppend = [];\n    try {\n        for (var _a = tslib_1.__values(util_1.findDescendantsByLocalName(root, \"element\")), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var el = _b.value;\n            elementCount++;\n            // If an element is not appearing in a define element, then create one for\n            // it.\n            // tslint:disable-next-line:no-non-null-assertion\n            if (el.parent.local !== \"define\") {\n                // The first child of an ``element`` element is a name class but not\n                // necessarily ``name``.\n                var first = el.children[0];\n                var elName = first.local === \"name\" ? first.text : \"\";\n                // Note that elName in the following string is not necessary to guarantee\n                // uniqueness. It is a convenience that allows recognizing names more\n                // easily. So the value ``\"\"`` used when we don't have a name element does\n                // not harm the uniqueness of the name.\n                var name_1 = \"__\" + elName + \"-elt-\" + elementCount;\n                var ref = parser_1.Element.makeElement(\"ref\");\n                ref.setAttribute(\"name\", name_1);\n                el.replaceWith(ref);\n                seenRefs.add(name_1);\n                var defEl = parser_1.Element.makeElement(\"define\");\n                toAppend.push(defEl);\n                defEl.setAttribute(\"name\", name_1);\n                defEl.appendChild(el);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return toAppend;\n    var e_1, _c;\n}\nfunction removeDefsWithoutElement(state, el) {\n    // A define which does not contain an ``element`` child is going to be\n    // removed. Any reference to it will have to be replaced with the content of\n    // the ``define``.\n    var removedDefines = state.removedDefines;\n    var children = el.children;\n    // We always keep ``start``.\n    var keep = [children[0]];\n    // The el parameter is the grammar. By this stage, it has a ``start`` element\n    // as its first child, and ``define`` elements for the remainder of its\n    // children.\n    for (var ix = 1; ix < children.length; ++ix) {\n        var child = children[ix];\n        // Define elements by this time have a single child, which is an\n        // element (but may not be an ``element`` element).\n        var topElement = child.children[0];\n        if (topElement.local === \"element\") {\n            keep.push(child);\n            continue;\n        }\n        child.empty(); // Effectively removes top from its parent.\n        var name_2 = child.mustGetAttribute(\"name\");\n        removedDefines.set(name_2, { topElement: topElement, used: false });\n    }\n    el.replaceContent(keep);\n}\n/**\n * Substitute ``ref`` elements that point to ``define`` elements that have been\n * removed due to not containing a top-level ``element`` with the content of the\n * referred define.\n *\n * @param state The transformation state.\n *\n * @param el The element to process.\n *\n * @returns A replacement for the element, which may be equal to ``el`` if there\n * is no replacement.\n */\nfunction substituteRefs(state, el, seenNames) {\n    var local = el.local;\n    var ret = el;\n    if (local === \"ref\") {\n        // If a reference is to a definition that does not contain an element\n        // element as the top element, move the definition in place of the ref.\n        var name_3 = el.mustGetAttribute(\"name\");\n        if (seenNames.has(name_3)) {\n            throw new schema_validation_1.SchemaValidationError(\"circularity on the definition named \" + name_3);\n        }\n        var def = state.removedDefines.get(name_3);\n        if (def === undefined) {\n            // We are keeping this reference, so mark it as seen. Otherwise, we're\n            // going to remove it, and we don't need to mark it.\n            state.seenRefs.add(name_3);\n        }\n        else {\n            // If the definition was used, clone it to allow for multiple copies of\n            // the definition's content to be put into the tree if it is references\n            // multiple times.\n            if (def.used) {\n                ret = def.topElement.clone();\n            }\n            else {\n                // Walk the element we're about to put into the tree. We walk it only\n                // once, and record the result of walking it.\n                var newNames = new Set(seenNames);\n                newNames.add(name_3);\n                def.topElement = ret = substituteRefs(state, def.topElement, newNames);\n                def.used = true;\n            }\n        }\n    }\n    else if (!skip.has(local)) {\n        // We do this only for elements that are not \"ref\". If we have \"ref\" then\n        // either it has no children, or it has been substituted and walked above.\n        for (var ix = 0; ix < el.children.length; ++ix) {\n            var child = el.children[ix];\n            if (!(child instanceof parser_1.Element)) {\n                continue;\n            }\n            var substitute = substituteRefs(state, child, seenNames);\n            if (child !== substitute) {\n                el.replaceChildAt(ix, substitute);\n            }\n        }\n    }\n    return ret;\n}\n/**\n * Implements step 16 of the XSL pipeline. Namely:\n *\n * - All ``element`` elements that are not wrapped in a ``define`` element are\n *   wrapped in new ``define`` elements. And a ``ref`` element takes the\n *   place of the original ``element`` and refers to the new ``define``.\n *\n * - ``ref`` elements that reference a ``define`` which does not contain an\n *   ``element`` element as the top element are replaced by the contents of the\n *   ``define`` element they reference.\n *\n * - Remove ``define`` elements that are not referenced.\n *\n * @param tree The tree to process. It is modified in-place.\n *\n * @returns The new root of the tree.\n */\nfunction step16(tree) {\n    var currentTree = tree;\n    if (currentTree.local !== \"grammar\") {\n        throw new Error(\"must be called with a grammar element\");\n    }\n    var state = {\n        // By this point the top element must be the only grammar in the tree.\n        grammarEl: currentTree,\n        removedDefines: new Map(),\n        seenRefs: new Set(),\n    };\n    // The specification is not super clear about this, but we have to perform the\n    // wrapping of ``element`` in ``define`` before starting with ref substitution\n    // because ref subsitution is liable to get into an infinite loop where\n    // ``define/@name=\"x\"`` contains a ``ref/@name=\"x\"``. By doing the element\n    // wrapping first, we eliminate those cases that are valid Relax NG. Any\n    // remaining ``define`` which is without a top-level ``element`` and is\n    // self-referential is invalid.\n    var toAppend = wrapElements(state, currentTree);\n    // We wait until appending the new definitions so that the following operation\n    // does not have to scan through them needlessly. The new definitions contain\n    // ``element`` as their top pattern so they cannot be removed.\n    removeDefsWithoutElement(state, currentTree);\n    currentTree.appendChildren(toAppend);\n    currentTree = substituteRefs(state, currentTree, new Set());\n    util_1.removeUnreferencedDefs(currentTree, state.seenRefs);\n    return currentTree;\n}\nexports.step16 = step16;\n//# sourceMappingURL=step16.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Simplification step 15.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2013, 2014 Mangalam Research Center for Buddhist Languages\n */\nvar parser_1 = require(\"../parser\");\nvar schema_validation_1 = require(\"../schema-validation\");\nvar util_1 = require(\"./util\");\nvar GrammarNode = /** @class */ (function () {\n    function GrammarNode(id, grammar) {\n        this.id = id;\n        this.grammar = grammar;\n        this.childGrammars = [];\n        this.defines = [];\n        this.refs = [];\n        this.parentRefs = [];\n        this.refNames = new Set();\n        this.parentRefNames = new Set();\n        this.defineNames = new Set();\n    }\n    return GrammarNode;\n}());\nfunction gatherGrammars(el, state) {\n    var local = el.local;\n    var stack = state.stack;\n    var top = stack[0];\n    var shift = false;\n    switch (local) {\n        case \"ref\":\n            top.refs.push(el);\n            top.refNames.add(el.mustGetAttribute(\"name\"));\n            break;\n        case \"define\":\n            top.defines.push(el);\n            top.defineNames.add(el.mustGetAttribute(\"name\"));\n            break;\n        case \"grammar\":\n            shift = true;\n            var thisGrammar = new GrammarNode(++state.latestId, el);\n            stack.unshift(thisGrammar);\n            if (top !== undefined) {\n                top.childGrammars.push(thisGrammar);\n            }\n            break;\n        case \"parentRef\":\n            top.parentRefs.push(el);\n            top.parentRefNames.add(el.mustGetAttribute(\"name\"));\n            break;\n        default:\n            if (state.root === null) {\n                stack.unshift(new GrammarNode(++state.latestId, el));\n                shift = true;\n            }\n    }\n    if (state.root === null) {\n        // We have to acquire it from stack[0] and not from the variable top.\n        state.root = stack[0];\n    }\n    try {\n        for (var _a = tslib_1.__values(el.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            if (!(child instanceof parser_1.Element)) {\n                continue;\n            }\n            gatherGrammars(child, state);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    if (shift) {\n        stack.shift();\n    }\n    var e_1, _c;\n}\nfunction transformGrammars(multiple, root, parent, grammar) {\n    try {\n        for (var _a = tslib_1.__values(grammar.refNames), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var name_1 = _b.value;\n            if (!grammar.defineNames.has(name_1)) {\n                throw new schema_validation_1.SchemaValidationError(\"dangling ref: \" + name_1);\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    if (parent === null && grammar.parentRefNames.size !== 0) {\n        throw new schema_validation_1.SchemaValidationError(\"top-level grammar contains parentRef!\");\n    }\n    try {\n        for (var _d = tslib_1.__values(grammar.parentRefNames), _e = _d.next(); !_e.done; _e = _d.next()) {\n            var name_2 = _e.value;\n            // The test above ensures parent is not null.\n            // tslint:disable-next-line:no-non-null-assertion\n            if (!parent.defineNames.has(name_2)) {\n                throw new schema_validation_1.SchemaValidationError(\"dangling parentRef: \" + name_2);\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (_e && !_e.done && (_f = _d.return)) _f.call(_d);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    var toRename = (_g = grammar.defines).concat.apply(_g, tslib_1.__spread([grammar.refs], grammar.childGrammars.map(function (x) { return x.parentRefs; })));\n    var suffix = \"-gr-\" + grammar.id;\n    try {\n        // Make all names unique globally.\n        for (var toRename_1 = tslib_1.__values(toRename), toRename_1_1 = toRename_1.next(); !toRename_1_1.done; toRename_1_1 = toRename_1.next()) {\n            var el = toRename_1_1.value;\n            el.setAttribute(\"name\", el.mustGetAttribute(\"name\") + suffix);\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (toRename_1_1 && !toRename_1_1.done && (_h = toRename_1.return)) _h.call(toRename_1);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    // Move the ``define`` elements to the root grammar. We do this on the root\n    // grammar too so that the ``define`` elements are moved after ``start``.\n    root.grammar.appendChildren(grammar.defines);\n    try {\n        for (var _j = tslib_1.__values(grammar.childGrammars), _k = _j.next(); !_k.done; _k = _j.next()) {\n            var child = _k.value;\n            transformGrammars(multiple, root, grammar, child);\n        }\n    }\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n    finally {\n        try {\n            if (_k && !_k.done && (_l = _j.return)) _l.call(_j);\n        }\n        finally { if (e_5) throw e_5.error; }\n    }\n    try {\n        // Rename all parentRef elements to ref elements.\n        for (var _m = tslib_1.__values(grammar.parentRefs), _o = _m.next(); !_o.done; _o = _m.next()) {\n            var parentRef = _o.value;\n            parentRef.local = \"ref\";\n        }\n    }\n    catch (e_6_1) { e_6 = { error: e_6_1 }; }\n    finally {\n        try {\n            if (_o && !_o.done && (_p = _m.return)) _p.call(_m);\n        }\n        finally { if (e_6) throw e_6.error; }\n    }\n    var start = grammar.grammar.children[0];\n    if (start.local !== \"start\") {\n        throw new Error(\"there should be a single start element in the grammar!\");\n    }\n    if (grammar !== root) {\n        // Remove the remaining ``grammar`` and ``start`` elements.\n        grammar.grammar.replaceWith(start.children[0]);\n    }\n    var e_2, _c, e_3, _f, _g, e_4, _h, e_5, _l, e_6, _p;\n}\n/**\n * Implements step 15 of the XSL pipeline. Namely:\n *\n * - Rename each ``define`` element so as to make it unique across the\n *   schema. We do this by giving a unique id to each ``grammar`` element, which\n *   is the number of ``grammar`` elements before it, in document reading order,\n *   plus 1. Then we add to ``define/@name`` the string ``-gr-{id}`` where\n *   ``{id}`` is the grammar's id of the grammar to which the ``define``\n *   belongs. NOTE: this pattern was selected to avoid a clash with step 16,\n *   which creates new ``define`` elements.\n *\n * - Rename each ``ref`` and ``parentRef`` to preserve the references the\n *   establish to ``define`` elements.\n *\n * - Create a top level ``grammar/start`` structure, if necessary.\n *\n * - Move all ``define`` elements to the top ``grammar``.\n *\n * - Rename all ``parentRef`` elements to ``ref``.\n *\n * - Replace all ``grammar/start`` elements with the expression contained\n *   therein, except for the top level ``grammar/start``.\n *\n * @param el The tree to process. It is modified in-place.\n *\n * @returns The new tree root.\n */\nfunction step15(el) {\n    var root = el;\n    if (el.local !== \"grammar\") {\n        root = parser_1.Element.makeElement(\"grammar\");\n        var start = parser_1.Element.makeElement(\"start\");\n        root.appendChild(start);\n        start.appendChild(el);\n        root.setXMLNS(util_1.RELAXNG_URI);\n        el.removeAttribute(\"xmlns\");\n    }\n    var state = {\n        latestId: 0,\n        root: null,\n        stack: [],\n    };\n    gatherGrammars(root, state);\n    var multiple = state.latestId !== 1;\n    // tslint:disable-next-line:no-non-null-assertion\n    var grammar = state.root;\n    if (multiple) {\n        transformGrammars(multiple, grammar, null, grammar);\n    }\n    else {\n        try {\n            // If we have only a single grammar, we can reduce the work to this.\n            for (var _a = tslib_1.__values(grammar.refNames), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var name_3 = _b.value;\n                if (!grammar.defineNames.has(name_3)) {\n                    throw new schema_validation_1.SchemaValidationError(\"dangling ref: \" + name_3);\n                }\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        if (grammar.parentRefNames.size !== 0) {\n            throw new schema_validation_1.SchemaValidationError(\"top-level grammar contains parentRef!\");\n        }\n        // Move the ``define`` elements to the root grammar. We do this on the root\n        // grammar too so that the ``define`` elements are moved after ``start``.\n        grammar.grammar.appendChildren(grammar.defines);\n        var start = grammar.grammar.children[0];\n        if (start.local !== \"start\") {\n            throw new Error(\"there should be a single start element in the grammar!\");\n        }\n    }\n    return root;\n    var e_7, _c;\n}\nexports.step15 = step15;\n//# sourceMappingURL=step15.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Simplification step 14.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2013, 2014 Mangalam Research Center for Buddhist Languages\n */\nvar parser_1 = require(\"../parser\");\nvar schema_validation_1 = require(\"../schema-validation\");\nvar util_1 = require(\"./util\");\nfunction makeName(el) {\n    var ret = el.local;\n    if (ret === \"def\") {\n        ret += \"@name=\\\"\" + util_1.getName(el) + \"\\\"\";\n    }\n    return ret;\n}\nfunction combine(els) {\n    if (els.length < 2) {\n        // There's nothing to actually *combine*.\n        if (els.length > 0) {\n            // Delete the useless combine attribute that may be present.\n            els[0].removeAttribute(\"combine\");\n        }\n        return;\n    }\n    var undefinedCombine = false;\n    var combineAs;\n    try {\n        for (var els_1 = tslib_1.__values(els), els_1_1 = els_1.next(); !els_1_1.done; els_1_1 = els_1.next()) {\n            var el = els_1_1.value;\n            var combineAttr = el.getAttribute(\"combine\");\n            if (combineAttr === undefined) {\n                if (undefinedCombine) {\n                    throw new schema_validation_1.SchemaValidationError(\"more than one \" + makeName(el) + \" without @combine\");\n                }\n                undefinedCombine = true;\n            }\n            else {\n                if (combineAs === undefined) {\n                    combineAs = combineAttr;\n                }\n                else if (combineAs !== combineAttr) {\n                    throw new schema_validation_1.SchemaValidationError(\"inconsistent values on \" + makeName(el) + \"/@combine\");\n                }\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (els_1_1 && !els_1_1.done && (_a = els_1.return)) _a.call(els_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    if (combineAs === undefined) {\n        throw new Error(\"no combination value found\");\n    }\n    var wrapper = parser_1.Element.makeElement(combineAs);\n    wrapper.grabChildren(els[0]);\n    wrapper.grabChildren(els[1]);\n    els[1].remove();\n    if (els.length > 2) {\n        try {\n            for (var _b = tslib_1.__values(els.slice(2)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var el = _c.value;\n                var newWrapper = parser_1.Element.makeElement(combineAs);\n                newWrapper.appendChild(wrapper);\n                newWrapper.grabChildren(el);\n                el.remove();\n                wrapper = newWrapper;\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_d = _b.return)) _d.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    els[0].appendChild(wrapper);\n    els[0].removeAttribute(\"combine\");\n    var e_1, _a, e_2, _d;\n}\n/**\n * Implements step 14 of the XSL pipeline. Namely, in each grammar:\n *\n * - ``start`` elements are combined.\n *\n * - ``define`` elements with the same name are combined.\n *\n * The scope of the transformation performed for a grammar include all ``start``\n * and ``define`` elements, *excluding* those that may be in a descendant\n * ``grammar`` element.\n *\n * @param el The tree to process. It is modified in-place.\n *\n * @returns The new root of the tree.\n */\nfunction step14(el) {\n    var grammars = util_1.findDescendantsByLocalName(el, \"grammar\");\n    if (el.local === \"grammar\") {\n        grammars.unshift(el);\n    }\n    try {\n        for (var grammars_1 = tslib_1.__values(grammars), grammars_1_1 = grammars_1.next(); !grammars_1_1.done; grammars_1_1 = grammars_1.next()) {\n            var grammar = grammars_1_1.value;\n            combine(util_1.findChildrenByLocalName(grammar, \"start\"));\n            var defs = util_1.findChildrenByLocalName(grammar, \"define\");\n            var grouped = util_1.groupBy(defs, util_1.getName);\n            try {\n                for (var _a = tslib_1.__values(grouped.values()), _b = _a.next(); !_b.done; _b = _a.next()) {\n                    var group = _b.value;\n                    combine(group);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (grammars_1_1 && !grammars_1_1.done && (_d = grammars_1.return)) _d.call(grammars_1);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    return el;\n    var e_4, _d, e_3, _c;\n}\nexports.step14 = step14;\n//# sourceMappingURL=step14.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Simplification step 10.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2013, 2014 Mangalam Research Center for Buddhist Languages\n */\nvar parser_1 = require(\"../parser\");\nvar schema_validation_1 = require(\"../schema-validation\");\nvar util_1 = require(\"./util\");\nfunction checkNames(el) {\n    if (el.local === \"except\") {\n        // parent cannot be undefined at this point.\n        // tslint:disable-next-line:no-non-null-assertion\n        switch (el.parent.local) {\n            case \"anyName\":\n                if (util_1.findDescendantsByLocalName(el, \"anyName\").length !== 0) {\n                    throw new schema_validation_1.SchemaValidationError(\"an except in anyName has an anyName descendant\");\n                }\n                break;\n            case \"nsName\": {\n                var _a = util_1.findMultiDescendantsByLocalName(el, [\"anyName\", \"nsName\"]), anyNames = _a.anyName, nsNames = _a.nsName;\n                if (anyNames.length !== 0) {\n                    throw new schema_validation_1.SchemaValidationError(\"an except in nsName has an anyName descendant\");\n                }\n                if (nsNames.length !== 0) {\n                    throw new schema_validation_1.SchemaValidationError(\"an except in nsName has an nsName descendant\");\n                }\n                break;\n            }\n            default:\n        }\n    }\n    try {\n        for (var _b = tslib_1.__values(el.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            if (!(child instanceof parser_1.Element)) {\n                continue;\n            }\n            checkNames(child);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_d = _b.return)) _d.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    var e_1, _d;\n}\n// tslint:disable-next-line:max-func-body-length\nfunction walk(check, state, el) {\n    var local = el.local;\n    switch (local) {\n        case \"define\":\n        case \"oneOrMore\":\n        case \"zeroOrMore\":\n        case \"optional\":\n        case \"list\":\n        case \"mixed\":\n            var toAppend = [];\n            if (el.children.length > 1) {\n                var group = parser_1.Element.makeElement(\"group\");\n                group.grabChildren(el);\n                toAppend.push(group);\n            }\n            switch (local) {\n                case \"mixed\":\n                    el.local = \"interleave\";\n                    toAppend.push(parser_1.Element.makeElement(\"text\"));\n                    break;\n                case \"optional\":\n                    el.local = \"choice\";\n                    toAppend.push(parser_1.Element.makeElement(\"empty\"));\n                    break;\n                case \"zeroOrMore\":\n                    el.local = \"choice\";\n                    var oneOrMore = parser_1.Element.makeElement(\"oneOrMore\");\n                    if (toAppend.length === 0) {\n                        oneOrMore.grabChildren(el);\n                    }\n                    else {\n                        oneOrMore.appendChildren(toAppend);\n                    }\n                    toAppend = [oneOrMore, parser_1.Element.makeElement(\"empty\")];\n                    break;\n                default:\n            }\n            el.appendChildren(toAppend);\n            break;\n        case \"choice\":\n        case \"group\":\n        case \"interleave\":\n            if (el.children.length === 1) {\n                var replaceWith = el.children[0];\n                if (el.parent !== undefined) {\n                    el.replaceWith(replaceWith);\n                }\n                else {\n                    replaceWith.remove();\n                    // By this stage in the process, this is the only attribute that need\n                    // be carried over.\n                    var xmlns = el.getAttribute(\"xmlns\");\n                    if (xmlns !== undefined) {\n                        replaceWith.setXMLNS(xmlns);\n                    }\n                    state.root = replaceWith;\n                }\n                return replaceWith;\n            }\n            else {\n                while (el.children.length > 2) {\n                    var wrap = parser_1.Element.makeElement(local);\n                    wrap.appendChildren(el.children.slice(0, 2));\n                    el.prependChild(wrap);\n                }\n            }\n            break;\n        case \"element\":\n            if (el.children.length > 2) {\n                var group = parser_1.Element.makeElement(\"group\");\n                group.appendChildren(el.children.slice(1));\n                el.appendChild(group);\n            }\n            if (check) {\n                checkNames(el.children[0]);\n            }\n            break;\n        case \"attribute\":\n            if (el.children.length === 1) {\n                el.appendChild(parser_1.Element.makeElement(\"text\"));\n            }\n            if (check) {\n                checkNames(el.children[0]);\n                try {\n                    for (var _a = tslib_1.__values(util_1.findMultiNames(el, [\"name\"]).name), _b = _a.next(); !_b.done; _b = _a.next()) {\n                        var attrName = _b.value;\n                        switch (attrName.getAttribute(\"ns\")) {\n                            case \"\":\n                                if (attrName.text === \"xmlns\") {\n                                    throw new schema_validation_1.SchemaValidationError(\"found attribute with name xmlns outside all namespaces\");\n                                }\n                                break;\n                            // tslint:disable-next-line:no-http-string\n                            case \"http://www.w3.org/2000/xmlns\":\n                                throw new schema_validation_1.SchemaValidationError(\"found attribute in namespace http://www.w3.org/2000/xmlns\");\n                            default:\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            break;\n        case \"except\":\n            if (el.children.length > 1) {\n                var choice = parser_1.Element.makeElement(\"choice\");\n                choice.grabChildren(el);\n                el.appendChild(choice);\n            }\n            break;\n        default:\n    }\n    // tslint:disable-next-line:prefer-for-of\n    for (var ix = 0; ix < el.children.length; ++ix) {\n        var child = el.children[ix];\n        if (!(child instanceof parser_1.Element)) {\n            continue;\n        }\n        var replaced = walk(check, state, child);\n        while (replaced !== null) {\n            replaced = walk(check, state, replaced);\n        }\n    }\n    return null;\n    var e_2, _c;\n}\n/**\n * Implements steps 10 to 13 of the XSL pipeline. Namely:\n *\n * - ``define``, ``oneOrMore``, ``zeroOrMore``, ``optional``, ``list`` and\n *   ``mixed`` elements with more than one child have their children wrapped in\n *   a ``group`` element.\n *\n * - ``element`` elements with more than two children have their children\n *   wrapped in a ``group`` element. (This means more than one child in addition\n *   to the name class which is the 1sts element of ``element`` at this point.)\n *\n * - ``except`` elements with more than one child have their children wrapped in\n *   a ``group`` element.\n *\n * - ``attribute`` elements with only one child (only a ``name`` element) get a\n *   ``<text/>`` child.\n *\n * - ``choice``, ``group`` and ``interleave`` elements with only one child are\n *   replaced by their single child.\n *\n * - ``choice``, ``group`` and ``interleave`` elements with more than 2 children\n *   have their first 2 children wrapped in an element of the same name, and\n *   this is repeated until the top level element contains only two\n *   children. (This transformation applies to elements that were part of the\n *   input and those elements created by the transformations above.)\n *\n * - ``mixed`` elements are converted to ``interleave`` elements containing the\n *    single child of ``mixed``, and ``<text/>``.\n *\n * - ``optional`` elements are converted to ``choice`` elements containing the\n *   single child of ``optional``, and ``<empty/>``.\n *\n * - ``zeroOrMore`` elements are converted to ``choice`` elements. The single\n *   child of the original ``zeroOrMore`` element is wrapped in a ``oneOrMore``\n *   element, and ``<empty/>`` is added to the ``choice`` element.\n *\n * @param el The tree to process. It is modified in-place.\n *\n * @param check Whether to perform constraint checks.\n *\n * @returns The new root of the tree.\n */\nfunction step10(el, check) {\n    var state = {\n        root: el,\n    };\n    var replaced = walk(check, state, el);\n    while (replaced !== null) {\n        replaced = walk(check, state, replaced);\n    }\n    return state.root;\n}\nexports.step10 = step10;\n//# sourceMappingURL=step10.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Simplification step 9.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2013, 2014 Mangalam Research Center for Buddhist Languages\n */\nvar parser_1 = require(\"../parser\");\n/**\n * Implements step 9 of the XSL pipeline. Namely:\n *\n * - ``div`` elements are replaced with their children.\n *\n * @param el The tree to process. It is modified in-place.\n *\n * @returns The new root of the tree.\n */\nfunction step9(el) {\n    // We walk the children first so that subtrees are modified first.\n    for (var ix = 0; ix < el.children.length; ++ix) {\n        var child = el.children[ix];\n        if (child instanceof parser_1.Element) {\n            if (child.local === \"div\") {\n                if (child.children.length > 0) {\n                    el.insertAt(ix + 1, child.children.slice());\n                }\n                el.removeChildAt(ix);\n                // Go back, and process what is the new child at the location where the\n                // div was.\n                --ix;\n            }\n            else {\n                step9(child);\n            }\n        }\n    }\n    return el;\n}\nexports.step9 = step9;\n//# sourceMappingURL=step9.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Simplification step 6.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2013, 2014 Mangalam Research Center for Buddhist Languages\n */\nvar parser_1 = require(\"../parser\");\nvar schema_validation_1 = require(\"../schema-validation\");\nfunction walk(el, parentNs) {\n    var local = el.local;\n    var currentNs = el.getAttribute(\"ns\");\n    var keepNs = false;\n    // True if the namespace on the current element being processed was created\n    // from resolving a namespace prefix.\n    var resolvedNs = false;\n    switch (local) {\n        case \"element\":\n        case \"attribute\":\n            var name_1 = el.getAttribute(\"name\");\n            if (name_1 !== undefined) {\n                el.removeAttribute(\"name\");\n                var nameEl = parser_1.Element.makeElement(\"name\");\n                if (currentNs === undefined) {\n                    if (local === \"attribute\") {\n                        nameEl.setAttribute(\"ns\", \"\");\n                        // We have to set currentNs here. The attribute is effectively in\n                        // \"no namespace\", and this fact has to carry over to child elements\n                        // that may care.\n                        currentNs = \"\";\n                    }\n                    else if (parentNs !== null) {\n                        nameEl.setAttribute(\"ns\", parentNs);\n                    }\n                }\n                nameEl.appendChild(new parser_1.Text(name_1));\n                el.prependChild(nameEl);\n            }\n            break;\n        case \"name\":\n            if (el.children.length !== 1) {\n                throw new Error(\"name element does not contain a single child\");\n            }\n            var child = el.children[0];\n            if (!(child instanceof parser_1.Text)) {\n                throw new Error(\"a name element must contain only text\");\n            }\n            var parts = child.text.split(\":\");\n            switch (parts.length) {\n                case 1:\n                    break;\n                case 2: {\n                    var ns = el.resolve(parts[0]);\n                    if (ns === undefined) {\n                        throw new schema_validation_1.SchemaValidationError(\"cannot resolve name \" + child.text);\n                    }\n                    el.setAttribute(\"ns\", ns);\n                    resolvedNs = true;\n                    el.replaceChildAt(0, new parser_1.Text(parts[1]));\n                    break;\n                }\n                default:\n                    throw new Error(child + \" is not a valid QName\");\n            }\n        // Yes, we fall through.\n        case \"nsName\":\n        case \"value\":\n            keepNs = true;\n            if (!resolvedNs && currentNs === undefined) {\n                el.setAttribute(\"ns\", parentNs === null ? \"\" : parentNs);\n            }\n            break;\n        default:\n    }\n    // If the ns value was created from resolving a prefix, then it does not\n    // participate in the propagation of @ns. (Whatever previous @ns value may\n    // have been there *does* participate in the propagation.) This is why we test\n    // !resolvedNs.\n    if (!resolvedNs && el.getAttribute(\"ns\") !== undefined) {\n        currentNs = el.mustGetAttribute(\"ns\");\n        if (!keepNs) {\n            el.removeAttribute(\"ns\");\n        }\n    }\n    try {\n        for (var _a = tslib_1.__values(el.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            if (!(child instanceof parser_1.Element)) {\n                continue;\n            }\n            walk(child, currentNs !== undefined ? currentNs : parentNs);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    var e_1, _c;\n}\n/**\n * Implements steps 6, 7 and 8 of the XSL pipeline. Namely:\n *\n * - ``@name`` on ``element`` or ``attribute`` elements is converted to a\n *   ``name`` element.\n *\n * - If a ``name`` element is created for an ``attribute`` element which does\n *   not have an ``@ns``, the ``name`` element has ``@ns=\"\"``.\n *\n * - Any ``name``, ``nsName`` and ``value`` element that does not have an\n *   ``@ns`` gets an ``@ns`` from the closest ancestor with such a value, or the\n *   empty string if there is no such ancestor.\n *\n * - ``@ns`` is removed from all elements except those in the previous point.\n *\n * - When a ``name`` element contains a QName with a prefix, the prefix is\n *   removed from the QName, and a ``@ns`` is added to the ``name`` by resolving\n *   the prefix against the namespaces in effect in the XML file. (We're talking\n *   here about resolving the prefix against the prefixes declared by\n *   ``xmlns:...``. Note that the default namespace set through ``xmlns``\n *   *never* participates in the resolution performed here.)\n *\n * @param el The tree to process. It is modified in-place.\n *\n * @returns The new root of the tree.\n */\nfunction step6(el) {\n    walk(el, null);\n    return el;\n}\nexports.step6 = step6;\n//# sourceMappingURL=step6.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Simplification step 4.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2013, 2014 Mangalam Research Center for Buddhist Languages\n */\nvar parser_1 = require(\"../parser\");\nvar schema_validation_1 = require(\"../schema-validation\");\nfunction walk(el, parentLibrary) {\n    var local = el.local;\n    var currentLibrary = el.getAttribute(\"datatypeLibrary\");\n    if (currentLibrary !== undefined && currentLibrary !== \"\") {\n        var url = void 0;\n        try {\n            // tslint:disable-next-line:no-unused-expression\n            url = new URL(currentLibrary);\n        }\n        catch (e) {\n            throw new schema_validation_1.SchemaValidationError(\"invalid datatypeLibrary URL: \" + currentLibrary);\n        }\n        // We have to test for \"#\" a the end of href because that's also an\n        // error per Relax NG but the hash will still be empty. :-/\n        if (url.hash !== \"\" || url.href.endsWith(\"#\")) {\n            throw new schema_validation_1.SchemaValidationError(\"datatypeLibrary URL must not have a fragment identifier: \" + currentLibrary);\n        }\n    }\n    if (local === \"data\" || local === \"value\") {\n        // ``value`` elements without a ``@type`` get ``@type`` set to ``\"token\"``\n        // and ``@datatypeLibrary`` set to the empty string.\n        if (local === \"value\" && el.getAttribute(\"type\") === undefined) {\n            el.setAttribute(\"datatypeLibrary\", \"\");\n            el.setAttribute(\"type\", \"token\");\n        }\n        else if (currentLibrary === undefined) {\n            // Inherit from parent.\n            el.setAttribute(\"datatypeLibrary\", parentLibrary);\n        }\n    }\n    else {\n        // All other elements lose their ``@datatypeLibrary``.\n        el.removeAttribute(\"datatypeLibrary\");\n    }\n    try {\n        for (var _a = tslib_1.__values(el.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            if (!(child instanceof parser_1.Element)) {\n                continue;\n            }\n            walk(child, currentLibrary !== undefined ? currentLibrary : parentLibrary);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    var e_1, _c;\n}\n/**\n * Implements steps 4 and 5 of the XSL pipeline. Namely:\n *\n * - ``data`` and ``value`` elements that don't have ``@datatypeLibrary`` get\n *    one from the closest ancestor with such a value.\n *\n * - ``value`` elements without a ``@type`` get ``@type`` set to ``\"token\"`` and\n *    ``@datatypeLibrary`` set to the empty string. (This is irrespective of the\n *    1st transformation above.)\n *\n * - All elements other than ``data`` and ``value`` lose their\n *   ``@datatypeLibrary`` attribute.\n *\n * Note that this step currently does not perform any URI encoding required by\n * the Relax NG spec. As we speak, salve does not support loading arbitrary type\n * libraries, and the supported URIs do not need special encoding.\n *\n * Even in the general case, it is unclear that we need to perform the encoding\n * transformation *here*. The URIs could be passed as-are to a library that\n * performs the encoding before fetching.\n *\n * @param el The tree to process. It is modified in-place.\n *\n * @returns The new root of the tree.\n */\nfunction step4(el) {\n    walk(el, \"\");\n    return el;\n}\nexports.step4 = step4;\n//# sourceMappingURL=step4.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Simplification step 1.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2013, 2014 Mangalam Research Center for Buddhist Languages\n */\nvar parser_1 = require(\"../parser\");\nvar schema_validation_1 = require(\"../schema-validation\");\nvar util_1 = require(\"./util\");\nfunction resolveURL(base, tail) {\n    return new URL(tail, base.toString());\n}\nexports.resolveURL = resolveURL;\nfunction loadFromElement(currentBase, seenURLs, el, parse) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var resolved, _a;\n        return tslib_1.__generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    resolved = resolveURL(currentBase, el.mustGetAttribute(\"href\"));\n                    if (seenURLs.includes(resolved.toString())) {\n                        throw new schema_validation_1.SchemaValidationError(\"detected an import loop: \" + seenURLs.reverse().concat(resolved.toString()).join(\"\\n\"));\n                    }\n                    _a = {};\n                    return [4 /*yield*/, parse(resolved)];\n                case 1: return [2 /*return*/, (_a.tree = _b.sent(), _a.resolved = resolved, _a)];\n            }\n        });\n    });\n}\nvar Step1 = /** @class */ (function () {\n    function Step1(parser) {\n        this.parser = parser;\n    }\n    Step1.prototype.walk = function (parentBase, seenURLs, root, el) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var currentRoot, baseAttr, currentBase, attrs, _a, _b, name_1, attr, uri, prefix, _c, _d, attrName, attr, local, children, i, child, clean, _e, _f, child, e_1_1, handler, replacement, e_2, _g, e_3, _h, e_1, _j;\n            return tslib_1.__generator(this, function (_k) {\n                switch (_k.label) {\n                    case 0:\n                        currentRoot = root;\n                        baseAttr = el.getAttribute(\"xml:base\");\n                        currentBase = baseAttr === undefined ? parentBase :\n                            resolveURL(parentBase, baseAttr);\n                        // The XML parser we use immediately drops all *elements* which are not in\n                        // the RELAXNG_URI namespace so we don't have to remove them here.\n                        // We move all RNG nodes into the default namespace.\n                        el.prefix = \"\";\n                        attrs = el.getRawAttributes();\n                        try {\n                            for (_a = tslib_1.__values(Object.keys(attrs)), _b = _a.next(); !_b.done; _b = _a.next()) {\n                                name_1 = _b.value;\n                                attr = attrs[name_1];\n                                uri = attr.uri, prefix = attr.prefix;\n                                if (uri === util_1.RELAXNG_URI) {\n                                    // We move all RNG nodes into the default namespace.\n                                    attr.prefix = \"\";\n                                    attr.name = attr.local;\n                                }\n                                else if (name_1 !== \"xmlns\" && uri !== \"\" && prefix !== \"xmlns\") {\n                                    delete attrs[name_1];\n                                }\n                            }\n                        }\n                        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                        finally {\n                            try {\n                                if (_b && !_b.done && (_g = _a.return)) _g.call(_a);\n                            }\n                            finally { if (e_2) throw e_2.error; }\n                        }\n                        try {\n                            for (_c = tslib_1.__values([\"name\", \"type\", \"combine\"]), _d = _c.next(); !_d.done; _d = _c.next()) {\n                                attrName = _d.value;\n                                attr = el.getAttribute(attrName);\n                                if (attr !== undefined) {\n                                    el.setAttribute(attrName, attr.trim());\n                                }\n                            }\n                        }\n                        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                        finally {\n                            try {\n                                if (_d && !_d.done && (_h = _c.return)) _h.call(_c);\n                            }\n                            finally { if (e_3) throw e_3.error; }\n                        }\n                        local = el.local;\n                        // We don't normalize text nodes in param or value.\n                        if (!(local === \"param\" || local === \"value\")) {\n                            children = el.children;\n                            for (i = 0; i < children.length; ++i) {\n                                child = children[i];\n                                if (child instanceof parser_1.Element) {\n                                    continue;\n                                }\n                                clean = child.text.trim();\n                                if (clean === \"\") {\n                                    el.removeChildAt(i);\n                                    // Move back so that we don't skip an element...\n                                    i--;\n                                }\n                                else if (local === \"name\") {\n                                    child.replaceWith(new parser_1.Text(clean));\n                                }\n                            }\n                        }\n                        _k.label = 1;\n                    case 1:\n                        _k.trys.push([1, 6, 7, 8]);\n                        _e = tslib_1.__values(el.children), _f = _e.next();\n                        _k.label = 2;\n                    case 2:\n                        if (!!_f.done) return [3 /*break*/, 5];\n                        child = _f.value;\n                        if (!(child instanceof parser_1.Element)) {\n                            return [3 /*break*/, 4];\n                        }\n                        return [4 /*yield*/, this.walk(currentBase, seenURLs, currentRoot, child)];\n                    case 3:\n                        _k.sent();\n                        _k.label = 4;\n                    case 4:\n                        _f = _e.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_1_1 = _k.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_f && !_f.done && (_j = _e.return)) _j.call(_e);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 8:\n                        handler = this[el.local];\n                        if (!(handler !== undefined)) return [3 /*break*/, 11];\n                        return [4 /*yield*/, handler.call(this, currentBase, seenURLs, el)];\n                    case 9:\n                        replacement = _k.sent();\n                        if (!(replacement !== null)) return [3 /*break*/, 11];\n                        if (el === currentRoot) {\n                            // We have a new root.\n                            currentRoot = replacement;\n                        }\n                        return [4 /*yield*/, this.walk(currentBase, seenURLs, currentRoot, replacement)];\n                    case 10:\n                        // We have to walk the replacement too. (And yes, this could change\n                        // the root.)\n                        currentRoot = _k.sent();\n                        _k.label = 11;\n                    case 11: return [2 /*return*/, currentRoot];\n                }\n            });\n        });\n    };\n    Step1.prototype.externalRef = function (currentBase, seenURLs, el) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, includedTree, resolved, ns, treeNs;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, loadFromElement(currentBase, seenURLs, el, this.parser)];\n                    case 1:\n                        _a = _b.sent(), includedTree = _a.tree, resolved = _a.resolved;\n                        return [4 /*yield*/, this.walk(resolved, tslib_1.__spread([resolved.toString()], seenURLs), includedTree, includedTree)];\n                    case 2:\n                        includedTree = _b.sent();\n                        ns = el.getAttribute(\"ns\");\n                        treeNs = includedTree.getAttribute(\"ns\");\n                        if (ns !== undefined && treeNs === undefined) {\n                            includedTree.setAttribute(\"ns\", ns);\n                        }\n                        if (includedTree.getAttribute(\"datatypeLibrary\") === undefined) {\n                            includedTree.setAttribute(\"datatypeLibrary\", \"\");\n                        }\n                        // If parent is null then we are at the root and we cannot remove the\n                        // element.\n                        if (el.parent !== undefined) {\n                            // By this point, the tree's default namespace is the Relax NG one. So we\n                            // can remove it to avoid redeclaring it. We don't want to do this though\n                            // if we're forming the root of the new tree.\n                            includedTree.removeAttribute(\"xmlns\");\n                            el.replaceWith(includedTree);\n                        }\n                        return [2 /*return*/, includedTree];\n                }\n            });\n        });\n    };\n    Step1.prototype.include = function (currentBase, seenURLs, el) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, includedTree, resolved, _b, includeStarts, includeDefs, _c, grammarStarts, grammarDefs, grammarStarts_1, grammarStarts_1_1, start, includeDefsMap, grammarDefsMap, _d, _e, key, defs, defs_1, defs_1_1, def, e_4, _f, e_5, _g, e_6, _h;\n            return tslib_1.__generator(this, function (_j) {\n                switch (_j.label) {\n                    case 0: return [4 /*yield*/, loadFromElement(currentBase, seenURLs, el, this.parser)];\n                    case 1:\n                        _a = _j.sent(), includedTree = _a.tree, resolved = _a.resolved;\n                        return [4 /*yield*/, this.walk(resolved, tslib_1.__spread([resolved.toString()], seenURLs), includedTree, includedTree)];\n                    case 2:\n                        _j.sent();\n                        // By this point, the tree's default namespace is the Relax NG one. So we\n                        // can remove it to avoid redeclaring it.\n                        includedTree.removeAttribute(\"xmlns\");\n                        if (includedTree.local !== \"grammar\") {\n                            throw new schema_validation_1.SchemaValidationError(\"include does not point to a document \" +\n                                \"that has a grammar element as root\");\n                        }\n                        _b = util_1.findMultiDescendantsByLocalName(el, [\"start\", \"define\"]), includeStarts = _b.start, includeDefs = _b.define;\n                        _c = util_1.findMultiDescendantsByLocalName(includedTree, [\"start\", \"define\"]), grammarStarts = _c.start, grammarDefs = _c.define;\n                        if (includeStarts.length !== 0) {\n                            if (grammarStarts.length === 0) {\n                                throw new schema_validation_1.SchemaValidationError(\"include contains start element but grammar does not\");\n                            }\n                            try {\n                                for (grammarStarts_1 = tslib_1.__values(grammarStarts), grammarStarts_1_1 = grammarStarts_1.next(); !grammarStarts_1_1.done; grammarStarts_1_1 = grammarStarts_1.next()) {\n                                    start = grammarStarts_1_1.value;\n                                    start.remove();\n                                }\n                            }\n                            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                            finally {\n                                try {\n                                    if (grammarStarts_1_1 && !grammarStarts_1_1.done && (_f = grammarStarts_1.return)) _f.call(grammarStarts_1);\n                                }\n                                finally { if (e_4) throw e_4.error; }\n                            }\n                        }\n                        includeDefsMap = util_1.indexBy(includeDefs, util_1.getName);\n                        grammarDefsMap = util_1.groupBy(grammarDefs, util_1.getName);\n                        try {\n                            for (_d = tslib_1.__values(includeDefsMap.keys()), _e = _d.next(); !_e.done; _e = _d.next()) {\n                                key = _e.value;\n                                defs = grammarDefsMap.get(key);\n                                if (defs === undefined) {\n                                    throw new schema_validation_1.SchemaValidationError(\"include has define with name \" + name + \" which is not present in grammar\");\n                                }\n                                try {\n                                    for (defs_1 = tslib_1.__values(defs), defs_1_1 = defs_1.next(); !defs_1_1.done; defs_1_1 = defs_1.next()) {\n                                        def = defs_1_1.value;\n                                        def.remove();\n                                    }\n                                }\n                                catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                                finally {\n                                    try {\n                                        if (defs_1_1 && !defs_1_1.done && (_h = defs_1.return)) _h.call(defs_1);\n                                    }\n                                    finally { if (e_6) throw e_6.error; }\n                                }\n                            }\n                        }\n                        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                        finally {\n                            try {\n                                if (_e && !_e.done && (_g = _d.return)) _g.call(_d);\n                            }\n                            finally { if (e_5) throw e_5.error; }\n                        }\n                        el.local = \"div\";\n                        el.setAttribute(\"datatypeLibrary\", \"\");\n                        el.removeAttribute(\"href\");\n                        includedTree.local = \"div\";\n                        // Insert the grammar element (now named \"div\") into the include element\n                        // (also now named \"div\").\n                        el.prependChild(includedTree);\n                        return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    return Step1;\n}());\n/**\n * Modify the tree:\n *\n * - All references to external resources (``externalRef`` and ``include``) are\n *   replaced by the contents of the references. It essentially \"flattens\" a\n *   schema made of group of documents to a single document.\n *\n * - Remove text nodes that contain only white spaces.  Text nodes in the\n *   elements ``param`` and ``value`` are excluded.\n *\n * - Trim the text node in the elements named ``name``.\n *\n * - Also trim the values of the attributes ``name``, ``type`` and ``combine``.\n *\n * Note that step1 also subsumes what was step2 and step3 in the XSLT-based\n * transforms.\n *\n * @param documentBase The base URI of the tree being processed.\n *\n * @param tree The XML tree to process.\n *\n * @param parser A function through which we load and parse XML files.\n *\n * @returns A promise that resolves to the new tree root when processing is\n * done.\n */\nfunction step1(documentBase, tree, parser) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        return tslib_1.__generator(this, function (_a) {\n            return [2 /*return*/, new Step1(parser).walk(documentBase, [documentBase.toString()], tree, tree)];\n        });\n    });\n}\nexports.step1 = step1;\n//# sourceMappingURL=step1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Simplification support for trees produced by the parser module.\n *\n * This is an implementation in TypeScript of the XSLT pipeline we've been\n * using. The step numbers are equivalent to those in the XSLT pipeline with the\n * following exceptions:\n *\n * - Some steps are combined. The driving principles are:\n *\n *  + Steps are not combined if a later step is entirely dependent on the work\n *    of an earlier step.\n *\n *  + Steps are combined if they offer substantial performance benefits.\n *\n * Eventually the goal is to completely eliminate the XSLT pipeline. However,\n * during the transition phase we aim for relative parity with what the XSLT\n * pipeline does, in order to simplify testing. With a few small exceptions, we\n * can provide an input to a step and expect the same output in the XSLT and\n * TypeScript pipelines. So the TypeScript implementation may do things that\n * appears senseless. For instance, at some point all ``define`` elements are\n * renamed to make them unique, even those that do not have name clashes. We\n * replicate the XSLT process, where only renaming clashing defines would be\n * onerous. (It would also require the renaming operation to verify that new\n * names do not clash with those names that are not changed. If we change all\n * names, then this clash cannot occur.)\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2013, 2014 Mangalam Research Center for Buddhist Languages\n */\nvar step1_1 = require(\"./simplifier/step1\");\nexports.step1 = step1_1.step1;\n// Step 2-3 are covered by step 1.\nvar step4_1 = require(\"./simplifier/step4\");\nexports.step4 = step4_1.step4;\n// Step 5 is covered by step 4.\nvar step6_1 = require(\"./simplifier/step6\");\nexports.step6 = step6_1.step6;\n// Steps 7-8 are covered by step 6.\nvar step9_1 = require(\"./simplifier/step9\");\nexports.step9 = step9_1.step9;\nvar step10_1 = require(\"./simplifier/step10\");\nexports.step10 = step10_1.step10;\n// Steps 11-13 are covered by step 10.\nvar step14_1 = require(\"./simplifier/step14\");\nexports.step14 = step14_1.step14;\nvar step15_1 = require(\"./simplifier/step15\");\nexports.step15 = step15_1.step15;\nvar step16_1 = require(\"./simplifier/step16\");\nexports.step16 = step16_1.step16;\nvar step17_1 = require(\"./simplifier/step17\");\nexports.step17 = step17_1.step17;\nvar step18_1 = require(\"./simplifier/step18\");\nexports.step18 = step18_1.step18;\n//# sourceMappingURL=simplifier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * A schema validator that uses salve to validate the schema.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar internal_1 = require(\"../schema-simplifiers/internal\");\nvar schema_validation_1 = require(\"../schema-validation\");\nvar InternalValidator = /** @class */ (function () {\n    function InternalValidator(options) {\n        this.options = options;\n    }\n    InternalValidator.prototype.validate = function (schemaPath) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var simplifier;\n            return tslib_1.__generator(this, function (_a) {\n                simplifier = new internal_1.InternalSimplifier(tslib_1.__assign({}, this.options, { validate: true }));\n                return [2 /*return*/, simplifier.simplify(schemaPath)];\n            });\n        });\n    };\n    return InternalValidator;\n}());\nexports.InternalValidator = InternalValidator;\nschema_validation_1.registerValidator(\"internal\", InternalValidator);\n//# sourceMappingURL=internal.js.map","\"use strict\";\n/**\n * Autoload the validators that are usable on this platform.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction autoload() {\n    // Ideally, each validator module would contain the information as to what it\n    // needs to run but then we'd run into a circular dependency problem: in order\n    // to know whether a module can run, we'd need to load it, which may trigger\n    // loading of modules that don't exist (like Node modules in a browser). Oops.\n    //\n    // So this module is responsible for detecting what may be loaded, and loads\n    // it. Not as clean, but \"good enough\" for now.\n    //\n    // tslint:disable-next-line:no-typeof-undefined\n    if (typeof window === \"undefined\") {\n        // Assume we are in Node and load those validators that require Node\n        // support.\n        // tslint:disable-next-line:no-var-requires no-require-imports\n        require(\"./jing\");\n        // tslint:disable-next-line:no-var-requires no-require-imports\n        require(\"./xmllint\");\n        // tslint:disable-next-line:no-var-requires no-require-imports\n        require(\"./internal\");\n    }\n}\nexports.autoload = autoload;\n//# sourceMappingURL=autoload.js.map","\"use strict\";\n/**\n * Autoload the simplifiers that are usable on this platform.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction autoload() {\n    // Ideally, each module would contain the information as to what it needs to\n    // run but then we'd run into a circular dependency problem: in order to know\n    // whether a module can run, we'd need to load it, which may trigger loading\n    // of modules that don't exist (like Node modules in a browser). Oops.\n    //\n    // So this module is responsible for detecting what may be loaded, and loads\n    // it. Not as clean, but \"good enough\" for now.\n    //\n    // tslint:disable-next-line:no-typeof-undefined\n    if (typeof window === \"undefined\") {\n        // Assume we are in Node and load those validators that require Node\n        // support.\n        // tslint:disable-next-line:no-var-requires no-require-imports\n        require(\"./xsl\");\n        // tslint:disable-next-line:no-var-requires no-require-imports\n        require(\"./internal\");\n    }\n}\nexports.autoload = autoload;\n//# sourceMappingURL=autoload.js.map","module.exports = require('./readable').PassThrough\n","module.exports = require('./readable').Transform\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./lib/_stream_writable.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n// tslint:disable-next-line:no-typeof-undefined\nif (typeof fetch === \"undefined\") {\n    throw new Error(\"trying to load the fetch loader when fetch is absent\");\n}\n/**\n * A resource loader that loads resources using ``fetch``. It can only be used\n * in an environment where ``fetch`` is native or provided by a polyfill.\n *\n * This loader does not allow loading from ``file://``.\n */\nvar FetchResourceLoader = /** @class */ (function () {\n    function FetchResourceLoader() {\n    }\n    FetchResourceLoader.prototype.load = function (url) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var response;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (url.protocol === \"file:\") {\n                            throw new Error(\"this loader cannot load from the file system\");\n                        }\n                        return [4 /*yield*/, fetch(url.toString())];\n                    case 1:\n                        response = _a.sent();\n                        if (!response.ok) {\n                            throw new Error(\"unable to fetch \" + url);\n                        }\n                        return [2 /*return*/, response.text()];\n                }\n            });\n        });\n    };\n    return FetchResourceLoader;\n}());\nexports.FetchResourceLoader = FetchResourceLoader;\n//# sourceMappingURL=fetch.js.map","\"use strict\";\n/**\n * This module contains the logic for converting a simplified schema to a\n * pattern.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar name_patterns_1 = require(\"../name_patterns\");\nvar patterns_1 = require(\"../patterns\");\nfunction walk(el) {\n    switch (el.local) {\n        //  \"param\" is not needed as a separate case, because it is handled in\n        //  \"data\"\n        //\n        case \"grammar\":\n            return new patterns_1.Grammar(el.path, walk(el.children[0]), el.children.slice(1)\n                .map(function (x) { return walk(x); }));\n        case \"except\":\n        case \"start\":\n            return walk(el.children[0]);\n        case \"define\":\n            return new patterns_1.Define(el.path, el.mustGetAttribute(\"name\"), walk(el.children[0]));\n        case \"ref\":\n            return new patterns_1.Ref(el.path, el.mustGetAttribute(\"name\"));\n        case \"value\":\n            return new patterns_1.Value(el.path, el.text, el.mustGetAttribute(\"type\"), el.mustGetAttribute(\"datatypeLibrary\"), el.mustGetAttribute(\"ns\"));\n        case \"data\":\n            var children = el.children;\n            var length_1 = children.length;\n            var last = children[length_1 - 1];\n            var except = (length_1 !== 0 && last.local === \"except\") ? last : undefined;\n            var params = (except === undefined ? children : children.slice(0, -1))\n                .map(function (param) { return ({ name: param.mustGetAttribute(\"name\"),\n                value: param.children[0].text }); });\n            return new patterns_1.Data(el.path, el.mustGetAttribute(\"type\"), el.mustGetAttribute(\"datatypeLibrary\"), params, except !== undefined ?\n                walk(except) :\n                undefined);\n        case \"group\":\n            return new patterns_1.Group(el.path, walk(el.children[0]), walk(el.children[1]));\n        case \"interleave\":\n            return new patterns_1.Interleave(el.path, walk(el.children[0]), walk(el.children[1]));\n        case \"choice\":\n            return new patterns_1.Choice(el.path, walk(el.children[0]), walk(el.children[1]));\n        case \"oneOrMore\":\n            return new patterns_1.OneOrMore(el.path, walk(el.children[0]));\n        case \"element\":\n            return new patterns_1.Element(el.path, walkNameClass(el.children[0]), walk(el.children[1]));\n        case \"attribute\":\n            return new patterns_1.Attribute(el.path, walkNameClass(el.children[0]), walk(el.children[1]));\n        case \"empty\":\n            return new patterns_1.Empty(el.path);\n        case \"text\":\n            return new patterns_1.Text(el.path);\n        case \"list\":\n            return new patterns_1.List(el.path, walk(el.children[0]));\n        case \"notAllowed\":\n            return new patterns_1.NotAllowed(el.path);\n        default:\n            throw new Error(\"unexpected local name: \" + el.local);\n    }\n}\nfunction walkNameClass(el) {\n    switch (el.local) {\n        case \"choice\":\n            return new name_patterns_1.NameChoice(el.path, walkNameClass(el.children[0]), walkNameClass(el.children[1]));\n        case \"name\":\n            return new name_patterns_1.Name(el.path, el.mustGetAttribute(\"ns\"), el.text);\n        case \"nsName\":\n            return new name_patterns_1.NsName(el.path, el.mustGetAttribute(\"ns\"), el.children.length !== 0 ?\n                walkNameClass(el.children[0]) :\n                undefined);\n        case \"anyName\":\n            return new name_patterns_1.AnyName(el.path, el.children.length !== 0 ?\n                walkNameClass(el.children[0]) :\n                undefined);\n        case \"except\":\n            return walkNameClass(el.children[0]);\n        default:\n            throw new Error(\"unexpected local name: \" + el.local);\n    }\n}\nfunction makePatternFromSimplifiedSchema(tree) {\n    var ret = walk(tree);\n    if (!(ret instanceof patterns_1.Grammar)) {\n        throw new Error(\"tree did not produce a Grammar!\");\n    }\n    return ret;\n}\nexports.makePatternFromSimplifiedSchema = makePatternFromSimplifiedSchema;\n//# sourceMappingURL=convert-simplified.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar convert_simplified_1 = require(\"./convert-simplified\");\nvar resource_loader_1 = require(\"./resource-loader\");\nvar internal_1 = require(\"./schema-simplifiers/internal\");\n/**\n * Validate, simplify and convert a schema to a pattern, which can then be used\n * to validate an XML document. This function uses the internal simplification\n * and validation code.\n *\n * @param schemaPath The schema's location. The schema must be in the XML Relax\n * NG format. (Not the compact notation.)\n *\n * @returns The converted pattern.\n */\nfunction convertRNGToPattern(schemaPath) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var resourceLoader, simplifier, result;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    resourceLoader = resource_loader_1.makeResourceLoader();\n                    simplifier = new internal_1.InternalSimplifier({\n                        verbose: false,\n                        timing: false,\n                        keepTemp: false,\n                        simplifyTo: Infinity,\n                        resourceLoader: resourceLoader,\n                        validate: true,\n                    });\n                    return [4 /*yield*/, simplifier.simplify(schemaPath)];\n                case 1:\n                    result = _a.sent();\n                    return [2 /*return*/, {\n                            pattern: convert_simplified_1.makePatternFromSimplifiedSchema(result.simplified),\n                            warnings: result.warnings,\n                        }];\n            }\n        });\n    });\n}\nexports.convertRNGToPattern = convertRNGToPattern;\n//# sourceMappingURL=convert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar errors_1 = require(\"../errors\");\nvar name_patterns_1 = require(\"../name_patterns\");\nvar name_resolver_1 = require(\"../name_resolver\");\nvar set_1 = require(\"../set\");\nvar tools_1 = require(\"../tools\");\nvar base_1 = require(\"./base\");\n/**\n * This is an exception raised to indicate references to undefined entities in a\n * schema. If for instance element A has element B as its children but B is not\n * defined, then this exception would be raised.\n *\n * This exception is indicative of an internal error because by the time this\n * module loads a schema, the schema should have been simplified already and\n * simplification should have failed due to the unresolvable reference.\n *\n * This class used to be named ``ReferenceError`` in previous versions of salve\n * but this name clashes with the built-in ``ReferenceError`` that JavaScript\n * engines have built into their runtime. The clash did not make the code fail\n * but it had unfortunate side-effects.\n */\nvar RefError = /** @class */ (function (_super) {\n    tslib_1.__extends(RefError, _super);\n    /**\n     * @param references The set of references that could not be resolved.\n     */\n    function RefError(references) {\n        var _this = _super.call(this) || this;\n        _this.references = references;\n        tools_1.fixPrototype(_this, RefError);\n        return _this;\n    }\n    /**\n     * @returns string representation of the error.\n     */\n    RefError.prototype.toString = function () {\n        return (\"Cannot resolve the following references: \" + this.references.join(\", \"));\n    };\n    return RefError;\n}(Error));\nexports.RefError = RefError;\n/**\n * Grammar object. Users of this library normally do not create objects of this\n * class themselves but rely on the conversion facilities of salve to create\n * these objects.\n */\nvar Grammar = /** @class */ (function (_super) {\n    tslib_1.__extends(Grammar, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param start The start pattern of this grammar.\n     *\n     * @param definitions An array which contain all definitions specified in this\n     * grammar.\n     *\n     * @throws {RefError} When any definition in the original\n     * schema refers to a schema entity which is not defined in the schema.\n     */\n    function Grammar(xmlPath, start, definitions) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.xmlPath = xmlPath;\n        _this.start = start;\n        _this.definitions = new Map();\n        _this._namespaces = new Set();\n        if (definitions !== undefined) {\n            try {\n                for (var definitions_1 = tslib_1.__values(definitions), definitions_1_1 = definitions_1.next(); !definitions_1_1.done; definitions_1_1 = definitions_1.next()) {\n                    var def = definitions_1_1.value;\n                    _this.add(def);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (definitions_1_1 && !definitions_1_1.done && (_a = definitions_1.return)) _a.call(definitions_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        var missing = _this._prepare(_this.definitions, _this._namespaces);\n        if (missing !== undefined) {\n            throw new RefError(missing);\n        }\n        return _this;\n        var e_1, _a;\n    }\n    /**\n     * Adds a definition.\n     *\n     * @param d The definition to add.\n     */\n    Grammar.prototype.add = function (d) {\n        this.definitions.set(d.name, d);\n    };\n    Object.defineProperty(Grammar.prototype, \"elementDefinitions\", {\n        get: function () {\n            var ret = this._elementDefinitions;\n            if (ret !== undefined) {\n                return ret;\n            }\n            var newDef = this._elementDefinitions = Object.create(null);\n            try {\n                for (var _a = tslib_1.__values(this.definitions.values()), _b = _a.next(); !_b.done; _b = _a.next()) {\n                    var def = _b.value;\n                    var el = def.pat;\n                    var key = el.name.toString();\n                    if (newDef[key] === undefined) {\n                        newDef[key] = [el];\n                    }\n                    else {\n                        newDef[key].push(el);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return newDef;\n            var e_2, _c;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @returns ``true`` if the schema is wholly context independent. This means\n     * that each element in the schema can be validated purely on the basis of\n     * knowing its expanded name. ``false`` otherwise.\n     */\n    Grammar.prototype.whollyContextIndependent = function () {\n        var defs = this.elementDefinitions;\n        for (var v in defs) {\n            if (defs[v].length > 1) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @returns An array of all namespaces used in the schema.  The array may\n     * contain two special values: ``*`` indicates that there was an ``anyName``\n     * element in the schema and thus that it is probably possible to insert more\n     * than the namespaces listed in the array, ``::except`` indicates that an\n     * ``except`` element is affecting what namespaces are acceptable to the\n     * schema.\n     */\n    Grammar.prototype.getNamespaces = function () {\n        return Array.from(this._namespaces);\n    };\n    Grammar.prototype._prepare = function (definitions, namespaces) {\n        var allRefs = [];\n        var startRefs = this.start._prepare(definitions, namespaces);\n        if (startRefs !== undefined) {\n            allRefs = startRefs;\n        }\n        try {\n            for (var _a = tslib_1.__values(this.definitions.values()), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var d = _b.value;\n                var defRefs = d._prepare(definitions, namespaces);\n                if (defRefs !== undefined) {\n                    allRefs = allRefs.concat(defRefs);\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return (allRefs.length !== 0) ? allRefs : undefined;\n        var e_3, _c;\n    };\n    /**\n     * Creates a new walker to walk this pattern.\n     *\n     * @returns A walker.\n     */\n    Grammar.prototype.newWalker = function () {\n        // tslint:disable-next-line:no-use-before-declare\n        return GrammarWalker.make(this);\n    };\n    return Grammar;\n}(base_1.BasePattern));\nexports.Grammar = Grammar;\nvar MisplacedElementWalker = /** @class */ (function () {\n    function MisplacedElementWalker() {\n        this.canEnd = true;\n        this.canEndAttribute = true;\n    }\n    MisplacedElementWalker.prototype.fireEvent = function (name, params) {\n        // The strategy here is to accept everything except for elements.  The lack\n        // of match that occurs on enterStartTag and startTagAndAttributes is\n        // handled elsewhere.\n        switch (name) {\n            case \"enterStartTag\":\n            case \"startTagAndAttributes\":\n                return new base_1.InternalFireEventResult(false);\n            default:\n                return new base_1.InternalFireEventResult(true);\n        }\n    };\n    MisplacedElementWalker.prototype.end = function () {\n        return false;\n    };\n    MisplacedElementWalker.prototype.possible = function () {\n        return new Set();\n    };\n    MisplacedElementWalker.prototype._clone = function (memo) {\n        return new this.constructor();\n    };\n    return MisplacedElementWalker;\n}());\n/**\n * Walker for [[Grammar]].\n */\nvar GrammarWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(GrammarWalker, _super);\n    function GrammarWalker(elOrWalker, memo) {\n        var _this = _super.call(this) || this;\n        if (elOrWalker.newWalker !== undefined) {\n            var grammar = elOrWalker;\n            _this.el = grammar;\n            _this.nameResolver = new name_resolver_1.NameResolver();\n            _this._swallowAttributeValue = false;\n            _this.ignoreNextWs = false;\n            _this.elementWalkerStack = [[grammar.start.newWalker(_this.nameResolver)]];\n            _this.misplacedDepth = 0;\n        }\n        else {\n            var walker = elOrWalker;\n            _this.el = walker.el;\n            // tslint:disable-next-line:no-non-null-assertion\n            _this.nameResolver = base_1.cloneIfNeeded(walker.nameResolver, memo);\n            _this.elementWalkerStack = walker.elementWalkerStack\n                // tslint:disable-next-line:no-non-null-assertion\n                .map(function (walkers) { return walkers.map(function (x) { return x._clone(memo); }); });\n            _this.misplacedDepth = walker.misplacedDepth;\n            _this._swallowAttributeValue = walker._swallowAttributeValue;\n            _this.suspendedWs = walker.suspendedWs;\n            _this.ignoreNextWs = walker.ignoreNextWs;\n        }\n        return _this;\n    }\n    GrammarWalker.make = function (el) {\n        return new GrammarWalker(el);\n    };\n    GrammarWalker.prototype._clone = function (memo) {\n        return new GrammarWalker(this, memo);\n    };\n    /**\n     * Resolves a name using the walker's own name resolver.\n     *\n     * @param name A qualified name.\n     *\n     * @param attribute Whether this qualified name refers to an attribute.\n     *\n     * @returns An expanded name, or undefined if the name cannot be resolved.\n     */\n    GrammarWalker.prototype.resolveName = function (name, attribute) {\n        return this.nameResolver.resolveName(name, attribute);\n    };\n    /**\n     * See [[\"name_resolver\".NameResolver.unresolveName]].\n     *\n     * @param uri The URI part of the expanded name.\n     *\n     * @param name The name part.\n     *\n     * @returns The qualified name that corresponds to the expanded name, or\n     * ``undefined`` if it cannot be resolved.\n     */\n    GrammarWalker.prototype.unresolveName = function (uri, name) {\n        return this.nameResolver.unresolveName(uri, name);\n    };\n    GrammarWalker.prototype.enterContext = function () {\n        this.nameResolver.enterContext();\n    };\n    GrammarWalker.prototype.leaveContext = function () {\n        this.nameResolver.leaveContext();\n    };\n    GrammarWalker.prototype.definePrefix = function (prefix, uri) {\n        this.nameResolver.definePrefix(prefix, uri);\n    };\n    /**\n     * On a [[GrammarWalker]] this method cannot return ``undefined``. An\n     * undefined value would mean nothing matched, which is a validation error.\n     *\n     * @param name The event name.\n     *\n     * @param params The event parameters.\n     *\n     * @returns ``false`` if there is no error or an array errors.\n     *\n     * @throws {Error} When trying to process an event type unknown to salve.\n     */\n    // tslint:disable-next-line: max-func-body-length\n    GrammarWalker.prototype.fireEvent = function (name, params) {\n        // Whitespaces are problematic from a validation perspective. On the one\n        // hand, if an element may contain only other elements and no text, then XML\n        // allows putting whitespace between the elements. That whitespace must not\n        // cause a validation error. When mixed content is possible, everywhere\n        // where text is allowed, a text of length 0 is possible. (``<text/>`` does\n        // not allow specifying a pattern or minimum length. And Relax NG\n        // constraints do not allow having an element whose content is a mixture of\n        // ``element`` and ``data`` and ``value`` that would constrain specific text\n        // patterns between the elements.) We can satisfy all situations by dropping\n        // text events that contain only whitespace.\n        //\n        // The only case where we'd want to pass a node consisting entirely of\n        // whitespace is to satisfy a data or value pattern because they can require\n        // a sequence of whitespaces.\n        var wsErr = new base_1.InternalFireEventResult(true);\n        if (name === \"text\") {\n            // Earlier versions of salve processed text events ahead of this switch\n            // block, but we moved it here to improve performance. There's no issue\n            // with having a case for text here because salve disallows firing more\n            // than one text event in sequence.\n            // Process whitespace nodes\n            var text = params[0];\n            if (!/\\S/.test(text)) {\n                if (text === \"\") {\n                    throw new Error(\"firing empty text events makes no sense\");\n                }\n                // We don't check the old value of suspendedWs because salve does not\n                // allow two text events in a row. So we should never have to\n                // concatenate values.\n                this.suspendedWs = text;\n                return false;\n            }\n        }\n        else if (name === \"endTag\") {\n            if (!this.ignoreNextWs && this.suspendedWs !== undefined) {\n                wsErr = this._fireOnCurrentWalkers(\"text\", [this.suspendedWs]);\n            }\n            this.ignoreNextWs = true;\n        }\n        else {\n            this.ignoreNextWs = false;\n        }\n        // Absorb the whitespace: poof, gone!\n        this.suspendedWs = undefined;\n        // This would happen if the user puts an attribute on a tag that does not\n        // allow one. Instead of generating errors for both the attribute name\n        // and value, we generate an error for the name and ignore the value.\n        if (this._swallowAttributeValue) {\n            // Swallow only one event.\n            this._swallowAttributeValue = false;\n            if (name === \"attributeValue\") {\n                return false;\n            }\n            return [new errors_1.ValidationError(\"attribute value required\")];\n        }\n        var ret = this._fireOnCurrentWalkers(name, params);\n        var errors = [];\n        if (ret.matched) {\n            if (ret.refs !== undefined && ret.refs.length !== 0) {\n                var newWalkers = [];\n                var boundName = new name_patterns_1.Name(\"\", params[0], params[1]);\n                try {\n                    for (var _a = tslib_1.__values(ret.refs), _b = _a.next(); !_b.done; _b = _a.next()) {\n                        var item = _b.value;\n                        var walker = item.element.newWalker(this.nameResolver, boundName);\n                        // If we get anything else than false here, the internal logic is\n                        // wrong.\n                        if (!walker.fireEvent(name, params).matched) {\n                            throw new Error(\"error or failed to match on a new element \\\nwalker: the internal logic is incorrect\");\n                        }\n                        newWalkers.push(walker);\n                    }\n                }\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                finally {\n                    try {\n                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                    }\n                    finally { if (e_4) throw e_4.error; }\n                }\n                this.elementWalkerStack.unshift(newWalkers);\n            }\n        }\n        else if (ret.errors !== undefined) {\n            errors.push.apply(errors, tslib_1.__spread(ret.errors));\n        }\n        else {\n            switch (name) {\n                case \"enterStartTag\":\n                case \"startTagAndAttributes\":\n                    // Once in dumb mode, we remain in dumb mode.\n                    if (this.misplacedDepth > 0) {\n                        this.misplacedDepth++;\n                        this.elementWalkerStack.unshift([new MisplacedElementWalker()]);\n                    }\n                    else {\n                        var elName = new name_patterns_1.Name(\"\", params[0], params[1]);\n                        errors.push(new errors_1.ElementNameError(name === \"enterStartTag\" ?\n                            \"tag not allowed here\" :\n                            \"tag not allowed here with these attributes\", elName));\n                        // Try to infer what element is meant by this errant tag. If we\n                        // can't find a candidate, then fall back to a dumb mode.\n                        var candidates = this.el.elementDefinitions[elName.toString()];\n                        if (candidates !== undefined && candidates.length === 1) {\n                            var newWalker = candidates[0].newWalker(this.nameResolver, elName);\n                            this.elementWalkerStack.unshift([newWalker]);\n                            if (!newWalker.fireEvent(name, params).matched) {\n                                throw new Error(\"internal error: the inferred element \" +\n                                    \"does not accept its initial event\");\n                            }\n                        }\n                        else {\n                            // Dumb mode...\n                            this.misplacedDepth++;\n                            this.elementWalkerStack.unshift([new MisplacedElementWalker()]);\n                        }\n                    }\n                    break;\n                case \"endTag\":\n                    errors.push(new errors_1.ElementNameError(\"unexpected end tag\", new name_patterns_1.Name(\"\", params[0], params[1])));\n                    break;\n                case \"attributeName\":\n                    errors.push(new errors_1.AttributeNameError(\"attribute not allowed here\", new name_patterns_1.Name(\"\", params[0], params[1])));\n                    this._swallowAttributeValue = true;\n                    break;\n                case \"attributeNameAndValue\":\n                    errors.push(new errors_1.AttributeNameError(\"attribute not allowed here\", new name_patterns_1.Name(\"\", params[0], params[1])));\n                    break;\n                case \"attributeValue\":\n                    errors.push(new errors_1.ValidationError(\"unexpected attributeValue event; it \\\nis likely that fireEvent is incorrectly called\"));\n                    break;\n                case \"text\":\n                    errors.push(new errors_1.ValidationError(\"text not allowed here\"));\n                    break;\n                case \"leaveStartTag\":\n                // If MisplacedElementWalker did not exist then we would get here if a\n                // file being validated contains a tag which is not allowed. An\n                // ElementNameError will already have been issued. So rather than\n                // violate our contract (which says no undefined value may be\n                // returned) or require that callers do something special with\n                // 'undefined' as a return value, just treat this event as a\n                // non-error.\n                //\n                // But the stack exists, so we cannot get here. If we do end up here,\n                // then there is an internal error somewhere.\n                /* falls through */\n                default:\n                    throw new Error(\"unexpected event type in GrammarWalker's fireEvent: \" + name);\n            }\n        }\n        if (name === \"endTag\") {\n            // We do not need to end the walkers because the fireEvent handler\n            // for elements calls end when it sees an \"endTag\" event.\n            // We do not reduce the stack to nothing.\n            if (this.elementWalkerStack.length > 1) {\n                this.elementWalkerStack.shift();\n            }\n            if (this.misplacedDepth > 0) {\n                this.misplacedDepth--;\n            }\n        }\n        if (!wsErr.matched) {\n            // If we have another error, we don't want to make an issue that text\n            // was not matched. Otherwise, we want to alert the user.\n            if (wsErr.errors !== undefined) {\n                errors.push.apply(errors, tslib_1.__spread(wsErr.errors));\n            }\n            else if (errors.length === 0) {\n                errors.push(new errors_1.ValidationError(\"text not allowed here\"));\n            }\n        }\n        return errors.length !== 0 ? errors : false;\n        var e_4, _c;\n    };\n    GrammarWalker.prototype._fireOnCurrentWalkers = function (name, params) {\n        var walkers = this.elementWalkerStack[0];\n        // Checking whether walkers.length === 0 would not be a particularly useful\n        // optimization, as we don't let that happen.\n        var ret = new base_1.InternalFireEventResult(true);\n        var remainingWalkers = [];\n        try {\n            for (var walkers_1 = tslib_1.__values(walkers), walkers_1_1 = walkers_1.next(); !walkers_1_1.done; walkers_1_1 = walkers_1.next()) {\n                var walker = walkers_1_1.value;\n                var result = walker.fireEvent(name, params);\n                // We immediately filter out results that report a match (i.e. false).\n                if (result.matched) {\n                    remainingWalkers.push(walker);\n                    ret.combine(result);\n                }\n                // There's no point in recording errors if we're going to toss them\n                // anyway.\n                else if (remainingWalkers.length === 0) {\n                    ret.combine(result);\n                }\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (walkers_1_1 && !walkers_1_1.done && (_a = walkers_1.return)) _a.call(walkers_1);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        // We don't remove all walkers. If some walkers were successful and some\n        // were not, then we just keep the successful ones. But removing all walkers\n        // at once prevents us from giving useful error messages.\n        if (remainingWalkers.length !== 0) {\n            this.elementWalkerStack[0] = remainingWalkers;\n            // If some of the walkers matched, we ignore the errors from the other\n            // walkers.\n            ret.matched = true;\n            ret.errors = undefined;\n            return ret;\n        }\n        ret.matched = false;\n        ret.refs = undefined;\n        return ret;\n        var e_5, _a;\n    };\n    GrammarWalker.prototype.canEnd = function () {\n        var top = this.elementWalkerStack[0];\n        return this.elementWalkerStack.length === 1 &&\n            top.length > 0 && top[0].canEnd;\n    };\n    GrammarWalker.prototype.end = function () {\n        if (this.elementWalkerStack.length < 1) {\n            throw new Error(\"stack underflow\");\n        }\n        var finalResult = [];\n        try {\n            for (var _a = tslib_1.__values(this.elementWalkerStack), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var stackElement = _b.value;\n                try {\n                    for (var stackElement_1 = tslib_1.__values(stackElement), stackElement_1_1 = stackElement_1.next(); !stackElement_1_1.done; stackElement_1_1 = stackElement_1.next()) {\n                        var walker = stackElement_1_1.value;\n                        var result = walker.end();\n                        if (result) {\n                            finalResult = finalResult.concat(result);\n                        }\n                    }\n                }\n                catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                finally {\n                    try {\n                        if (stackElement_1_1 && !stackElement_1_1.done && (_c = stackElement_1.return)) _c.call(stackElement_1);\n                    }\n                    finally { if (e_6) throw e_6.error; }\n                }\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        return finalResult.length !== 0 ? finalResult : false;\n        var e_7, _d, e_6, _c;\n    };\n    GrammarWalker.prototype.possible = function () {\n        var possible = new Set();\n        try {\n            for (var _a = tslib_1.__values(this.elementWalkerStack[0]), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var walker = _b.value;\n                set_1.union(possible, walker.possible());\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        // If we have any attributeValue possible, then the only possible\n        // events are attributeValue events.\n        if (possible.size !== 0) {\n            var valueEvs = set_1.filter(possible, function (poss) { return poss.params[0] === \"attributeValue\"; });\n            if (valueEvs.size !== 0) {\n                possible = valueEvs;\n            }\n        }\n        return possible;\n        var e_8, _c;\n    };\n    return GrammarWalker;\n}(base_1.BaseWalker));\nexports.GrammarWalker = GrammarWalker;\n//  LocalWords:  RNG's MPL unresolvable runtime RNG NG firstName enterContext\n//  LocalWords:  leaveContext definePrefix whitespace enterStartTag endTag\n//  LocalWords:  fireEvent attributeValue attributeName leaveStartTag\n//  LocalWords:  misplacedElements ElementNameError GrammarWalker's\n//  LocalWords:  suppressAttributes GrammarWalker\n//# sourceMappingURL=grammar.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar errors_1 = require(\"../errors\");\nvar base_1 = require(\"./base\");\n/**\n * A pattern for RNG references.\n */\nvar Ref = /** @class */ (function (_super) {\n    tslib_1.__extends(Ref, _super);\n    /**\n     *\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param name The reference name.\n     */\n    function Ref(xmlPath, name) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.name = name;\n        return _this;\n    }\n    Ref.prototype._prepare = function (definitions) {\n        this.resolvesTo = definitions.get(this.name);\n        return (this.resolvesTo === undefined) ? [this] : undefined;\n    };\n    Ref.prototype.hasEmptyPattern = function () {\n        // Refs always contain an element at the top level.\n        return false;\n    };\n    Object.defineProperty(Ref.prototype, \"element\", {\n        get: function () {\n            var resolvesTo = this.resolvesTo;\n            if (resolvesTo === undefined) {\n                throw new Error(\"trying to get an element on a ref hat has not been \\\nresolved\");\n            }\n            return resolvesTo.pat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Ref.prototype.newWalker = function (_nameResolver) {\n        // tslint:disable-next-line:no-use-before-declare\n        return new RefWalker(this);\n    };\n    return Ref;\n}(base_1.Pattern));\nexports.Ref = Ref;\nvar RefWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(RefWalker, _super);\n    function RefWalker(elOrWalker, memo) {\n        var _this = _super.call(this) || this;\n        if (elOrWalker.newWalker !== undefined) {\n            _this.el = elOrWalker;\n            _this.element = elOrWalker.element;\n            _this.startName = elOrWalker.element.name;\n            _this.startTagEvent = new base_1.Event(\"enterStartTag\", _this.startName);\n            _this.canEndAttribute = true;\n            _this.canEnd = false;\n        }\n        else {\n            var walker = elOrWalker;\n            _this.el = walker.el;\n            _this.startName = walker.startName;\n            _this.startTagEvent = walker.startTagEvent;\n            _this.element = walker.element;\n            _this.canEndAttribute = walker.canEndAttribute;\n            _this.canEnd = walker.canEnd;\n        }\n        return _this;\n    }\n    RefWalker.prototype._clone = function (memo) {\n        return new RefWalker(this, memo);\n    };\n    RefWalker.prototype.possible = function () {\n        return new Set(this.canEnd ? undefined : [this.startTagEvent]);\n    };\n    RefWalker.prototype.possibleAttributes = function () {\n        return new Set();\n    };\n    RefWalker.prototype.fireEvent = function (name, params) {\n        if (!this.canEnd &&\n            (name === \"enterStartTag\" || name === \"startTagAndAttributes\") &&\n            this.startName.match(params[0], params[1])) {\n            this.canEnd = true;\n            return new base_1.InternalFireEventResult(true, undefined, [this]);\n        }\n        return new base_1.InternalFireEventResult(false);\n    };\n    RefWalker.prototype.end = function () {\n        return !this.canEnd ?\n            [new errors_1.ElementNameError(\"tag required\", this.startName)] : false;\n    };\n    RefWalker.prototype.endAttributes = function () {\n        return false;\n    };\n    return RefWalker;\n}(base_1.InternalWalker));\nexports.RefWalker = RefWalker;\n//# sourceMappingURL=ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Pattern and walker for RNG's ``list`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar datatypes_1 = require(\"../datatypes\");\nvar errors_1 = require(\"../errors\");\nvar name_resolver_1 = require(\"../name_resolver\");\nvar base_1 = require(\"./base\");\n/**\n * Value pattern.\n */\nvar Value = /** @class */ (function (_super) {\n    tslib_1.__extends(Value, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param value The value expected in the document.\n     *\n     * @param type The type of value. ``undefined`` means\n     * ``\"token\"``.\n     *\n     * @param datatypeLibrary The URI of the datatype library to\n     * use. ``undefined`` means use the builtin library.\n     *\n     * @param ns The namespace in which to interpret the value.\n     */\n    // tslint:disable-next-line: no-reserved-keywords\n    function Value(xmlPath, value, type, datatypeLibrary, ns) {\n        if (type === void 0) { type = \"token\"; }\n        if (datatypeLibrary === void 0) { datatypeLibrary = \"\"; }\n        if (ns === void 0) { ns = \"\"; }\n        var _this = _super.call(this, xmlPath) || this;\n        _this.type = type;\n        _this.datatypeLibrary = datatypeLibrary;\n        _this.ns = ns;\n        _this.datatype = datatypes_1.registry.get(_this.datatypeLibrary).types[_this.type];\n        if (_this.datatype === undefined) {\n            throw new Error(\"unknown type: \" + type);\n        }\n        _this.rawValue = value;\n        return _this;\n    }\n    Object.defineProperty(Value.prototype, \"value\", {\n        get: function () {\n            var ret = this._value;\n            if (ret != null) {\n                return ret;\n            }\n            // We construct a pseudo-context representing the context in the schema\n            // file.\n            var context;\n            if (this.datatype.needsContext) {\n                var nr = new name_resolver_1.NameResolver();\n                nr.definePrefix(\"\", this.ns);\n                context = { resolver: nr };\n            }\n            ret = this._value = this.datatype.parseValue(this.xmlPath, this.rawValue, context);\n            return ret;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Value.prototype.hasEmptyPattern = function () {\n        return this.rawValue === \"\";\n    };\n    Value.prototype.newWalker = function (nameResolver) {\n        // tslint:disable-next-line:no-use-before-declare\n        return new ValueWalker(this, nameResolver);\n    };\n    return Value;\n}(base_1.Pattern));\nexports.Value = Value;\n/**\n * Walker for [[Value]].\n */\nvar ValueWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(ValueWalker, _super);\n    function ValueWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = _super.call(this) || this;\n        if (elOrWalker.newWalker !== undefined) {\n            var el = elOrWalker;\n            var nameResolver = nameResolverOrMemo;\n            _this.el = el;\n            _this.nameResolver = nameResolver;\n            _this.context = el.datatype.needsContext ?\n                { resolver: _this.nameResolver } : undefined;\n            _this.matched = false;\n            _this.canEndAttribute = _this.canEnd = el.hasEmptyPattern();\n        }\n        else {\n            var walker = elOrWalker;\n            var memo = nameResolverOrMemo;\n            _this.el = walker.el;\n            _this.nameResolver = base_1.cloneIfNeeded(walker.nameResolver, memo);\n            _this.context = walker.context !== undefined ?\n                { resolver: _this.nameResolver } : undefined;\n            _this.matched = walker.matched;\n            _this.canEnd = walker.canEnd;\n            _this.canEndAttribute = walker.canEndAttribute;\n        }\n        return _this;\n    }\n    ValueWalker.prototype._clone = function (memo) {\n        return new ValueWalker(this, memo);\n    };\n    ValueWalker.prototype.possible = function () {\n        return new Set(this.matched ? undefined :\n            [new base_1.Event(\"text\", this.el.rawValue)]);\n    };\n    ValueWalker.prototype.possibleAttributes = function () {\n        return new Set();\n    };\n    ValueWalker.prototype.fireEvent = function (name, params) {\n        if (this.matched || name !== \"text\" ||\n            !this.el.datatype.equal(params[0], this.el.value, this.context)) {\n            return new base_1.InternalFireEventResult(false);\n        }\n        this.matched = true;\n        this.canEndAttribute = this.canEnd = true;\n        return new base_1.InternalFireEventResult(true);\n    };\n    ValueWalker.prototype.end = function () {\n        return this.canEnd ? false :\n            [new errors_1.ValidationError(\"value required: \" + this.el.rawValue)];\n    };\n    ValueWalker.prototype.endAttributes = function () {\n        return this.canEndAttribute ? false :\n            [new errors_1.ValidationError(\"value required: \" + this.el.rawValue)];\n    };\n    return ValueWalker;\n}(base_1.InternalWalker));\n//  LocalWords:  RNG's MPL RNG nd possibleCached\n//# sourceMappingURL=value.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Pattern and walker for RNG's ``text`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar base_1 = require(\"./base\");\n/**\n * Pattern for ``<text/>``.\n */\nvar Text = /** @class */ (function (_super) {\n    tslib_1.__extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Text.prototype.hasEmptyPattern = function () {\n        // A text node may always be a zero-length node, which mean that we\n        // effectively allow the container to be empty.\n        return true;\n    };\n    Text.prototype.newWalker = function () {\n        // tslint:disable-next-line:no-use-before-declare\n        return singleton;\n    };\n    return Text;\n}(base_1.Pattern));\nexports.Text = Text;\n/**\n *\n * Walker for [[Text]]\n *\n */\nvar TextWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(TextWalker, _super);\n    /**\n     * @param el The pattern for which this walker was constructed.\n     */\n    function TextWalker(el) {\n        var _this = _super.call(this) || this;\n        _this.el = el;\n        _this.canEnd = true;\n        _this.canEndAttribute = true;\n        return _this;\n    }\n    // Since TextWalker is a singleton, the cloning operation just\n    // returns the original walker.\n    TextWalker.prototype.clone = function () {\n        return this;\n    };\n    // Since TextWalker is a singleton, the cloning operation just\n    // returns the original walker.\n    TextWalker.prototype._clone = function () {\n        return this;\n    };\n    TextWalker.prototype.possible = function () {\n        return new Set([TextWalker._textEvent]);\n    };\n    TextWalker.prototype.possibleAttributes = function () {\n        return new Set();\n    };\n    TextWalker.prototype.fireEvent = function (name) {\n        return new base_1.InternalFireEventResult(name === \"text\");\n    };\n    TextWalker.prototype.end = function () {\n        return false;\n    };\n    TextWalker.prototype.endAttributes = function () {\n        return false;\n    };\n    TextWalker._textEvent = new base_1.Event(\"text\", /^[^]*$/);\n    return TextWalker;\n}(base_1.InternalWalker));\nvar singleton = new TextWalker(new Text(\"FAKE ELEMENT\"));\n//  LocalWords:  RNG's MPL possibleCached\n//# sourceMappingURL=text.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Pattern for RNG's ``param`` element.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar base_1 = require(\"./base\");\n/**\n * This is a defunct pattern. During the processing of the RNG file all\n * ``param`` elements are converted into parameters to [[\"patterns/data\".Data]]\n * so we never end up with a converted file that contains an instance of this\n * class.\n */\nvar Param = /** @class */ (function (_super) {\n    tslib_1.__extends(Param, _super);\n    function Param(xmlPath) {\n        var _this = _super.call(this, xmlPath) || this;\n        throw new Error(\"this pattern is a placeholder and should never actually \" +\n            \"be used\");\n        return _this;\n    }\n    return Param;\n}(base_1.Pattern));\nexports.Param = Param;\n//  LocalWords:  RNG's MPL\n//# sourceMappingURL=param.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar set_1 = require(\"../set\");\nvar base_1 = require(\"./base\");\n/**\n * A pattern for ``<oneOrMore>``.\n */\nvar OneOrMore = /** @class */ (function (_super) {\n    tslib_1.__extends(OneOrMore, _super);\n    function OneOrMore() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OneOrMore.prototype._computeHasEmptyPattern = function () {\n        return this.pat.hasEmptyPattern();\n    };\n    OneOrMore.prototype.newWalker = function (nameResolver) {\n        // tslint:disable-next-line:no-use-before-declare\n        return new OneOrMoreWalker(this, nameResolver);\n    };\n    return OneOrMore;\n}(base_1.OneSubpattern));\nexports.OneOrMore = OneOrMore;\n/**\n * Walker for [[OneOrMore]]\n */\nvar OneOrMoreWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(OneOrMoreWalker, _super);\n    function OneOrMoreWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = _super.call(this) || this;\n        if (elOrWalker.newWalker !== undefined) {\n            var el = elOrWalker;\n            var nameResolver = nameResolverOrMemo;\n            _this.el = el;\n            _this.subPat = el.pat;\n            _this.hasAttrs = el.hasAttrs();\n            _this.nameResolver = nameResolver;\n            _this.currentIteration = el.pat.newWalker(nameResolver);\n            _this.canEndAttribute = !_this.hasAttrs ||\n                _this.currentIteration.canEndAttribute;\n            _this.canEnd = _this.currentIteration.canEnd;\n        }\n        else {\n            var walker = elOrWalker;\n            var memo = nameResolverOrMemo;\n            _this.el = walker.el;\n            _this.subPat = walker.subPat;\n            _this.hasAttrs = walker.hasAttrs;\n            _this.nameResolver = base_1.cloneIfNeeded(walker.nameResolver, memo);\n            _this.currentIteration = walker.currentIteration._clone(memo);\n            _this.nextIteration = walker.nextIteration !== undefined ?\n                walker.nextIteration._clone(memo) : undefined;\n            _this.canEndAttribute = walker.canEndAttribute;\n            _this.canEnd = walker.canEnd;\n        }\n        return _this;\n    }\n    OneOrMoreWalker.prototype._clone = function (memo) {\n        return new OneOrMoreWalker(this, memo);\n    };\n    OneOrMoreWalker.prototype.possible = function () {\n        var ret = this.currentIteration.possible();\n        if (this.currentIteration.canEnd) {\n            if (this.nextIteration === undefined) {\n                this.nextIteration = this.subPat.newWalker(this.nameResolver);\n            }\n            set_1.union(ret, this.nextIteration.possible());\n        }\n        return ret;\n    };\n    OneOrMoreWalker.prototype.possibleAttributes = function () {\n        var ret = this.currentIteration.possibleAttributes();\n        if (this.currentIteration.canEnd) {\n            if (this.nextIteration === undefined) {\n                this.nextIteration = this.subPat.newWalker(this.nameResolver);\n            }\n            set_1.union(ret, this.nextIteration.possibleAttributes());\n        }\n        return ret;\n    };\n    OneOrMoreWalker.prototype.fireEvent = function (name, params) {\n        var ret = new base_1.InternalFireEventResult(false);\n        var evIsAttributeEvent = base_1.isAttributeEvent(name);\n        if (evIsAttributeEvent && !this.hasAttrs) {\n            return ret;\n        }\n        var currentIteration = this.currentIteration;\n        ret = currentIteration.fireEvent(name, params);\n        if (ret.matched) {\n            if (evIsAttributeEvent) {\n                this.canEndAttribute = currentIteration.canEndAttribute;\n            }\n            this.canEnd = currentIteration.canEnd;\n            return ret;\n        }\n        if (currentIteration.canEnd) {\n            if (this.nextIteration === undefined) {\n                this.nextIteration = this.subPat.newWalker(this.nameResolver);\n            }\n            var nextRet = this.nextIteration.fireEvent(name, params);\n            if (nextRet.matched) {\n                if (currentIteration.end()) {\n                    throw new Error(\"internal error; canEnd returns true but end() fails\");\n                }\n                this.currentIteration = this.nextIteration;\n                this.nextIteration = undefined;\n                if (evIsAttributeEvent) {\n                    this.canEndAttribute = this.currentIteration.canEndAttribute;\n                }\n                this.canEnd = this.currentIteration.canEnd;\n            }\n            return nextRet;\n        }\n        return ret;\n    };\n    OneOrMoreWalker.prototype.end = function () {\n        return this.canEnd ? false : this.currentIteration.end();\n    };\n    OneOrMoreWalker.prototype.endAttributes = function () {\n        return this.canEndAttribute ? false : this.currentIteration.endAttributes();\n    };\n    return OneOrMoreWalker;\n}(base_1.InternalWalker));\n//  LocalWords:  RNG's MPL currentIteration nextIteration canEnd oneOrMore rng\n//  LocalWords:  anyName suppressAttributes instantiateCurrentIteration\n//# sourceMappingURL=one_or_more.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Pattern and walker for RNG's ``list`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = require(\"../errors\");\nvar base_1 = require(\"./base\");\n/**\n * List pattern.\n */\nvar List = /** @class */ (function (_super) {\n    tslib_1.__extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    List.prototype._computeHasEmptyPattern = function () {\n        return this.pat.hasEmptyPattern();\n    };\n    // We override these because lists cannot contain attributes so there's\n    // no point in caching _hasAttrs's result.\n    List.prototype._prepare = function (definitions, namespaces) {\n        var ret = this.pat._prepare(definitions, namespaces);\n        this._cachedHasEmptyPattern = this._computeHasEmptyPattern();\n        return ret;\n    };\n    List.prototype.hasAttrs = function () {\n        return false;\n    };\n    List.prototype.newWalker = function (nameResolver) {\n        // tslint:disable-next-line:no-use-before-declare\n        return new ListWalker(this, nameResolver);\n    };\n    return List;\n}(base_1.OneSubpattern));\nexports.List = List;\n/**\n * Walker for [[List]].\n *\n */\nvar ListWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(ListWalker, _super);\n    function ListWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = _super.call(this) || this;\n        if (elOrWalker.newWalker !== undefined) {\n            var el = elOrWalker;\n            var nameResolver = nameResolverOrMemo;\n            _this.el = el;\n            _this.nameResolver = nameResolver;\n            _this.subwalker = el.pat.newWalker(nameResolver);\n            _this.canEndAttribute = _this.canEnd = _this.hasEmptyPattern();\n        }\n        else {\n            var walker = elOrWalker;\n            var memo = nameResolverOrMemo;\n            _this.el = walker.el;\n            _this.nameResolver = base_1.cloneIfNeeded(walker.nameResolver, memo);\n            _this.subwalker = walker.subwalker._clone(memo);\n            _this.canEnd = walker.canEnd;\n            _this.canEndAttribute = walker.canEndAttribute;\n        }\n        return _this;\n    }\n    ListWalker.prototype._clone = function (memo) {\n        return new ListWalker(this, memo);\n    };\n    ListWalker.prototype.possible = function () {\n        return this.subwalker.possible();\n    };\n    ListWalker.prototype.possibleAttributes = function () {\n        return new Set();\n    };\n    ListWalker.prototype.fireEvent = function (name, params) {\n        var ret = new base_1.InternalFireEventResult(false);\n        // Only this can match.\n        if (name !== \"text\") {\n            return ret;\n        }\n        var trimmed = params[0].trim();\n        // The list walker cannot send empty strings to its children because it\n        // validates a list of **tokens**.\n        if (trimmed === \"\") {\n            ret.matched = true;\n            return ret;\n        }\n        var tokens = trimmed.split(/\\s+/);\n        try {\n            for (var tokens_1 = tslib_1.__values(tokens), tokens_1_1 = tokens_1.next(); !tokens_1_1.done; tokens_1_1 = tokens_1.next()) {\n                var token = tokens_1_1.value;\n                ret = this.subwalker.fireEvent(\"text\", [token]);\n                if (!ret.matched) {\n                    this.canEndAttribute = this.canEnd = false;\n                    return ret;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (tokens_1_1 && !tokens_1_1.done && (_a = tokens_1.return)) _a.call(tokens_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.canEndAttribute = this.canEnd = this.subwalker.canEnd;\n        return ret;\n        var e_1, _a;\n    };\n    ListWalker.prototype.end = function () {\n        if (this.canEnd) {\n            return false;\n        }\n        var ret = this.subwalker.end();\n        return ret !== false ? ret : [new errors_1.ValidationError(\"unfulfilled list\")];\n    };\n    ListWalker.prototype.endAttributes = function () {\n        return false;\n    };\n    return ListWalker;\n}(base_1.InternalWalker));\n//  LocalWords:  RNG's MPL nd\n//# sourceMappingURL=list.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar set_1 = require(\"../set\");\nvar base_1 = require(\"./base\");\n/**\n * A pattern for ``<interleave>``.\n */\nvar Interleave = /** @class */ (function (_super) {\n    tslib_1.__extends(Interleave, _super);\n    function Interleave() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Interleave.prototype._computeHasEmptyPattern = function () {\n        return this.patA.hasEmptyPattern() && this.patB.hasEmptyPattern();\n    };\n    Interleave.prototype.newWalker = function (nameResolver) {\n        // tslint:disable-next-line:no-use-before-declare\n        return new InterleaveWalker(this, nameResolver);\n    };\n    return Interleave;\n}(base_1.TwoSubpatterns));\nexports.Interleave = Interleave;\n/**\n * Walker for [[Interleave]].\n */\nvar InterleaveWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(InterleaveWalker, _super);\n    function InterleaveWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = _super.call(this) || this;\n        if (elOrWalker.newWalker !== undefined) {\n            var el = elOrWalker;\n            var nameResolver = nameResolverOrMemo;\n            _this.el = el;\n            _this.nameResolver = nameResolver;\n            _this.ended = false;\n            _this.hasAttrs = el.hasAttrs();\n            _this.walkerA = el.patA.newWalker(nameResolver);\n            _this.walkerB = el.patB.newWalker(nameResolver);\n            _this.canEndAttribute = !_this.hasAttrs ||\n                (_this.walkerA.canEndAttribute && _this.walkerB.canEndAttribute);\n            _this.canEnd = _this.walkerA.canEnd && _this.walkerB.canEnd;\n        }\n        else {\n            var walker = elOrWalker;\n            var memo = nameResolverOrMemo;\n            _this.el = walker.el;\n            _this.nameResolver = base_1.cloneIfNeeded(walker.nameResolver, memo);\n            _this.ended = walker.ended;\n            _this.hasAttrs = walker.hasAttrs;\n            _this.walkerA = walker.walkerA._clone(memo);\n            _this.walkerB = walker.walkerB._clone(memo);\n            _this.canEndAttribute = walker.canEndAttribute;\n            _this.canEnd = walker.canEnd;\n        }\n        return _this;\n    }\n    InterleaveWalker.prototype._clone = function (memo) {\n        return new InterleaveWalker(this, memo);\n    };\n    InterleaveWalker.prototype.possible = function () {\n        if (this.ended) {\n            return new Set();\n        }\n        var ret = this.walkerA.possible();\n        set_1.union(ret, this.walkerB.possible());\n        return ret;\n    };\n    InterleaveWalker.prototype.possibleAttributes = function () {\n        if (this.ended) {\n            return new Set();\n        }\n        var ret = this.walkerA.possibleAttributes();\n        set_1.union(ret, this.walkerB.possibleAttributes());\n        return ret;\n    };\n    //\n    // Interleave is very unusual among the patterns due to the fact that it\n    // ignores subpattern order. For instance\n    //\n    // <interleave>A<interleave>B C</interleave></interleave>\n    //\n    // can match any permutation of the patterns A B and C. In particular, the\n    // sequence B A C needs to be handled by the inner interleave, then by the\n    // pattern for A and then by the inner interleave again.\n    //\n    // Moreover, while validating, it may match subpatterns only partially.\n    // For instance:\n    //\n    // <interleave><group>A B</group>C</interleave>\n    //\n    // will match all permutations of A B C where A appears before B (so A B C, A\n    // C B and C A B). The sequence A C B is particularly problematic as it means\n    // matching the inner group, then matching C, then going back to the inner\n    // group!\n    //\n    // When an interleave subpattern starts to match, we may not switch to\n    // another subpattern until that subpattern is done. However, \"done\" here is\n    // not synonymous with ``canEnd === true``. Looking again at the B A C\n    // scenario above, we can switch to A when B is done but the inner level\n    // interleave is itself not \"done\" because C has not matched yet.\n    //\n    // We work around the issue by counting the number of start tags and end tags\n    // seen by a pattern. When they are equal we can switch away from from the\n    // pattern to another one.\n    //\n    InterleaveWalker.prototype.fireEvent = function (name, params) {\n        var ret = new base_1.InternalFireEventResult(false);\n        var evIsAttributeEvent = base_1.isAttributeEvent(name);\n        if (evIsAttributeEvent && !this.hasAttrs) {\n            return ret;\n        }\n        // This is useful because it is possible for fireEvent to be called\n        // after end() has been called.\n        if (this.ended) {\n            return ret;\n        }\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        var retA = walkerA.fireEvent(name, params);\n        if (retA.matched) {\n            if (evIsAttributeEvent) {\n                this.canEndAttribute =\n                    walkerA.canEndAttribute && walkerB.canEndAttribute;\n            }\n            this.canEnd = walkerA.canEnd && walkerB.canEnd;\n            // The constraints on interleave do not allow for two child patterns of\n            // interleave to match. So if the first walker matched, the second\n            // cannot. So we don't have to fireEvent on the second walker if the\n            // first matched.\n            return retA;\n        }\n        var retB = walkerB.fireEvent(name, params);\n        if (retB.matched) {\n            if (evIsAttributeEvent) {\n                this.canEndAttribute =\n                    walkerA.canEndAttribute && walkerB.canEndAttribute;\n            }\n            this.canEnd = walkerA.canEnd && walkerB.canEnd;\n            return retB;\n        }\n        return ret;\n    };\n    InterleaveWalker.prototype.end = function () {\n        if (this.ended) {\n            return false;\n        }\n        if (this.canEnd) {\n            this.ended = true;\n            return false;\n        }\n        var retA = this.walkerA.end();\n        var retB = this.walkerB.end();\n        if (retA) {\n            return !retB ? retA : retA.concat(retB);\n        }\n        return retB;\n    };\n    InterleaveWalker.prototype.endAttributes = function () {\n        if (this.ended || this.canEndAttribute) {\n            return false;\n        }\n        var retA = this.walkerA.endAttributes();\n        var retB = this.walkerB.endAttributes();\n        if (retA) {\n            return retB ? retA.concat(retB) : retA;\n        }\n        return retB;\n    };\n    return InterleaveWalker;\n}(base_1.InternalWalker));\n//  LocalWords:  RNG's MPL NG inA inB instantiateWalkers fireEvent retA retB\n//# sourceMappingURL=interleave.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Pattern and walker for RNG's ``group`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = require(\"../errors\");\nvar set_1 = require(\"../set\");\nvar base_1 = require(\"./base\");\n/**\n * A pattern for ``<group>``.\n */\nvar Group = /** @class */ (function (_super) {\n    tslib_1.__extends(Group, _super);\n    function Group() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Group.prototype._computeHasEmptyPattern = function () {\n        return this.patA.hasEmptyPattern() && this.patB.hasEmptyPattern();\n    };\n    Group.prototype.newWalker = function (nameResolver) {\n        // tslint:disable-next-line:no-use-before-declare\n        return new GroupWalker(this, nameResolver);\n    };\n    return Group;\n}(base_1.TwoSubpatterns));\nexports.Group = Group;\n/**\n * Walker for [[Group]].\n */\nvar GroupWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(GroupWalker, _super);\n    function GroupWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = _super.call(this) || this;\n        if (elOrWalker.newWalker !== undefined) {\n            var el = elOrWalker;\n            var nameResolver = nameResolverOrMemo;\n            _this.el = el;\n            _this.hasAttrs = el.hasAttrs();\n            _this.nameResolver = nameResolver;\n            _this.ended = false;\n            var walkerA = _this.walkerA = el.patA.newWalker(nameResolver);\n            var walkerB = _this.walkerB = el.patB.newWalker(nameResolver);\n            _this.endedA = false;\n            _this.canEndAttribute = !_this.hasAttrs ||\n                (walkerA.canEndAttribute && walkerB.canEndAttribute);\n            _this.canEnd = walkerA.canEnd && walkerB.canEnd;\n        }\n        else {\n            var walker = elOrWalker;\n            var memo = nameResolverOrMemo;\n            _this.el = walker.el;\n            _this.hasAttrs = walker.hasAttrs;\n            _this.nameResolver = base_1.cloneIfNeeded(walker.nameResolver, memo);\n            _this.walkerA = walker.walkerA._clone(memo);\n            _this.walkerB = walker.walkerB._clone(memo);\n            _this.endedA = walker.endedA;\n            _this.ended = walker.ended;\n            _this.canEndAttribute = walker.canEndAttribute;\n            _this.canEnd = walker.canEnd;\n        }\n        return _this;\n    }\n    GroupWalker.prototype._clone = function (memo) {\n        return new GroupWalker(this, memo);\n    };\n    GroupWalker.prototype.possible = function () {\n        if (this.ended) {\n            return new Set();\n        }\n        var ret = this.walkerA.possible();\n        if (this.walkerA.canEnd) {\n            set_1.union(ret, this.walkerB.possible());\n        }\n        return ret;\n    };\n    GroupWalker.prototype.possibleAttributes = function () {\n        if (this.ended) {\n            return new Set();\n        }\n        var ret = this.walkerA.possibleAttributes();\n        set_1.union(ret, this.walkerB.possibleAttributes());\n        return ret;\n    };\n    GroupWalker.prototype.fireEvent = function (name, params) {\n        var ret = new base_1.InternalFireEventResult(false);\n        var evIsAttributeEvent = base_1.isAttributeEvent(name);\n        if (evIsAttributeEvent && !this.hasAttrs) {\n            return ret;\n        }\n        // This is useful because it is possible for fireEvent to be called\n        // after end() has been called.\n        if (this.ended) {\n            return ret;\n        }\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        if (!this.endedA) {\n            var retA = walkerA.fireEvent(name, params);\n            if (retA.matched || retA.errors !== undefined) {\n                if (evIsAttributeEvent) {\n                    this.canEndAttribute = walkerA.canEndAttribute &&\n                        walkerB.canEndAttribute;\n                }\n                this.canEnd = walkerA.canEnd && walkerB.canEnd;\n                return retA;\n            }\n            // We must return right away if walkerA cannot yet end. Only attribute\n            // events are allowed to move forward.\n            if (!evIsAttributeEvent && !walkerA.canEnd) {\n                return retA;\n            }\n        }\n        var retB = walkerB.fireEvent(name, params);\n        if (evIsAttributeEvent) {\n            this.canEndAttribute = walkerA.canEndAttribute && walkerB.canEndAttribute;\n        }\n        this.canEnd = walkerA.canEnd && walkerB.canEnd;\n        // Non-attribute event: if walker b matched the event then we must end\n        // walkerA, if we've not already done so.\n        if (!evIsAttributeEvent && retB.matched) {\n            this.endedA = true;\n            return retB.combine(base_1.InternalFireEventResult.fromEndResult(walkerA.end()));\n        }\n        return retB;\n    };\n    GroupWalker.prototype.end = function () {\n        if (this.ended) {\n            return false;\n        }\n        if (this.canEnd) {\n            this.ended = true;\n            return false;\n        }\n        var retA = this.walkerA.end();\n        // If we get here and the only errors we get are attribute errors, we must\n        // move on to check the second walker too.\n        if (retA) {\n            try {\n                for (var retA_1 = tslib_1.__values(retA), retA_1_1 = retA_1.next(); !retA_1_1.done; retA_1_1 = retA_1.next()) {\n                    var err = retA_1_1.value;\n                    if (!(err instanceof errors_1.AttributeValueError ||\n                        err instanceof errors_1.AttributeNameError)) {\n                        // We ran into a non-attribute error. We can stop here.\n                        return retA;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (retA_1_1 && !retA_1_1.done && (_a = retA_1.return)) _a.call(retA_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        var retB = this.walkerB.end();\n        if (retB) {\n            return retA ? retA.concat(retB) : retB;\n        }\n        return retA;\n        var e_1, _a;\n    };\n    GroupWalker.prototype.endAttributes = function () {\n        if (this.ended || this.canEndAttribute) {\n            return false;\n        }\n        var endA = this.walkerA.endAttributes();\n        var endB = this.walkerB.endAttributes();\n        if (endB) {\n            return endA ? endA.concat(endB) : endB;\n        }\n        return endA;\n    };\n    return GroupWalker;\n}(base_1.InternalWalker));\n//  LocalWords:  RNG's MPL instantiateWalkers walkerA retB canEnd endedA\n//# sourceMappingURL=group.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Pattern and walker for RNG's ``element`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = require(\"../errors\");\nvar base_1 = require(\"./base\");\nvar not_allowed_1 = require(\"./not_allowed\");\n/**\n * A pattern for elements.\n */\nvar Element = /** @class */ (function (_super) {\n    tslib_1.__extends(Element, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param name The qualified name of the element.\n     *\n     * @param pat The pattern contained by this one.\n     */\n    function Element(xmlPath, name, pat) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.name = name;\n        _this.pat = pat;\n        _this.notAllowed = _this.pat instanceof not_allowed_1.NotAllowed;\n        return _this;\n    }\n    Element.prototype.newWalker = function (resolver, boundName) {\n        return this.notAllowed ?\n            this.pat.newWalker(resolver) :\n            // tslint:disable-next-line:no-use-before-declare\n            new ElementWalker(this, resolver, boundName);\n    };\n    Element.prototype.hasAttrs = function () {\n        return false;\n    };\n    Element.prototype.hasEmptyPattern = function () {\n        // The question is whether an element allows empty content **in the context\n        // in which it appears**, not empty content inside it. So the answer is\n        // always negative.\n        return false;\n    };\n    Element.prototype._prepare = function (definitions, namespaces) {\n        this.name._recordNamespaces(namespaces, true);\n        return this.pat._prepare(definitions, namespaces);\n    };\n    return Element;\n}(base_1.BasePattern));\nexports.Element = Element;\n/**\n *\n * Walker for [[Element]].\n */\nvar ElementWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(ElementWalker, _super);\n    function ElementWalker(elOrWalker, nameResolverOrMemo, boundName) {\n        var _this = _super.call(this) || this;\n        if (elOrWalker.newWalker !== undefined) {\n            var el = elOrWalker;\n            var nameResolver = nameResolverOrMemo;\n            _this.el = el;\n            _this.nameResolver = nameResolver;\n            _this.walker = el.pat.newWalker(nameResolver);\n            _this.endedStartTag = false;\n            // tslint:disable-next-line:no-non-null-assertion\n            _this.boundName = boundName;\n            _this.endTagEvent = new base_1.Event(\"endTag\", _this.boundName);\n            _this.canEndAttribute = true;\n            _this.canEnd = false;\n        }\n        else {\n            var walker = elOrWalker;\n            var memo = nameResolverOrMemo;\n            _this.el = walker.el;\n            _this.nameResolver = base_1.cloneIfNeeded(walker.nameResolver, memo);\n            _this.endedStartTag = walker.endedStartTag;\n            _this.walker = walker.walker._clone(memo);\n            // No cloning needed since these are immutable.\n            _this.endTagEvent = walker.endTagEvent;\n            _this.boundName = walker.boundName;\n            _this.canEndAttribute = walker.canEndAttribute;\n            _this.canEnd = walker.canEnd;\n        }\n        return _this;\n    }\n    ElementWalker.prototype._clone = function (memo) {\n        return new ElementWalker(this, memo);\n    };\n    ElementWalker.prototype.possible = function () {\n        // Contrarily to all other implementations, which must only return\n        // non-attribute events. This implementation actually returns all types of\n        // possible events. Representing this distinction through TS type\n        // declarations would be cumbersome. The exception works because of the way\n        // Relax NG constrains the structure of a simplified schema. The only\n        // possible caller for this method is ``GrammarWalker``, which also aims to\n        // return all possible events.\n        if (!this.endedStartTag) {\n            var walker = this.walker;\n            var ret = walker.possibleAttributes();\n            if (walker.canEndAttribute) {\n                ret.add(ElementWalker._leaveStartTagEvent);\n            }\n            return ret;\n        }\n        else if (!this.canEnd) {\n            var walker = this.walker;\n            var posses = walker.possible();\n            if (walker.canEnd) {\n                posses.add(this.endTagEvent);\n            }\n            return posses;\n        }\n        return new Set();\n    };\n    ElementWalker.prototype.possibleAttributes = function () {\n        throw new Error(\"calling possibleAttributes on ElementWalker is invalid\");\n    };\n    ElementWalker.prototype.fireEvent = function (name, params) {\n        // This is not a useful optimization. canEnd becomes true once we see\n        // the end tag, which means that this walker will be popped of\n        // GrammarWalker's stack and won't be called again.\n        //\n        // if (this.canEnd) {\n        //   return undefined;\n        // }\n        var walker = this.walker;\n        if (this.endedStartTag) {\n            if (name === \"endTag\") {\n                // We cannot get here if canEnd is already true. So this will\n                // necessarily leave it false or set it to true but it won't set a true\n                // canEnd back to false.\n                this.canEnd = this.boundName.match(params[0], params[1]);\n                return base_1.InternalFireEventResult.fromEndResult(walker.end());\n            }\n            return walker.fireEvent(name, params);\n        }\n        switch (name) {\n            case \"enterStartTag\":\n                if (!this.boundName.match(params[0], params[1])) {\n                    throw new Error(\"event starting the element had an incorrect name\");\n                }\n                return new base_1.InternalFireEventResult(true);\n            case \"startTagAndAttributes\":\n                if (!this.boundName.match(params[0], params[1])) {\n                    throw new Error(\"event starting the element had an incorrect name\");\n                }\n                // We need to handle all attributes and leave the start tag.\n                for (var ix = 2; ix < params.length; ix += 3) {\n                    var attrRet = walker.fireEvent(\"attributeNameAndValue\", params.slice(ix, ix + 3));\n                    if (!attrRet.matched) {\n                        return attrRet;\n                    }\n                }\n            /* fall through */\n            case \"leaveStartTag\":\n                this.endedStartTag = true;\n                return this.el.pat.hasAttrs() ?\n                    base_1.InternalFireEventResult.fromEndResult(walker.endAttributes()) :\n                    new base_1.InternalFireEventResult(true);\n            default:\n        }\n        return walker.fireEvent(name, params);\n    };\n    ElementWalker.prototype.end = function () {\n        if (this.canEnd) {\n            return false;\n        }\n        var walkerRet = this.walker.end();\n        var ret = walkerRet ? walkerRet : [];\n        ret.push(new errors_1.ElementNameError(this.endedStartTag ?\n            \"tag not closed\" :\n            \"start tag not terminated\", this.boundName));\n        return ret;\n    };\n    ElementWalker.prototype.endAttributes = function () {\n        throw new Error(\"calling endAttributes on ElementWalker is illegal\");\n    };\n    ElementWalker._leaveStartTagEvent = new base_1.Event(\"leaveStartTag\");\n    return ElementWalker;\n}(base_1.InternalWalker));\n//  LocalWords:  RNG's MPL RNG ElementWalker leaveStartTag valueEvs\n//  LocalWords:  enterStartTag attributeValue endTag errored subwalker\n//  LocalWords:  neutralizeAttribute boundName fireEvent suppressAttributes\n//# sourceMappingURL=element.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar base_1 = require(\"./base\");\n/**\n * A pattern for ``<define>``.\n */\nvar Define = /** @class */ (function (_super) {\n    tslib_1.__extends(Define, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param name The name of the definition.\n     *\n     * @param pat The pattern contained by this one.\n     */\n    function Define(xmlPath, name, pat) {\n        var _this = _super.call(this, xmlPath, pat) || this;\n        _this.name = name;\n        return _this;\n    }\n    Define.prototype._computeHasEmptyPattern = function () {\n        return this.pat.hasEmptyPattern();\n    };\n    return Define;\n}(base_1.OneSubpattern));\nexports.Define = Define;\n//# sourceMappingURL=define.js.map","module.exports = [\n    {\n        'name': 'Adlam',\n        'astral': '\\uD83A[\\uDD00-\\uDD4A\\uDD50-\\uDD59\\uDD5E\\uDD5F]'\n    },\n    {\n        'name': 'Ahom',\n        'astral': '\\uD805[\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF3F]'\n    },\n    {\n        'name': 'Anatolian_Hieroglyphs',\n        'astral': '\\uD811[\\uDC00-\\uDE46]'\n    },\n    {\n        'name': 'Arabic',\n        'bmp': '\\u0600-\\u0604\\u0606-\\u060B\\u060D-\\u061A\\u061C\\u061E\\u0620-\\u063F\\u0641-\\u064A\\u0656-\\u066F\\u0671-\\u06DC\\u06DE-\\u06FF\\u0750-\\u077F\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u08FF\\uFB50-\\uFBC1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFD\\uFE70-\\uFE74\\uFE76-\\uFEFC',\n        'astral': '\\uD803[\\uDE60-\\uDE7E]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB\\uDEF0\\uDEF1]'\n    },\n    {\n        'name': 'Armenian',\n        'bmp': '\\u0531-\\u0556\\u0559-\\u055F\\u0561-\\u0587\\u058A\\u058D-\\u058F\\uFB13-\\uFB17'\n    },\n    {\n        'name': 'Avestan',\n        'astral': '\\uD802[\\uDF00-\\uDF35\\uDF39-\\uDF3F]'\n    },\n    {\n        'name': 'Balinese',\n        'bmp': '\\u1B00-\\u1B4B\\u1B50-\\u1B7C'\n    },\n    {\n        'name': 'Bamum',\n        'bmp': '\\uA6A0-\\uA6F7',\n        'astral': '\\uD81A[\\uDC00-\\uDE38]'\n    },\n    {\n        'name': 'Bassa_Vah',\n        'astral': '\\uD81A[\\uDED0-\\uDEED\\uDEF0-\\uDEF5]'\n    },\n    {\n        'name': 'Batak',\n        'bmp': '\\u1BC0-\\u1BF3\\u1BFC-\\u1BFF'\n    },\n    {\n        'name': 'Bengali',\n        'bmp': '\\u0980-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FD'\n    },\n    {\n        'name': 'Bhaiksuki',\n        'astral': '\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC45\\uDC50-\\uDC6C]'\n    },\n    {\n        'name': 'Bopomofo',\n        'bmp': '\\u02EA\\u02EB\\u3105-\\u312E\\u31A0-\\u31BA'\n    },\n    {\n        'name': 'Brahmi',\n        'astral': '\\uD804[\\uDC00-\\uDC4D\\uDC52-\\uDC6F\\uDC7F]'\n    },\n    {\n        'name': 'Braille',\n        'bmp': '\\u2800-\\u28FF'\n    },\n    {\n        'name': 'Buginese',\n        'bmp': '\\u1A00-\\u1A1B\\u1A1E\\u1A1F'\n    },\n    {\n        'name': 'Buhid',\n        'bmp': '\\u1740-\\u1753'\n    },\n    {\n        'name': 'Canadian_Aboriginal',\n        'bmp': '\\u1400-\\u167F\\u18B0-\\u18F5'\n    },\n    {\n        'name': 'Carian',\n        'astral': '\\uD800[\\uDEA0-\\uDED0]'\n    },\n    {\n        'name': 'Caucasian_Albanian',\n        'astral': '\\uD801[\\uDD30-\\uDD63\\uDD6F]'\n    },\n    {\n        'name': 'Chakma',\n        'astral': '\\uD804[\\uDD00-\\uDD34\\uDD36-\\uDD43]'\n    },\n    {\n        'name': 'Cham',\n        'bmp': '\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA5F'\n    },\n    {\n        'name': 'Cherokee',\n        'bmp': '\\u13A0-\\u13F5\\u13F8-\\u13FD\\uAB70-\\uABBF'\n    },\n    {\n        'name': 'Common',\n        'bmp': '\\0-@\\\\[-`\\\\{-\\xA9\\xAB-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9-\\u02DF\\u02E5-\\u02E9\\u02EC-\\u02FF\\u0374\\u037E\\u0385\\u0387\\u0589\\u0605\\u060C\\u061B\\u061F\\u0640\\u06DD\\u08E2\\u0964\\u0965\\u0E3F\\u0FD5-\\u0FD8\\u10FB\\u16EB-\\u16ED\\u1735\\u1736\\u1802\\u1803\\u1805\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u2000-\\u200B\\u200E-\\u2064\\u2066-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20BF\\u2100-\\u2125\\u2127-\\u2129\\u212C-\\u2131\\u2133-\\u214D\\u214F-\\u215F\\u2189-\\u218B\\u2190-\\u2426\\u2440-\\u244A\\u2460-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD2\\u2BEC-\\u2BEF\\u2E00-\\u2E49\\u2FF0-\\u2FFB\\u3000-\\u3004\\u3006\\u3008-\\u3020\\u3030-\\u3037\\u303C-\\u303F\\u309B\\u309C\\u30A0\\u30FB\\u30FC\\u3190-\\u319F\\u31C0-\\u31E3\\u3220-\\u325F\\u327F-\\u32CF\\u3358-\\u33FF\\u4DC0-\\u4DFF\\uA700-\\uA721\\uA788-\\uA78A\\uA830-\\uA839\\uA92E\\uA9CF\\uAB5B\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFF70\\uFF9E\\uFF9F\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD',\n        'astral': '\\uD800[\\uDD00-\\uDD02\\uDD07-\\uDD33\\uDD37-\\uDD3F\\uDD90-\\uDD9B\\uDDD0-\\uDDFC\\uDEE1-\\uDEFB]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD66\\uDD6A-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDF00-\\uDF56\\uDF60-\\uDF71]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDFCB\\uDFCE-\\uDFFF]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD00-\\uDD0C\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDDAC\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED4\\uDEE0-\\uDEEC\\uDEF0-\\uDEF8\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD00-\\uDD0B\\uDD10-\\uDD3E\\uDD40-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]'\n    },\n    {\n        'name': 'Coptic',\n        'bmp': '\\u03E2-\\u03EF\\u2C80-\\u2CF3\\u2CF9-\\u2CFF'\n    },\n    {\n        'name': 'Cuneiform',\n        'astral': '\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC70-\\uDC74\\uDC80-\\uDD43]'\n    },\n    {\n        'name': 'Cypriot',\n        'astral': '\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F]'\n    },\n    {\n        'name': 'Cyrillic',\n        'bmp': '\\u0400-\\u0484\\u0487-\\u052F\\u1C80-\\u1C88\\u1D2B\\u1D78\\u2DE0-\\u2DFF\\uA640-\\uA69F\\uFE2E\\uFE2F'\n    },\n    {\n        'name': 'Deseret',\n        'astral': '\\uD801[\\uDC00-\\uDC4F]'\n    },\n    {\n        'name': 'Devanagari',\n        'bmp': '\\u0900-\\u0950\\u0953-\\u0963\\u0966-\\u097F\\uA8E0-\\uA8FD'\n    },\n    {\n        'name': 'Duployan',\n        'astral': '\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9C-\\uDC9F]'\n    },\n    {\n        'name': 'Egyptian_Hieroglyphs',\n        'astral': '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]'\n    },\n    {\n        'name': 'Elbasan',\n        'astral': '\\uD801[\\uDD00-\\uDD27]'\n    },\n    {\n        'name': 'Ethiopic',\n        'bmp': '\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E'\n    },\n    {\n        'name': 'Georgian',\n        'bmp': '\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u10FF\\u2D00-\\u2D25\\u2D27\\u2D2D'\n    },\n    {\n        'name': 'Glagolitic',\n        'bmp': '\\u2C00-\\u2C2E\\u2C30-\\u2C5E',\n        'astral': '\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]'\n    },\n    {\n        'name': 'Gothic',\n        'astral': '\\uD800[\\uDF30-\\uDF4A]'\n    },\n    {\n        'name': 'Grantha',\n        'astral': '\\uD804[\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]'\n    },\n    {\n        'name': 'Greek',\n        'bmp': '\\u0370-\\u0373\\u0375-\\u0377\\u037A-\\u037D\\u037F\\u0384\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03E1\\u03F0-\\u03FF\\u1D26-\\u1D2A\\u1D5D-\\u1D61\\u1D66-\\u1D6A\\u1DBF\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u2126\\uAB65',\n        'astral': '\\uD800[\\uDD40-\\uDD8E\\uDDA0]|\\uD834[\\uDE00-\\uDE45]'\n    },\n    {\n        'name': 'Gujarati',\n        'bmp': '\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9-\\u0AFF'\n    },\n    {\n        'name': 'Gurmukhi',\n        'bmp': '\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75'\n    },\n    {\n        'name': 'Han',\n        'bmp': '\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u3005\\u3007\\u3021-\\u3029\\u3038-\\u303B\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uF900-\\uFA6D\\uFA70-\\uFAD9',\n        'astral': '[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]'\n    },\n    {\n        'name': 'Hangul',\n        'bmp': '\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\u3200-\\u321E\\u3260-\\u327E\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC'\n    },\n    {\n        'name': 'Hanunoo',\n        'bmp': '\\u1720-\\u1734'\n    },\n    {\n        'name': 'Hatran',\n        'astral': '\\uD802[\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDCFF]'\n    },\n    {\n        'name': 'Hebrew',\n        'bmp': '\\u0591-\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F'\n    },\n    {\n        'name': 'Hiragana',\n        'bmp': '\\u3041-\\u3096\\u309D-\\u309F',\n        'astral': '\\uD82C[\\uDC01-\\uDD1E]|\\uD83C\\uDE00'\n    },\n    {\n        'name': 'Imperial_Aramaic',\n        'astral': '\\uD802[\\uDC40-\\uDC55\\uDC57-\\uDC5F]'\n    },\n    {\n        'name': 'Inherited',\n        'bmp': '\\u0300-\\u036F\\u0485\\u0486\\u064B-\\u0655\\u0670\\u0951\\u0952\\u1AB0-\\u1ABE\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200C\\u200D\\u20D0-\\u20F0\\u302A-\\u302D\\u3099\\u309A\\uFE00-\\uFE0F\\uFE20-\\uFE2D',\n        'astral': '\\uD800[\\uDDFD\\uDEE0]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD]|\\uDB40[\\uDD00-\\uDDEF]'\n    },\n    {\n        'name': 'Inscriptional_Pahlavi',\n        'astral': '\\uD802[\\uDF60-\\uDF72\\uDF78-\\uDF7F]'\n    },\n    {\n        'name': 'Inscriptional_Parthian',\n        'astral': '\\uD802[\\uDF40-\\uDF55\\uDF58-\\uDF5F]'\n    },\n    {\n        'name': 'Javanese',\n        'bmp': '\\uA980-\\uA9CD\\uA9D0-\\uA9D9\\uA9DE\\uA9DF'\n    },\n    {\n        'name': 'Kaithi',\n        'astral': '\\uD804[\\uDC80-\\uDCC1]'\n    },\n    {\n        'name': 'Kannada',\n        'bmp': '\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2'\n    },\n    {\n        'name': 'Katakana',\n        'bmp': '\\u30A1-\\u30FA\\u30FD-\\u30FF\\u31F0-\\u31FF\\u32D0-\\u32FE\\u3300-\\u3357\\uFF66-\\uFF6F\\uFF71-\\uFF9D',\n        'astral': '\\uD82C\\uDC00'\n    },\n    {\n        'name': 'Kayah_Li',\n        'bmp': '\\uA900-\\uA92D\\uA92F'\n    },\n    {\n        'name': 'Kharoshthi',\n        'astral': '\\uD802[\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F-\\uDE47\\uDE50-\\uDE58]'\n    },\n    {\n        'name': 'Khmer',\n        'bmp': '\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u19E0-\\u19FF'\n    },\n    {\n        'name': 'Khojki',\n        'astral': '\\uD804[\\uDE00-\\uDE11\\uDE13-\\uDE3E]'\n    },\n    {\n        'name': 'Khudawadi',\n        'astral': '\\uD804[\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9]'\n    },\n    {\n        'name': 'Lao',\n        'bmp': '\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF'\n    },\n    {\n        'name': 'Latin',\n        'bmp': 'A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02E0-\\u02E4\\u1D00-\\u1D25\\u1D2C-\\u1D5C\\u1D62-\\u1D65\\u1D6B-\\u1D77\\u1D79-\\u1DBE\\u1E00-\\u1EFF\\u2071\\u207F\\u2090-\\u209C\\u212A\\u212B\\u2132\\u214E\\u2160-\\u2188\\u2C60-\\u2C7F\\uA722-\\uA787\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA7FF\\uAB30-\\uAB5A\\uAB5C-\\uAB64\\uFB00-\\uFB06\\uFF21-\\uFF3A\\uFF41-\\uFF5A'\n    },\n    {\n        'name': 'Lepcha',\n        'bmp': '\\u1C00-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C4F'\n    },\n    {\n        'name': 'Limbu',\n        'bmp': '\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u194F'\n    },\n    {\n        'name': 'Linear_A',\n        'astral': '\\uD801[\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]'\n    },\n    {\n        'name': 'Linear_B',\n        'astral': '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA]'\n    },\n    {\n        'name': 'Lisu',\n        'bmp': '\\uA4D0-\\uA4FF'\n    },\n    {\n        'name': 'Lycian',\n        'astral': '\\uD800[\\uDE80-\\uDE9C]'\n    },\n    {\n        'name': 'Lydian',\n        'astral': '\\uD802[\\uDD20-\\uDD39\\uDD3F]'\n    },\n    {\n        'name': 'Mahajani',\n        'astral': '\\uD804[\\uDD50-\\uDD76]'\n    },\n    {\n        'name': 'Malayalam',\n        'bmp': '\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F'\n    },\n    {\n        'name': 'Mandaic',\n        'bmp': '\\u0840-\\u085B\\u085E'\n    },\n    {\n        'name': 'Manichaean',\n        'astral': '\\uD802[\\uDEC0-\\uDEE6\\uDEEB-\\uDEF6]'\n    },\n    {\n        'name': 'Marchen',\n        'astral': '\\uD807[\\uDC70-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]'\n    },\n    {\n        'name': 'Masaram_Gondi',\n        'astral': '\\uD807[\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]'\n    },\n    {\n        'name': 'Meetei_Mayek',\n        'bmp': '\\uAAE0-\\uAAF6\\uABC0-\\uABED\\uABF0-\\uABF9'\n    },\n    {\n        'name': 'Mende_Kikakui',\n        'astral': '\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCD6]'\n    },\n    {\n        'name': 'Meroitic_Cursive',\n        'astral': '\\uD802[\\uDDA0-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDDFF]'\n    },\n    {\n        'name': 'Meroitic_Hieroglyphs',\n        'astral': '\\uD802[\\uDD80-\\uDD9F]'\n    },\n    {\n        'name': 'Miao',\n        'astral': '\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]'\n    },\n    {\n        'name': 'Modi',\n        'astral': '\\uD805[\\uDE00-\\uDE44\\uDE50-\\uDE59]'\n    },\n    {\n        'name': 'Mongolian',\n        'bmp': '\\u1800\\u1801\\u1804\\u1806-\\u180E\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA',\n        'astral': '\\uD805[\\uDE60-\\uDE6C]'\n    },\n    {\n        'name': 'Mro',\n        'astral': '\\uD81A[\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE6E\\uDE6F]'\n    },\n    {\n        'name': 'Multani',\n        'astral': '\\uD804[\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA9]'\n    },\n    {\n        'name': 'Myanmar',\n        'bmp': '\\u1000-\\u109F\\uA9E0-\\uA9FE\\uAA60-\\uAA7F'\n    },\n    {\n        'name': 'Nabataean',\n        'astral': '\\uD802[\\uDC80-\\uDC9E\\uDCA7-\\uDCAF]'\n    },\n    {\n        'name': 'New_Tai_Lue',\n        'bmp': '\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE\\u19DF'\n    },\n    {\n        'name': 'Newa',\n        'astral': '\\uD805[\\uDC00-\\uDC59\\uDC5B\\uDC5D]'\n    },\n    {\n        'name': 'Nko',\n        'bmp': '\\u07C0-\\u07FA'\n    },\n    {\n        'name': 'Nushu',\n        'astral': '\\uD81B\\uDFE1|\\uD82C[\\uDD70-\\uDEFB]'\n    },\n    {\n        'name': 'Ogham',\n        'bmp': '\\u1680-\\u169C'\n    },\n    {\n        'name': 'Ol_Chiki',\n        'bmp': '\\u1C50-\\u1C7F'\n    },\n    {\n        'name': 'Old_Hungarian',\n        'astral': '\\uD803[\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDCFF]'\n    },\n    {\n        'name': 'Old_Italic',\n        'astral': '\\uD800[\\uDF00-\\uDF23\\uDF2D-\\uDF2F]'\n    },\n    {\n        'name': 'Old_North_Arabian',\n        'astral': '\\uD802[\\uDE80-\\uDE9F]'\n    },\n    {\n        'name': 'Old_Permic',\n        'astral': '\\uD800[\\uDF50-\\uDF7A]'\n    },\n    {\n        'name': 'Old_Persian',\n        'astral': '\\uD800[\\uDFA0-\\uDFC3\\uDFC8-\\uDFD5]'\n    },\n    {\n        'name': 'Old_South_Arabian',\n        'astral': '\\uD802[\\uDE60-\\uDE7F]'\n    },\n    {\n        'name': 'Old_Turkic',\n        'astral': '\\uD803[\\uDC00-\\uDC48]'\n    },\n    {\n        'name': 'Oriya',\n        'bmp': '\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77'\n    },\n    {\n        'name': 'Osage',\n        'astral': '\\uD801[\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB]'\n    },\n    {\n        'name': 'Osmanya',\n        'astral': '\\uD801[\\uDC80-\\uDC9D\\uDCA0-\\uDCA9]'\n    },\n    {\n        'name': 'Pahawh_Hmong',\n        'astral': '\\uD81A[\\uDF00-\\uDF45\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]'\n    },\n    {\n        'name': 'Palmyrene',\n        'astral': '\\uD802[\\uDC60-\\uDC7F]'\n    },\n    {\n        'name': 'Pau_Cin_Hau',\n        'astral': '\\uD806[\\uDEC0-\\uDEF8]'\n    },\n    {\n        'name': 'Phags_Pa',\n        'bmp': '\\uA840-\\uA877'\n    },\n    {\n        'name': 'Phoenician',\n        'astral': '\\uD802[\\uDD00-\\uDD1B\\uDD1F]'\n    },\n    {\n        'name': 'Psalter_Pahlavi',\n        'astral': '\\uD802[\\uDF80-\\uDF91\\uDF99-\\uDF9C\\uDFA9-\\uDFAF]'\n    },\n    {\n        'name': 'Rejang',\n        'bmp': '\\uA930-\\uA953\\uA95F'\n    },\n    {\n        'name': 'Runic',\n        'bmp': '\\u16A0-\\u16EA\\u16EE-\\u16F8'\n    },\n    {\n        'name': 'Samaritan',\n        'bmp': '\\u0800-\\u082D\\u0830-\\u083E'\n    },\n    {\n        'name': 'Saurashtra',\n        'bmp': '\\uA880-\\uA8C5\\uA8CE-\\uA8D9'\n    },\n    {\n        'name': 'Sharada',\n        'astral': '\\uD804[\\uDD80-\\uDDCD\\uDDD0-\\uDDDF]'\n    },\n    {\n        'name': 'Shavian',\n        'astral': '\\uD801[\\uDC50-\\uDC7F]'\n    },\n    {\n        'name': 'Siddham',\n        'astral': '\\uD805[\\uDD80-\\uDDB5\\uDDB8-\\uDDDD]'\n    },\n    {\n        'name': 'SignWriting',\n        'astral': '\\uD836[\\uDC00-\\uDE8B\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]'\n    },\n    {\n        'name': 'Sinhala',\n        'bmp': '\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4',\n        'astral': '\\uD804[\\uDDE1-\\uDDF4]'\n    },\n    {\n        'name': 'Sora_Sompeng',\n        'astral': '\\uD804[\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9]'\n    },\n    {\n        'name': 'Soyombo',\n        'astral': '\\uD806[\\uDE50-\\uDE83\\uDE86-\\uDE9C\\uDE9E-\\uDEA2]'\n    },\n    {\n        'name': 'Sundanese',\n        'bmp': '\\u1B80-\\u1BBF\\u1CC0-\\u1CC7'\n    },\n    {\n        'name': 'Syloti_Nagri',\n        'bmp': '\\uA800-\\uA82B'\n    },\n    {\n        'name': 'Syriac',\n        'bmp': '\\u0700-\\u070D\\u070F-\\u074A\\u074D-\\u074F\\u0860-\\u086A'\n    },\n    {\n        'name': 'Tagalog',\n        'bmp': '\\u1700-\\u170C\\u170E-\\u1714'\n    },\n    {\n        'name': 'Tagbanwa',\n        'bmp': '\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773'\n    },\n    {\n        'name': 'Tai_Le',\n        'bmp': '\\u1950-\\u196D\\u1970-\\u1974'\n    },\n    {\n        'name': 'Tai_Tham',\n        'bmp': '\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD'\n    },\n    {\n        'name': 'Tai_Viet',\n        'bmp': '\\uAA80-\\uAAC2\\uAADB-\\uAADF'\n    },\n    {\n        'name': 'Takri',\n        'astral': '\\uD805[\\uDE80-\\uDEB7\\uDEC0-\\uDEC9]'\n    },\n    {\n        'name': 'Tamil',\n        'bmp': '\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA'\n    },\n    {\n        'name': 'Tangut',\n        'astral': '\\uD81B\\uDFE0|[\\uD81C-\\uD820][\\uDC00-\\uDFFF]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]'\n    },\n    {\n        'name': 'Telugu',\n        'bmp': '\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C78-\\u0C7F'\n    },\n    {\n        'name': 'Thaana',\n        'bmp': '\\u0780-\\u07B1'\n    },\n    {\n        'name': 'Thai',\n        'bmp': '\\u0E01-\\u0E3A\\u0E40-\\u0E5B'\n    },\n    {\n        'name': 'Tibetan',\n        'bmp': '\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FD4\\u0FD9\\u0FDA'\n    },\n    {\n        'name': 'Tifinagh',\n        'bmp': '\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F'\n    },\n    {\n        'name': 'Tirhuta',\n        'astral': '\\uD805[\\uDC80-\\uDCC7\\uDCD0-\\uDCD9]'\n    },\n    {\n        'name': 'Ugaritic',\n        'astral': '\\uD800[\\uDF80-\\uDF9D\\uDF9F]'\n    },\n    {\n        'name': 'Vai',\n        'bmp': '\\uA500-\\uA62B'\n    },\n    {\n        'name': 'Warang_Citi',\n        'astral': '\\uD806[\\uDCA0-\\uDCF2\\uDCFF]'\n    },\n    {\n        'name': 'Yi',\n        'bmp': '\\uA000-\\uA48C\\uA490-\\uA4C6'\n    },\n    {\n        'name': 'Zanabazar_Square',\n        'astral': '\\uD806[\\uDE00-\\uDE47]'\n    }\n];\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _scripts = require('../../tools/output/scripts');\n\nvar _scripts2 = _interopRequireDefault(_scripts);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (XRegExp) {\n\n  /**\n   * Adds support for all Unicode scripts. E.g., `\\p{Latin}`. Token names are case insensitive,\n   * and any spaces, hyphens, and underscores are ignored.\n   *\n   * Uses Unicode 10.0.0.\n   *\n   * @requires XRegExp, Unicode Base\n   */\n\n  if (!XRegExp.addUnicodeData) {\n    throw new ReferenceError('Unicode Base must be loaded before Unicode Scripts');\n  }\n\n  XRegExp.addUnicodeData(_scripts2.default);\n}; /*!\n    * XRegExp Unicode Scripts 4.1.1\n    * <xregexp.com>\n    * Steven Levithan (c) 2010-present MIT License\n    * Unicode data by Mathias Bynens <mathiasbynens.be>\n    */\n\nmodule.exports = exports['default'];","module.exports = [\n    {\n        'name': 'ASCII',\n        'bmp': '\\0-\\x7F'\n    },\n    {\n        'name': 'Alphabetic',\n        'bmp': 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0345\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05B0-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0657\\u0659-\\u065F\\u066E-\\u06D3\\u06D5-\\u06DC\\u06E1-\\u06E8\\u06ED-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710-\\u073F\\u074D-\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0817\\u081A-\\u082C\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08DF\\u08E3-\\u08E9\\u08F0-\\u093B\\u093D-\\u094C\\u094E-\\u0950\\u0955-\\u0963\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C4\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09F0\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B\\u0A4C\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A70-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0-\\u0AE3\\u0AF9-\\u0AFC\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D-\\u0B44\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4C\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCC\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E46\\u0E4D\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ECD\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F81\\u0F88-\\u0F97\\u0F99-\\u0FBC\\u1000-\\u1036\\u1038\\u103B-\\u103F\\u1050-\\u1062\\u1065-\\u1068\\u106E-\\u1086\\u108E\\u109C\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1713\\u1720-\\u1733\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17B3\\u17B6-\\u17C8\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u1938\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A61-\\u1A74\\u1AA7\\u1B00-\\u1B33\\u1B35-\\u1B43\\u1B45-\\u1B4B\\u1B80-\\u1BA9\\u1BAC-\\u1BAF\\u1BBA-\\u1BE5\\u1BE7-\\u1BF1\\u1C00-\\u1C35\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1DE7-\\u1DF4\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u24B6-\\u24E9\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA674-\\uA67B\\uA67F-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA827\\uA840-\\uA873\\uA880-\\uA8C3\\uA8C5\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA92A\\uA930-\\uA952\\uA960-\\uA97C\\uA980-\\uA9B2\\uA9B4-\\uA9BF\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAABE\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n        'astral': '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC45\\uDC82-\\uDCB8\\uDCD0-\\uDCE8\\uDD00-\\uDD32\\uDD50-\\uDD72\\uDD76\\uDD80-\\uDDBF\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE34\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEE8\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D-\\uDF44\\uDF47\\uDF48\\uDF4B\\uDF4C\\uDF50\\uDF57\\uDF5D-\\uDF63]|\\uD805[\\uDC00-\\uDC41\\uDC43-\\uDC45\\uDC47-\\uDC4A\\uDC80-\\uDCC1\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDB5\\uDDB8-\\uDDBE\\uDDD8-\\uDDDD\\uDE00-\\uDE3E\\uDE40\\uDE44\\uDE80-\\uDEB5\\uDF00-\\uDF19\\uDF1D-\\uDF2A]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00-\\uDE32\\uDE35-\\uDE3E\\uDE50-\\uDE83\\uDE86-\\uDE97\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC3E\\uDC40\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD41\\uDD43\\uDD46\\uDD47]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9E]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD47]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]'\n    },\n    {\n        'name': 'Any',\n        'isBmpLast': true,\n        'bmp': '\\0-\\uFFFF',\n        'astral': '[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]'\n    },\n    {\n        'name': 'Default_Ignorable_Code_Point',\n        'bmp': '\\xAD\\u034F\\u061C\\u115F\\u1160\\u17B4\\u17B5\\u180B-\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u3164\\uFE00-\\uFE0F\\uFEFF\\uFFA0\\uFFF0-\\uFFF8',\n        'astral': '\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|[\\uDB40-\\uDB43][\\uDC00-\\uDFFF]'\n    },\n    {\n        'name': 'Lowercase',\n        'bmp': 'a-z\\xAA\\xB5\\xBA\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02B8\\u02C0\\u02C1\\u02E0-\\u02E4\\u0345\\u0371\\u0373\\u0377\\u037A-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1DBF\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u2071\\u207F\\u2090-\\u209C\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2170-\\u217F\\u2184\\u24D0-\\u24E9\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7D\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B-\\uA69D\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7F8-\\uA7FA\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\n        'astral': '\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD83A[\\uDD22-\\uDD43]'\n    },\n    {\n        'name': 'Noncharacter_Code_Point',\n        'bmp': '\\uFDD0-\\uFDEF\\uFFFE\\uFFFF',\n        'astral': '[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]'\n    },\n    {\n        'name': 'Uppercase',\n        'bmp': 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2160-\\u216F\\u2183\\u24B6-\\u24CF\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A',\n        'astral': '\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]'\n    },\n    {\n        'name': 'White_Space',\n        'bmp': '\\t-\\r \\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\n    }\n];\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _properties = require('../../tools/output/properties');\n\nvar _properties2 = _interopRequireDefault(_properties);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (XRegExp) {\n\n    /**\n     * Adds properties to meet the UTS #18 Level 1 RL1.2 requirements for Unicode regex support. See\n     * <http://unicode.org/reports/tr18/#RL1.2>. Following are definitions of these properties from\n     * UAX #44 <http://unicode.org/reports/tr44/>:\n     *\n     * - Alphabetic\n     *   Characters with the Alphabetic property. Generated from: Lowercase + Uppercase + Lt + Lm +\n     *   Lo + Nl + Other_Alphabetic.\n     *\n     * - Default_Ignorable_Code_Point\n     *   For programmatic determination of default ignorable code points. New characters that should\n     *   be ignored in rendering (unless explicitly supported) will be assigned in these ranges,\n     *   permitting programs to correctly handle the default rendering of such characters when not\n     *   otherwise supported.\n     *\n     * - Lowercase\n     *   Characters with the Lowercase property. Generated from: Ll + Other_Lowercase.\n     *\n     * - Noncharacter_Code_Point\n     *   Code points permanently reserved for internal use.\n     *\n     * - Uppercase\n     *   Characters with the Uppercase property. Generated from: Lu + Other_Uppercase.\n     *\n     * - White_Space\n     *   Spaces, separator characters and other control characters which should be treated by\n     *   programming languages as \"white space\" for the purpose of parsing elements.\n     *\n     * The properties ASCII, Any, and Assigned are also included but are not defined in UAX #44. UTS\n     * #18 RL1.2 additionally requires support for Unicode scripts and general categories. These are\n     * included in XRegExp's Unicode Categories and Unicode Scripts addons.\n     *\n     * Token names are case insensitive, and any spaces, hyphens, and underscores are ignored.\n     *\n     * Uses Unicode 10.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Properties');\n    }\n\n    var unicodeData = _properties2.default;\n\n    // Add non-generated data\n    unicodeData.push({\n        name: 'Assigned',\n        // Since this is defined as the inverse of Unicode category Cn (Unassigned), the Unicode\n        // Categories addon is required to use this property\n        inverseOf: 'Cn'\n    });\n\n    XRegExp.addUnicodeData(unicodeData);\n}; /*!\n    * XRegExp Unicode Properties 4.1.1\n    * <xregexp.com>\n    * Steven Levithan (c) 2012-present MIT License\n    * Unicode data by Mathias Bynens <mathiasbynens.be>\n    */\n\nmodule.exports = exports['default'];","module.exports = [\n    {\n        'name': 'C',\n        'alias': 'Other',\n        'isBmpLast': true,\n        'bmp': '\\0-\\x1F\\x7F-\\x9F\\xAD\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u0605\\u061C\\u061D\\u06DD\\u070E\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F\\u086B-\\u089F\\u08B5\\u08BE-\\u08D3\\u08E2\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FE-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D04\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D50-\\u0D53\\u0D64\\u0D65\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180E\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C89-\\u1CBF\\u1CC8-\\u1CCF\\u1CFA-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20C0-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2B97\\u2BBA-\\u2BBC\\u2BC9\\u2BD3-\\u2BEB\\u2BF0-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E4A-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312F\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FEB-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7AF\\uA7B8-\\uA7F6\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C6-\\uA8CD\\uA8DA-\\uA8DF\\uA8FE\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB66-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD-\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFFB\\uFFFE\\uFFFF',\n        'astral': '\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8F\\uDD9C-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD70-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE34-\\uDE37\\uDE3B-\\uDE3E\\uDE48-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD00-\\uDE5F\\uDE7F-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC70-\\uDC7E\\uDCBD\\uDCC2-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD44-\\uDD4F\\uDD77-\\uDD7F\\uDDCE\\uDDCF\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF3B\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC5A\\uDC5C\\uDC5E-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE5F\\uDE6D-\\uDE7F\\uDEB8-\\uDEBF\\uDECA-\\uDEFF\\uDF1A-\\uDF1C\\uDF2C-\\uDF2F\\uDF40-\\uDFFF]|\\uD806[\\uDC00-\\uDC9F\\uDCF3-\\uDCFE\\uDD00-\\uDDFF\\uDE48-\\uDE4F\\uDE84\\uDE85\\uDE9D\\uDEA3-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC46-\\uDC4F\\uDC6D-\\uDC6F\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD823-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83F\\uD87B-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDE70-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDEFF\\uDF45-\\uDF4F\\uDF7F-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2-\\uDFFF]|\\uD821[\\uDFED-\\uDFFF]|\\uD822[\\uDEF3-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA0-\\uDFFF]|\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDD73-\\uDD7A\\uDDE9-\\uDDFF\\uDE46-\\uDEFF\\uDF57-\\uDF5F\\uDF72-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDCFF\\uDD4B-\\uDD4F\\uDD5A-\\uDD5D\\uDD60-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDD0D-\\uDD0F\\uDD2F\\uDD6C-\\uDD6F\\uDDAD-\\uDDE5\\uDE03-\\uDE0F\\uDE3C-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDE5F\\uDE66-\\uDEFF]|\\uD83D[\\uDED5-\\uDEDF\\uDEED-\\uDEEF\\uDEF9-\\uDEFF\\uDF74-\\uDF7F\\uDFD5-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE-\\uDCFF\\uDD0C-\\uDD0F\\uDD3F\\uDD4D-\\uDD4F\\uDD6C-\\uDD7F\\uDD98-\\uDDBF\\uDDC1-\\uDDCF\\uDDE7-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]'\n    },\n    {\n        'name': 'Cc',\n        'alias': 'Control',\n        'bmp': '\\0-\\x1F\\x7F-\\x9F'\n    },\n    {\n        'name': 'Cf',\n        'alias': 'Format',\n        'bmp': '\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB',\n        'astral': '\\uD804\\uDCBD|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]'\n    },\n    {\n        'name': 'Cn',\n        'alias': 'Unassigned',\n        'bmp': '\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u05FF\\u061D\\u070E\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F\\u086B-\\u089F\\u08B5\\u08BE-\\u08D3\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FE-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D04\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D50-\\u0D53\\u0D64\\u0D65\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C89-\\u1CBF\\u1CC8-\\u1CCF\\u1CFA-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u2065\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20C0-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2B97\\u2BBA-\\u2BBC\\u2BC9\\u2BD3-\\u2BEB\\u2BF0-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E4A-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312F\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FEB-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7AF\\uA7B8-\\uA7F6\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C6-\\uA8CD\\uA8DA-\\uA8DF\\uA8FE\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB66-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD\\uFEFE\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFF8\\uFFFE\\uFFFF',\n        'astral': '\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8F\\uDD9C-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD70-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE34-\\uDE37\\uDE3B-\\uDE3E\\uDE48-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD00-\\uDE5F\\uDE7F-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC70-\\uDC7E\\uDCC2-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD44-\\uDD4F\\uDD77-\\uDD7F\\uDDCE\\uDDCF\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF3B\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC5A\\uDC5C\\uDC5E-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE5F\\uDE6D-\\uDE7F\\uDEB8-\\uDEBF\\uDECA-\\uDEFF\\uDF1A-\\uDF1C\\uDF2C-\\uDF2F\\uDF40-\\uDFFF]|\\uD806[\\uDC00-\\uDC9F\\uDCF3-\\uDCFE\\uDD00-\\uDDFF\\uDE48-\\uDE4F\\uDE84\\uDE85\\uDE9D\\uDEA3-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC46-\\uDC4F\\uDC6D-\\uDC6F\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD823-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83F\\uD87B-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDB7F][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDE70-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDEFF\\uDF45-\\uDF4F\\uDF7F-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2-\\uDFFF]|\\uD821[\\uDFED-\\uDFFF]|\\uD822[\\uDEF3-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA4-\\uDFFF]|\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDDE9-\\uDDFF\\uDE46-\\uDEFF\\uDF57-\\uDF5F\\uDF72-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDCFF\\uDD4B-\\uDD4F\\uDD5A-\\uDD5D\\uDD60-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDD0D-\\uDD0F\\uDD2F\\uDD6C-\\uDD6F\\uDDAD-\\uDDE5\\uDE03-\\uDE0F\\uDE3C-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDE5F\\uDE66-\\uDEFF]|\\uD83D[\\uDED5-\\uDEDF\\uDEED-\\uDEEF\\uDEF9-\\uDEFF\\uDF74-\\uDF7F\\uDFD5-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE-\\uDCFF\\uDD0C-\\uDD0F\\uDD3F\\uDD4D-\\uDD4F\\uDD6C-\\uDD7F\\uDD98-\\uDDBF\\uDDC1-\\uDDCF\\uDDE7-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00\\uDC02-\\uDC1F\\uDC80-\\uDCFF\\uDDF0-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]'\n    },\n    {\n        'name': 'Co',\n        'alias': 'Private_Use',\n        'bmp': '\\uE000-\\uF8FF',\n        'astral': '[\\uDB80-\\uDBBE\\uDBC0-\\uDBFE][\\uDC00-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDC00-\\uDFFD]'\n    },\n    {\n        'name': 'Cs',\n        'alias': 'Surrogate',\n        'bmp': '\\uD800-\\uDFFF'\n    },\n    {\n        'name': 'L',\n        'alias': 'Letter',\n        'bmp': 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n        'astral': '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]'\n    },\n    {\n        'name': 'LC',\n        'alias': 'Cased_Letter',\n        'bmp': 'A-Za-z\\xB5\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u01BA\\u01BC-\\u01BF\\u01C4-\\u0293\\u0295-\\u02AF\\u0370-\\u0373\\u0376\\u0377\\u037B-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0561-\\u0587\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2134\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2C7B\\u2C7E-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA640-\\uA66D\\uA680-\\uA69B\\uA722-\\uA76F\\uA771-\\uA787\\uA78B-\\uA78E\\uA790-\\uA7AE\\uA7B0-\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A\\uFF41-\\uFF5A',\n        'astral': '\\uD801[\\uDC00-\\uDC4F\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB]|\\uD803[\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD806[\\uDCA0-\\uDCDF]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDD00-\\uDD43]'\n    },\n    {\n        'name': 'Ll',\n        'alias': 'Lowercase_Letter',\n        'bmp': 'a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\n        'astral': '\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD83A[\\uDD22-\\uDD43]'\n    },\n    {\n        'name': 'Lm',\n        'alias': 'Modifier_Letter',\n        'bmp': '\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E\\uFF9F',\n        'astral': '\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F\\uDFE0\\uDFE1]'\n    },\n    {\n        'name': 'Lo',\n        'alias': 'Other_Letter',\n        'bmp': '\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n        'astral': '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]'\n    },\n    {\n        'name': 'Lt',\n        'alias': 'Titlecase_Letter',\n        'bmp': '\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC'\n    },\n    {\n        'name': 'Lu',\n        'alias': 'Uppercase_Letter',\n        'bmp': 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A',\n        'astral': '\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21]'\n    },\n    {\n        'name': 'M',\n        'alias': 'Mark',\n        'bmp': '\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\n        'astral': '\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDDCA-\\uDDCC\\uDE2C-\\uDE37\\uDE3E\\uDEDF-\\uDEEA\\uDF00-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC35-\\uDC46\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDDDC\\uDDDD\\uDE30-\\uDE40\\uDEAB-\\uDEB7\\uDF1D-\\uDF2B]|\\uD806[\\uDE01-\\uDE0A\\uDE33-\\uDE39\\uDE3B-\\uDE3E\\uDE47\\uDE51-\\uDE5B\\uDE8A-\\uDE99]|\\uD807[\\uDC2F-\\uDC36\\uDC38-\\uDC3F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD31-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD45\\uDD47]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A]|\\uDB40[\\uDD00-\\uDDEF]'\n    },\n    {\n        'name': 'Mc',\n        'alias': 'Spacing_Mark',\n        'bmp': '\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u094F\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1A19\\u1A1A\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF2\\u1CF3\\u1CF7\\u302E\\u302F\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BD-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uAA7D\\uAAEB\\uAAEE\\uAAEF\\uAAF5\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC',\n        'astral': '\\uD804[\\uDC00\\uDC02\\uDC82\\uDCB0-\\uDCB2\\uDCB7\\uDCB8\\uDD2C\\uDD82\\uDDB3-\\uDDB5\\uDDBF\\uDDC0\\uDE2C-\\uDE2E\\uDE32\\uDE33\\uDE35\\uDEE0-\\uDEE2\\uDF02\\uDF03\\uDF3E\\uDF3F\\uDF41-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63]|\\uD805[\\uDC35-\\uDC37\\uDC40\\uDC41\\uDC45\\uDCB0-\\uDCB2\\uDCB9\\uDCBB-\\uDCBE\\uDCC1\\uDDAF-\\uDDB1\\uDDB8-\\uDDBB\\uDDBE\\uDE30-\\uDE32\\uDE3B\\uDE3C\\uDE3E\\uDEAC\\uDEAE\\uDEAF\\uDEB6\\uDF20\\uDF21\\uDF26]|\\uD806[\\uDE07\\uDE08\\uDE39\\uDE57\\uDE58\\uDE97]|\\uD807[\\uDC2F\\uDC3E\\uDCA9\\uDCB1\\uDCB4]|\\uD81B[\\uDF51-\\uDF7E]|\\uD834[\\uDD65\\uDD66\\uDD6D-\\uDD72]'\n    },\n    {\n        'name': 'Me',\n        'alias': 'Enclosing_Mark',\n        'bmp': '\\u0488\\u0489\\u1ABE\\u20DD-\\u20E0\\u20E2-\\u20E4\\uA670-\\uA672'\n    },\n    {\n        'name': 'Mn',\n        'alias': 'Nonspacing_Mark',\n        'bmp': '\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\n        'astral': '\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC01\\uDC38-\\uDC46\\uDC7F-\\uDC81\\uDCB3-\\uDCB6\\uDCB9\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD2B\\uDD2D-\\uDD34\\uDD73\\uDD80\\uDD81\\uDDB6-\\uDDBE\\uDDCA-\\uDDCC\\uDE2F-\\uDE31\\uDE34\\uDE36\\uDE37\\uDE3E\\uDEDF\\uDEE3-\\uDEEA\\uDF00\\uDF01\\uDF3C\\uDF40\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC38-\\uDC3F\\uDC42-\\uDC44\\uDC46\\uDCB3-\\uDCB8\\uDCBA\\uDCBF\\uDCC0\\uDCC2\\uDCC3\\uDDB2-\\uDDB5\\uDDBC\\uDDBD\\uDDBF\\uDDC0\\uDDDC\\uDDDD\\uDE33-\\uDE3A\\uDE3D\\uDE3F\\uDE40\\uDEAB\\uDEAD\\uDEB0-\\uDEB5\\uDEB7\\uDF1D-\\uDF1F\\uDF22-\\uDF25\\uDF27-\\uDF2B]|\\uD806[\\uDE01-\\uDE06\\uDE09\\uDE0A\\uDE33-\\uDE38\\uDE3B-\\uDE3E\\uDE47\\uDE51-\\uDE56\\uDE59-\\uDE5B\\uDE8A-\\uDE96\\uDE98\\uDE99]|\\uD807[\\uDC30-\\uDC36\\uDC38-\\uDC3D\\uDC3F\\uDC92-\\uDCA7\\uDCAA-\\uDCB0\\uDCB2\\uDCB3\\uDCB5\\uDCB6\\uDD31-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD45\\uDD47]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A]|\\uDB40[\\uDD00-\\uDDEF]'\n    },\n    {\n        'name': 'N',\n        'alias': 'Number',\n        'bmp': '0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D58-\\u0D5E\\u0D66-\\u0D78\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\n        'astral': '\\uD800[\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD801[\\uDCA0-\\uDCA9]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE47\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E]|\\uD804[\\uDC52-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDDE1-\\uDDF4\\uDEF0-\\uDEF9]|\\uD805[\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF3B]|\\uD806[\\uDCE0-\\uDCF2]|\\uD807[\\uDC50-\\uDC6C\\uDD50-\\uDD59]|\\uD809[\\uDC00-\\uDC6E]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59\\uDF5B-\\uDF61]|\\uD834[\\uDF60-\\uDF71]|\\uD835[\\uDFCE-\\uDFFF]|\\uD83A[\\uDCC7-\\uDCCF\\uDD50-\\uDD59]|\\uD83C[\\uDD00-\\uDD0C]'\n    },\n    {\n        'name': 'Nd',\n        'alias': 'Decimal_Number',\n        'bmp': '0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\n        'astral': '\\uD801[\\uDCA0-\\uDCA9]|\\uD804[\\uDC66-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDEF0-\\uDEF9]|\\uD805[\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF39]|\\uD806[\\uDCE0-\\uDCE9]|\\uD807[\\uDC50-\\uDC59\\uDD50-\\uDD59]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59]|\\uD835[\\uDFCE-\\uDFFF]|\\uD83A[\\uDD50-\\uDD59]'\n    },\n    {\n        'name': 'Nl',\n        'alias': 'Letter_Number',\n        'bmp': '\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF',\n        'astral': '\\uD800[\\uDD40-\\uDD74\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD809[\\uDC00-\\uDC6E]'\n    },\n    {\n        'name': 'No',\n        'alias': 'Other_Number',\n        'bmp': '\\xB2\\xB3\\xB9\\xBC-\\xBE\\u09F4-\\u09F9\\u0B72-\\u0B77\\u0BF0-\\u0BF2\\u0C78-\\u0C7E\\u0D58-\\u0D5E\\u0D70-\\u0D78\\u0F2A-\\u0F33\\u1369-\\u137C\\u17F0-\\u17F9\\u19DA\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u215F\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA830-\\uA835',\n        'astral': '\\uD800[\\uDD07-\\uDD33\\uDD75-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE47\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E]|\\uD804[\\uDC52-\\uDC65\\uDDE1-\\uDDF4]|\\uD805[\\uDF3A\\uDF3B]|\\uD806[\\uDCEA-\\uDCF2]|\\uD807[\\uDC5A-\\uDC6C]|\\uD81A[\\uDF5B-\\uDF61]|\\uD834[\\uDF60-\\uDF71]|\\uD83A[\\uDCC7-\\uDCCF]|\\uD83C[\\uDD00-\\uDD0C]'\n    },\n    {\n        'name': 'P',\n        'alias': 'Punctuation',\n        'bmp': '!-#%-\\\\*,-\\\\/:;\\\\?@\\\\[-\\\\]_\\\\{\\\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E49\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65',\n        'astral': '\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]'\n    },\n    {\n        'name': 'Pc',\n        'alias': 'Connector_Punctuation',\n        'bmp': '_\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F'\n    },\n    {\n        'name': 'Pd',\n        'alias': 'Dash_Punctuation',\n        'bmp': '\\\\-\\u058A\\u05BE\\u1400\\u1806\\u2010-\\u2015\\u2E17\\u2E1A\\u2E3A\\u2E3B\\u2E40\\u301C\\u3030\\u30A0\\uFE31\\uFE32\\uFE58\\uFE63\\uFF0D'\n    },\n    {\n        'name': 'Pe',\n        'alias': 'Close_Punctuation',\n        'bmp': '\\\\)\\\\]\\\\}\\u0F3B\\u0F3D\\u169C\\u2046\\u207E\\u208E\\u2309\\u230B\\u232A\\u2769\\u276B\\u276D\\u276F\\u2771\\u2773\\u2775\\u27C6\\u27E7\\u27E9\\u27EB\\u27ED\\u27EF\\u2984\\u2986\\u2988\\u298A\\u298C\\u298E\\u2990\\u2992\\u2994\\u2996\\u2998\\u29D9\\u29DB\\u29FD\\u2E23\\u2E25\\u2E27\\u2E29\\u3009\\u300B\\u300D\\u300F\\u3011\\u3015\\u3017\\u3019\\u301B\\u301E\\u301F\\uFD3E\\uFE18\\uFE36\\uFE38\\uFE3A\\uFE3C\\uFE3E\\uFE40\\uFE42\\uFE44\\uFE48\\uFE5A\\uFE5C\\uFE5E\\uFF09\\uFF3D\\uFF5D\\uFF60\\uFF63'\n    },\n    {\n        'name': 'Pf',\n        'alias': 'Final_Punctuation',\n        'bmp': '\\xBB\\u2019\\u201D\\u203A\\u2E03\\u2E05\\u2E0A\\u2E0D\\u2E1D\\u2E21'\n    },\n    {\n        'name': 'Pi',\n        'alias': 'Initial_Punctuation',\n        'bmp': '\\xAB\\u2018\\u201B\\u201C\\u201F\\u2039\\u2E02\\u2E04\\u2E09\\u2E0C\\u2E1C\\u2E20'\n    },\n    {\n        'name': 'Po',\n        'alias': 'Other_Punctuation',\n        'bmp': '!-#%-\\'\\\\*,\\\\.\\\\/:;\\\\?@\\\\\\xA1\\xA7\\xB6\\xB7\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u166D\\u166E\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u1805\\u1807-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2016\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203B-\\u203E\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205E\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00\\u2E01\\u2E06-\\u2E08\\u2E0B\\u2E0E-\\u2E16\\u2E18\\u2E19\\u2E1B\\u2E1E\\u2E1F\\u2E2A-\\u2E2E\\u2E30-\\u2E39\\u2E3C-\\u2E3F\\u2E41\\u2E43-\\u2E49\\u3001-\\u3003\\u303D\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFE10-\\uFE16\\uFE19\\uFE30\\uFE45\\uFE46\\uFE49-\\uFE4C\\uFE50-\\uFE52\\uFE54-\\uFE57\\uFE5F-\\uFE61\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF07\\uFF0A\\uFF0C\\uFF0E\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3C\\uFF61\\uFF64\\uFF65',\n        'astral': '\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]'\n    },\n    {\n        'name': 'Ps',\n        'alias': 'Open_Punctuation',\n        'bmp': '\\\\(\\\\[\\\\{\\u0F3A\\u0F3C\\u169B\\u201A\\u201E\\u2045\\u207D\\u208D\\u2308\\u230A\\u2329\\u2768\\u276A\\u276C\\u276E\\u2770\\u2772\\u2774\\u27C5\\u27E6\\u27E8\\u27EA\\u27EC\\u27EE\\u2983\\u2985\\u2987\\u2989\\u298B\\u298D\\u298F\\u2991\\u2993\\u2995\\u2997\\u29D8\\u29DA\\u29FC\\u2E22\\u2E24\\u2E26\\u2E28\\u2E42\\u3008\\u300A\\u300C\\u300E\\u3010\\u3014\\u3016\\u3018\\u301A\\u301D\\uFD3F\\uFE17\\uFE35\\uFE37\\uFE39\\uFE3B\\uFE3D\\uFE3F\\uFE41\\uFE43\\uFE47\\uFE59\\uFE5B\\uFE5D\\uFF08\\uFF3B\\uFF5B\\uFF5F\\uFF62'\n    },\n    {\n        'name': 'S',\n        'alias': 'Symbol',\n        'bmp': '\\\\$\\\\+<->\\\\^`\\\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BF\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD2\\u2BEC-\\u2BEF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u32FE\\u3300-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD',\n        'astral': '\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD83B[\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDDAC\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED4\\uDEE0-\\uDEEC\\uDEF0-\\uDEF8\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD00-\\uDD0B\\uDD10-\\uDD3E\\uDD40-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6]'\n    },\n    {\n        'name': 'Sc',\n        'alias': 'Currency_Symbol',\n        'bmp': '\\\\$\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20BF\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6'\n    },\n    {\n        'name': 'Sk',\n        'alias': 'Modifier_Symbol',\n        'bmp': '\\\\^`\\xA8\\xAF\\xB4\\xB8\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u309B\\u309C\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uAB5B\\uFBB2-\\uFBC1\\uFF3E\\uFF40\\uFFE3',\n        'astral': '\\uD83C[\\uDFFB-\\uDFFF]'\n    },\n    {\n        'name': 'Sm',\n        'alias': 'Math_Symbol',\n        'bmp': '\\\\+<->\\\\|~\\xAC\\xB1\\xD7\\xF7\\u03F6\\u0606-\\u0608\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u2118\\u2140-\\u2144\\u214B\\u2190-\\u2194\\u219A\\u219B\\u21A0\\u21A3\\u21A6\\u21AE\\u21CE\\u21CF\\u21D2\\u21D4\\u21F4-\\u22FF\\u2320\\u2321\\u237C\\u239B-\\u23B3\\u23DC-\\u23E1\\u25B7\\u25C1\\u25F8-\\u25FF\\u266F\\u27C0-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u27FF\\u2900-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2AFF\\u2B30-\\u2B44\\u2B47-\\u2B4C\\uFB29\\uFE62\\uFE64-\\uFE66\\uFF0B\\uFF1C-\\uFF1E\\uFF5C\\uFF5E\\uFFE2\\uFFE9-\\uFFEC',\n        'astral': '\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD83B[\\uDEF0\\uDEF1]'\n    },\n    {\n        'name': 'So',\n        'alias': 'Other_Symbol',\n        'bmp': '\\xA6\\xA9\\xAE\\xB0\\u0482\\u058D\\u058E\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09FA\\u0B70\\u0BF3-\\u0BF8\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116\\u2117\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u214A\\u214C\\u214D\\u214F\\u218A\\u218B\\u2195-\\u2199\\u219C-\\u219F\\u21A1\\u21A2\\u21A4\\u21A5\\u21A7-\\u21AD\\u21AF-\\u21CD\\u21D0\\u21D1\\u21D3\\u21D5-\\u21F3\\u2300-\\u2307\\u230C-\\u231F\\u2322-\\u2328\\u232B-\\u237B\\u237D-\\u239A\\u23B4-\\u23DB\\u23E2-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u25B6\\u25B8-\\u25C0\\u25C2-\\u25F7\\u2600-\\u266E\\u2670-\\u2767\\u2794-\\u27BF\\u2800-\\u28FF\\u2B00-\\u2B2F\\u2B45\\u2B46\\u2B4D-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD2\\u2BEC-\\u2BEF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u32FE\\u3300-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA828-\\uA82B\\uA836\\uA837\\uA839\\uAA77-\\uAA79\\uFDFD\\uFFE4\\uFFE8\\uFFED\\uFFEE\\uFFFC\\uFFFD',\n        'astral': '\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDDAC\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFA]|\\uD83D[\\uDC00-\\uDED4\\uDEE0-\\uDEEC\\uDEF0-\\uDEF8\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD00-\\uDD0B\\uDD10-\\uDD3E\\uDD40-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6]'\n    },\n    {\n        'name': 'Z',\n        'alias': 'Separator',\n        'bmp': ' \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\n    },\n    {\n        'name': 'Zl',\n        'alias': 'Line_Separator',\n        'bmp': '\\u2028'\n    },\n    {\n        'name': 'Zp',\n        'alias': 'Paragraph_Separator',\n        'bmp': '\\u2029'\n    },\n    {\n        'name': 'Zs',\n        'alias': 'Space_Separator',\n        'bmp': ' \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000'\n    }\n];\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _categories = require('../../tools/output/categories');\n\nvar _categories2 = _interopRequireDefault(_categories);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (XRegExp) {\n\n  /**\n   * Adds support for Unicode's general categories. E.g., `\\p{Lu}` or `\\p{Uppercase Letter}`. See\n   * category descriptions in UAX #44 <http://unicode.org/reports/tr44/#GC_Values_Table>. Token\n   * names are case insensitive, and any spaces, hyphens, and underscores are ignored.\n   *\n   * Uses Unicode 10.0.0.\n   *\n   * @requires XRegExp, Unicode Base\n   */\n\n  if (!XRegExp.addUnicodeData) {\n    throw new ReferenceError('Unicode Base must be loaded before Unicode Categories');\n  }\n\n  XRegExp.addUnicodeData(_categories2.default);\n}; /*!\n    * XRegExp Unicode Categories 4.1.1\n    * <xregexp.com>\n    * Steven Levithan (c) 2010-present MIT License\n    * Unicode data by Mathias Bynens <mathiasbynens.be>\n    */\n\nmodule.exports = exports['default'];","module.exports = [\n    {\n        'name': 'InAdlam',\n        'astral': '\\uD83A[\\uDD00-\\uDD5F]'\n    },\n    {\n        'name': 'InAegean_Numbers',\n        'astral': '\\uD800[\\uDD00-\\uDD3F]'\n    },\n    {\n        'name': 'InAhom',\n        'astral': '\\uD805[\\uDF00-\\uDF3F]'\n    },\n    {\n        'name': 'InAlchemical_Symbols',\n        'astral': '\\uD83D[\\uDF00-\\uDF7F]'\n    },\n    {\n        'name': 'InAlphabetic_Presentation_Forms',\n        'bmp': '\\uFB00-\\uFB4F'\n    },\n    {\n        'name': 'InAnatolian_Hieroglyphs',\n        'astral': '\\uD811[\\uDC00-\\uDE7F]'\n    },\n    {\n        'name': 'InAncient_Greek_Musical_Notation',\n        'astral': '\\uD834[\\uDE00-\\uDE4F]'\n    },\n    {\n        'name': 'InAncient_Greek_Numbers',\n        'astral': '\\uD800[\\uDD40-\\uDD8F]'\n    },\n    {\n        'name': 'InAncient_Symbols',\n        'astral': '\\uD800[\\uDD90-\\uDDCF]'\n    },\n    {\n        'name': 'InArabic',\n        'bmp': '\\u0600-\\u06FF'\n    },\n    {\n        'name': 'InArabic_Extended_A',\n        'bmp': '\\u08A0-\\u08FF'\n    },\n    {\n        'name': 'InArabic_Mathematical_Alphabetic_Symbols',\n        'astral': '\\uD83B[\\uDE00-\\uDEFF]'\n    },\n    {\n        'name': 'InArabic_Presentation_Forms_A',\n        'bmp': '\\uFB50-\\uFDFF'\n    },\n    {\n        'name': 'InArabic_Presentation_Forms_B',\n        'bmp': '\\uFE70-\\uFEFF'\n    },\n    {\n        'name': 'InArabic_Supplement',\n        'bmp': '\\u0750-\\u077F'\n    },\n    {\n        'name': 'InArmenian',\n        'bmp': '\\u0530-\\u058F'\n    },\n    {\n        'name': 'InArrows',\n        'bmp': '\\u2190-\\u21FF'\n    },\n    {\n        'name': 'InAvestan',\n        'astral': '\\uD802[\\uDF00-\\uDF3F]'\n    },\n    {\n        'name': 'InBalinese',\n        'bmp': '\\u1B00-\\u1B7F'\n    },\n    {\n        'name': 'InBamum',\n        'bmp': '\\uA6A0-\\uA6FF'\n    },\n    {\n        'name': 'InBamum_Supplement',\n        'astral': '\\uD81A[\\uDC00-\\uDE3F]'\n    },\n    {\n        'name': 'InBasic_Latin',\n        'bmp': '\\0-\\x7F'\n    },\n    {\n        'name': 'InBassa_Vah',\n        'astral': '\\uD81A[\\uDED0-\\uDEFF]'\n    },\n    {\n        'name': 'InBatak',\n        'bmp': '\\u1BC0-\\u1BFF'\n    },\n    {\n        'name': 'InBengali',\n        'bmp': '\\u0980-\\u09FF'\n    },\n    {\n        'name': 'InBhaiksuki',\n        'astral': '\\uD807[\\uDC00-\\uDC6F]'\n    },\n    {\n        'name': 'InBlock_Elements',\n        'bmp': '\\u2580-\\u259F'\n    },\n    {\n        'name': 'InBopomofo',\n        'bmp': '\\u3100-\\u312F'\n    },\n    {\n        'name': 'InBopomofo_Extended',\n        'bmp': '\\u31A0-\\u31BF'\n    },\n    {\n        'name': 'InBox_Drawing',\n        'bmp': '\\u2500-\\u257F'\n    },\n    {\n        'name': 'InBrahmi',\n        'astral': '\\uD804[\\uDC00-\\uDC7F]'\n    },\n    {\n        'name': 'InBraille_Patterns',\n        'bmp': '\\u2800-\\u28FF'\n    },\n    {\n        'name': 'InBuginese',\n        'bmp': '\\u1A00-\\u1A1F'\n    },\n    {\n        'name': 'InBuhid',\n        'bmp': '\\u1740-\\u175F'\n    },\n    {\n        'name': 'InByzantine_Musical_Symbols',\n        'astral': '\\uD834[\\uDC00-\\uDCFF]'\n    },\n    {\n        'name': 'InCJK_Compatibility',\n        'bmp': '\\u3300-\\u33FF'\n    },\n    {\n        'name': 'InCJK_Compatibility_Forms',\n        'bmp': '\\uFE30-\\uFE4F'\n    },\n    {\n        'name': 'InCJK_Compatibility_Ideographs',\n        'bmp': '\\uF900-\\uFAFF'\n    },\n    {\n        'name': 'InCJK_Compatibility_Ideographs_Supplement',\n        'astral': '\\uD87E[\\uDC00-\\uDE1F]'\n    },\n    {\n        'name': 'InCJK_Radicals_Supplement',\n        'bmp': '\\u2E80-\\u2EFF'\n    },\n    {\n        'name': 'InCJK_Strokes',\n        'bmp': '\\u31C0-\\u31EF'\n    },\n    {\n        'name': 'InCJK_Symbols_And_Punctuation',\n        'bmp': '\\u3000-\\u303F'\n    },\n    {\n        'name': 'InCJK_Unified_Ideographs',\n        'bmp': '\\u4E00-\\u9FFF'\n    },\n    {\n        'name': 'InCJK_Unified_Ideographs_Extension_A',\n        'bmp': '\\u3400-\\u4DBF'\n    },\n    {\n        'name': 'InCJK_Unified_Ideographs_Extension_B',\n        'astral': '[\\uD840-\\uD868][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDEDF]'\n    },\n    {\n        'name': 'InCJK_Unified_Ideographs_Extension_C',\n        'astral': '\\uD869[\\uDF00-\\uDFFF]|[\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF3F]'\n    },\n    {\n        'name': 'InCJK_Unified_Ideographs_Extension_D',\n        'astral': '\\uD86D[\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1F]'\n    },\n    {\n        'name': 'InCJK_Unified_Ideographs_Extension_E',\n        'astral': '\\uD86E[\\uDC20-\\uDFFF]|[\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD873[\\uDC00-\\uDEAF]'\n    },\n    {\n        'name': 'InCJK_Unified_Ideographs_Extension_F',\n        'astral': '\\uD873[\\uDEB0-\\uDFFF]|[\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD87A[\\uDC00-\\uDFEF]'\n    },\n    {\n        'name': 'InCarian',\n        'astral': '\\uD800[\\uDEA0-\\uDEDF]'\n    },\n    {\n        'name': 'InCaucasian_Albanian',\n        'astral': '\\uD801[\\uDD30-\\uDD6F]'\n    },\n    {\n        'name': 'InChakma',\n        'astral': '\\uD804[\\uDD00-\\uDD4F]'\n    },\n    {\n        'name': 'InCham',\n        'bmp': '\\uAA00-\\uAA5F'\n    },\n    {\n        'name': 'InCherokee',\n        'bmp': '\\u13A0-\\u13FF'\n    },\n    {\n        'name': 'InCherokee_Supplement',\n        'bmp': '\\uAB70-\\uABBF'\n    },\n    {\n        'name': 'InCombining_Diacritical_Marks',\n        'bmp': '\\u0300-\\u036F'\n    },\n    {\n        'name': 'InCombining_Diacritical_Marks_Extended',\n        'bmp': '\\u1AB0-\\u1AFF'\n    },\n    {\n        'name': 'InCombining_Diacritical_Marks_For_Symbols',\n        'bmp': '\\u20D0-\\u20FF'\n    },\n    {\n        'name': 'InCombining_Diacritical_Marks_Supplement',\n        'bmp': '\\u1DC0-\\u1DFF'\n    },\n    {\n        'name': 'InCombining_Half_Marks',\n        'bmp': '\\uFE20-\\uFE2F'\n    },\n    {\n        'name': 'InCommon_Indic_Number_Forms',\n        'bmp': '\\uA830-\\uA83F'\n    },\n    {\n        'name': 'InControl_Pictures',\n        'bmp': '\\u2400-\\u243F'\n    },\n    {\n        'name': 'InCoptic',\n        'bmp': '\\u2C80-\\u2CFF'\n    },\n    {\n        'name': 'InCoptic_Epact_Numbers',\n        'astral': '\\uD800[\\uDEE0-\\uDEFF]'\n    },\n    {\n        'name': 'InCounting_Rod_Numerals',\n        'astral': '\\uD834[\\uDF60-\\uDF7F]'\n    },\n    {\n        'name': 'InCuneiform',\n        'astral': '\\uD808[\\uDC00-\\uDFFF]'\n    },\n    {\n        'name': 'InCuneiform_Numbers_And_Punctuation',\n        'astral': '\\uD809[\\uDC00-\\uDC7F]'\n    },\n    {\n        'name': 'InCurrency_Symbols',\n        'bmp': '\\u20A0-\\u20CF'\n    },\n    {\n        'name': 'InCypriot_Syllabary',\n        'astral': '\\uD802[\\uDC00-\\uDC3F]'\n    },\n    {\n        'name': 'InCyrillic',\n        'bmp': '\\u0400-\\u04FF'\n    },\n    {\n        'name': 'InCyrillic_Extended_A',\n        'bmp': '\\u2DE0-\\u2DFF'\n    },\n    {\n        'name': 'InCyrillic_Extended_B',\n        'bmp': '\\uA640-\\uA69F'\n    },\n    {\n        'name': 'InCyrillic_Extended_C',\n        'bmp': '\\u1C80-\\u1C8F'\n    },\n    {\n        'name': 'InCyrillic_Supplement',\n        'bmp': '\\u0500-\\u052F'\n    },\n    {\n        'name': 'InDeseret',\n        'astral': '\\uD801[\\uDC00-\\uDC4F]'\n    },\n    {\n        'name': 'InDevanagari',\n        'bmp': '\\u0900-\\u097F'\n    },\n    {\n        'name': 'InDevanagari_Extended',\n        'bmp': '\\uA8E0-\\uA8FF'\n    },\n    {\n        'name': 'InDingbats',\n        'bmp': '\\u2700-\\u27BF'\n    },\n    {\n        'name': 'InDomino_Tiles',\n        'astral': '\\uD83C[\\uDC30-\\uDC9F]'\n    },\n    {\n        'name': 'InDuployan',\n        'astral': '\\uD82F[\\uDC00-\\uDC9F]'\n    },\n    {\n        'name': 'InEarly_Dynastic_Cuneiform',\n        'astral': '\\uD809[\\uDC80-\\uDD4F]'\n    },\n    {\n        'name': 'InEgyptian_Hieroglyphs',\n        'astral': '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F]'\n    },\n    {\n        'name': 'InElbasan',\n        'astral': '\\uD801[\\uDD00-\\uDD2F]'\n    },\n    {\n        'name': 'InEmoticons',\n        'astral': '\\uD83D[\\uDE00-\\uDE4F]'\n    },\n    {\n        'name': 'InEnclosed_Alphanumeric_Supplement',\n        'astral': '\\uD83C[\\uDD00-\\uDDFF]'\n    },\n    {\n        'name': 'InEnclosed_Alphanumerics',\n        'bmp': '\\u2460-\\u24FF'\n    },\n    {\n        'name': 'InEnclosed_CJK_Letters_And_Months',\n        'bmp': '\\u3200-\\u32FF'\n    },\n    {\n        'name': 'InEnclosed_Ideographic_Supplement',\n        'astral': '\\uD83C[\\uDE00-\\uDEFF]'\n    },\n    {\n        'name': 'InEthiopic',\n        'bmp': '\\u1200-\\u137F'\n    },\n    {\n        'name': 'InEthiopic_Extended',\n        'bmp': '\\u2D80-\\u2DDF'\n    },\n    {\n        'name': 'InEthiopic_Extended_A',\n        'bmp': '\\uAB00-\\uAB2F'\n    },\n    {\n        'name': 'InEthiopic_Supplement',\n        'bmp': '\\u1380-\\u139F'\n    },\n    {\n        'name': 'InGeneral_Punctuation',\n        'bmp': '\\u2000-\\u206F'\n    },\n    {\n        'name': 'InGeometric_Shapes',\n        'bmp': '\\u25A0-\\u25FF'\n    },\n    {\n        'name': 'InGeometric_Shapes_Extended',\n        'astral': '\\uD83D[\\uDF80-\\uDFFF]'\n    },\n    {\n        'name': 'InGeorgian',\n        'bmp': '\\u10A0-\\u10FF'\n    },\n    {\n        'name': 'InGeorgian_Supplement',\n        'bmp': '\\u2D00-\\u2D2F'\n    },\n    {\n        'name': 'InGlagolitic',\n        'bmp': '\\u2C00-\\u2C5F'\n    },\n    {\n        'name': 'InGlagolitic_Supplement',\n        'astral': '\\uD838[\\uDC00-\\uDC2F]'\n    },\n    {\n        'name': 'InGothic',\n        'astral': '\\uD800[\\uDF30-\\uDF4F]'\n    },\n    {\n        'name': 'InGrantha',\n        'astral': '\\uD804[\\uDF00-\\uDF7F]'\n    },\n    {\n        'name': 'InGreek_And_Coptic',\n        'bmp': '\\u0370-\\u03FF'\n    },\n    {\n        'name': 'InGreek_Extended',\n        'bmp': '\\u1F00-\\u1FFF'\n    },\n    {\n        'name': 'InGujarati',\n        'bmp': '\\u0A80-\\u0AFF'\n    },\n    {\n        'name': 'InGurmukhi',\n        'bmp': '\\u0A00-\\u0A7F'\n    },\n    {\n        'name': 'InHalfwidth_And_Fullwidth_Forms',\n        'bmp': '\\uFF00-\\uFFEF'\n    },\n    {\n        'name': 'InHangul_Compatibility_Jamo',\n        'bmp': '\\u3130-\\u318F'\n    },\n    {\n        'name': 'InHangul_Jamo',\n        'bmp': '\\u1100-\\u11FF'\n    },\n    {\n        'name': 'InHangul_Jamo_Extended_A',\n        'bmp': '\\uA960-\\uA97F'\n    },\n    {\n        'name': 'InHangul_Jamo_Extended_B',\n        'bmp': '\\uD7B0-\\uD7FF'\n    },\n    {\n        'name': 'InHangul_Syllables',\n        'bmp': '\\uAC00-\\uD7AF'\n    },\n    {\n        'name': 'InHanunoo',\n        'bmp': '\\u1720-\\u173F'\n    },\n    {\n        'name': 'InHatran',\n        'astral': '\\uD802[\\uDCE0-\\uDCFF]'\n    },\n    {\n        'name': 'InHebrew',\n        'bmp': '\\u0590-\\u05FF'\n    },\n    {\n        'name': 'InHigh_Private_Use_Surrogates',\n        'bmp': '\\uDB80-\\uDBFF'\n    },\n    {\n        'name': 'InHigh_Surrogates',\n        'bmp': '\\uD800-\\uDB7F'\n    },\n    {\n        'name': 'InHiragana',\n        'bmp': '\\u3040-\\u309F'\n    },\n    {\n        'name': 'InIPA_Extensions',\n        'bmp': '\\u0250-\\u02AF'\n    },\n    {\n        'name': 'InIdeographic_Description_Characters',\n        'bmp': '\\u2FF0-\\u2FFF'\n    },\n    {\n        'name': 'InIdeographic_Symbols_And_Punctuation',\n        'astral': '\\uD81B[\\uDFE0-\\uDFFF]'\n    },\n    {\n        'name': 'InImperial_Aramaic',\n        'astral': '\\uD802[\\uDC40-\\uDC5F]'\n    },\n    {\n        'name': 'InInscriptional_Pahlavi',\n        'astral': '\\uD802[\\uDF60-\\uDF7F]'\n    },\n    {\n        'name': 'InInscriptional_Parthian',\n        'astral': '\\uD802[\\uDF40-\\uDF5F]'\n    },\n    {\n        'name': 'InJavanese',\n        'bmp': '\\uA980-\\uA9DF'\n    },\n    {\n        'name': 'InKaithi',\n        'astral': '\\uD804[\\uDC80-\\uDCCF]'\n    },\n    {\n        'name': 'InKana_Extended_A',\n        'astral': '\\uD82C[\\uDD00-\\uDD2F]'\n    },\n    {\n        'name': 'InKana_Supplement',\n        'astral': '\\uD82C[\\uDC00-\\uDCFF]'\n    },\n    {\n        'name': 'InKanbun',\n        'bmp': '\\u3190-\\u319F'\n    },\n    {\n        'name': 'InKangxi_Radicals',\n        'bmp': '\\u2F00-\\u2FDF'\n    },\n    {\n        'name': 'InKannada',\n        'bmp': '\\u0C80-\\u0CFF'\n    },\n    {\n        'name': 'InKatakana',\n        'bmp': '\\u30A0-\\u30FF'\n    },\n    {\n        'name': 'InKatakana_Phonetic_Extensions',\n        'bmp': '\\u31F0-\\u31FF'\n    },\n    {\n        'name': 'InKayah_Li',\n        'bmp': '\\uA900-\\uA92F'\n    },\n    {\n        'name': 'InKharoshthi',\n        'astral': '\\uD802[\\uDE00-\\uDE5F]'\n    },\n    {\n        'name': 'InKhmer',\n        'bmp': '\\u1780-\\u17FF'\n    },\n    {\n        'name': 'InKhmer_Symbols',\n        'bmp': '\\u19E0-\\u19FF'\n    },\n    {\n        'name': 'InKhojki',\n        'astral': '\\uD804[\\uDE00-\\uDE4F]'\n    },\n    {\n        'name': 'InKhudawadi',\n        'astral': '\\uD804[\\uDEB0-\\uDEFF]'\n    },\n    {\n        'name': 'InLao',\n        'bmp': '\\u0E80-\\u0EFF'\n    },\n    {\n        'name': 'InLatin_1_Supplement',\n        'bmp': '\\x80-\\xFF'\n    },\n    {\n        'name': 'InLatin_Extended_A',\n        'bmp': '\\u0100-\\u017F'\n    },\n    {\n        'name': 'InLatin_Extended_Additional',\n        'bmp': '\\u1E00-\\u1EFF'\n    },\n    {\n        'name': 'InLatin_Extended_B',\n        'bmp': '\\u0180-\\u024F'\n    },\n    {\n        'name': 'InLatin_Extended_C',\n        'bmp': '\\u2C60-\\u2C7F'\n    },\n    {\n        'name': 'InLatin_Extended_D',\n        'bmp': '\\uA720-\\uA7FF'\n    },\n    {\n        'name': 'InLatin_Extended_E',\n        'bmp': '\\uAB30-\\uAB6F'\n    },\n    {\n        'name': 'InLepcha',\n        'bmp': '\\u1C00-\\u1C4F'\n    },\n    {\n        'name': 'InLetterlike_Symbols',\n        'bmp': '\\u2100-\\u214F'\n    },\n    {\n        'name': 'InLimbu',\n        'bmp': '\\u1900-\\u194F'\n    },\n    {\n        'name': 'InLinear_A',\n        'astral': '\\uD801[\\uDE00-\\uDF7F]'\n    },\n    {\n        'name': 'InLinear_B_Ideograms',\n        'astral': '\\uD800[\\uDC80-\\uDCFF]'\n    },\n    {\n        'name': 'InLinear_B_Syllabary',\n        'astral': '\\uD800[\\uDC00-\\uDC7F]'\n    },\n    {\n        'name': 'InLisu',\n        'bmp': '\\uA4D0-\\uA4FF'\n    },\n    {\n        'name': 'InLow_Surrogates',\n        'bmp': '\\uDC00-\\uDFFF'\n    },\n    {\n        'name': 'InLycian',\n        'astral': '\\uD800[\\uDE80-\\uDE9F]'\n    },\n    {\n        'name': 'InLydian',\n        'astral': '\\uD802[\\uDD20-\\uDD3F]'\n    },\n    {\n        'name': 'InMahajani',\n        'astral': '\\uD804[\\uDD50-\\uDD7F]'\n    },\n    {\n        'name': 'InMahjong_Tiles',\n        'astral': '\\uD83C[\\uDC00-\\uDC2F]'\n    },\n    {\n        'name': 'InMalayalam',\n        'bmp': '\\u0D00-\\u0D7F'\n    },\n    {\n        'name': 'InMandaic',\n        'bmp': '\\u0840-\\u085F'\n    },\n    {\n        'name': 'InManichaean',\n        'astral': '\\uD802[\\uDEC0-\\uDEFF]'\n    },\n    {\n        'name': 'InMarchen',\n        'astral': '\\uD807[\\uDC70-\\uDCBF]'\n    },\n    {\n        'name': 'InMasaram_Gondi',\n        'astral': '\\uD807[\\uDD00-\\uDD5F]'\n    },\n    {\n        'name': 'InMathematical_Alphanumeric_Symbols',\n        'astral': '\\uD835[\\uDC00-\\uDFFF]'\n    },\n    {\n        'name': 'InMathematical_Operators',\n        'bmp': '\\u2200-\\u22FF'\n    },\n    {\n        'name': 'InMeetei_Mayek',\n        'bmp': '\\uABC0-\\uABFF'\n    },\n    {\n        'name': 'InMeetei_Mayek_Extensions',\n        'bmp': '\\uAAE0-\\uAAFF'\n    },\n    {\n        'name': 'InMende_Kikakui',\n        'astral': '\\uD83A[\\uDC00-\\uDCDF]'\n    },\n    {\n        'name': 'InMeroitic_Cursive',\n        'astral': '\\uD802[\\uDDA0-\\uDDFF]'\n    },\n    {\n        'name': 'InMeroitic_Hieroglyphs',\n        'astral': '\\uD802[\\uDD80-\\uDD9F]'\n    },\n    {\n        'name': 'InMiao',\n        'astral': '\\uD81B[\\uDF00-\\uDF9F]'\n    },\n    {\n        'name': 'InMiscellaneous_Mathematical_Symbols_A',\n        'bmp': '\\u27C0-\\u27EF'\n    },\n    {\n        'name': 'InMiscellaneous_Mathematical_Symbols_B',\n        'bmp': '\\u2980-\\u29FF'\n    },\n    {\n        'name': 'InMiscellaneous_Symbols',\n        'bmp': '\\u2600-\\u26FF'\n    },\n    {\n        'name': 'InMiscellaneous_Symbols_And_Arrows',\n        'bmp': '\\u2B00-\\u2BFF'\n    },\n    {\n        'name': 'InMiscellaneous_Symbols_And_Pictographs',\n        'astral': '\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF]'\n    },\n    {\n        'name': 'InMiscellaneous_Technical',\n        'bmp': '\\u2300-\\u23FF'\n    },\n    {\n        'name': 'InModi',\n        'astral': '\\uD805[\\uDE00-\\uDE5F]'\n    },\n    {\n        'name': 'InModifier_Tone_Letters',\n        'bmp': '\\uA700-\\uA71F'\n    },\n    {\n        'name': 'InMongolian',\n        'bmp': '\\u1800-\\u18AF'\n    },\n    {\n        'name': 'InMongolian_Supplement',\n        'astral': '\\uD805[\\uDE60-\\uDE7F]'\n    },\n    {\n        'name': 'InMro',\n        'astral': '\\uD81A[\\uDE40-\\uDE6F]'\n    },\n    {\n        'name': 'InMultani',\n        'astral': '\\uD804[\\uDE80-\\uDEAF]'\n    },\n    {\n        'name': 'InMusical_Symbols',\n        'astral': '\\uD834[\\uDD00-\\uDDFF]'\n    },\n    {\n        'name': 'InMyanmar',\n        'bmp': '\\u1000-\\u109F'\n    },\n    {\n        'name': 'InMyanmar_Extended_A',\n        'bmp': '\\uAA60-\\uAA7F'\n    },\n    {\n        'name': 'InMyanmar_Extended_B',\n        'bmp': '\\uA9E0-\\uA9FF'\n    },\n    {\n        'name': 'InNKo',\n        'bmp': '\\u07C0-\\u07FF'\n    },\n    {\n        'name': 'InNabataean',\n        'astral': '\\uD802[\\uDC80-\\uDCAF]'\n    },\n    {\n        'name': 'InNew_Tai_Lue',\n        'bmp': '\\u1980-\\u19DF'\n    },\n    {\n        'name': 'InNewa',\n        'astral': '\\uD805[\\uDC00-\\uDC7F]'\n    },\n    {\n        'name': 'InNumber_Forms',\n        'bmp': '\\u2150-\\u218F'\n    },\n    {\n        'name': 'InNushu',\n        'astral': '\\uD82C[\\uDD70-\\uDEFF]'\n    },\n    {\n        'name': 'InOgham',\n        'bmp': '\\u1680-\\u169F'\n    },\n    {\n        'name': 'InOl_Chiki',\n        'bmp': '\\u1C50-\\u1C7F'\n    },\n    {\n        'name': 'InOld_Hungarian',\n        'astral': '\\uD803[\\uDC80-\\uDCFF]'\n    },\n    {\n        'name': 'InOld_Italic',\n        'astral': '\\uD800[\\uDF00-\\uDF2F]'\n    },\n    {\n        'name': 'InOld_North_Arabian',\n        'astral': '\\uD802[\\uDE80-\\uDE9F]'\n    },\n    {\n        'name': 'InOld_Permic',\n        'astral': '\\uD800[\\uDF50-\\uDF7F]'\n    },\n    {\n        'name': 'InOld_Persian',\n        'astral': '\\uD800[\\uDFA0-\\uDFDF]'\n    },\n    {\n        'name': 'InOld_South_Arabian',\n        'astral': '\\uD802[\\uDE60-\\uDE7F]'\n    },\n    {\n        'name': 'InOld_Turkic',\n        'astral': '\\uD803[\\uDC00-\\uDC4F]'\n    },\n    {\n        'name': 'InOptical_Character_Recognition',\n        'bmp': '\\u2440-\\u245F'\n    },\n    {\n        'name': 'InOriya',\n        'bmp': '\\u0B00-\\u0B7F'\n    },\n    {\n        'name': 'InOrnamental_Dingbats',\n        'astral': '\\uD83D[\\uDE50-\\uDE7F]'\n    },\n    {\n        'name': 'InOsage',\n        'astral': '\\uD801[\\uDCB0-\\uDCFF]'\n    },\n    {\n        'name': 'InOsmanya',\n        'astral': '\\uD801[\\uDC80-\\uDCAF]'\n    },\n    {\n        'name': 'InPahawh_Hmong',\n        'astral': '\\uD81A[\\uDF00-\\uDF8F]'\n    },\n    {\n        'name': 'InPalmyrene',\n        'astral': '\\uD802[\\uDC60-\\uDC7F]'\n    },\n    {\n        'name': 'InPau_Cin_Hau',\n        'astral': '\\uD806[\\uDEC0-\\uDEFF]'\n    },\n    {\n        'name': 'InPhags_Pa',\n        'bmp': '\\uA840-\\uA87F'\n    },\n    {\n        'name': 'InPhaistos_Disc',\n        'astral': '\\uD800[\\uDDD0-\\uDDFF]'\n    },\n    {\n        'name': 'InPhoenician',\n        'astral': '\\uD802[\\uDD00-\\uDD1F]'\n    },\n    {\n        'name': 'InPhonetic_Extensions',\n        'bmp': '\\u1D00-\\u1D7F'\n    },\n    {\n        'name': 'InPhonetic_Extensions_Supplement',\n        'bmp': '\\u1D80-\\u1DBF'\n    },\n    {\n        'name': 'InPlaying_Cards',\n        'astral': '\\uD83C[\\uDCA0-\\uDCFF]'\n    },\n    {\n        'name': 'InPrivate_Use_Area',\n        'bmp': '\\uE000-\\uF8FF'\n    },\n    {\n        'name': 'InPsalter_Pahlavi',\n        'astral': '\\uD802[\\uDF80-\\uDFAF]'\n    },\n    {\n        'name': 'InRejang',\n        'bmp': '\\uA930-\\uA95F'\n    },\n    {\n        'name': 'InRumi_Numeral_Symbols',\n        'astral': '\\uD803[\\uDE60-\\uDE7F]'\n    },\n    {\n        'name': 'InRunic',\n        'bmp': '\\u16A0-\\u16FF'\n    },\n    {\n        'name': 'InSamaritan',\n        'bmp': '\\u0800-\\u083F'\n    },\n    {\n        'name': 'InSaurashtra',\n        'bmp': '\\uA880-\\uA8DF'\n    },\n    {\n        'name': 'InSharada',\n        'astral': '\\uD804[\\uDD80-\\uDDDF]'\n    },\n    {\n        'name': 'InShavian',\n        'astral': '\\uD801[\\uDC50-\\uDC7F]'\n    },\n    {\n        'name': 'InShorthand_Format_Controls',\n        'astral': '\\uD82F[\\uDCA0-\\uDCAF]'\n    },\n    {\n        'name': 'InSiddham',\n        'astral': '\\uD805[\\uDD80-\\uDDFF]'\n    },\n    {\n        'name': 'InSinhala',\n        'bmp': '\\u0D80-\\u0DFF'\n    },\n    {\n        'name': 'InSinhala_Archaic_Numbers',\n        'astral': '\\uD804[\\uDDE0-\\uDDFF]'\n    },\n    {\n        'name': 'InSmall_Form_Variants',\n        'bmp': '\\uFE50-\\uFE6F'\n    },\n    {\n        'name': 'InSora_Sompeng',\n        'astral': '\\uD804[\\uDCD0-\\uDCFF]'\n    },\n    {\n        'name': 'InSoyombo',\n        'astral': '\\uD806[\\uDE50-\\uDEAF]'\n    },\n    {\n        'name': 'InSpacing_Modifier_Letters',\n        'bmp': '\\u02B0-\\u02FF'\n    },\n    {\n        'name': 'InSpecials',\n        'bmp': '\\uFFF0-\\uFFFF'\n    },\n    {\n        'name': 'InSundanese',\n        'bmp': '\\u1B80-\\u1BBF'\n    },\n    {\n        'name': 'InSundanese_Supplement',\n        'bmp': '\\u1CC0-\\u1CCF'\n    },\n    {\n        'name': 'InSuperscripts_And_Subscripts',\n        'bmp': '\\u2070-\\u209F'\n    },\n    {\n        'name': 'InSupplemental_Arrows_A',\n        'bmp': '\\u27F0-\\u27FF'\n    },\n    {\n        'name': 'InSupplemental_Arrows_B',\n        'bmp': '\\u2900-\\u297F'\n    },\n    {\n        'name': 'InSupplemental_Arrows_C',\n        'astral': '\\uD83E[\\uDC00-\\uDCFF]'\n    },\n    {\n        'name': 'InSupplemental_Mathematical_Operators',\n        'bmp': '\\u2A00-\\u2AFF'\n    },\n    {\n        'name': 'InSupplemental_Punctuation',\n        'bmp': '\\u2E00-\\u2E7F'\n    },\n    {\n        'name': 'InSupplemental_Symbols_And_Pictographs',\n        'astral': '\\uD83E[\\uDD00-\\uDDFF]'\n    },\n    {\n        'name': 'InSupplementary_Private_Use_Area_A',\n        'astral': '[\\uDB80-\\uDBBF][\\uDC00-\\uDFFF]'\n    },\n    {\n        'name': 'InSupplementary_Private_Use_Area_B',\n        'astral': '[\\uDBC0-\\uDBFF][\\uDC00-\\uDFFF]'\n    },\n    {\n        'name': 'InSutton_SignWriting',\n        'astral': '\\uD836[\\uDC00-\\uDEAF]'\n    },\n    {\n        'name': 'InSyloti_Nagri',\n        'bmp': '\\uA800-\\uA82F'\n    },\n    {\n        'name': 'InSyriac',\n        'bmp': '\\u0700-\\u074F'\n    },\n    {\n        'name': 'InSyriac_Supplement',\n        'bmp': '\\u0860-\\u086F'\n    },\n    {\n        'name': 'InTagalog',\n        'bmp': '\\u1700-\\u171F'\n    },\n    {\n        'name': 'InTagbanwa',\n        'bmp': '\\u1760-\\u177F'\n    },\n    {\n        'name': 'InTags',\n        'astral': '\\uDB40[\\uDC00-\\uDC7F]'\n    },\n    {\n        'name': 'InTai_Le',\n        'bmp': '\\u1950-\\u197F'\n    },\n    {\n        'name': 'InTai_Tham',\n        'bmp': '\\u1A20-\\u1AAF'\n    },\n    {\n        'name': 'InTai_Viet',\n        'bmp': '\\uAA80-\\uAADF'\n    },\n    {\n        'name': 'InTai_Xuan_Jing_Symbols',\n        'astral': '\\uD834[\\uDF00-\\uDF5F]'\n    },\n    {\n        'name': 'InTakri',\n        'astral': '\\uD805[\\uDE80-\\uDECF]'\n    },\n    {\n        'name': 'InTamil',\n        'bmp': '\\u0B80-\\u0BFF'\n    },\n    {\n        'name': 'InTangut',\n        'astral': '[\\uD81C-\\uD821][\\uDC00-\\uDFFF]'\n    },\n    {\n        'name': 'InTangut_Components',\n        'astral': '\\uD822[\\uDC00-\\uDEFF]'\n    },\n    {\n        'name': 'InTelugu',\n        'bmp': '\\u0C00-\\u0C7F'\n    },\n    {\n        'name': 'InThaana',\n        'bmp': '\\u0780-\\u07BF'\n    },\n    {\n        'name': 'InThai',\n        'bmp': '\\u0E00-\\u0E7F'\n    },\n    {\n        'name': 'InTibetan',\n        'bmp': '\\u0F00-\\u0FFF'\n    },\n    {\n        'name': 'InTifinagh',\n        'bmp': '\\u2D30-\\u2D7F'\n    },\n    {\n        'name': 'InTirhuta',\n        'astral': '\\uD805[\\uDC80-\\uDCDF]'\n    },\n    {\n        'name': 'InTransport_And_Map_Symbols',\n        'astral': '\\uD83D[\\uDE80-\\uDEFF]'\n    },\n    {\n        'name': 'InUgaritic',\n        'astral': '\\uD800[\\uDF80-\\uDF9F]'\n    },\n    {\n        'name': 'InUnified_Canadian_Aboriginal_Syllabics',\n        'bmp': '\\u1400-\\u167F'\n    },\n    {\n        'name': 'InUnified_Canadian_Aboriginal_Syllabics_Extended',\n        'bmp': '\\u18B0-\\u18FF'\n    },\n    {\n        'name': 'InVai',\n        'bmp': '\\uA500-\\uA63F'\n    },\n    {\n        'name': 'InVariation_Selectors',\n        'bmp': '\\uFE00-\\uFE0F'\n    },\n    {\n        'name': 'InVariation_Selectors_Supplement',\n        'astral': '\\uDB40[\\uDD00-\\uDDEF]'\n    },\n    {\n        'name': 'InVedic_Extensions',\n        'bmp': '\\u1CD0-\\u1CFF'\n    },\n    {\n        'name': 'InVertical_Forms',\n        'bmp': '\\uFE10-\\uFE1F'\n    },\n    {\n        'name': 'InWarang_Citi',\n        'astral': '\\uD806[\\uDCA0-\\uDCFF]'\n    },\n    {\n        'name': 'InYi_Radicals',\n        'bmp': '\\uA490-\\uA4CF'\n    },\n    {\n        'name': 'InYi_Syllables',\n        'bmp': '\\uA000-\\uA48F'\n    },\n    {\n        'name': 'InYijing_Hexagram_Symbols',\n        'bmp': '\\u4DC0-\\u4DFF'\n    },\n    {\n        'name': 'InZanabazar_Square',\n        'astral': '\\uD806[\\uDE00-\\uDE4F]'\n    }\n];\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _blocks = require('../../tools/output/blocks');\n\nvar _blocks2 = _interopRequireDefault(_blocks);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (XRegExp) {\n\n  /**\n   * Adds support for all Unicode blocks. Block names use the prefix 'In'. E.g.,\n   * `\\p{InBasicLatin}`. Token names are case insensitive, and any spaces, hyphens, and\n   * underscores are ignored.\n   *\n   * Uses Unicode 10.0.0.\n   *\n   * @requires XRegExp, Unicode Base\n   */\n\n  if (!XRegExp.addUnicodeData) {\n    throw new ReferenceError('Unicode Base must be loaded before Unicode Blocks');\n  }\n\n  XRegExp.addUnicodeData(_blocks2.default);\n}; /*!\n    * XRegExp Unicode Blocks 4.1.1\n    * <xregexp.com>\n    * Steven Levithan (c) 2010-present MIT License\n    * Unicode data by Mathias Bynens <mathiasbynens.be>\n    */\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\n/*!\n * XRegExp Unicode Base 4.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2008-present MIT License\n */\n\nexports.default = function (XRegExp) {\n\n    /**\n     * Adds base support for Unicode matching:\n     * - Adds syntax `\\p{..}` for matching Unicode tokens. Tokens can be inverted using `\\P{..}` or\n     *   `\\p{^..}`. Token names ignore case, spaces, hyphens, and underscores. You can omit the\n     *   braces for token names that are a single letter (e.g. `\\pL` or `PL`).\n     * - Adds flag A (astral), which enables 21-bit Unicode support.\n     * - Adds the `XRegExp.addUnicodeData` method used by other addons to provide character data.\n     *\n     * Unicode Base relies on externally provided Unicode character data. Official addons are\n     * available to provide data for Unicode categories, scripts, blocks, and properties.\n     *\n     * @requires XRegExp\n     */\n\n    // ==--------------------------==\n    // Private stuff\n    // ==--------------------------==\n\n    // Storage for Unicode data\n    var unicode = {};\n\n    // Reuse utils\n    var dec = XRegExp._dec;\n    var hex = XRegExp._hex;\n    var pad4 = XRegExp._pad4;\n\n    // Generates a token lookup name: lowercase, with hyphens, spaces, and underscores removed\n    function normalize(name) {\n        return name.replace(/[- _]+/g, '').toLowerCase();\n    }\n\n    // Gets the decimal code of a literal code unit, \\xHH, \\uHHHH, or a backslash-escaped literal\n    function charCode(chr) {\n        var esc = /^\\\\[xu](.+)/.exec(chr);\n        return esc ? dec(esc[1]) : chr.charCodeAt(chr[0] === '\\\\' ? 1 : 0);\n    }\n\n    // Inverts a list of ordered BMP characters and ranges\n    function invertBmp(range) {\n        var output = '';\n        var lastEnd = -1;\n\n        XRegExp.forEach(range, /(\\\\x..|\\\\u....|\\\\?[\\s\\S])(?:-(\\\\x..|\\\\u....|\\\\?[\\s\\S]))?/, function (m) {\n            var start = charCode(m[1]);\n            if (start > lastEnd + 1) {\n                output += '\\\\u' + pad4(hex(lastEnd + 1));\n                if (start > lastEnd + 2) {\n                    output += '-\\\\u' + pad4(hex(start - 1));\n                }\n            }\n            lastEnd = charCode(m[2] || m[1]);\n        });\n\n        if (lastEnd < 0xFFFF) {\n            output += '\\\\u' + pad4(hex(lastEnd + 1));\n            if (lastEnd < 0xFFFE) {\n                output += '-\\\\uFFFF';\n            }\n        }\n\n        return output;\n    }\n\n    // Generates an inverted BMP range on first use\n    function cacheInvertedBmp(slug) {\n        var prop = 'b!';\n        return unicode[slug][prop] || (unicode[slug][prop] = invertBmp(unicode[slug].bmp));\n    }\n\n    // Combines and optionally negates BMP and astral data\n    function buildAstral(slug, isNegated) {\n        var item = unicode[slug];\n        var combined = '';\n\n        if (item.bmp && !item.isBmpLast) {\n            combined = '[' + item.bmp + ']' + (item.astral ? '|' : '');\n        }\n        if (item.astral) {\n            combined += item.astral;\n        }\n        if (item.isBmpLast && item.bmp) {\n            combined += (item.astral ? '|' : '') + '[' + item.bmp + ']';\n        }\n\n        // Astral Unicode tokens always match a code point, never a code unit\n        return isNegated ? '(?:(?!' + combined + ')(?:[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\0-\\uFFFF]))' : '(?:' + combined + ')';\n    }\n\n    // Builds a complete astral pattern on first use\n    function cacheAstral(slug, isNegated) {\n        var prop = isNegated ? 'a!' : 'a=';\n        return unicode[slug][prop] || (unicode[slug][prop] = buildAstral(slug, isNegated));\n    }\n\n    // ==--------------------------==\n    // Core functionality\n    // ==--------------------------==\n\n    /*\n     * Add astral mode (flag A) and Unicode token syntax: `\\p{..}`, `\\P{..}`, `\\p{^..}`, `\\pC`.\n     */\n    XRegExp.addToken(\n    // Use `*` instead of `+` to avoid capturing `^` as the token name in `\\p{^}`\n    /\\\\([pP])(?:{(\\^?)([^}]*)}|([A-Za-z]))/, function (match, scope, flags) {\n        var ERR_DOUBLE_NEG = 'Invalid double negation ';\n        var ERR_UNKNOWN_NAME = 'Unknown Unicode token ';\n        var ERR_UNKNOWN_REF = 'Unicode token missing data ';\n        var ERR_ASTRAL_ONLY = 'Astral mode required for Unicode token ';\n        var ERR_ASTRAL_IN_CLASS = 'Astral mode does not support Unicode tokens within character classes';\n        // Negated via \\P{..} or \\p{^..}\n        var isNegated = match[1] === 'P' || !!match[2];\n        // Switch from BMP (0-FFFF) to astral (0-10FFFF) mode via flag A\n        var isAstralMode = flags.indexOf('A') !== -1;\n        // Token lookup name. Check `[4]` first to avoid passing `undefined` via `\\p{}`\n        var slug = normalize(match[4] || match[3]);\n        // Token data object\n        var item = unicode[slug];\n\n        if (match[1] === 'P' && match[2]) {\n            throw new SyntaxError(ERR_DOUBLE_NEG + match[0]);\n        }\n        if (!unicode.hasOwnProperty(slug)) {\n            throw new SyntaxError(ERR_UNKNOWN_NAME + match[0]);\n        }\n\n        // Switch to the negated form of the referenced Unicode token\n        if (item.inverseOf) {\n            slug = normalize(item.inverseOf);\n            if (!unicode.hasOwnProperty(slug)) {\n                throw new ReferenceError(ERR_UNKNOWN_REF + match[0] + ' -> ' + item.inverseOf);\n            }\n            item = unicode[slug];\n            isNegated = !isNegated;\n        }\n\n        if (!(item.bmp || isAstralMode)) {\n            throw new SyntaxError(ERR_ASTRAL_ONLY + match[0]);\n        }\n        if (isAstralMode) {\n            if (scope === 'class') {\n                throw new SyntaxError(ERR_ASTRAL_IN_CLASS);\n            }\n\n            return cacheAstral(slug, isNegated);\n        }\n\n        return scope === 'class' ? isNegated ? cacheInvertedBmp(slug) : item.bmp : (isNegated ? '[^' : '[') + item.bmp + ']';\n    }, {\n        scope: 'all',\n        optionalFlags: 'A',\n        leadChar: '\\\\'\n    });\n\n    /**\n     * Adds to the list of Unicode tokens that XRegExp regexes can match via `\\p` or `\\P`.\n     *\n     * @memberOf XRegExp\n     * @param {Array} data Objects with named character ranges. Each object may have properties\n     *   `name`, `alias`, `isBmpLast`, `inverseOf`, `bmp`, and `astral`. All but `name` are\n     *   optional, although one of `bmp` or `astral` is required (unless `inverseOf` is set). If\n     *   `astral` is absent, the `bmp` data is used for BMP and astral modes. If `bmp` is absent,\n     *   the name errors in BMP mode but works in astral mode. If both `bmp` and `astral` are\n     *   provided, the `bmp` data only is used in BMP mode, and the combination of `bmp` and\n     *   `astral` data is used in astral mode. `isBmpLast` is needed when a token matches orphan\n     *   high surrogates *and* uses surrogate pairs to match astral code points. The `bmp` and\n     *   `astral` data should be a combination of literal characters and `\\xHH` or `\\uHHHH` escape\n     *   sequences, with hyphens to create ranges. Any regex metacharacters in the data should be\n     *   escaped, apart from range-creating hyphens. The `astral` data can additionally use\n     *   character classes and alternation, and should use surrogate pairs to represent astral code\n     *   points. `inverseOf` can be used to avoid duplicating character data if a Unicode token is\n     *   defined as the exact inverse of another token.\n     * @example\n     *\n     * // Basic use\n     * XRegExp.addUnicodeData([{\n     *   name: 'XDigit',\n     *   alias: 'Hexadecimal',\n     *   bmp: '0-9A-Fa-f'\n     * }]);\n     * XRegExp('\\\\p{XDigit}:\\\\p{Hexadecimal}+').test('0:3D'); // -> true\n     */\n    XRegExp.addUnicodeData = function (data) {\n        var ERR_NO_NAME = 'Unicode token requires name';\n        var ERR_NO_DATA = 'Unicode token has no character data ';\n        var item = void 0;\n\n        for (var i = 0; i < data.length; ++i) {\n            item = data[i];\n            if (!item.name) {\n                throw new Error(ERR_NO_NAME);\n            }\n            if (!(item.inverseOf || item.bmp || item.astral)) {\n                throw new Error(ERR_NO_DATA + item.name);\n            }\n            unicode[normalize(item.name)] = item;\n            if (item.alias) {\n                unicode[normalize(item.alias)] = item;\n            }\n        }\n\n        // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and\n        // flags might now produce different results\n        XRegExp.cache.flush('patterns');\n    };\n\n    /**\n     * @ignore\n     *\n     * Return a reference to the internal Unicode definition structure for the given Unicode\n     * Property if the given name is a legal Unicode Property for use in XRegExp `\\p` or `\\P` regex\n     * constructs.\n     *\n     * @memberOf XRegExp\n     * @param {String} name Name by which the Unicode Property may be recognized (case-insensitive),\n     *   e.g. `'N'` or `'Number'`. The given name is matched against all registered Unicode\n     *   Properties and Property Aliases.\n     * @returns {Object} Reference to definition structure when the name matches a Unicode Property.\n     *\n     * @note\n     * For more info on Unicode Properties, see also http://unicode.org/reports/tr18/#Categories.\n     *\n     * @note\n     * This method is *not* part of the officially documented API and may change or be removed in\n     * the future. It is meant for userland code that wishes to reuse the (large) internal Unicode\n     * structures set up by XRegExp.\n     */\n    XRegExp._getUnicodeProperty = function (name) {\n        var slug = normalize(name);\n        return unicode[slug];\n    };\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\n/*!\n * XRegExp.matchRecursive 4.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2009-present MIT License\n */\n\nexports.default = function (XRegExp) {\n\n    /**\n     * Returns a match detail object composed of the provided values.\n     *\n     * @private\n     */\n    function row(name, value, start, end) {\n        return {\n            name: name,\n            value: value,\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Returns an array of match strings between outermost left and right delimiters, or an array of\n     * objects with detailed match parts and position data. An error is thrown if delimiters are\n     * unbalanced within the data.\n     *\n     * @memberOf XRegExp\n     * @param {String} str String to search.\n     * @param {String} left Left delimiter as an XRegExp pattern.\n     * @param {String} right Right delimiter as an XRegExp pattern.\n     * @param {String} [flags] Any native or XRegExp flags, used for the left and right delimiters.\n     * @param {Object} [options] Lets you specify `valueNames` and `escapeChar` options.\n     * @returns {Array} Array of matches, or an empty array.\n     * @example\n     *\n     * // Basic usage\n     * let str = '(t((e))s)t()(ing)';\n     * XRegExp.matchRecursive(str, '\\\\(', '\\\\)', 'g');\n     * // -> ['t((e))s', '', 'ing']\n     *\n     * // Extended information mode with valueNames\n     * str = 'Here is <div> <div>an</div></div> example';\n     * XRegExp.matchRecursive(str, '<div\\\\s*>', '</div>', 'gi', {\n     *   valueNames: ['between', 'left', 'match', 'right']\n     * });\n     * // -> [\n     * // {name: 'between', value: 'Here is ',       start: 0,  end: 8},\n     * // {name: 'left',    value: '<div>',          start: 8,  end: 13},\n     * // {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},\n     * // {name: 'right',   value: '</div>',         start: 27, end: 33},\n     * // {name: 'between', value: ' example',       start: 33, end: 41}\n     * // ]\n     *\n     * // Omitting unneeded parts with null valueNames, and using escapeChar\n     * str = '...{1}.\\\\{{function(x,y){return {y:x}}}';\n     * XRegExp.matchRecursive(str, '{', '}', 'g', {\n     *   valueNames: ['literal', null, 'value', null],\n     *   escapeChar: '\\\\'\n     * });\n     * // -> [\n     * // {name: 'literal', value: '...',  start: 0, end: 3},\n     * // {name: 'value',   value: '1',    start: 4, end: 5},\n     * // {name: 'literal', value: '.\\\\{', start: 6, end: 9},\n     * // {name: 'value',   value: 'function(x,y){return {y:x}}', start: 10, end: 37}\n     * // ]\n     *\n     * // Sticky mode via flag y\n     * str = '<1><<<2>>><3>4<5>';\n     * XRegExp.matchRecursive(str, '<', '>', 'gy');\n     * // -> ['1', '<<2>>', '3']\n     */\n    XRegExp.matchRecursive = function (str, left, right, flags, options) {\n        flags = flags || '';\n        options = options || {};\n        var global = flags.indexOf('g') !== -1;\n        var sticky = flags.indexOf('y') !== -1;\n        // Flag `y` is controlled internally\n        var basicFlags = flags.replace(/y/g, '');\n        var escapeChar = options.escapeChar;\n        var vN = options.valueNames;\n        var output = [];\n        var openTokens = 0;\n        var delimStart = 0;\n        var delimEnd = 0;\n        var lastOuterEnd = 0;\n        var outerStart = void 0;\n        var innerStart = void 0;\n        var leftMatch = void 0;\n        var rightMatch = void 0;\n        var esc = void 0;\n        left = XRegExp(left, basicFlags);\n        right = XRegExp(right, basicFlags);\n\n        if (escapeChar) {\n            if (escapeChar.length > 1) {\n                throw new Error('Cannot use more than one escape character');\n            }\n            escapeChar = XRegExp.escape(escapeChar);\n            // Example of concatenated `esc` regex:\n            // `escapeChar`: '%'\n            // `left`: '<'\n            // `right`: '>'\n            // Regex is: /(?:%[\\S\\s]|(?:(?!<|>)[^%])+)+/\n            esc = new RegExp('(?:' + escapeChar + '[\\\\S\\\\s]|(?:(?!' +\n            // Using `XRegExp.union` safely rewrites backreferences in `left` and `right`.\n            // Intentionally not passing `basicFlags` to `XRegExp.union` since any syntax\n            // transformation resulting from those flags was already applied to `left` and\n            // `right` when they were passed through the XRegExp constructor above.\n            XRegExp.union([left, right], '', { conjunction: 'or' }).source + ')[^' + escapeChar + '])+)+',\n            // Flags `gy` not needed here\n            flags.replace(/[^imu]+/g, ''));\n        }\n\n        while (true) {\n            // If using an escape character, advance to the delimiter's next starting position,\n            // skipping any escaped characters in between\n            if (escapeChar) {\n                delimEnd += (XRegExp.exec(str, esc, delimEnd, 'sticky') || [''])[0].length;\n            }\n            leftMatch = XRegExp.exec(str, left, delimEnd);\n            rightMatch = XRegExp.exec(str, right, delimEnd);\n            // Keep the leftmost match only\n            if (leftMatch && rightMatch) {\n                if (leftMatch.index <= rightMatch.index) {\n                    rightMatch = null;\n                } else {\n                    leftMatch = null;\n                }\n            }\n            // Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):\n            // LM | RM | OT | Result\n            // 1  | 0  | 1  | loop\n            // 1  | 0  | 0  | loop\n            // 0  | 1  | 1  | loop\n            // 0  | 1  | 0  | throw\n            // 0  | 0  | 1  | throw\n            // 0  | 0  | 0  | break\n            // The paths above don't include the sticky mode special case. The loop ends after the\n            // first completed match if not `global`.\n            if (leftMatch || rightMatch) {\n                delimStart = (leftMatch || rightMatch).index;\n                delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\n            } else if (!openTokens) {\n                break;\n            }\n            if (sticky && !openTokens && delimStart > lastOuterEnd) {\n                break;\n            }\n            if (leftMatch) {\n                if (!openTokens) {\n                    outerStart = delimStart;\n                    innerStart = delimEnd;\n                }\n                ++openTokens;\n            } else if (rightMatch && openTokens) {\n                if (! --openTokens) {\n                    if (vN) {\n                        if (vN[0] && outerStart > lastOuterEnd) {\n                            output.push(row(vN[0], str.slice(lastOuterEnd, outerStart), lastOuterEnd, outerStart));\n                        }\n                        if (vN[1]) {\n                            output.push(row(vN[1], str.slice(outerStart, innerStart), outerStart, innerStart));\n                        }\n                        if (vN[2]) {\n                            output.push(row(vN[2], str.slice(innerStart, delimStart), innerStart, delimStart));\n                        }\n                        if (vN[3]) {\n                            output.push(row(vN[3], str.slice(delimStart, delimEnd), delimStart, delimEnd));\n                        }\n                    } else {\n                        output.push(str.slice(innerStart, delimStart));\n                    }\n                    lastOuterEnd = delimEnd;\n                    if (!global) {\n                        break;\n                    }\n                }\n            } else {\n                throw new Error('Unbalanced delimiter found in string');\n            }\n            // If the delimiter matched an empty string, avoid an infinite loop\n            if (delimStart === delimEnd) {\n                ++delimEnd;\n            }\n        }\n\n        if (global && !sticky && vN && vN[0] && str.length > lastOuterEnd) {\n            output.push(row(vN[0], str.slice(lastOuterEnd), lastOuterEnd, str.length));\n        }\n\n        return output;\n    };\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\n/*!\n * XRegExp.build 4.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2012-present MIT License\n */\n\nexports.default = function (XRegExp) {\n    var REGEX_DATA = 'xregexp';\n    var subParts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/g;\n    var parts = XRegExp.union([/\\({{([\\w$]+)}}\\)|{{([\\w$]+)}}/, subParts], 'g', {\n        conjunction: 'or'\n    });\n\n    /**\n     * Strips a leading `^` and trailing unescaped `$`, if both are present.\n     *\n     * @private\n     * @param {String} pattern Pattern to process.\n     * @returns {String} Pattern with edge anchors removed.\n     */\n    function deanchor(pattern) {\n        // Allow any number of empty noncapturing groups before/after anchors, because regexes\n        // built/generated by XRegExp sometimes include them\n        var leadingAnchor = /^(?:\\(\\?:\\))*\\^/;\n        var trailingAnchor = /\\$(?:\\(\\?:\\))*$/;\n\n        if (leadingAnchor.test(pattern) && trailingAnchor.test(pattern) &&\n        // Ensure that the trailing `$` isn't escaped\n        trailingAnchor.test(pattern.replace(/\\\\[\\s\\S]/g, ''))) {\n            return pattern.replace(leadingAnchor, '').replace(trailingAnchor, '');\n        }\n\n        return pattern;\n    }\n\n    /**\n     * Converts the provided value to an XRegExp. Native RegExp flags are not preserved.\n     *\n     * @private\n     * @param {String|RegExp} value Value to convert.\n     * @param {Boolean} [addFlagX] Whether to apply the `x` flag in cases when `value` is not\n     *   already a regex generated by XRegExp\n     * @returns {RegExp} XRegExp object with XRegExp syntax applied.\n     */\n    function asXRegExp(value, addFlagX) {\n        var flags = addFlagX ? 'x' : '';\n        return XRegExp.isRegExp(value) ? value[REGEX_DATA] && value[REGEX_DATA].captureNames ?\n        // Don't recompile, to preserve capture names\n        value :\n        // Recompile as XRegExp\n        XRegExp(value.source, flags) :\n        // Compile string as XRegExp\n        XRegExp(value, flags);\n    }\n\n    function interpolate(substitution) {\n        return substitution instanceof RegExp ? substitution : XRegExp.escape(substitution);\n    }\n\n    function reduceToSubpatternsObject(subpatterns, interpolated, subpatternIndex) {\n        subpatterns['subpattern' + subpatternIndex] = interpolated;\n        return subpatterns;\n    }\n\n    function embedSubpatternAfter(raw, subpatternIndex, rawLiterals) {\n        var hasSubpattern = subpatternIndex < rawLiterals.length - 1;\n        return raw + (hasSubpattern ? '{{subpattern' + subpatternIndex + '}}' : '');\n    }\n\n    /**\n     * Provides tagged template literals that create regexes with XRegExp syntax and flags. The\n     * provided pattern is handled as a raw string, so backslashes don't need to be escaped.\n     *\n     * Interpolation of strings and regexes shares the features of `XRegExp.build`. Interpolated\n     * patterns are treated as atomic units when quantified, interpolated strings have their special\n     * characters escaped, a leading `^` and trailing unescaped `$` are stripped from interpolated\n     * regexes if both are present, and any backreferences within an interpolated regex are\n     * rewritten to work within the overall pattern.\n     *\n     * @memberOf XRegExp\n     * @param {String} [flags] Any combination of XRegExp flags.\n     * @returns {Function} Handler for template literals that construct regexes with XRegExp syntax.\n     * @example\n     *\n     * const h12 = /1[0-2]|0?[1-9]/;\n     * const h24 = /2[0-3]|[01][0-9]/;\n     * const hours = XRegExp.tag('x')`${h12} : | ${h24}`;\n     * const minutes = /^[0-5][0-9]$/;\n     * // Note that explicitly naming the 'minutes' group is required for named backreferences\n     * const time = XRegExp.tag('x')`^ ${hours} (?<minutes>${minutes}) $`;\n     * time.test('10:59'); // -> true\n     * XRegExp.exec('10:59', time).minutes; // -> '59'\n     */\n    XRegExp.tag = function (flags) {\n        return function (literals) {\n            for (var _len = arguments.length, substitutions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                substitutions[_key - 1] = arguments[_key];\n            }\n\n            var subpatterns = substitutions.map(interpolate).reduce(reduceToSubpatternsObject, {});\n            var pattern = literals.raw.map(embedSubpatternAfter).join('');\n            return XRegExp.build(pattern, subpatterns, flags);\n        };\n    };\n\n    /**\n     * Builds regexes using named subpatterns, for readability and pattern reuse. Backreferences in\n     * the outer pattern and provided subpatterns are automatically renumbered to work correctly.\n     * Native flags used by provided subpatterns are ignored in favor of the `flags` argument.\n     *\n     * @memberOf XRegExp\n     * @param {String} pattern XRegExp pattern using `{{name}}` for embedded subpatterns. Allows\n     *   `({{name}})` as shorthand for `(?<name>{{name}})`. Patterns cannot be embedded within\n     *   character classes.\n     * @param {Object} subs Lookup object for named subpatterns. Values can be strings or regexes. A\n     *   leading `^` and trailing unescaped `$` are stripped from subpatterns, if both are present.\n     * @param {String} [flags] Any combination of XRegExp flags.\n     * @returns {RegExp} Regex with interpolated subpatterns.\n     * @example\n     *\n     * const time = XRegExp.build('(?x)^ {{hours}} ({{minutes}}) $', {\n     *   hours: XRegExp.build('{{h12}} : | {{h24}}', {\n     *     h12: /1[0-2]|0?[1-9]/,\n     *     h24: /2[0-3]|[01][0-9]/\n     *   }, 'x'),\n     *   minutes: /^[0-5][0-9]$/\n     * });\n     * time.test('10:59'); // -> true\n     * XRegExp.exec('10:59', time).minutes; // -> '59'\n     */\n    XRegExp.build = function (pattern, subs, flags) {\n        flags = flags || '';\n        // Used with `asXRegExp` calls for `pattern` and subpatterns in `subs`, to work around how\n        // some browsers convert `RegExp('\\n')` to a regex that contains the literal characters `\\`\n        // and `n`. See more details at <https://github.com/slevithan/xregexp/pull/163>.\n        var addFlagX = flags.indexOf('x') !== -1;\n        var inlineFlags = /^\\(\\?([\\w$]+)\\)/.exec(pattern);\n        // Add flags within a leading mode modifier to the overall pattern's flags\n        if (inlineFlags) {\n            flags = XRegExp._clipDuplicates(flags + inlineFlags[1]);\n        }\n\n        var data = {};\n        for (var p in subs) {\n            if (subs.hasOwnProperty(p)) {\n                // Passing to XRegExp enables extended syntax and ensures independent validity,\n                // lest an unescaped `(`, `)`, `[`, or trailing `\\` breaks the `(?:)` wrapper. For\n                // subpatterns provided as native regexes, it dies on octals and adds the property\n                // used to hold extended regex instance data, for simplicity.\n                var sub = asXRegExp(subs[p], addFlagX);\n                data[p] = {\n                    // Deanchoring allows embedding independently useful anchored regexes. If you\n                    // really need to keep your anchors, double them (i.e., `^^...$$`).\n                    pattern: deanchor(sub.source),\n                    names: sub[REGEX_DATA].captureNames || []\n                };\n            }\n        }\n\n        // Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;\n        // helps keep this simple. Named captures will be put back.\n        var patternAsRegex = asXRegExp(pattern, addFlagX);\n\n        // 'Caps' is short for 'captures'\n        var numCaps = 0;\n        var numPriorCaps = void 0;\n        var numOuterCaps = 0;\n        var outerCapsMap = [0];\n        var outerCapNames = patternAsRegex[REGEX_DATA].captureNames || [];\n        var output = patternAsRegex.source.replace(parts, function ($0, $1, $2, $3, $4) {\n            var subName = $1 || $2;\n            var capName = void 0;\n            var intro = void 0;\n            var localCapIndex = void 0;\n            // Named subpattern\n            if (subName) {\n                if (!data.hasOwnProperty(subName)) {\n                    throw new ReferenceError('Undefined property ' + $0);\n                }\n                // Named subpattern was wrapped in a capturing group\n                if ($1) {\n                    capName = outerCapNames[numOuterCaps];\n                    outerCapsMap[++numOuterCaps] = ++numCaps;\n                    // If it's a named group, preserve the name. Otherwise, use the subpattern name\n                    // as the capture name\n                    intro = '(?<' + (capName || subName) + '>';\n                } else {\n                    intro = '(?:';\n                }\n                numPriorCaps = numCaps;\n                var rewrittenSubpattern = data[subName].pattern.replace(subParts, function (match, paren, backref) {\n                    // Capturing group\n                    if (paren) {\n                        capName = data[subName].names[numCaps - numPriorCaps];\n                        ++numCaps;\n                        // If the current capture has a name, preserve the name\n                        if (capName) {\n                            return '(?<' + capName + '>';\n                        }\n                        // Backreference\n                    } else if (backref) {\n                        localCapIndex = +backref - 1;\n                        // Rewrite the backreference\n                        return data[subName].names[localCapIndex] ?\n                        // Need to preserve the backreference name in case using flag `n`\n                        '\\\\k<' + data[subName].names[localCapIndex] + '>' : '\\\\' + (+backref + numPriorCaps);\n                    }\n                    return match;\n                });\n                return '' + intro + rewrittenSubpattern + ')';\n            }\n            // Capturing group\n            if ($3) {\n                capName = outerCapNames[numOuterCaps];\n                outerCapsMap[++numOuterCaps] = ++numCaps;\n                // If the current capture has a name, preserve the name\n                if (capName) {\n                    return '(?<' + capName + '>';\n                }\n                // Backreference\n            } else if ($4) {\n                localCapIndex = +$4 - 1;\n                // Rewrite the backreference\n                return outerCapNames[localCapIndex] ?\n                // Need to preserve the backreference name in case using flag `n`\n                '\\\\k<' + outerCapNames[localCapIndex] + '>' : '\\\\' + outerCapsMap[+$4];\n            }\n            return $0;\n        });\n\n        return XRegExp(output, flags);\n    };\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/*!\n * XRegExp 4.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2007-present MIT License\n */\n\n/**\n * XRegExp provides augmented, extensible regular expressions. You get additional regex syntax and\n * flags, beyond what browsers support natively. XRegExp is also a regex utility belt with tools to\n * make your client-side grepping simpler and more powerful, while freeing you from related\n * cross-browser inconsistencies.\n */\n\n// ==--------------------------==\n// Private stuff\n// ==--------------------------==\n\n// Property name used for extended regex instance data\nvar REGEX_DATA = 'xregexp';\n// Optional features that can be installed and uninstalled\nvar features = {\n    astral: false,\n    namespacing: false\n};\n// Native methods to use and restore ('native' is an ES3 reserved keyword)\nvar nativ = {\n    exec: RegExp.prototype.exec,\n    test: RegExp.prototype.test,\n    match: String.prototype.match,\n    replace: String.prototype.replace,\n    split: String.prototype.split\n};\n// Storage for fixed/extended native methods\nvar fixed = {};\n// Storage for regexes cached by `XRegExp.cache`\nvar regexCache = {};\n// Storage for pattern details cached by the `XRegExp` constructor\nvar patternCache = {};\n// Storage for regex syntax tokens added internally or by `XRegExp.addToken`\nvar tokens = [];\n// Token scopes\nvar defaultScope = 'default';\nvar classScope = 'class';\n// Regexes that match native regex syntax, including octals\nvar nativeTokens = {\n    // Any native multicharacter token in default scope, or any single character\n    'default': /\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|\\(\\?(?:[:=!]|<[=!])|[?*+]\\?|{\\d+(?:,\\d*)?}\\??|[\\s\\S]/,\n    // Any native multicharacter token in character class scope, or any single character\n    'class': /\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|[\\s\\S]/\n};\n// Any backreference or dollar-prefixed character in replacement strings\nvar replacementToken = /\\$(?:{([\\w$]+)}|<([\\w$]+)>|(\\d\\d?|[\\s\\S]))/g;\n// Check for correct `exec` handling of nonparticipating capturing groups\nvar correctExecNpcg = nativ.exec.call(/()??/, '')[1] === undefined;\n// Check for ES6 `flags` prop support\nvar hasFlagsProp = /x/.flags !== undefined;\n// Shortcut to `Object.prototype.toString`\nvar toString = {}.toString;\n\nfunction hasNativeFlag(flag) {\n    // Can't check based on the presence of properties/getters since browsers might support such\n    // properties even when they don't support the corresponding flag in regex construction (tested\n    // in Chrome 48, where `'unicode' in /x/` is true but trying to construct a regex with flag `u`\n    // throws an error)\n    var isSupported = true;\n    try {\n        // Can't use regex literals for testing even in a `try` because regex literals with\n        // unsupported flags cause a compilation error in IE\n        new RegExp('', flag);\n    } catch (exception) {\n        isSupported = false;\n    }\n    return isSupported;\n}\n// Check for ES6 `u` flag support\nvar hasNativeU = hasNativeFlag('u');\n// Check for ES6 `y` flag support\nvar hasNativeY = hasNativeFlag('y');\n// Tracker for known flags, including addon flags\nvar registeredFlags = {\n    g: true,\n    i: true,\n    m: true,\n    u: hasNativeU,\n    y: hasNativeY\n};\n\n/**\n * Attaches extended data and `XRegExp.prototype` properties to a regex object.\n *\n * @private\n * @param {RegExp} regex Regex to augment.\n * @param {Array} captureNames Array with capture names, or `null`.\n * @param {String} xSource XRegExp pattern used to generate `regex`, or `null` if N/A.\n * @param {String} xFlags XRegExp flags used to generate `regex`, or `null` if N/A.\n * @param {Boolean} [isInternalOnly=false] Whether the regex will be used only for internal\n *   operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *   skipping some operations like attaching `XRegExp.prototype` properties.\n * @returns {RegExp} Augmented regex.\n */\nfunction augment(regex, captureNames, xSource, xFlags, isInternalOnly) {\n    var p = void 0;\n\n    regex[REGEX_DATA] = {\n        captureNames: captureNames\n    };\n\n    if (isInternalOnly) {\n        return regex;\n    }\n\n    // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value\n    if (regex.__proto__) {\n        regex.__proto__ = XRegExp.prototype;\n    } else {\n        for (p in XRegExp.prototype) {\n            // An `XRegExp.prototype.hasOwnProperty(p)` check wouldn't be worth it here, since this\n            // is performance sensitive, and enumerable `Object.prototype` or `RegExp.prototype`\n            // extensions exist on `regex.prototype` anyway\n            regex[p] = XRegExp.prototype[p];\n        }\n    }\n\n    regex[REGEX_DATA].source = xSource;\n    // Emulate the ES6 `flags` prop by ensuring flags are in alphabetical order\n    regex[REGEX_DATA].flags = xFlags ? xFlags.split('').sort().join('') : xFlags;\n\n    return regex;\n}\n\n/**\n * Removes any duplicate characters from the provided string.\n *\n * @private\n * @param {String} str String to remove duplicate characters from.\n * @returns {String} String with any duplicate characters removed.\n */\nfunction clipDuplicates(str) {\n    return nativ.replace.call(str, /([\\s\\S])(?=[\\s\\S]*\\1)/g, '');\n}\n\n/**\n * Copies a regex object while preserving extended data and augmenting with `XRegExp.prototype`\n * properties. The copy has a fresh `lastIndex` property (set to zero). Allows adding and removing\n * flags g and y while copying the regex.\n *\n * @private\n * @param {RegExp} regex Regex to copy.\n * @param {Object} [options] Options object with optional properties:\n *   - `addG` {Boolean} Add flag g while copying the regex.\n *   - `addY` {Boolean} Add flag y while copying the regex.\n *   - `removeG` {Boolean} Remove flag g while copying the regex.\n *   - `removeY` {Boolean} Remove flag y while copying the regex.\n *   - `isInternalOnly` {Boolean} Whether the copied regex will be used only for internal\n *     operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *     skipping some operations like attaching `XRegExp.prototype` properties.\n *   - `source` {String} Overrides `<regex>.source`, for special cases.\n * @returns {RegExp} Copy of the provided regex, possibly with modified flags.\n */\nfunction copyRegex(regex, options) {\n    if (!XRegExp.isRegExp(regex)) {\n        throw new TypeError('Type RegExp expected');\n    }\n\n    var xData = regex[REGEX_DATA] || {};\n    var flags = getNativeFlags(regex);\n    var flagsToAdd = '';\n    var flagsToRemove = '';\n    var xregexpSource = null;\n    var xregexpFlags = null;\n\n    options = options || {};\n\n    if (options.removeG) {\n        flagsToRemove += 'g';\n    }\n    if (options.removeY) {\n        flagsToRemove += 'y';\n    }\n    if (flagsToRemove) {\n        flags = nativ.replace.call(flags, new RegExp('[' + flagsToRemove + ']+', 'g'), '');\n    }\n\n    if (options.addG) {\n        flagsToAdd += 'g';\n    }\n    if (options.addY) {\n        flagsToAdd += 'y';\n    }\n    if (flagsToAdd) {\n        flags = clipDuplicates(flags + flagsToAdd);\n    }\n\n    if (!options.isInternalOnly) {\n        if (xData.source !== undefined) {\n            xregexpSource = xData.source;\n        }\n        // null or undefined; don't want to add to `flags` if the previous value was null, since\n        // that indicates we're not tracking original precompilation flags\n        if (xData.flags != null) {\n            // Flags are only added for non-internal regexes by `XRegExp.globalize`. Flags are never\n            // removed for non-internal regexes, so don't need to handle it\n            xregexpFlags = flagsToAdd ? clipDuplicates(xData.flags + flagsToAdd) : xData.flags;\n        }\n    }\n\n    // Augment with `XRegExp.prototype` properties, but use the native `RegExp` constructor to avoid\n    // searching for special tokens. That would be wrong for regexes constructed by `RegExp`, and\n    // unnecessary for regexes constructed by `XRegExp` because the regex has already undergone the\n    // translation to native regex syntax\n    regex = augment(new RegExp(options.source || regex.source, flags), hasNamedCapture(regex) ? xData.captureNames.slice(0) : null, xregexpSource, xregexpFlags, options.isInternalOnly);\n\n    return regex;\n}\n\n/**\n * Converts hexadecimal to decimal.\n *\n * @private\n * @param {String} hex\n * @returns {Number}\n */\nfunction dec(hex) {\n    return parseInt(hex, 16);\n}\n\n/**\n * Returns a pattern that can be used in a native RegExp in place of an ignorable token such as an\n * inline comment or whitespace with flag x. This is used directly as a token handler function\n * passed to `XRegExp.addToken`.\n *\n * @private\n * @param {String} match Match arg of `XRegExp.addToken` handler\n * @param {String} scope Scope arg of `XRegExp.addToken` handler\n * @param {String} flags Flags arg of `XRegExp.addToken` handler\n * @returns {String} Either '' or '(?:)', depending on which is needed in the context of the match.\n */\nfunction getContextualTokenSeparator(match, scope, flags) {\n    if (\n    // No need to separate tokens if at the beginning or end of a group\n    match.input[match.index - 1] === '(' || match.input[match.index + match[0].length] === ')' ||\n\n    // No need to separate tokens if before or after a `|`\n    match.input[match.index - 1] === '|' || match.input[match.index + match[0].length] === '|' ||\n\n    // No need to separate tokens if at the beginning or end of the pattern\n    match.index < 1 || match.index + match[0].length >= match.input.length ||\n\n    // No need to separate tokens if at the beginning of a noncapturing group or lookahead.\n    // The way this is written relies on:\n    // - The search regex matching only 3-char strings.\n    // - Although `substr` gives chars from the end of the string if given a negative index,\n    //   the resulting substring will be too short to match. Ex: `'abcd'.substr(-1, 3) === 'd'`\n    nativ.test.call(/^\\(\\?[:=!]/, match.input.substr(match.index - 3, 3)) ||\n\n    // Avoid separating tokens when the following token is a quantifier\n    isQuantifierNext(match.input, match.index + match[0].length, flags)) {\n        return '';\n    }\n    // Keep tokens separated. This avoids e.g. inadvertedly changing `\\1 1` or `\\1(?#)1` to `\\11`.\n    // This also ensures all tokens remain as discrete atoms, e.g. it avoids converting the syntax\n    // error `(? :` into `(?:`.\n    return '(?:)';\n}\n\n/**\n * Returns native `RegExp` flags used by a regex object.\n *\n * @private\n * @param {RegExp} regex Regex to check.\n * @returns {String} Native flags in use.\n */\nfunction getNativeFlags(regex) {\n    return hasFlagsProp ? regex.flags :\n    // Explicitly using `RegExp.prototype.toString` (rather than e.g. `String` or concatenation\n    // with an empty string) allows this to continue working predictably when\n    // `XRegExp.proptotype.toString` is overridden\n    nativ.exec.call(/\\/([a-z]*)$/i, RegExp.prototype.toString.call(regex))[1];\n}\n\n/**\n * Determines whether a regex has extended instance data used to track capture names.\n *\n * @private\n * @param {RegExp} regex Regex to check.\n * @returns {Boolean} Whether the regex uses named capture.\n */\nfunction hasNamedCapture(regex) {\n    return !!(regex[REGEX_DATA] && regex[REGEX_DATA].captureNames);\n}\n\n/**\n * Converts decimal to hexadecimal.\n *\n * @private\n * @param {Number|String} dec\n * @returns {String}\n */\nfunction hex(dec) {\n    return parseInt(dec, 10).toString(16);\n}\n\n/**\n * Checks whether the next nonignorable token after the specified position is a quantifier.\n *\n * @private\n * @param {String} pattern Pattern to search within.\n * @param {Number} pos Index in `pattern` to search at.\n * @param {String} flags Flags used by the pattern.\n * @returns {Boolean} Whether the next nonignorable token is a quantifier.\n */\nfunction isQuantifierNext(pattern, pos, flags) {\n    var inlineCommentPattern = '\\\\(\\\\?#[^)]*\\\\)';\n    var lineCommentPattern = '#[^#\\\\n]*';\n    var quantifierPattern = '[?*+]|{\\\\d+(?:,\\\\d*)?}';\n    return nativ.test.call(flags.indexOf('x') !== -1 ?\n    // Ignore any leading whitespace, line comments, and inline comments\n    /^(?:\\s|#[^#\\n]*|\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})/ :\n    // Ignore any leading inline comments\n    /^(?:\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})/, pattern.slice(pos));\n}\n\n/**\n * Determines whether a value is of the specified type, by resolving its internal [[Class]].\n *\n * @private\n * @param {*} value Object to check.\n * @param {String} type Type to check for, in TitleCase.\n * @returns {Boolean} Whether the object matches the type.\n */\nfunction isType(value, type) {\n    return toString.call(value) === '[object ' + type + ']';\n}\n\n/**\n * Adds leading zeros if shorter than four characters. Used for fixed-length hexadecimal values.\n *\n * @private\n * @param {String} str\n * @returns {String}\n */\nfunction pad4(str) {\n    while (str.length < 4) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Checks for flag-related errors, and strips/applies flags in a leading mode modifier. Offloads\n * the flag preparation logic from the `XRegExp` constructor.\n *\n * @private\n * @param {String} pattern Regex pattern, possibly with a leading mode modifier.\n * @param {String} flags Any combination of flags.\n * @returns {Object} Object with properties `pattern` and `flags`.\n */\nfunction prepareFlags(pattern, flags) {\n    var i = void 0;\n\n    // Recent browsers throw on duplicate flags, so copy this behavior for nonnative flags\n    if (clipDuplicates(flags) !== flags) {\n        throw new SyntaxError('Invalid duplicate regex flag ' + flags);\n    }\n\n    // Strip and apply a leading mode modifier with any combination of flags except g or y\n    pattern = nativ.replace.call(pattern, /^\\(\\?([\\w$]+)\\)/, function ($0, $1) {\n        if (nativ.test.call(/[gy]/, $1)) {\n            throw new SyntaxError('Cannot use flag g or y in mode modifier ' + $0);\n        }\n        // Allow duplicate flags within the mode modifier\n        flags = clipDuplicates(flags + $1);\n        return '';\n    });\n\n    // Throw on unknown native or nonnative flags\n    for (i = 0; i < flags.length; ++i) {\n        if (!registeredFlags[flags[i]]) {\n            throw new SyntaxError('Unknown regex flag ' + flags[i]);\n        }\n    }\n\n    return {\n        pattern: pattern,\n        flags: flags\n    };\n}\n\n/**\n * Prepares an options object from the given value.\n *\n * @private\n * @param {String|Object} value Value to convert to an options object.\n * @returns {Object} Options object.\n */\nfunction prepareOptions(value) {\n    var options = {};\n\n    if (isType(value, 'String')) {\n        XRegExp.forEach(value, /[^\\s,]+/, function (match) {\n            options[match] = true;\n        });\n\n        return options;\n    }\n\n    return value;\n}\n\n/**\n * Registers a flag so it doesn't throw an 'unknown flag' error.\n *\n * @private\n * @param {String} flag Single-character flag to register.\n */\nfunction registerFlag(flag) {\n    if (!/^[\\w$]$/.test(flag)) {\n        throw new Error('Flag must be a single character A-Za-z0-9_$');\n    }\n\n    registeredFlags[flag] = true;\n}\n\n/**\n * Runs built-in and custom regex syntax tokens in reverse insertion order at the specified\n * position, until a match is found.\n *\n * @private\n * @param {String} pattern Original pattern from which an XRegExp object is being built.\n * @param {String} flags Flags being used to construct the regex.\n * @param {Number} pos Position to search for tokens within `pattern`.\n * @param {Number} scope Regex scope to apply: 'default' or 'class'.\n * @param {Object} context Context object to use for token handler functions.\n * @returns {Object} Object with properties `matchLength`, `output`, and `reparse`; or `null`.\n */\nfunction runTokens(pattern, flags, pos, scope, context) {\n    var i = tokens.length;\n    var leadChar = pattern[pos];\n    var result = null;\n    var match = void 0;\n    var t = void 0;\n\n    // Run in reverse insertion order\n    while (i--) {\n        t = tokens[i];\n        if (t.leadChar && t.leadChar !== leadChar || t.scope !== scope && t.scope !== 'all' || t.flag && !(flags.indexOf(t.flag) !== -1)) {\n            continue;\n        }\n\n        match = XRegExp.exec(pattern, t.regex, pos, 'sticky');\n        if (match) {\n            result = {\n                matchLength: match[0].length,\n                output: t.handler.call(context, match, scope, flags),\n                reparse: t.reparse\n            };\n            // Finished with token tests\n            break;\n        }\n    }\n\n    return result;\n}\n\n/**\n * Enables or disables implicit astral mode opt-in. When enabled, flag A is automatically added to\n * all new regexes created by XRegExp. This causes an error to be thrown when creating regexes if\n * the Unicode Base addon is not available, since flag A is registered by that addon.\n *\n * @private\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\nfunction setAstral(on) {\n    features.astral = on;\n}\n\n/**\n * Adds named capture groups to the `groups` property of match arrays. See here for details:\n * https://github.com/tc39/proposal-regexp-named-groups\n *\n * @private\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\nfunction setNamespacing(on) {\n    features.namespacing = on;\n}\n\n/**\n * Returns the object, or throws an error if it is `null` or `undefined`. This is used to follow\n * the ES5 abstract operation `ToObject`.\n *\n * @private\n * @param {*} value Object to check and return.\n * @returns {*} The provided object.\n */\nfunction toObject(value) {\n    // null or undefined\n    if (value == null) {\n        throw new TypeError('Cannot convert null or undefined to object');\n    }\n\n    return value;\n}\n\n// ==--------------------------==\n// Constructor\n// ==--------------------------==\n\n/**\n * Creates an extended regular expression object for matching text with a pattern. Differs from a\n * native regular expression in that additional syntax and flags are supported. The returned object\n * is in fact a native `RegExp` and works with all native methods.\n *\n * @class XRegExp\n * @constructor\n * @param {String|RegExp} pattern Regex pattern string, or an existing regex object to copy.\n * @param {String} [flags] Any combination of flags.\n *   Native flags:\n *     - `g` - global\n *     - `i` - ignore case\n *     - `m` - multiline anchors\n *     - `u` - unicode (ES6)\n *     - `y` - sticky (Firefox 3+, ES6)\n *   Additional XRegExp flags:\n *     - `n` - explicit capture\n *     - `s` - dot matches all (aka singleline)\n *     - `x` - free-spacing and line comments (aka extended)\n *     - `A` - astral (requires the Unicode Base addon)\n *   Flags cannot be provided when constructing one `RegExp` from another.\n * @returns {RegExp} Extended regular expression object.\n * @example\n *\n * // With named capture and flag x\n * XRegExp(`(?<year>  [0-9]{4} ) -?  # year\n *          (?<month> [0-9]{2} ) -?  # month\n *          (?<day>   [0-9]{2} )     # day`, 'x');\n *\n * // Providing a regex object copies it. Native regexes are recompiled using native (not XRegExp)\n * // syntax. Copies maintain extended data, are augmented with `XRegExp.prototype` properties, and\n * // have fresh `lastIndex` properties (set to zero).\n * XRegExp(/regex/);\n */\nfunction XRegExp(pattern, flags) {\n    if (XRegExp.isRegExp(pattern)) {\n        if (flags !== undefined) {\n            throw new TypeError('Cannot supply flags when copying a RegExp');\n        }\n        return copyRegex(pattern);\n    }\n\n    // Copy the argument behavior of `RegExp`\n    pattern = pattern === undefined ? '' : String(pattern);\n    flags = flags === undefined ? '' : String(flags);\n\n    if (XRegExp.isInstalled('astral') && !(flags.indexOf('A') !== -1)) {\n        // This causes an error to be thrown if the Unicode Base addon is not available\n        flags += 'A';\n    }\n\n    if (!patternCache[pattern]) {\n        patternCache[pattern] = {};\n    }\n\n    if (!patternCache[pattern][flags]) {\n        var context = {\n            hasNamedCapture: false,\n            captureNames: []\n        };\n        var scope = defaultScope;\n        var output = '';\n        var pos = 0;\n        var result = void 0;\n\n        // Check for flag-related errors, and strip/apply flags in a leading mode modifier\n        var applied = prepareFlags(pattern, flags);\n        var appliedPattern = applied.pattern;\n        var appliedFlags = applied.flags;\n\n        // Use XRegExp's tokens to translate the pattern to a native regex pattern.\n        // `appliedPattern.length` may change on each iteration if tokens use `reparse`\n        while (pos < appliedPattern.length) {\n            do {\n                // Check for custom tokens at the current position\n                result = runTokens(appliedPattern, appliedFlags, pos, scope, context);\n                // If the matched token used the `reparse` option, splice its output into the\n                // pattern before running tokens again at the same position\n                if (result && result.reparse) {\n                    appliedPattern = appliedPattern.slice(0, pos) + result.output + appliedPattern.slice(pos + result.matchLength);\n                }\n            } while (result && result.reparse);\n\n            if (result) {\n                output += result.output;\n                pos += result.matchLength || 1;\n            } else {\n                // Get the native token at the current position\n                var token = XRegExp.exec(appliedPattern, nativeTokens[scope], pos, 'sticky')[0];\n                output += token;\n                pos += token.length;\n                if (token === '[' && scope === defaultScope) {\n                    scope = classScope;\n                } else if (token === ']' && scope === classScope) {\n                    scope = defaultScope;\n                }\n            }\n        }\n\n        patternCache[pattern][flags] = {\n            // Use basic cleanup to collapse repeated empty groups like `(?:)(?:)` to `(?:)`. Empty\n            // groups are sometimes inserted during regex transpilation in order to keep tokens\n            // separated. However, more than one empty group in a row is never needed.\n            pattern: nativ.replace.call(output, /(?:\\(\\?:\\))+/g, '(?:)'),\n            // Strip all but native flags\n            flags: nativ.replace.call(appliedFlags, /[^gimuy]+/g, ''),\n            // `context.captureNames` has an item for each capturing group, even if unnamed\n            captures: context.hasNamedCapture ? context.captureNames : null\n        };\n    }\n\n    var generated = patternCache[pattern][flags];\n    return augment(new RegExp(generated.pattern, generated.flags), generated.captures, pattern, flags);\n}\n\n// Add `RegExp.prototype` to the prototype chain\nXRegExp.prototype = /(?:)/;\n\n// ==--------------------------==\n// Public properties\n// ==--------------------------==\n\n/**\n * The XRegExp version number as a string containing three dot-separated parts. For example,\n * '2.0.0-beta-3'.\n *\n * @static\n * @memberOf XRegExp\n * @type String\n */\nXRegExp.version = '4.1.1';\n\n// ==--------------------------==\n// Public methods\n// ==--------------------------==\n\n// Intentionally undocumented; used in tests and addons\nXRegExp._clipDuplicates = clipDuplicates;\nXRegExp._hasNativeFlag = hasNativeFlag;\nXRegExp._dec = dec;\nXRegExp._hex = hex;\nXRegExp._pad4 = pad4;\n\n/**\n * Extends XRegExp syntax and allows custom flags. This is used internally and can be used to\n * create XRegExp addons. If more than one token can match the same string, the last added wins.\n *\n * @memberOf XRegExp\n * @param {RegExp} regex Regex object that matches the new token.\n * @param {Function} handler Function that returns a new pattern string (using native regex syntax)\n *   to replace the matched token within all future XRegExp regexes. Has access to persistent\n *   properties of the regex being built, through `this`. Invoked with three arguments:\n *   - The match array, with named backreference properties.\n *   - The regex scope where the match was found: 'default' or 'class'.\n *   - The flags used by the regex, including any flags in a leading mode modifier.\n *   The handler function becomes part of the XRegExp construction process, so be careful not to\n *   construct XRegExps within the function or you will trigger infinite recursion.\n * @param {Object} [options] Options object with optional properties:\n *   - `scope` {String} Scope where the token applies: 'default', 'class', or 'all'.\n *   - `flag` {String} Single-character flag that triggers the token. This also registers the\n *     flag, which prevents XRegExp from throwing an 'unknown flag' error when the flag is used.\n *   - `optionalFlags` {String} Any custom flags checked for within the token `handler` that are\n *     not required to trigger the token. This registers the flags, to prevent XRegExp from\n *     throwing an 'unknown flag' error when any of the flags are used.\n *   - `reparse` {Boolean} Whether the `handler` function's output should not be treated as\n *     final, and instead be reparseable by other tokens (including the current token). Allows\n *     token chaining or deferring.\n *   - `leadChar` {String} Single character that occurs at the beginning of any successful match\n *     of the token (not always applicable). This doesn't change the behavior of the token unless\n *     you provide an erroneous value. However, providing it can increase the token's performance\n *     since the token can be skipped at any positions where this character doesn't appear.\n * @example\n *\n * // Basic usage: Add \\a for the ALERT control code\n * XRegExp.addToken(\n *   /\\\\a/,\n *   () => '\\\\x07',\n *   {scope: 'all'}\n * );\n * XRegExp('\\\\a[\\\\a-\\\\n]+').test('\\x07\\n\\x07'); // -> true\n *\n * // Add the U (ungreedy) flag from PCRE and RE2, which reverses greedy and lazy quantifiers.\n * // Since `scope` is not specified, it uses 'default' (i.e., transformations apply outside of\n * // character classes only)\n * XRegExp.addToken(\n *   /([?*+]|{\\d+(?:,\\d*)?})(\\??)/,\n *   (match) => `${match[1]}${match[2] ? '' : '?'}`,\n *   {flag: 'U'}\n * );\n * XRegExp('a+', 'U').exec('aaa')[0]; // -> 'a'\n * XRegExp('a+?', 'U').exec('aaa')[0]; // -> 'aaa'\n */\nXRegExp.addToken = function (regex, handler, options) {\n    options = options || {};\n    var optionalFlags = options.optionalFlags;\n    var i = void 0;\n\n    if (options.flag) {\n        registerFlag(options.flag);\n    }\n\n    if (optionalFlags) {\n        optionalFlags = nativ.split.call(optionalFlags, '');\n        for (i = 0; i < optionalFlags.length; ++i) {\n            registerFlag(optionalFlags[i]);\n        }\n    }\n\n    // Add to the private list of syntax tokens\n    tokens.push({\n        regex: copyRegex(regex, {\n            addG: true,\n            addY: hasNativeY,\n            isInternalOnly: true\n        }),\n        handler: handler,\n        scope: options.scope || defaultScope,\n        flag: options.flag,\n        reparse: options.reparse,\n        leadChar: options.leadChar\n    });\n\n    // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and flags\n    // might now produce different results\n    XRegExp.cache.flush('patterns');\n};\n\n/**\n * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with\n * the same pattern and flag combination, the cached copy of the regex is returned.\n *\n * @memberOf XRegExp\n * @param {String} pattern Regex pattern string.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @returns {RegExp} Cached XRegExp object.\n * @example\n *\n * while (match = XRegExp.cache('.', 'gs').exec(str)) {\n *   // The regex is compiled once only\n * }\n */\nXRegExp.cache = function (pattern, flags) {\n    if (!regexCache[pattern]) {\n        regexCache[pattern] = {};\n    }\n    return regexCache[pattern][flags] || (regexCache[pattern][flags] = XRegExp(pattern, flags));\n};\n\n// Intentionally undocumented; used in tests\nXRegExp.cache.flush = function (cacheName) {\n    if (cacheName === 'patterns') {\n        // Flush the pattern cache used by the `XRegExp` constructor\n        patternCache = {};\n    } else {\n        // Flush the regex cache populated by `XRegExp.cache`\n        regexCache = {};\n    }\n};\n\n/**\n * Escapes any regular expression metacharacters, for use when matching literal strings. The result\n * can safely be used at any point within a regex that uses any flags.\n *\n * @memberOf XRegExp\n * @param {String} str String to escape.\n * @returns {String} String with regex metacharacters escaped.\n * @example\n *\n * XRegExp.escape('Escaped? <.>');\n * // -> 'Escaped\\?\\ <\\.>'\n */\nXRegExp.escape = function (str) {\n    return nativ.replace.call(toObject(str), /[-\\[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * Executes a regex search in a specified string. Returns a match array or `null`. If the provided\n * regex uses named capture, named backreference properties are included on the match array.\n * Optional `pos` and `sticky` arguments specify the search start position, and whether the match\n * must start at the specified position only. The `lastIndex` property of the provided regex is not\n * used, but is updated for compatibility. Also fixes browser bugs compared to the native\n * `RegExp.prototype.exec` and can be used reliably cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {Array} Match array with named backreference properties, or `null`.\n * @example\n *\n * // Basic use, with named backreference\n * let match = XRegExp.exec('U+2620', XRegExp('U\\\\+(?<hex>[0-9A-F]{4})'));\n * match.hex; // -> '2620'\n *\n * // With pos and sticky, in a loop\n * let pos = 2, result = [], match;\n * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\\d)>/, pos, 'sticky')) {\n *   result.push(match[1]);\n *   pos = match.index + match[0].length;\n * }\n * // result -> ['2', '3', '4']\n */\nXRegExp.exec = function (str, regex, pos, sticky) {\n    var cacheKey = 'g';\n    var addY = false;\n    var fakeY = false;\n    var match = void 0;\n\n    addY = hasNativeY && !!(sticky || regex.sticky && sticky !== false);\n    if (addY) {\n        cacheKey += 'y';\n    } else if (sticky) {\n        // Simulate sticky matching by appending an empty capture to the original regex. The\n        // resulting regex will succeed no matter what at the current index (set with `lastIndex`),\n        // and will not search the rest of the subject string. We'll know that the original regex\n        // has failed if that last capture is `''` rather than `undefined` (i.e., if that last\n        // capture participated in the match).\n        fakeY = true;\n        cacheKey += 'FakeY';\n    }\n\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\n\n    // Shares cached copies with `XRegExp.match`/`replace`\n    var r2 = regex[REGEX_DATA][cacheKey] || (regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n        addG: true,\n        addY: addY,\n        source: fakeY ? regex.source + '|()' : undefined,\n        removeY: sticky === false,\n        isInternalOnly: true\n    }));\n\n    pos = pos || 0;\n    r2.lastIndex = pos;\n\n    // Fixed `exec` required for `lastIndex` fix, named backreferences, etc.\n    match = fixed.exec.call(r2, str);\n\n    // Get rid of the capture added by the pseudo-sticky matcher if needed. An empty string means\n    // the original regexp failed (see above).\n    if (fakeY && match && match.pop() === '') {\n        match = null;\n    }\n\n    if (regex.global) {\n        regex.lastIndex = match ? r2.lastIndex : 0;\n    }\n\n    return match;\n};\n\n/**\n * Executes a provided function once per regex match. Searches always start at the beginning of the\n * string and continue until the end, regardless of the state of the regex's `global` property and\n * initial `lastIndex`.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Function} callback Function to execute for each match. Invoked with four arguments:\n *   - The match array, with named backreference properties.\n *   - The zero-based match index.\n *   - The string being traversed.\n *   - The regex object being used to traverse the string.\n * @example\n *\n * // Extracts every other digit from a string\n * const evens = [];\n * XRegExp.forEach('1a2345', /\\d/, (match, i) => {\n *   if (i % 2) evens.push(+match[0]);\n * });\n * // evens -> [2, 4]\n */\nXRegExp.forEach = function (str, regex, callback) {\n    var pos = 0;\n    var i = -1;\n    var match = void 0;\n\n    while (match = XRegExp.exec(str, regex, pos)) {\n        // Because `regex` is provided to `callback`, the function could use the deprecated/\n        // nonstandard `RegExp.prototype.compile` to mutate the regex. However, since `XRegExp.exec`\n        // doesn't use `lastIndex` to set the search position, this can't lead to an infinite loop,\n        // at least. Actually, because of the way `XRegExp.exec` caches globalized versions of\n        // regexes, mutating the regex will not have any effect on the iteration or matched strings,\n        // which is a nice side effect that brings extra safety.\n        callback(match, ++i, str, regex);\n\n        pos = match.index + (match[0].length || 1);\n    }\n};\n\n/**\n * Copies a regex object and adds flag `g`. The copy maintains extended data, is augmented with\n * `XRegExp.prototype` properties, and has a fresh `lastIndex` property (set to zero). Native\n * regexes are not recompiled using XRegExp syntax.\n *\n * @memberOf XRegExp\n * @param {RegExp} regex Regex to globalize.\n * @returns {RegExp} Copy of the provided regex with flag `g` added.\n * @example\n *\n * const globalCopy = XRegExp.globalize(/regex/);\n * globalCopy.global; // -> true\n */\nXRegExp.globalize = function (regex) {\n    return copyRegex(regex, { addG: true });\n};\n\n/**\n * Installs optional features according to the specified options. Can be undone using\n * `XRegExp.uninstall`.\n *\n * @memberOf XRegExp\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.install({\n *   // Enables support for astral code points in Unicode addons (implicitly sets flag A)\n *   astral: true,\n *\n *   // Adds named capture groups to the `groups` property of matches\n *   namespacing: true\n * });\n *\n * // With an options string\n * XRegExp.install('astral namespacing');\n */\nXRegExp.install = function (options) {\n    options = prepareOptions(options);\n\n    if (!features.astral && options.astral) {\n        setAstral(true);\n    }\n\n    if (!features.namespacing && options.namespacing) {\n        setNamespacing(true);\n    }\n};\n\n/**\n * Checks whether an individual optional feature is installed.\n *\n * @memberOf XRegExp\n * @param {String} feature Name of the feature to check. One of:\n *   - `astral`\n *   - `namespacing`\n * @returns {Boolean} Whether the feature is installed.\n * @example\n *\n * XRegExp.isInstalled('astral');\n */\nXRegExp.isInstalled = function (feature) {\n    return !!features[feature];\n};\n\n/**\n * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes\n * created in another frame, when `instanceof` and `constructor` checks would fail.\n *\n * @memberOf XRegExp\n * @param {*} value Object to check.\n * @returns {Boolean} Whether the object is a `RegExp` object.\n * @example\n *\n * XRegExp.isRegExp('string'); // -> false\n * XRegExp.isRegExp(/regex/i); // -> true\n * XRegExp.isRegExp(RegExp('^', 'm')); // -> true\n * XRegExp.isRegExp(XRegExp('(?s).')); // -> true\n */\nXRegExp.isRegExp = function (value) {\n    return toString.call(value) === '[object RegExp]';\n}; // isType(value, 'RegExp');\n\n/**\n * Returns the first matched string, or in global mode, an array containing all matched strings.\n * This is essentially a more convenient re-implementation of `String.prototype.match` that gives\n * the result types you actually want (string instead of `exec`-style array in match-first mode,\n * and an empty array instead of `null` when no matches are found in match-all mode). It also lets\n * you override flag g and ignore `lastIndex`, and fixes browser bugs.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {String} [scope='one'] Use 'one' to return the first match as a string. Use 'all' to\n *   return an array of all matched strings. If not explicitly specified and `regex` uses flag g,\n *   `scope` is 'all'.\n * @returns {String|Array} In match-first mode: First match as a string, or `null`. In match-all\n *   mode: Array of all matched strings, or an empty array.\n * @example\n *\n * // Match first\n * XRegExp.match('abc', /\\w/); // -> 'a'\n * XRegExp.match('abc', /\\w/g, 'one'); // -> 'a'\n * XRegExp.match('abc', /x/g, 'one'); // -> null\n *\n * // Match all\n * XRegExp.match('abc', /\\w/g); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /\\w/, 'all'); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /x/, 'all'); // -> []\n */\nXRegExp.match = function (str, regex, scope) {\n    var global = regex.global && scope !== 'one' || scope === 'all';\n    var cacheKey = (global ? 'g' : '') + (regex.sticky ? 'y' : '') || 'noGY';\n\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\n\n    // Shares cached copies with `XRegExp.exec`/`replace`\n    var r2 = regex[REGEX_DATA][cacheKey] || (regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n        addG: !!global,\n        removeG: scope === 'one',\n        isInternalOnly: true\n    }));\n\n    var result = nativ.match.call(toObject(str), r2);\n\n    if (regex.global) {\n        regex.lastIndex = scope === 'one' && result ?\n        // Can't use `r2.lastIndex` since `r2` is nonglobal in this case\n        result.index + result[0].length : 0;\n    }\n\n    return global ? result || [] : result && result[0];\n};\n\n/**\n * Retrieves the matches from searching a string using a chain of regexes that successively search\n * within previous matches. The provided `chain` array can contain regexes and or objects with\n * `regex` and `backref` properties. When a backreference is specified, the named or numbered\n * backreference is passed forward to the next regex or returned.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {Array} chain Regexes that each search for matches within preceding results.\n * @returns {Array} Matches by the last regex in the chain, or an empty array.\n * @example\n *\n * // Basic usage; matches numbers within <b> tags\n * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [\n *   XRegExp('(?is)<b>.*?</b>'),\n *   /\\d+/\n * ]);\n * // -> ['2', '4', '56']\n *\n * // Passing forward and returning specific backreferences\n * html = '<a href=\"http://xregexp.com/api/\">XRegExp</a>\\\n *         <a href=\"http://www.google.com/\">Google</a>';\n * XRegExp.matchChain(html, [\n *   {regex: /<a href=\"([^\"]+)\">/i, backref: 1},\n *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}\n * ]);\n * // -> ['xregexp.com', 'www.google.com']\n */\nXRegExp.matchChain = function (str, chain) {\n    return function recurseChain(values, level) {\n        var item = chain[level].regex ? chain[level] : { regex: chain[level] };\n        var matches = [];\n\n        function addMatch(match) {\n            if (item.backref) {\n                var ERR_UNDEFINED_GROUP = 'Backreference to undefined group: ' + item.backref;\n                var isNamedBackref = isNaN(item.backref);\n\n                if (isNamedBackref && XRegExp.isInstalled('namespacing')) {\n                    // `groups` has `null` as prototype, so using `in` instead of `hasOwnProperty`\n                    if (!(item.backref in match.groups)) {\n                        throw new ReferenceError(ERR_UNDEFINED_GROUP);\n                    }\n                } else if (!match.hasOwnProperty(item.backref)) {\n                    throw new ReferenceError(ERR_UNDEFINED_GROUP);\n                }\n\n                var backrefValue = isNamedBackref && XRegExp.isInstalled('namespacing') ? match.groups[item.backref] : match[item.backref];\n\n                matches.push(backrefValue || '');\n            } else {\n                matches.push(match[0]);\n            }\n        }\n\n        for (var i = 0; i < values.length; ++i) {\n            XRegExp.forEach(values[i], item.regex, addMatch);\n        }\n\n        return level === chain.length - 1 || !matches.length ? matches : recurseChain(matches, level + 1);\n    }([str], 0);\n};\n\n/**\n * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string\n * or regex, and the replacement can be a string or a function to be called for each match. To\n * perform a global search and replace, use the optional `scope` argument or include flag g if using\n * a regex. Replacement strings can use `${n}` or `$<n>` for named and numbered backreferences.\n * Replacement functions can use named backreferences via `arguments[0].name`. Also fixes browser\n * bugs compared to the native `String.prototype.replace` and can be used reliably cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n *   Replacement strings can include special replacement syntax:\n *     - $$ - Inserts a literal $ character.\n *     - $&, $0 - Inserts the matched substring.\n *     - $` - Inserts the string that precedes the matched substring (left context).\n *     - $' - Inserts the string that follows the matched substring (right context).\n *     - $n, $nn - Where n/nn are digits referencing an existent capturing group, inserts\n *       backreference n/nn.\n *     - ${n}, $<n> - Where n is a name or any number of digits that reference an existent capturing\n *       group, inserts backreference n.\n *   Replacement functions are invoked with three or more arguments:\n *     - The matched substring (corresponds to $& above). Named backreferences are accessible as\n *       properties of this first argument.\n *     - 0..n arguments, one for each backreference (corresponding to $1, $2, etc. above).\n *     - The zero-based index of the match within the total search string.\n *     - The total string being searched.\n * @param {String} [scope='one'] Use 'one' to replace the first match only, or 'all'. If not\n *   explicitly specified and using a regex with flag g, `scope` is 'all'.\n * @returns {String} New string with one or all matches replaced.\n * @example\n *\n * // Regex search, using named backreferences in replacement string\n * const name = XRegExp('(?<first>\\\\w+) (?<last>\\\\w+)');\n * XRegExp.replace('John Smith', name, '$<last>, $<first>');\n * // -> 'Smith, John'\n *\n * // Regex search, using named backreferences in replacement function\n * XRegExp.replace('John Smith', name, (match) => `${match.last}, ${match.first}`);\n * // -> 'Smith, John'\n *\n * // String search, with replace-all\n * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');\n * // -> 'XRegExp builds XRegExps'\n */\nXRegExp.replace = function (str, search, replacement, scope) {\n    var isRegex = XRegExp.isRegExp(search);\n    var global = search.global && scope !== 'one' || scope === 'all';\n    var cacheKey = (global ? 'g' : '') + (search.sticky ? 'y' : '') || 'noGY';\n    var s2 = search;\n\n    if (isRegex) {\n        search[REGEX_DATA] = search[REGEX_DATA] || {};\n\n        // Shares cached copies with `XRegExp.exec`/`match`. Since a copy is used, `search`'s\n        // `lastIndex` isn't updated *during* replacement iterations\n        s2 = search[REGEX_DATA][cacheKey] || (search[REGEX_DATA][cacheKey] = copyRegex(search, {\n            addG: !!global,\n            removeG: scope === 'one',\n            isInternalOnly: true\n        }));\n    } else if (global) {\n        s2 = new RegExp(XRegExp.escape(String(search)), 'g');\n    }\n\n    // Fixed `replace` required for named backreferences, etc.\n    var result = fixed.replace.call(toObject(str), s2, replacement);\n\n    if (isRegex && search.global) {\n        // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n        search.lastIndex = 0;\n    }\n\n    return result;\n};\n\n/**\n * Performs batch processing of string replacements. Used like `XRegExp.replace`, but accepts an\n * array of replacement details. Later replacements operate on the output of earlier replacements.\n * Replacement details are accepted as an array with a regex or string to search for, the\n * replacement string or function, and an optional scope of 'one' or 'all'. Uses the XRegExp\n * replacement text syntax, which supports named backreference properties via `${name}` or\n * `$<name>`.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {Array} replacements Array of replacement detail arrays.\n * @returns {String} New string with all replacements.\n * @example\n *\n * str = XRegExp.replaceEach(str, [\n *   [XRegExp('(?<name>a)'), 'z${name}'],\n *   [/b/gi, 'y'],\n *   [/c/g, 'x', 'one'], // scope 'one' overrides /g\n *   [/d/, 'w', 'all'],  // scope 'all' overrides lack of /g\n *   ['e', 'v', 'all'],  // scope 'all' allows replace-all for strings\n *   [/f/g, ($0) => $0.toUpperCase()]\n * ]);\n */\nXRegExp.replaceEach = function (str, replacements) {\n    var i = void 0;\n    var r = void 0;\n\n    for (i = 0; i < replacements.length; ++i) {\n        r = replacements[i];\n        str = XRegExp.replace(str, r[0], r[1], r[2]);\n    }\n\n    return str;\n};\n\n/**\n * Splits a string into an array of strings using a regex or string separator. Matches of the\n * separator are not included in the result array. However, if `separator` is a regex that contains\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n * cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to split.\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n * @example\n *\n * // Basic use\n * XRegExp.split('a b c', ' ');\n * // -> ['a', 'b', 'c']\n *\n * // With limit\n * XRegExp.split('a b c', ' ', 2);\n * // -> ['a', 'b']\n *\n * // Backreferences in result array\n * XRegExp.split('..word1..', /([a-z]+)(\\d+)/i);\n * // -> ['..', 'word', '1', '..']\n */\nXRegExp.split = function (str, separator, limit) {\n    return fixed.split.call(toObject(str), separator, limit);\n};\n\n/**\n * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and\n * `sticky` arguments specify the search start position, and whether the match must start at the\n * specified position only. The `lastIndex` property of the provided regex is not used, but is\n * updated for compatibility. Also fixes browser bugs compared to the native\n * `RegExp.prototype.test` and can be used reliably cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {Boolean} Whether the regex matched the provided value.\n * @example\n *\n * // Basic use\n * XRegExp.test('abc', /c/); // -> true\n *\n * // With pos and sticky\n * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false\n * XRegExp.test('abc', /c/, 2, 'sticky'); // -> true\n */\n// Do this the easy way :-)\nXRegExp.test = function (str, regex, pos, sticky) {\n    return !!XRegExp.exec(str, regex, pos, sticky);\n};\n\n/**\n * Uninstalls optional features according to the specified options. All optional features start out\n * uninstalled, so this is used to undo the actions of `XRegExp.install`.\n *\n * @memberOf XRegExp\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.uninstall({\n *   // Disables support for astral code points in Unicode addons\n *   astral: true,\n *\n *   // Don't add named capture groups to the `groups` property of matches\n *   namespacing: true\n * });\n *\n * // With an options string\n * XRegExp.uninstall('astral namespacing');\n */\nXRegExp.uninstall = function (options) {\n    options = prepareOptions(options);\n\n    if (features.astral && options.astral) {\n        setAstral(false);\n    }\n\n    if (features.namespacing && options.namespacing) {\n        setNamespacing(false);\n    }\n};\n\n/**\n * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as\n * regex objects or strings. Metacharacters are escaped in patterns provided as strings.\n * Backreferences in provided regex objects are automatically renumbered to work correctly within\n * the larger combined pattern. Native flags used by provided regexes are ignored in favor of the\n * `flags` argument.\n *\n * @memberOf XRegExp\n * @param {Array} patterns Regexes and strings to combine.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @param {Object} [options] Options object with optional properties:\n *   - `conjunction` {String} Type of conjunction to use: 'or' (default) or 'none'.\n * @returns {RegExp} Union of the provided regexes and strings.\n * @example\n *\n * XRegExp.union(['a+b*c', /(dogs)\\1/, /(cats)\\1/], 'i');\n * // -> /a\\+b\\*c|(dogs)\\1|(cats)\\2/i\n *\n * XRegExp.union([/man/, /bear/, /pig/], 'i', {conjunction: 'none'});\n * // -> /manbearpig/i\n */\nXRegExp.union = function (patterns, flags, options) {\n    options = options || {};\n    var conjunction = options.conjunction || 'or';\n    var numCaptures = 0;\n    var numPriorCaptures = void 0;\n    var captureNames = void 0;\n\n    function rewrite(match, paren, backref) {\n        var name = captureNames[numCaptures - numPriorCaptures];\n\n        // Capturing group\n        if (paren) {\n            ++numCaptures;\n            // If the current capture has a name, preserve the name\n            if (name) {\n                return '(?<' + name + '>';\n            }\n            // Backreference\n        } else if (backref) {\n            // Rewrite the backreference\n            return '\\\\' + (+backref + numPriorCaptures);\n        }\n\n        return match;\n    }\n\n    if (!(isType(patterns, 'Array') && patterns.length)) {\n        throw new TypeError('Must provide a nonempty array of patterns to merge');\n    }\n\n    var parts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/g;\n    var output = [];\n    var pattern = void 0;\n    for (var i = 0; i < patterns.length; ++i) {\n        pattern = patterns[i];\n\n        if (XRegExp.isRegExp(pattern)) {\n            numPriorCaptures = numCaptures;\n            captureNames = pattern[REGEX_DATA] && pattern[REGEX_DATA].captureNames || [];\n\n            // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns are\n            // independently valid; helps keep this simple. Named captures are put back\n            output.push(nativ.replace.call(XRegExp(pattern.source).source, parts, rewrite));\n        } else {\n            output.push(XRegExp.escape(pattern));\n        }\n    }\n\n    var separator = conjunction === 'none' ? '' : '|';\n    return XRegExp(output.join(separator), flags);\n};\n\n// ==--------------------------==\n// Fixed/extended native methods\n// ==--------------------------==\n\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `RegExp.prototype.exec`. Use via `XRegExp.exec`.\n *\n * @memberOf RegExp\n * @param {String} str String to search.\n * @returns {Array} Match array with named backreference properties, or `null`.\n */\nfixed.exec = function (str) {\n    var origLastIndex = this.lastIndex;\n    var match = nativ.exec.apply(this, arguments);\n\n    if (match) {\n        // Fix browsers whose `exec` methods don't return `undefined` for nonparticipating capturing\n        // groups. This fixes IE 5.5-8, but not IE 9's quirks mode or emulation of older IEs. IE 9\n        // in standards mode follows the spec.\n        if (!correctExecNpcg && match.length > 1 && match.indexOf('') !== -1) {\n            var r2 = copyRegex(this, {\n                removeG: true,\n                isInternalOnly: true\n            });\n            // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed\n            // matching due to characters outside the match\n            nativ.replace.call(String(str).slice(match.index), r2, function () {\n                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                    args[_key] = arguments[_key];\n                }\n\n                var len = args.length;\n                // Skip index 0 and the last 2\n                for (var i = 1; i < len - 2; ++i) {\n                    if (args[i] === undefined) {\n                        match[i] = undefined;\n                    }\n                }\n            });\n        }\n\n        // Attach named capture properties\n        var groupsObject = match;\n        if (XRegExp.isInstalled('namespacing')) {\n            // https://tc39.github.io/proposal-regexp-named-groups/#sec-regexpbuiltinexec\n            match.groups = Object.create(null);\n            groupsObject = match.groups;\n        }\n        if (this[REGEX_DATA] && this[REGEX_DATA].captureNames) {\n            // Skip index 0\n            for (var i = 1; i < match.length; ++i) {\n                var name = this[REGEX_DATA].captureNames[i - 1];\n                if (name) {\n                    groupsObject[name] = match[i];\n                }\n            }\n        }\n\n        // Fix browsers that increment `lastIndex` after zero-length matches\n        if (this.global && !match[0].length && this.lastIndex > match.index) {\n            this.lastIndex = match.index;\n        }\n    }\n\n    if (!this.global) {\n        // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n        this.lastIndex = origLastIndex;\n    }\n\n    return match;\n};\n\n/**\n * Fixes browser bugs in the native `RegExp.prototype.test`.\n *\n * @memberOf RegExp\n * @param {String} str String to search.\n * @returns {Boolean} Whether the regex matched the provided value.\n */\nfixed.test = function (str) {\n    // Do this the easy way :-)\n    return !!fixed.exec.call(this, str);\n};\n\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `String.prototype.match`.\n *\n * @memberOf String\n * @param {RegExp|*} regex Regex to search with. If not a regex object, it is passed to `RegExp`.\n * @returns {Array} If `regex` uses flag g, an array of match strings or `null`. Without flag g,\n *   the result of calling `regex.exec(this)`.\n */\nfixed.match = function (regex) {\n    if (!XRegExp.isRegExp(regex)) {\n        // Use the native `RegExp` rather than `XRegExp`\n        regex = new RegExp(regex);\n    } else if (regex.global) {\n        var result = nativ.match.apply(this, arguments);\n        // Fixes IE bug\n        regex.lastIndex = 0;\n\n        return result;\n    }\n\n    return fixed.exec.call(regex, toObject(this));\n};\n\n/**\n * Adds support for `${n}` (or `$<n>`) tokens for named and numbered backreferences in replacement\n * text, and provides named backreferences to replacement functions as `arguments[0].name`. Also\n * fixes browser bugs in replacement text syntax when performing a replacement using a nonregex\n * search value, and the value of a replacement regex's `lastIndex` property during replacement\n * iterations and upon completion. Note that this doesn't support SpiderMonkey's proprietary third\n * (`flags`) argument. Use via `XRegExp.replace`.\n *\n * @memberOf String\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n * @returns {String} New string with one or all matches replaced.\n */\nfixed.replace = function (search, replacement) {\n    var isRegex = XRegExp.isRegExp(search);\n    var origLastIndex = void 0;\n    var captureNames = void 0;\n    var result = void 0;\n\n    if (isRegex) {\n        if (search[REGEX_DATA]) {\n            captureNames = search[REGEX_DATA].captureNames;\n        }\n        // Only needed if `search` is nonglobal\n        origLastIndex = search.lastIndex;\n    } else {\n        search += ''; // Type-convert\n    }\n\n    // Don't use `typeof`; some older browsers return 'function' for regex objects\n    if (isType(replacement, 'Function')) {\n        // Stringifying `this` fixes a bug in IE < 9 where the last argument in replacement\n        // functions isn't type-converted to a string\n        result = nativ.replace.call(String(this), search, function () {\n            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n            }\n\n            if (captureNames) {\n                var groupsObject = void 0;\n\n                if (XRegExp.isInstalled('namespacing')) {\n                    // https://tc39.github.io/proposal-regexp-named-groups/#sec-regexpbuiltinexec\n                    groupsObject = Object.create(null);\n                    args.push(groupsObject);\n                } else {\n                    // Change the `args[0]` string primitive to a `String` object that can store\n                    // properties. This really does need to use `String` as a constructor\n                    args[0] = new String(args[0]);\n                    groupsObject = args[0];\n                }\n\n                // Store named backreferences\n                for (var i = 0; i < captureNames.length; ++i) {\n                    if (captureNames[i]) {\n                        groupsObject[captureNames[i]] = args[i + 1];\n                    }\n                }\n            }\n            // Update `lastIndex` before calling `replacement`. Fixes IE, Chrome, Firefox, Safari\n            // bug (last tested IE 9, Chrome 17, Firefox 11, Safari 5.1)\n            if (isRegex && search.global) {\n                search.lastIndex = args[args.length - 2] + args[0].length;\n            }\n            // ES6 specs the context for replacement functions as `undefined`\n            return replacement.apply(undefined, args);\n        });\n    } else {\n        // Ensure that the last value of `args` will be a string when given nonstring `this`,\n        // while still throwing on null or undefined context\n        result = nativ.replace.call(this == null ? this : String(this), search, function () {\n            for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n            }\n\n            return nativ.replace.call(String(replacement), replacementToken, replacer);\n\n            function replacer($0, bracketed, angled, dollarToken) {\n                bracketed = bracketed || angled;\n                // Named or numbered backreference with curly or angled braces\n                if (bracketed) {\n                    // XRegExp behavior for `${n}` or `$<n>`:\n                    // 1. Backreference to numbered capture, if `n` is an integer. Use `0` for the\n                    //    entire match. Any number of leading zeros may be used.\n                    // 2. Backreference to named capture `n`, if it exists and is not an integer\n                    //    overridden by numbered capture. In practice, this does not overlap with\n                    //    numbered capture since XRegExp does not allow named capture to use a bare\n                    //    integer as the name.\n                    // 3. If the name or number does not refer to an existing capturing group, it's\n                    //    an error.\n                    var n = +bracketed; // Type-convert; drop leading zeros\n                    if (n <= args.length - 3) {\n                        return args[n] || '';\n                    }\n                    // Groups with the same name is an error, else would need `lastIndexOf`\n                    n = captureNames ? captureNames.indexOf(bracketed) : -1;\n                    if (n < 0) {\n                        throw new SyntaxError('Backreference to undefined group ' + $0);\n                    }\n                    return args[n + 1] || '';\n                }\n                // Else, special variable or numbered backreference without curly braces\n                if (dollarToken === '$') {\n                    // $$\n                    return '$';\n                }\n                if (dollarToken === '&' || +dollarToken === 0) {\n                    // $&, $0 (not followed by 1-9), $00\n                    return args[0];\n                }\n                if (dollarToken === '`') {\n                    // $` (left context)\n                    return args[args.length - 1].slice(0, args[args.length - 2]);\n                }\n                if (dollarToken === \"'\") {\n                    // $' (right context)\n                    return args[args.length - 1].slice(args[args.length - 2] + args[0].length);\n                }\n                // Else, numbered backreference without braces\n                dollarToken = +dollarToken; // Type-convert; drop leading zero\n                // XRegExp behavior for `$n` and `$nn`:\n                // - Backrefs end after 1 or 2 digits. Use `${..}` or `$<..>` for more digits.\n                // - `$1` is an error if no capturing groups.\n                // - `$10` is an error if less than 10 capturing groups. Use `${1}0` or `$<1>0`\n                //   instead.\n                // - `$01` is `$1` if at least one capturing group, else it's an error.\n                // - `$0` (not followed by 1-9) and `$00` are the entire match.\n                // Native behavior, for comparison:\n                // - Backrefs end after 1 or 2 digits. Cannot reference capturing group 100+.\n                // - `$1` is a literal `$1` if no capturing groups.\n                // - `$10` is `$1` followed by a literal `0` if less than 10 capturing groups.\n                // - `$01` is `$1` if at least one capturing group, else it's a literal `$01`.\n                // - `$0` is a literal `$0`.\n                if (!isNaN(dollarToken)) {\n                    if (dollarToken > args.length - 3) {\n                        throw new SyntaxError('Backreference to undefined group ' + $0);\n                    }\n                    return args[dollarToken] || '';\n                }\n                // `$` followed by an unsupported char is an error, unlike native JS\n                throw new SyntaxError('Invalid token ' + $0);\n            }\n        });\n    }\n\n    if (isRegex) {\n        if (search.global) {\n            // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n            search.lastIndex = 0;\n        } else {\n            // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n            search.lastIndex = origLastIndex;\n        }\n    }\n\n    return result;\n};\n\n/**\n * Fixes browser bugs in the native `String.prototype.split`. Use via `XRegExp.split`.\n *\n * @memberOf String\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n */\nfixed.split = function (separator, limit) {\n    if (!XRegExp.isRegExp(separator)) {\n        // Browsers handle nonregex split correctly, so use the faster native method\n        return nativ.split.apply(this, arguments);\n    }\n\n    var str = String(this);\n    var output = [];\n    var origLastIndex = separator.lastIndex;\n    var lastLastIndex = 0;\n    var lastLength = void 0;\n\n    // Values for `limit`, per the spec:\n    // If undefined: pow(2,32) - 1\n    // If 0, Infinity, or NaN: 0\n    // If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);\n    // If negative number: pow(2,32) - floor(abs(limit))\n    // If other: Type-convert, then use the above rules\n    // This line fails in very strange ways for some values of `limit` in Opera 10.5-10.63, unless\n    // Opera Dragonfly is open (go figure). It works in at least Opera 9.5-10.1 and 11+\n    limit = (limit === undefined ? -1 : limit) >>> 0;\n\n    XRegExp.forEach(str, separator, function (match) {\n        // This condition is not the same as `if (match[0].length)`\n        if (match.index + match[0].length > lastLastIndex) {\n            output.push(str.slice(lastLastIndex, match.index));\n            if (match.length > 1 && match.index < str.length) {\n                Array.prototype.push.apply(output, match.slice(1));\n            }\n            lastLength = match[0].length;\n            lastLastIndex = match.index + lastLength;\n        }\n    });\n\n    if (lastLastIndex === str.length) {\n        if (!nativ.test.call(separator, '') || lastLength) {\n            output.push('');\n        }\n    } else {\n        output.push(str.slice(lastLastIndex));\n    }\n\n    separator.lastIndex = origLastIndex;\n    return output.length > limit ? output.slice(0, limit) : output;\n};\n\n// ==--------------------------==\n// Built-in syntax/flag tokens\n// ==--------------------------==\n\n/*\n * Letter escapes that natively match literal characters: `\\a`, `\\A`, etc. These should be\n * SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-browser\n * consistency and to reserve their syntax, but lets them be superseded by addons.\n */\nXRegExp.addToken(/\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|x(?![\\dA-Fa-f]{2}))/, function (match, scope) {\n    // \\B is allowed in default scope only\n    if (match[1] === 'B' && scope === defaultScope) {\n        return match[0];\n    }\n    throw new SyntaxError('Invalid escape ' + match[0]);\n}, {\n    scope: 'all',\n    leadChar: '\\\\'\n});\n\n/*\n * Unicode code point escape with curly braces: `\\u{N..}`. `N..` is any one or more digit\n * hexadecimal number from 0-10FFFF, and can include leading zeros. Requires the native ES6 `u` flag\n * to support code points greater than U+FFFF. Avoids converting code points above U+FFFF to\n * surrogate pairs (which could be done without flag `u`), since that could lead to broken behavior\n * if you follow a `\\u{N..}` token that references a code point above U+FFFF with a quantifier, or\n * if you use the same in a character class.\n */\nXRegExp.addToken(/\\\\u{([\\dA-Fa-f]+)}/, function (match, scope, flags) {\n    var code = dec(match[1]);\n    if (code > 0x10FFFF) {\n        throw new SyntaxError('Invalid Unicode code point ' + match[0]);\n    }\n    if (code <= 0xFFFF) {\n        // Converting to \\uNNNN avoids needing to escape the literal character and keep it\n        // separate from preceding tokens\n        return '\\\\u' + pad4(hex(code));\n    }\n    // If `code` is between 0xFFFF and 0x10FFFF, require and defer to native handling\n    if (hasNativeU && flags.indexOf('u') !== -1) {\n        return match[0];\n    }\n    throw new SyntaxError('Cannot use Unicode code point above \\\\u{FFFF} without flag u');\n}, {\n    scope: 'all',\n    leadChar: '\\\\'\n});\n\n/*\n * Empty character class: `[]` or `[^]`. This fixes a critical cross-browser syntax inconsistency.\n * Unless this is standardized (per the ES spec), regex syntax can't be accurately parsed because\n * character class endings can't be determined.\n */\nXRegExp.addToken(/\\[(\\^?)\\]/,\n// For cross-browser compatibility with ES3, convert [] to \\b\\B and [^] to [\\s\\S].\n// (?!) should work like \\b\\B, but is unreliable in some versions of Firefox\n/* eslint-disable no-confusing-arrow */\nfunction (match) {\n    return match[1] ? '[\\\\s\\\\S]' : '\\\\b\\\\B';\n},\n/* eslint-enable no-confusing-arrow */\n{ leadChar: '[' });\n\n/*\n * Comment pattern: `(?# )`. Inline comments are an alternative to the line comments allowed in\n * free-spacing mode (flag x).\n */\nXRegExp.addToken(/\\(\\?#[^)]*\\)/, getContextualTokenSeparator, { leadChar: '(' });\n\n/*\n * Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.\n */\nXRegExp.addToken(/\\s+|#[^\\n]*\\n?/, getContextualTokenSeparator, { flag: 'x' });\n\n/*\n * Dot, in dotall mode (aka singleline mode, flag s) only.\n */\nXRegExp.addToken(/\\./, function () {\n    return '[\\\\s\\\\S]';\n}, {\n    flag: 's',\n    leadChar: '.'\n});\n\n/*\n * Named backreference: `\\k<name>`. Backreference names can use the characters A-Z, a-z, 0-9, _,\n * and $ only. Also allows numbered backreferences as `\\k<n>`.\n */\nXRegExp.addToken(/\\\\k<([\\w$]+)>/, function (match) {\n    // Groups with the same name is an error, else would need `lastIndexOf`\n    var index = isNaN(match[1]) ? this.captureNames.indexOf(match[1]) + 1 : +match[1];\n    var endIndex = match.index + match[0].length;\n    if (!index || index > this.captureNames.length) {\n        throw new SyntaxError('Backreference to undefined group ' + match[0]);\n    }\n    // Keep backreferences separate from subsequent literal numbers. This avoids e.g.\n    // inadvertedly changing `(?<n>)\\k<n>1` to `()\\11`.\n    return '\\\\' + index + (endIndex === match.input.length || isNaN(match.input[endIndex]) ? '' : '(?:)');\n}, { leadChar: '\\\\' });\n\n/*\n * Numbered backreference or octal, plus any following digits: `\\0`, `\\11`, etc. Octals except `\\0`\n * not followed by 0-9 and backreferences to unopened capture groups throw an error. Other matches\n * are returned unaltered. IE < 9 doesn't support backreferences above `\\99` in regex syntax.\n */\nXRegExp.addToken(/\\\\(\\d+)/, function (match, scope) {\n    if (!(scope === defaultScope && /^[1-9]/.test(match[1]) && +match[1] <= this.captureNames.length) && match[1] !== '0') {\n        throw new SyntaxError('Cannot use octal escape or backreference to undefined group ' + match[0]);\n    }\n    return match[0];\n}, {\n    scope: 'all',\n    leadChar: '\\\\'\n});\n\n/*\n * Named capturing group; match the opening delimiter only: `(?<name>`. Capture names can use the\n * characters A-Z, a-z, 0-9, _, and $ only. Names can't be integers. Supports Python-style\n * `(?P<name>` as an alternate syntax to avoid issues in some older versions of Opera which natively\n * supported the Python-style syntax. Otherwise, XRegExp might treat numbered backreferences to\n * Python-style named capture as octals.\n */\nXRegExp.addToken(/\\(\\?P?<([\\w$]+)>/, function (match) {\n    // Disallow bare integers as names because named backreferences are added to match arrays\n    // and therefore numeric properties may lead to incorrect lookups\n    if (!isNaN(match[1])) {\n        throw new SyntaxError('Cannot use integer as capture name ' + match[0]);\n    }\n    if (!XRegExp.isInstalled('namespacing') && (match[1] === 'length' || match[1] === '__proto__')) {\n        throw new SyntaxError('Cannot use reserved word as capture name ' + match[0]);\n    }\n    if (this.captureNames.indexOf(match[1]) !== -1) {\n        throw new SyntaxError('Cannot use same name for multiple groups ' + match[0]);\n    }\n    this.captureNames.push(match[1]);\n    this.hasNamedCapture = true;\n    return '(';\n}, { leadChar: '(' });\n\n/*\n * Capturing group; match the opening parenthesis only. Required for support of named capturing\n * groups. Also adds explicit capture mode (flag n).\n */\nXRegExp.addToken(/\\((?!\\?)/, function (match, scope, flags) {\n    if (flags.indexOf('n') !== -1) {\n        return '(?:';\n    }\n    this.captureNames.push(null);\n    return '(';\n}, {\n    optionalFlags: 'n',\n    leadChar: '('\n});\n\nexports.default = XRegExp;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _xregexp = require('./xregexp');\n\nvar _xregexp2 = _interopRequireDefault(_xregexp);\n\nvar _build = require('./addons/build');\n\nvar _build2 = _interopRequireDefault(_build);\n\nvar _matchrecursive = require('./addons/matchrecursive');\n\nvar _matchrecursive2 = _interopRequireDefault(_matchrecursive);\n\nvar _unicodeBase = require('./addons/unicode-base');\n\nvar _unicodeBase2 = _interopRequireDefault(_unicodeBase);\n\nvar _unicodeBlocks = require('./addons/unicode-blocks');\n\nvar _unicodeBlocks2 = _interopRequireDefault(_unicodeBlocks);\n\nvar _unicodeCategories = require('./addons/unicode-categories');\n\nvar _unicodeCategories2 = _interopRequireDefault(_unicodeCategories);\n\nvar _unicodeProperties = require('./addons/unicode-properties');\n\nvar _unicodeProperties2 = _interopRequireDefault(_unicodeProperties);\n\nvar _unicodeScripts = require('./addons/unicode-scripts');\n\nvar _unicodeScripts2 = _interopRequireDefault(_unicodeScripts);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _build2.default)(_xregexp2.default);\n(0, _matchrecursive2.default)(_xregexp2.default);\n(0, _unicodeBase2.default)(_xregexp2.default);\n(0, _unicodeBlocks2.default)(_xregexp2.default);\n(0, _unicodeCategories2.default)(_xregexp2.default);\n(0, _unicodeProperties2.default)(_xregexp2.default);\n(0, _unicodeScripts2.default)(_xregexp2.default);\n\nexports.default = _xregexp2.default;\nmodule.exports = exports['default'];","\n/* parser generated by jison 0.6.1-215 */\n\n/*\n * Returns a Parser object of the following structure:\n *\n *  Parser: {\n *    yy: {}     The so-called \"shared state\" or rather the *source* of it;\n *               the real \"shared state\" `yy` passed around to\n *               the rule actions, etc. is a derivative/copy of this one,\n *               not a direct reference!\n *  }\n *\n *  Parser.prototype: {\n *    yy: {},\n *    EOF: 1,\n *    TERROR: 2,\n *\n *    trace: function(errorMessage, ...),\n *\n *    JisonParserError: function(msg, hash),\n *\n *    quoteName: function(name),\n *               Helper function which can be overridden by user code later on: put suitable\n *               quotes around literal IDs in a description string.\n *\n *    originalQuoteName: function(name),\n *               The basic quoteName handler provided by JISON.\n *               `cleanupAfterParse()` will clean up and reset `quoteName()` to reference this function\n *               at the end of the `parse()`.\n *\n *    describeSymbol: function(symbol),\n *               Return a more-or-less human-readable description of the given symbol, when\n *               available, or the symbol itself, serving as its own 'description' for lack\n *               of something better to serve up.\n *\n *               Return NULL when the symbol is unknown to the parser.\n *\n *    symbols_: {associative list: name ==> number},\n *    terminals_: {associative list: number ==> name},\n *    nonterminals: {associative list: rule-name ==> {associative list: number ==> rule-alt}},\n *    terminal_descriptions_: (if there are any) {associative list: number ==> description},\n *    productions_: [...],\n *\n *    performAction: function parser__performAction(yytext, yyleng, yylineno, yyloc, yystate, yysp, yyvstack, yylstack, yystack, yysstack),\n *\n *               The function parameters and `this` have the following value/meaning:\n *               - `this`    : reference to the `yyval` internal object, which has members (`$` and `_$`)\n *                             to store/reference the rule value `$$` and location info `@$`.\n *\n *                 One important thing to note about `this` a.k.a. `yyval`: every *reduce* action gets\n *                 to see the same object via the `this` reference, i.e. if you wish to carry custom\n *                 data from one reduce action through to the next within a single parse run, then you\n *                 may get nasty and use `yyval` a.k.a. `this` for storing you own semi-permanent data.\n *\n *                 `this.yy` is a direct reference to the `yy` shared state object.\n *\n *                 `%parse-param`-specified additional `parse()` arguments have been added to this `yy`\n *                 object at `parse()` start and are therefore available to the action code via the\n *                 same named `yy.xxxx` attributes (where `xxxx` represents a identifier name from\n *                 the %parse-param` list.\n *\n *               - `yytext`  : reference to the lexer value which belongs to the last lexer token used\n *                             to match this rule. This is *not* the look-ahead token, but the last token\n *                             that's actually part of this rule.\n *\n *                 Formulated another way, `yytext` is the value of the token immediately preceeding\n *                 the current look-ahead token.\n *                 Caveats apply for rules which don't require look-ahead, such as epsilon rules.\n *\n *               - `yyleng`  : ditto as `yytext`, only now for the lexer.yyleng value.\n *\n *               - `yylineno`: ditto as `yytext`, only now for the lexer.yylineno value.\n *\n *               - `yyloc`   : ditto as `yytext`, only now for the lexer.yylloc lexer token location info.\n *\n *                               WARNING: since jison 0.4.18-186 this entry may be NULL/UNDEFINED instead\n *                               of an empty object when no suitable location info can be provided.\n *\n *               - `yystate` : the current parser state number, used internally for dispatching and\n *                               executing the action code chunk matching the rule currently being reduced.\n *\n *               - `yysp`    : the current state stack position (a.k.a. 'stack pointer')\n *\n *                 This one comes in handy when you are going to do advanced things to the parser\n *                 stacks, all of which are accessible from your action code (see the next entries below).\n *\n *                 Also note that you can access this and other stack index values using the new double-hash\n *                 syntax, i.e. `##$ === ##0 === yysp`, while `##1` is the stack index for all things\n *                 related to the first rule term, just like you have `$1`, `@1` and `#1`.\n *                 This is made available to write very advanced grammar action rules, e.g. when you want\n *                 to investigate the parse state stack in your action code, which would, for example,\n *                 be relevant when you wish to implement error diagnostics and reporting schemes similar\n *                 to the work described here:\n *\n *                 + Pottier, F., 2016. Reachability and error diagnosis in LR(1) automata.\n *                   In Journées Francophones des Languages Applicatifs.\n *\n *                 + Jeffery, C.L., 2003. Generating LR syntax error messages from examples.\n *                   ACM Transactions on Programming Languages and Systems (TOPLAS), 25(5), pp.631–640.\n *\n *               - `yyrulelength`: the current rule's term count, i.e. the number of entries occupied on the stack.\n *\n *                 This one comes in handy when you are going to do advanced things to the parser\n *                 stacks, all of which are accessible from your action code (see the next entries below).\n *\n *               - `yyvstack`: reference to the parser value stack. Also accessed via the `$1` etc.\n *                             constructs.\n *\n *               - `yylstack`: reference to the parser token location stack. Also accessed via\n *                             the `@1` etc. constructs.\n *\n *                             WARNING: since jison 0.4.18-186 this array MAY contain slots which are\n *                             UNDEFINED rather than an empty (location) object, when the lexer/parser\n *                             action code did not provide a suitable location info object when such a\n *                             slot was filled!\n *\n *               - `yystack` : reference to the parser token id stack. Also accessed via the\n *                             `#1` etc. constructs.\n *\n *                 Note: this is a bit of a **white lie** as we can statically decode any `#n` reference to\n *                 its numeric token id value, hence that code wouldn't need the `yystack` but *you* might\n *                 want access this array for your own purposes, such as error analysis as mentioned above!\n *\n *                 Note that this stack stores the current stack of *tokens*, that is the sequence of\n *                 already parsed=reduced *nonterminals* (tokens representing rules) and *terminals*\n *                 (lexer tokens *shifted* onto the stack until the rule they belong to is found and\n *                 *reduced*.\n *\n *               - `yysstack`: reference to the parser state stack. This one carries the internal parser\n *                             *states* such as the one in `yystate`, which are used to represent\n *                             the parser state machine in the *parse table*. *Very* *internal* stuff,\n *                             what can I say? If you access this one, you're clearly doing wicked things\n *\n *               - `...`     : the extra arguments you specified in the `%parse-param` statement in your\n *                             grammar definition file.\n *\n *    table: [...],\n *               State transition table\n *               ----------------------\n *\n *               index levels are:\n *               - `state`  --> hash table\n *               - `symbol` --> action (number or array)\n *\n *                 If the `action` is an array, these are the elements' meaning:\n *                 - index [0]: 1 = shift, 2 = reduce, 3 = accept\n *                 - index [1]: GOTO `state`\n *\n *                 If the `action` is a number, it is the GOTO `state`\n *\n *    defaultActions: {...},\n *\n *    parseError: function(str, hash, ExceptionClass),\n *    yyError: function(str, ...),\n *    yyRecovering: function(),\n *    yyErrOk: function(),\n *    yyClearIn: function(),\n *\n *    constructParseErrorInfo: function(error_message, exception_object, expected_token_set, is_recoverable),\n *               Helper function **which will be set up during the first invocation of the `parse()` method**.\n *               Produces a new errorInfo 'hash object' which can be passed into `parseError()`.\n *               See it's use in this parser kernel in many places; example usage:\n *\n *                   var infoObj = parser.constructParseErrorInfo('fail!', null,\n *                                     parser.collect_expected_token_set(state), true);\n *                   var retVal = parser.parseError(infoObj.errStr, infoObj, parser.JisonParserError);\n *\n *    originalParseError: function(str, hash, ExceptionClass),\n *               The basic `parseError` handler provided by JISON.\n *               `cleanupAfterParse()` will clean up and reset `parseError()` to reference this function\n *               at the end of the `parse()`.\n *\n *    options: { ... parser %options ... },\n *\n *    parse: function(input[, args...]),\n *               Parse the given `input` and return the parsed value (or `true` when none was provided by\n *               the root action, in which case the parser is acting as a *matcher*).\n *               You MAY use the additional `args...` parameters as per `%parse-param` spec of this grammar:\n *               these extra `args...` are added verbatim to the `yy` object reference as member variables.\n *\n *               WARNING:\n *               Parser's additional `args...` parameters (via `%parse-param`) MAY conflict with\n *               any attributes already added to `yy` by the jison run-time;\n *               when such a collision is detected an exception is thrown to prevent the generated run-time\n *               from silently accepting this confusing and potentially hazardous situation!\n *\n *               The lexer MAY add its own set of additional parameters (via the `%parse-param` line in\n *               the lexer section of the grammar spec): these will be inserted in the `yy` shared state\n *               object and any collision with those will be reported by the lexer via a thrown exception.\n *\n *    cleanupAfterParse: function(resultValue, invoke_post_methods, do_not_nuke_errorinfos),\n *               Helper function **which will be set up during the first invocation of the `parse()` method**.\n *               This helper API is invoked at the end of the `parse()` call, unless an exception was thrown\n *               and `%options no-try-catch` has been defined for this grammar: in that case this helper MAY\n *               be invoked by calling user code to ensure the `post_parse` callbacks are invoked and\n *               the internal parser gets properly garbage collected under these particular circumstances.\n *\n *    yyMergeLocationInfo: function(first_index, last_index, first_yylloc, last_yylloc, dont_look_back),\n *               Helper function **which will be set up during the first invocation of the `parse()` method**.\n *               This helper API can be invoked to calculate a spanning `yylloc` location info object.\n *\n *               Note: %epsilon rules MAY specify no `first_index` and `first_yylloc`, in which case\n *               this function will attempt to obtain a suitable location marker by inspecting the location stack\n *               backwards.\n *\n *               For more info see the documentation comment further below, immediately above this function's\n *               implementation.\n *\n *    lexer: {\n *        yy: {...},           A reference to the so-called \"shared state\" `yy` once\n *                             received via a call to the `.setInput(input, yy)` lexer API.\n *        EOF: 1,\n *        ERROR: 2,\n *        JisonLexerError: function(msg, hash),\n *        parseError: function(str, hash, ExceptionClass),\n *        setInput: function(input, [yy]),\n *        input: function(),\n *        unput: function(str),\n *        more: function(),\n *        reject: function(),\n *        less: function(n),\n *        pastInput: function(n),\n *        upcomingInput: function(n),\n *        showPosition: function(),\n *        test_match: function(regex_match_array, rule_index, ...),\n *        next: function(...),\n *        lex: function(...),\n *        begin: function(condition),\n *        pushState: function(condition),\n *        popState: function(),\n *        topState: function(),\n *        _currentRules: function(),\n *        stateStackSize: function(),\n *        cleanupAfterLex: function()\n *\n *        options: { ... lexer %options ... },\n *\n *        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START, ...),\n *        rules: [...],\n *        conditions: {associative list: name ==> set},\n *    }\n *  }\n *\n *\n *  token location info (@$, _$, etc.): {\n *    first_line: n,\n *    last_line: n,\n *    first_column: n,\n *    last_column: n,\n *    range: [start_number, end_number]\n *               (where the numbers are indexes into the input string, zero-based)\n *  }\n *\n * ---\n *\n * The `parseError` function receives a 'hash' object with these members for lexer and\n * parser errors:\n *\n *  {\n *    text:        (matched text)\n *    token:       (the produced terminal token, if any)\n *    token_id:    (the produced terminal token numeric ID, if any)\n *    line:        (yylineno)\n *    loc:         (yylloc)\n *  }\n *\n * parser (grammar) errors will also provide these additional members:\n *\n *  {\n *    expected:    (array describing the set of expected tokens;\n *                  may be UNDEFINED when we cannot easily produce such a set)\n *    state:       (integer (or array when the table includes grammar collisions);\n *                  represents the current internal state of the parser kernel.\n *                  can, for example, be used to pass to the `collect_expected_token_set()`\n *                  API to obtain the expected token set)\n *    action:      (integer; represents the current internal action which will be executed)\n *    new_state:   (integer; represents the next/planned internal state, once the current\n *                  action has executed)\n *    recoverable: (boolean: TRUE when the parser MAY have an error recovery rule\n *                  available for this particular error)\n *    state_stack: (array: the current parser LALR/LR internal state stack; this can be used,\n *                  for instance, for advanced error analysis and reporting)\n *    value_stack: (array: the current parser LALR/LR internal `$$` value stack; this can be used,\n *                  for instance, for advanced error analysis and reporting)\n *    location_stack: (array: the current parser LALR/LR internal location stack; this can be used,\n *                  for instance, for advanced error analysis and reporting)\n *    yy:          (object: the current parser internal \"shared state\" `yy`\n *                  as is also available in the rule actions; this can be used,\n *                  for instance, for advanced error analysis and reporting)\n *    lexer:       (reference to the current lexer instance used by the parser)\n *    parser:      (reference to the current parser instance)\n *  }\n *\n * while `this` will reference the current parser instance.\n *\n * When `parseError` is invoked by the lexer, `this` will still reference the related *parser*\n * instance, while these additional `hash` fields will also be provided:\n *\n *  {\n *    lexer:       (reference to the current lexer instance which reported the error)\n *  }\n *\n * When `parseError` is invoked by the parser due to a **JavaScript exception** being fired\n * from either the parser or lexer, `this` will still reference the related *parser*\n * instance, while these additional `hash` fields will also be provided:\n *\n *  {\n *    exception:   (reference to the exception thrown)\n *  }\n *\n * Please do note that in the latter situation, the `expected` field will be omitted as\n * this type of failure is assumed not to be due to *parse errors* but rather due to user\n * action code in either parser or lexer failing unexpectedly.\n *\n * ---\n *\n * You can specify parser options by setting / modifying the `.yy` object of your Parser instance.\n * These options are available:\n *\n * ### options which are global for all parser instances\n *\n *  Parser.pre_parse: function(yy)\n *                 optional: you can specify a pre_parse() function in the chunk following\n *                 the grammar, i.e. after the last `%%`.\n *  Parser.post_parse: function(yy, retval, parseInfo) { return retval; }\n *                 optional: you can specify a post_parse() function in the chunk following\n *                 the grammar, i.e. after the last `%%`. When it does not return any value,\n *                 the parser will return the original `retval`.\n *\n * ### options which can be set up per parser instance\n *\n *  yy: {\n *      pre_parse:  function(yy)\n *                 optional: is invoked before the parse cycle starts (and before the first\n *                 invocation of `lex()`) but immediately after the invocation of\n *                 `parser.pre_parse()`).\n *      post_parse: function(yy, retval, parseInfo) { return retval; }\n *                 optional: is invoked when the parse terminates due to success ('accept')\n *                 or failure (even when exceptions are thrown).\n *                 `retval` contains the return value to be produced by `Parser.parse()`;\n *                 this function can override the return value by returning another.\n *                 When it does not return any value, the parser will return the original\n *                 `retval`.\n *                 This function is invoked immediately before `parser.post_parse()`.\n *\n *      parseError: function(str, hash, ExceptionClass)\n *                 optional: overrides the default `parseError` function.\n *      quoteName: function(name),\n *                 optional: overrides the default `quoteName` function.\n *  }\n *\n *  parser.lexer.options: {\n *      pre_lex:  function()\n *                 optional: is invoked before the lexer is invoked to produce another token.\n *                 `this` refers to the Lexer object.\n *      post_lex: function(token) { return token; }\n *                 optional: is invoked when the lexer has produced a token `token`;\n *                 this function can override the returned token value by returning another.\n *                 When it does not return any (truthy) value, the lexer will return\n *                 the original `token`.\n *                 `this` refers to the Lexer object.\n *\n *      ranges: boolean\n *                 optional: `true` ==> token location info will include a .range[] member.\n *      flex: boolean\n *                 optional: `true` ==> flex-like lexing behaviour where the rules are tested\n *                 exhaustively to find the longest match.\n *      backtrack_lexer: boolean\n *                 optional: `true` ==> lexer regexes are tested in order and for invoked;\n *                 the lexer terminates the scan when a token is returned by the action code.\n *      xregexp: boolean\n *                 optional: `true` ==> lexer rule regexes are \"extended regex format\" requiring the\n *                 `XRegExp` library. When this `%option` has not been specified at compile time, all lexer\n *                 rule regexes have been written as standard JavaScript RegExp expressions.\n *  }\n */\n\n        \n    \n            var parser = (function () {\n\n\n// See also:\n// http://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript/#35881508\n// but we keep the prototype.constructor and prototype.name assignment lines too for compatibility\n// with userland code which might access the derived class in a 'classic' way.\nfunction JisonParserError(msg, hash) {\n    Object.defineProperty(this, 'name', {\n        enumerable: false,\n        writable: false,\n        value: 'JisonParserError'\n    });\n\n    if (msg == null) msg = '???';\n\n    Object.defineProperty(this, 'message', {\n        enumerable: false,\n        writable: true,\n        value: msg\n    });\n\n    this.hash = hash;\n\n    var stacktrace;\n    if (hash && hash.exception instanceof Error) {\n        var ex2 = hash.exception;\n        this.message = ex2.message || msg;\n        stacktrace = ex2.stack;\n    }\n    if (!stacktrace) {\n        if (Error.hasOwnProperty('captureStackTrace')) {        // V8/Chrome engine\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            stacktrace = (new Error(msg)).stack;\n        }\n    }\n    if (stacktrace) {\n        Object.defineProperty(this, 'stack', {\n            enumerable: false,\n            writable: false,\n            value: stacktrace\n        });\n    }\n}\n\nif (typeof Object.setPrototypeOf === 'function') {\n    Object.setPrototypeOf(JisonParserError.prototype, Error.prototype);\n} else {\n    JisonParserError.prototype = Object.create(Error.prototype);\n}\nJisonParserError.prototype.constructor = JisonParserError;\nJisonParserError.prototype.name = 'JisonParserError';\n\n\n\n\n        // helper: reconstruct the productions[] table\n        function bp(s) {\n            var rv = [];\n            var p = s.pop;\n            var r = s.rule;\n            for (var i = 0, l = p.length; i < l; i++) {\n                rv.push([\n                    p[i],\n                    r[i]\n                ]);\n            }\n            return rv;\n        }\n    \n\n\n        // helper: reconstruct the defaultActions[] table\n        function bda(s) {\n            var rv = {};\n            var d = s.idx;\n            var g = s.goto;\n            for (var i = 0, l = d.length; i < l; i++) {\n                var j = d[i];\n                rv[j] = g[i];\n            }\n            return rv;\n        }\n    \n\n\n        // helper: reconstruct the 'goto' table\n        function bt(s) {\n            var rv = [];\n            var d = s.len;\n            var y = s.symbol;\n            var t = s.type;\n            var a = s.state;\n            var m = s.mode;\n            var g = s.goto;\n            for (var i = 0, l = d.length; i < l; i++) {\n                var n = d[i];\n                var q = {};\n                for (var j = 0; j < n; j++) {\n                    var z = y.shift();\n                    switch (t.shift()) {\n                    case 2:\n                        q[z] = [\n                            m.shift(),\n                            g.shift()\n                        ];\n                        break;\n\n                    case 0:\n                        q[z] = a.shift();\n                        break;\n\n                    default:\n                        // type === 1: accept\n                        q[z] = [\n                            3\n                        ];\n                    }\n                }\n                rv.push(q);\n            }\n            return rv;\n        }\n    \n\n\n        // helper: runlength encoding with increment step: code, length: step (default step = 0)\n        // `this` references an array\n        function s(c, l, a) {\n            a = a || 0;\n            for (var i = 0; i < l; i++) {\n                this.push(c);\n                c += a;\n            }\n        }\n\n        // helper: duplicate sequence from *relative* offset and length.\n        // `this` references an array\n        function c(i, l) {\n            i = this.length - i;\n            for (l += i; i < l; i++) {\n                this.push(this[i]);\n            }\n        }\n\n        // helper: unpack an array using helpers and data, all passed in an array argument 'a'.\n        function u(a) {\n            var rv = [];\n            for (var i = 0, l = a.length; i < l; i++) {\n                var e = a[i];\n                // Is this entry a helper function?\n                if (typeof e === 'function') {\n                    i++;\n                    e.apply(rv, a[i]);\n                } else {\n                    rv.push(e);\n                }\n            }\n            return rv;\n        }\n    \n\nvar parser = {\n    // Code Generator Information Report\n    // ---------------------------------\n    //\n    // Options:\n    //\n    //   default action mode: ............. [\"classic\",\"merge\"]\n    //   test-compile action mode: ........ \"parser:*,lexer:*\"\n    //   try..catch: ...................... true\n    //   default resolve on conflict: ..... true\n    //   on-demand look-ahead: ............ false\n    //   error recovery token skip maximum: 3\n    //   yyerror in parse actions is: ..... NOT recoverable,\n    //   yyerror in lexer actions and other non-fatal lexer are:\n    //   .................................. NOT recoverable,\n    //   debug grammar/output: ............ false\n    //   has partial LR conflict upgrade:   true\n    //   rudimentary token-stack support:   false\n    //   parser table compression mode: ... 2\n    //   export debug tables: ............. false\n    //   export *all* tables: ............. false\n    //   module type: ..................... commonjs\n    //   parser engine type: .............. lalr\n    //   output main() in the module: ..... true\n    //   has user-specified main(): ....... true\n    //   has user-specified require()/import modules for main():\n    //   .................................. false\n    //   number of expected conflicts: .... 0\n    //\n    //\n    // Parser Analysis flags:\n    //\n    //   no significant actions (parser is a language matcher only):\n    //   .................................. false\n    //   uses yyleng: ..................... false\n    //   uses yylineno: ................... false\n    //   uses yytext: ..................... false\n    //   uses yylloc: ..................... false\n    //   uses ParseError API: ............. true\n    //   uses YYERROR: .................... false\n    //   uses YYRECOVERING: ............... false\n    //   uses YYERROK: .................... false\n    //   uses YYCLEARIN: .................. false\n    //   tracks rule values: .............. true\n    //   assigns rule values: ............. true\n    //   uses location tracking: .......... false\n    //   assigns location: ................ false\n    //   uses yystack: .................... false\n    //   uses yysstack: ................... false\n    //   uses yysp: ....................... true\n    //   uses yyrulelength: ............... false\n    //   uses yyMergeLocationInfo API: .... false\n    //   has error recovery: .............. false\n    //   has error reporting: ............. true\n    //\n    // --------- END OF REPORT -----------\n\ntrace: function no_op_trace() { },\nJisonParserError: JisonParserError,\nyy: {},\noptions: {\n  type: \"lalr\",\n  hasPartialLrUpgradeOnConflict: true,\n  errorRecoveryTokenDiscardCount: 3\n},\nsymbols_: {\n  \"$accept\": 0,\n  \"$end\": 1,\n  \"(\": 10,\n  \")\": 11,\n  \"*\": 5,\n  \"+\": 6,\n  \",\": 9,\n  \"-\": 14,\n  \"?\": 4,\n  \"CATESC\": 24,\n  \"CHAR\": 16,\n  \"CLASSSUBTRACTION\": 19,\n  \"COMPLESC\": 25,\n  \"EOF\": 1,\n  \"MULTICHARESC\": 23,\n  \"NUMBER\": 15,\n  \"SINGLECHARESC\": 22,\n  \"SingleCharEsc\": 21,\n  \"WILDCARDESC\": 17,\n  \"XMLCHAR\": 20,\n  \"[\": 13,\n  \"[^\": 18,\n  \"]\": 12,\n  \"atom\": 33,\n  \"branch\": 29,\n  \"charClass\": 34,\n  \"charClassEsc\": 44,\n  \"charClassExpr\": 35,\n  \"charClassExprStart\": 36,\n  \"charClassSub\": 40,\n  \"charGroup\": 37,\n  \"charOrEsc\": 43,\n  \"charRange\": 41,\n  \"error\": 2,\n  \"input\": 27,\n  \"piece\": 30,\n  \"posCharGroup\": 39,\n  \"posCharGroups\": 38,\n  \"quantifier\": 31,\n  \"quantity\": 32,\n  \"regexp\": 28,\n  \"seRange\": 42,\n  \"start\": 26,\n  \"{\": 7,\n  \"|\": 3,\n  \"}\": 8\n},\nterminals_: {\n  1: \"EOF\",\n  2: \"error\",\n  3: \"|\",\n  4: \"?\",\n  5: \"*\",\n  6: \"+\",\n  7: \"{\",\n  8: \"}\",\n  9: \",\",\n  10: \"(\",\n  11: \")\",\n  12: \"]\",\n  13: \"[\",\n  14: \"-\",\n  15: \"NUMBER\",\n  16: \"CHAR\",\n  17: \"WILDCARDESC\",\n  18: \"[^\",\n  19: \"CLASSSUBTRACTION\",\n  20: \"XMLCHAR\",\n  21: \"SingleCharEsc\",\n  22: \"SINGLECHARESC\",\n  23: \"MULTICHARESC\",\n  24: \"CATESC\",\n  25: \"COMPLESC\"\n},\nTERROR: 2,\n    EOF: 1,\n\n    // internals: defined here so the object *structure* doesn't get modified by parse() et al,\n    // thus helping JIT compilers like Chrome V8.\n    originalQuoteName: null,\n    originalParseError: null,\n    cleanupAfterParse: null,\n    constructParseErrorInfo: null,\n    yyMergeLocationInfo: null,\n\n    __reentrant_call_depth: 0,      // INTERNAL USE ONLY\n    __error_infos: [],              // INTERNAL USE ONLY: the set of parseErrorInfo objects created since the last cleanup\n    __error_recovery_infos: [],     // INTERNAL USE ONLY: the set of parseErrorInfo objects created since the last cleanup\n\n    // APIs which will be set up depending on user action code analysis:\n    //yyRecovering: 0,\n    //yyErrOk: 0,\n    //yyClearIn: 0,\n\n    // Helper APIs\n    // -----------\n\n    // Helper function which can be overridden by user code later on: put suitable quotes around\n    // literal IDs in a description string.\n    quoteName: function parser_quoteName(id_str) {\n        return '\"' + id_str + '\"';\n    },\n\n    // Return the name of the given symbol (terminal or non-terminal) as a string, when available.\n    //\n    // Return NULL when the symbol is unknown to the parser.\n    getSymbolName: function parser_getSymbolName(symbol) {\n        if (this.terminals_[symbol]) {\n            return this.terminals_[symbol];\n        }\n\n        // Otherwise... this might refer to a RULE token i.e. a non-terminal: see if we can dig that one up.\n        //\n        // An example of this may be where a rule's action code contains a call like this:\n        //\n        //      parser.getSymbolName(#$)\n        //\n        // to obtain a human-readable name of the current grammar rule.\n        var s = this.symbols_;\n        for (var key in s) {\n            if (s[key] === symbol) {\n                return key;\n            }\n        }\n        return null;\n    },\n\n    // Return a more-or-less human-readable description of the given symbol, when available,\n    // or the symbol itself, serving as its own 'description' for lack of something better to serve up.\n    //\n    // Return NULL when the symbol is unknown to the parser.\n    describeSymbol: function parser_describeSymbol(symbol) {\n        if (symbol !== this.EOF && this.terminal_descriptions_ && this.terminal_descriptions_[symbol]) {\n            return this.terminal_descriptions_[symbol];\n        }\n        else if (symbol === this.EOF) {\n            return 'end of input';\n        }\n        var id = this.getSymbolName(symbol);\n        if (id) {\n            return this.quoteName(id);\n        }\n        return null;\n    },\n\n    // Produce a (more or less) human-readable list of expected tokens at the point of failure.\n    //\n    // The produced list may contain token or token set descriptions instead of the tokens\n    // themselves to help turning this output into something that easier to read by humans\n    // unless `do_not_describe` parameter is set, in which case a list of the raw, *numeric*,\n    // expected terminals and nonterminals is produced.\n    //\n    // The returned list (array) will not contain any duplicate entries.\n    collect_expected_token_set: function parser_collect_expected_token_set(state, do_not_describe) {\n        var TERROR = this.TERROR;\n        var tokenset = [];\n        var check = {};\n        // Has this (error?) state been outfitted with a custom expectations description text for human consumption?\n        // If so, use that one instead of the less palatable token set.\n        if (!do_not_describe && this.state_descriptions_ && this.state_descriptions_[state]) {\n            return [\n                this.state_descriptions_[state]\n            ];\n        }\n        for (var p in this.table[state]) {\n            p = +p;\n            if (p !== TERROR) {\n                var d = do_not_describe ? p : this.describeSymbol(p);\n                if (d && !check[d]) {\n                    tokenset.push(d);\n                    check[d] = true;        // Mark this token description as already mentioned to prevent outputting duplicate entries.\n                }\n            }\n        }\n        return tokenset;\n    },\nproductions_: bp({\n  pop: u([\n  26,\n  27,\n  27,\n  28,\n  28,\n  29,\n  29,\n  30,\n  30,\n  s,\n  [31, 4],\n  s,\n  [32, 3],\n  s,\n  [33, 3],\n  s,\n  [34, 3],\n  35,\n  36,\n  36,\n  37,\n  37,\n  38,\n  38,\n  39,\n  39,\n  40,\n  41,\n  41,\n  42,\n  42,\n  43,\n  43,\n  s,\n  [44, 4]\n]),\n  rule: u([\n  1,\n  1,\n  2,\n  1,\n  3,\n  c,\n  [4, 3],\n  2,\n  s,\n  [1, 3],\n  3,\n  1,\n  3,\n  c,\n  [7, 3],\n  3,\n  c,\n  [10, 5],\n  s,\n  [1, 4],\n  c,\n  [13, 6],\n  c,\n  [12, 6],\n  1,\n  1\n])\n}),\nperformAction: function parser__PerformAction(yystate /* action[1] */, yysp, yyvstack) {\n\n          /* this == yyval */\n\n          // the JS engine itself can go and remove these statements when `yy` turns out to be unused in any action code!\n          var yy = this.yy;\n          var yyparser = yy.parser;\n          var yylexer = yy.lexer;\n\n          \n\n          switch (yystate) {\ncase 0:\n    /*! Production::    $accept : start $end */\n\n    // default action (generated by JISON mode classic/merge :: 1,VT,VA,-,-,-,-,-,-):\n    this.$ = yyvstack[yysp - 1];\n    // END of default action (generated by JISON mode classic/merge :: 1,VT,VA,-,-,-,-,-,-)\n    break;\n\ncase 1:\n    /*! Production::    start : input */\n\n    // default action (generated by JISON mode classic/merge :: 1,VT,VA,-,-,-,-,-,-):\n    this.$ = yyvstack[yysp];\n    // END of default action (generated by JISON mode classic/merge :: 1,VT,VA,-,-,-,-,-,-)\n    \n    \n    // Overwrite the parseError method with our own. NOTE: Our own\n    // method does not allow recovering from recoverable parsing\n    // errors.\n    this.parseError = parseError;\n    var outputType = yy.outputType || \"re\";\n    switch(outputType) {\n    case \"string\":\n      return yyvstack[yysp];\n    case \"re\":\n      var constructor = (needsXRegExpRe.test(yyvstack[yysp]) ? XRegExp : RegExp);\n      return new constructor(yyvstack[yysp]);\n    default:\n      throw new Error(\"unsupported output type: \" + outputType);\n    }\n    break;\n\ncase 2:\n    /*! Production::    input : EOF */\n\n    this.$ = ('^$');\n    break;\n\ncase 3:\n    /*! Production::    input : regexp EOF */\n\n    this.$ = ('^' + yyvstack[yysp - 1] + '$');\n    break;\n\ncase 4:\n    /*! Production::    regexp : branch */\ncase 6:\n    /*! Production::    branch : piece */\ncase 8:\n    /*! Production::    piece : atom */\ncase 10:\n    /*! Production::    quantifier : \"?\" */\ncase 11:\n    /*! Production::    quantifier : \"*\" */\ncase 12:\n    /*! Production::    quantifier : \"+\" */\ncase 14:\n    /*! Production::    quantity : NUMBER */\ncase 17:\n    /*! Production::    atom : CHAR */\ncase 18:\n    /*! Production::    atom : charClass */\ncase 20:\n    /*! Production::    charClass : charClassEsc */\ncase 21:\n    /*! Production::    charClass : charClassExpr */\ncase 22:\n    /*! Production::    charClass : WILDCARDESC */\ncase 26:\n    /*! Production::    charGroup : posCharGroups */\ncase 27:\n    /*! Production::    charGroup : charClassSub */\ncase 28:\n    /*! Production::    posCharGroups : posCharGroup */\ncase 30:\n    /*! Production::    posCharGroup : charClassEsc */\ncase 31:\n    /*! Production::    posCharGroup : charRange */\ncase 33:\n    /*! Production::    charRange : seRange */\ncase 34:\n    /*! Production::    charRange : \"-\" */\ncase 36:\n    /*! Production::    seRange : charOrEsc */\ncase 37:\n    /*! Production::    charOrEsc : XMLCHAR */\ncase 38:\n    /*! Production::    charOrEsc : SingleCharEsc */\ncase 39:\n    /*! Production::    charClassEsc : SINGLECHARESC */\ncase 41:\n    /*! Production::    charClassEsc : CATESC */\ncase 42:\n    /*! Production::    charClassEsc : COMPLESC */\n\n    // default action (generated by JISON mode classic/merge :: 1,VT,VA,-,-,-,-,-,-):\n    this.$ = yyvstack[yysp];\n    // END of default action (generated by JISON mode classic/merge :: 1,VT,VA,-,-,-,-,-,-)\n    break;\n\ncase 5:\n    /*! Production::    regexp : branch \"|\" regexp */\ncase 13:\n    /*! Production::    quantifier : \"{\" quantity \"}\" */\ncase 35:\n    /*! Production::    seRange : charOrEsc \"-\" charOrEsc */\n\n    this.$ = (yyvstack[yysp - 2].concat(yyvstack[yysp - 1], yyvstack[yysp]));\n    break;\n\ncase 7:\n    /*! Production::    branch : branch piece */\ncase 9:\n    /*! Production::    piece : atom quantifier */\ncase 29:\n    /*! Production::    posCharGroups : posCharGroups posCharGroup */\n\n    this.$ = (yyvstack[yysp - 1] + yyvstack[yysp]);\n    break;\n\ncase 15:\n    /*! Production::    quantity : NUMBER \",\" NUMBER */\n\n    this.$ = (yyvstack[yysp - 2].concat(',', yyvstack[yysp]));\n    break;\n\ncase 16:\n    /*! Production::    quantity : NUMBER \",\" */\n\n    this.$ = (yyvstack[yysp - 1].concat(yyvstack[yysp]));\n    break;\n\ncase 19:\n    /*! Production::    atom : \"(\" regexp \")\" */\n\n    this.$ = ('(?:' + yyvstack[yysp - 1] + yyvstack[yysp]);\n    break;\n\ncase 23:\n    /*! Production::    charClassExpr : charClassExprStart charGroup \"]\" */\n\n    var state = groupState.shift();\n    var capturedMultiChar = state.capturedMultiChar;\n    \n    var subtraction = state.subtraction ?\n          (\"(?!\" +  state.subtraction + \")\") : \"\";\n    if (capturedMultiChar.length !== 0) {\n      var out = [\"(?:\", subtraction];\n      if (state.negative) {\n        out.push(\"(?=[\");\n        for (var i = 0; i < capturedMultiChar.length; ++i) {\n          out.push(multiCharEscapesInGroup[capturedMultiChar[i]].slice(1));\n        }\n        out.push(\"])\");\n      }\n      else {\n        for (var i = 0; i < capturedMultiChar.length; ++i) {\n          out.push(\"[\", multiCharEscapesInGroup[capturedMultiChar[i]], \"]|\");\n        }\n      }\n      out.push(yyvstack[yysp - 2], yyvstack[yysp - 1], yyvstack[yysp], \")\");\n      this.$ = out.join(\"\");\n    }\n    else {\n      this.$ = (subtraction !== \"\") ?\n        \"(?:\" + subtraction + yyvstack[yysp - 2].concat(yyvstack[yysp - 1], yyvstack[yysp]) + \")\":\n        yyvstack[yysp - 2].concat(yyvstack[yysp - 1], yyvstack[yysp]);\n    }\n    break;\n\ncase 24:\n    /*! Production::    charClassExprStart : \"[\" */\n\n    unshiftGroupState(false);\n    this.$ = yyvstack[yysp];\n    break;\n\ncase 25:\n    /*! Production::    charClassExprStart : \"[^\" */\n\n    unshiftGroupState(true);\n    this.$ = yyvstack[yysp];\n    break;\n\ncase 32:\n    /*! Production::    charClassSub : posCharGroups CLASSSUBTRACTION charClassExpr */\n\n    this.$ = yyvstack[yysp - 2];\n    groupState[0].subtraction = yyvstack[yysp];\n    break;\n\ncase 40:\n    /*! Production::    charClassEsc : MULTICHARESC */\n\n    if (groupState.length) {\n      var repl = multiCharEscapesInGroup[yyvstack[yysp]]\n      if (repl.charAt(0) === \"^\") {\n        groupState[0].capturedMultiChar.push(yyvstack[yysp]);\n        this.$ = \"\";\n      }\n      else {\n        this.$ = repl;\n      }\n    }\n    else {\n      this.$ = multiCharEscapes[yyvstack[yysp]]\n    }\n    break;\n\n}\n},\ntable: bt({\n  len: u([\n  20,\n  1,\n  0,\n  0,\n  1,\n  18,\n  0,\n  17,\n  0,\n  c,\n  [3, 4],\n  s,\n  [0, 5],\n  15,\n  s,\n  [0, 3],\n  c,\n  [12, 6],\n  2,\n  1,\n  1,\n  14,\n  s,\n  [0, 6],\n  9,\n  s,\n  [0, 3],\n  1,\n  2,\n  s,\n  [0, 3],\n  4,\n  3,\n  0,\n  c,\n  [7, 4]\n]),\n  symbol: u([\n  1,\n  10,\n  13,\n  16,\n  17,\n  18,\n  s,\n  [22, 9, 1],\n  s,\n  [33, 4, 1],\n  44,\n  s,\n  [1, 3],\n  3,\n  10,\n  11,\n  c,\n  [24, 8],\n  c,\n  [20, 7],\n  s,\n  [3, 5, 1],\n  c,\n  [22, 10],\n  31,\n  c,\n  [56, 9],\n  c,\n  [54, 8],\n  14,\n  s,\n  [20, 6, 1],\n  s,\n  [37, 8, 1],\n  c,\n  [32, 17],\n  15,\n  32,\n  11,\n  12,\n  12,\n  14,\n  s,\n  [19, 7, 1],\n  39,\n  c,\n  [35, 4],\n  c,\n  [14, 9],\n  8,\n  8,\n  9,\n  13,\n  18,\n  35,\n  36,\n  20,\n  21,\n  43,\n  8,\n  15\n]),\n  type: u([\n  s,\n  [2, 10],\n  s,\n  [0, 10],\n  1,\n  s,\n  [2, 13],\n  s,\n  [0, 6],\n  s,\n  [2, 16],\n  c,\n  [17, 10],\n  s,\n  [0, 8],\n  c,\n  [15, 22],\n  c,\n  [17, 11],\n  c,\n  [68, 12],\n  c,\n  [84, 19],\n  c,\n  [16, 4],\n  c,\n  [3, 3]\n]),\n  state: u([\n  1,\n  2,\n  s,\n  [4, 4, 1],\n  9,\n  12,\n  18,\n  11,\n  23,\n  c,\n  [6, 5],\n  24,\n  29,\n  c,\n  [15, 7],\n  30,\n  31,\n  33,\n  32,\n  35,\n  36,\n  38,\n  34,\n  41,\n  c,\n  [16, 7],\n  42,\n  46,\n  c,\n  [14, 4],\n  51,\n  18,\n  52\n]),\n  mode: u([\n  s,\n  [1, 11],\n  2,\n  c,\n  [3, 5],\n  c,\n  [12, 7],\n  c,\n  [10, 5],\n  s,\n  [2, 10],\n  s,\n  [1, 28],\n  c,\n  [53, 10],\n  c,\n  [49, 8],\n  c,\n  [19, 7],\n  2,\n  1\n]),\n  goto: u([\n  3,\n  10,\n  19,\n  8,\n  13,\n  20,\n  s,\n  [14, 4, 1],\n  21,\n  4,\n  22,\n  10,\n  4,\n  c,\n  [13, 8],\n  8,\n  8,\n  s,\n  [25, 4, 1],\n  s,\n  [8, 10],\n  c,\n  [38, 9],\n  37,\n  39,\n  40,\n  c,\n  [7, 4],\n  c,\n  [16, 9],\n  43,\n  44,\n  45,\n  26,\n  37,\n  47,\n  c,\n  [21, 6],\n  36,\n  48,\n  s,\n  [36, 7],\n  49,\n  14,\n  50,\n  19,\n  20,\n  39,\n  40,\n  16,\n  53\n])\n}),\ndefaultActions: bda({\n  idx: u([\n  2,\n  3,\n  6,\n  8,\n  9,\n  s,\n  [11, 7, 1],\n  19,\n  20,\n  21,\n  s,\n  [23, 5, 1],\n  s,\n  [32, 6, 1],\n  39,\n  40,\n  41,\n  44,\n  45,\n  46,\n  49,\n  51,\n  52,\n  53\n]),\n  goto: u([\n  1,\n  2,\n  6,\n  17,\n  18,\n  20,\n  21,\n  22,\n  s,\n  [39, 4, 1],\n  24,\n  25,\n  3,\n  7,\n  s,\n  [9, 4, 1],\n  27,\n  28,\n  30,\n  31,\n  33,\n  34,\n  37,\n  38,\n  5,\n  19,\n  23,\n  29,\n  13,\n  32,\n  35,\n  15\n])\n}),\nparseError: function parseError(str, hash, ExceptionClass) {\n    if (hash.recoverable) {\n        if (typeof this.trace === 'function') {\n            this.trace(str);\n        }\n        hash.destroy();             // destroy... well, *almost*!\n    } else {\n        if (typeof this.trace === 'function') {\n            this.trace(str);\n        }\n        if (!ExceptionClass) {\n            ExceptionClass = this.JisonParserError;\n        }\n        throw new ExceptionClass(str, hash);\n    }\n},\nparse: function parse(input, outputType) {\n    var self = this;\n    var stack = new Array(128);         // token stack: stores token which leads to state at the same index (column storage)\n    var sstack = new Array(128);        // state stack: stores states (column storage)\n\n    var vstack = new Array(128);        // semantic value stack\n\n    var table = this.table;\n    var sp = 0;                         // 'stack pointer': index into the stacks\n\n\n    \n\n\n    var symbol = 0;\n\n\n\n    var TERROR = this.TERROR;\n    var EOF = this.EOF;\n    var ERROR_RECOVERY_TOKEN_DISCARD_COUNT = (this.options.errorRecoveryTokenDiscardCount | 0) || 3;\n    var NO_ACTION = [0, 54 /* === table.length :: ensures that anyone using this new state will fail dramatically! */];\n\n    var lexer;\n    if (this.__lexer__) {\n        lexer = this.__lexer__;\n    } else {\n        lexer = this.__lexer__ = Object.create(this.lexer);\n    }\n\n    var sharedState_yy = {\n        parseError: undefined,\n        quoteName: undefined,\n        lexer: undefined,\n        parser: undefined,\n        pre_parse: undefined,\n        post_parse: undefined,\n        pre_lex: undefined,\n        post_lex: undefined,\n        outputType: outputType  // parseParams::outputType      // WARNING: must be written this way for the code expanders to work correctly in both ES5 and ES6 modes!\n    };\n\n    var ASSERT;\n    if (typeof assert !== 'function') {\n        ASSERT = function JisonAssert(cond, msg) {\n            if (!cond) {\n                throw new Error('assertion failed: ' + (msg || '***'));\n            }\n        };\n    } else {\n        ASSERT = assert;\n    }\n\n    this.yyGetSharedState = function yyGetSharedState() {\n        return sharedState_yy;\n    };\n\n\n\n\n\n\n\n\n    function shallow_copy_noclobber(dst, src) {\n        for (var k in src) {\n            if (typeof dst[k] === 'undefined' && Object.prototype.hasOwnProperty.call(src, k)) {\n                dst[k] = src[k];\n            }\n        }\n    }\n\n    // copy state\n    shallow_copy_noclobber(sharedState_yy, this.yy);\n\n    sharedState_yy.lexer = lexer;\n    sharedState_yy.parser = this;\n\n\n\n\n\n\n    // Does the shared state override the default `parseError` that already comes with this instance?\n    if (typeof sharedState_yy.parseError === 'function') {\n        this.parseError = function parseErrorAlt(str, hash, ExceptionClass) {\n            if (!ExceptionClass) {\n                ExceptionClass = this.JisonParserError;\n            }\n            return sharedState_yy.parseError.call(this, str, hash, ExceptionClass);\n        };\n    } else {\n        this.parseError = this.originalParseError;\n    }\n\n    // Does the shared state override the default `quoteName` that already comes with this instance?\n    if (typeof sharedState_yy.quoteName === 'function') {\n        this.quoteName = function quoteNameAlt(id_str) {\n            return sharedState_yy.quoteName.call(this, id_str);\n        };\n    } else {\n        this.quoteName = this.originalQuoteName;\n    }\n\n    // set up the cleanup function; make it an API so that external code can re-use this one in case of\n    // calamities or when the `%options no-try-catch` option has been specified for the grammar, in which\n    // case this parse() API method doesn't come with a `finally { ... }` block any more!\n    //\n    // NOTE: as this API uses parse() as a closure, it MUST be set again on every parse() invocation,\n    //       or else your `sharedState`, etc. references will be *wrong*!\n    this.cleanupAfterParse = function parser_cleanupAfterParse(resultValue, invoke_post_methods, do_not_nuke_errorinfos) {\n        var rv;\n\n        if (invoke_post_methods) {\n            var hash;\n\n            if (sharedState_yy.post_parse || this.post_parse) {\n                // create an error hash info instance: we re-use this API in a **non-error situation**\n                // as this one delivers all parser internals ready for access by userland code.\n                hash = this.constructParseErrorInfo(null /* no error! */, null /* no exception! */, null, false);\n            }\n\n            if (sharedState_yy.post_parse) {\n                rv = sharedState_yy.post_parse.call(this, sharedState_yy, resultValue, hash);\n                if (typeof rv !== 'undefined') resultValue = rv;\n            }\n            if (this.post_parse) {\n                rv = this.post_parse.call(this, sharedState_yy, resultValue, hash);\n                if (typeof rv !== 'undefined') resultValue = rv;\n            }\n\n            // cleanup:\n            if (hash && hash.destroy) {\n                hash.destroy();\n            }\n        }\n\n        if (this.__reentrant_call_depth > 1) return resultValue;        // do not (yet) kill the sharedState when this is a reentrant run.\n\n        // clean up the lingering lexer structures as well:\n        if (lexer.cleanupAfterLex) {\n            lexer.cleanupAfterLex(do_not_nuke_errorinfos);\n        }\n\n        // prevent lingering circular references from causing memory leaks:\n        if (sharedState_yy) {\n            sharedState_yy.lexer = undefined;\n            sharedState_yy.parser = undefined;\n            if (lexer.yy === sharedState_yy) {\n                lexer.yy = undefined;\n            }\n        }\n        sharedState_yy = undefined;\n        this.parseError = this.originalParseError;\n        this.quoteName = this.originalQuoteName;\n\n        // nuke the vstack[] array at least as that one will still reference obsoleted user values.\n        // To be safe, we nuke the other internal stack columns as well...\n        stack.length = 0;               // fastest way to nuke an array without overly bothering the GC\n        sstack.length = 0;\n\n        vstack.length = 0;\n        sp = 0;\n\n        // nuke the error hash info instances created during this run.\n        // Userland code must COPY any data/references\n        // in the error hash instance(s) it is more permanently interested in.\n        if (!do_not_nuke_errorinfos) {\n            for (var i = this.__error_infos.length - 1; i >= 0; i--) {\n                var el = this.__error_infos[i];\n                if (el && typeof el.destroy === 'function') {\n                    el.destroy();\n                }\n            }\n            this.__error_infos.length = 0;\n\n\n        }\n\n        return resultValue;\n    };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // NOTE: as this API uses parse() as a closure, it MUST be set again on every parse() invocation,\n    //       or else your `lexer`, `sharedState`, etc. references will be *wrong*!\n    this.constructParseErrorInfo = function parser_constructParseErrorInfo(msg, ex, expected, recoverable) {\n        var pei = {\n            errStr: msg,\n            exception: ex,\n            text: lexer.match,\n            value: lexer.yytext,\n            token: this.describeSymbol(symbol) || symbol,\n            token_id: symbol,\n            line: lexer.yylineno,\n\n            expected: expected,\n            recoverable: recoverable,\n            state: state,\n            action: action,\n            new_state: newState,\n            symbol_stack: stack,\n            state_stack: sstack,\n            value_stack: vstack,\n\n            stack_pointer: sp,\n            yy: sharedState_yy,\n            lexer: lexer,\n            parser: this,\n\n            // and make sure the error info doesn't stay due to potential\n            // ref cycle via userland code manipulations.\n            // These would otherwise all be memory leak opportunities!\n            //\n            // Note that only array and object references are nuked as those\n            // constitute the set of elements which can produce a cyclic ref.\n            // The rest of the members is kept intact as they are harmless.\n            destroy: function destructParseErrorInfo() {\n                // remove cyclic references added to error info:\n                // info.yy = null;\n                // info.lexer = null;\n                // info.value = null;\n                // info.value_stack = null;\n                // ...\n                var rec = !!this.recoverable;\n                for (var key in this) {\n                    if (this.hasOwnProperty(key) && typeof key === 'object') {\n                        this[key] = undefined;\n                    }\n                }\n                this.recoverable = rec;\n            }\n        };\n        // track this instance so we can `destroy()` it once we deem it superfluous and ready for garbage collection!\n        this.__error_infos.push(pei);\n        return pei;\n    };\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function getNonTerminalFromCode(symbol) {\n        var tokenName = self.getSymbolName(symbol);\n        if (!tokenName) {\n            tokenName = symbol;\n        }\n        return tokenName;\n    }\n\n\n    function stdLex() {\n        var token = lexer.lex();\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n\n        return token || EOF;\n    }\n\n    function fastLex() {\n        var token = lexer.fastLex();\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n\n        return token || EOF;\n    }\n\n    var lex = stdLex;\n\n\n    var state, action, r, t;\n    var yyval = {\n        $: true,\n        _$: undefined,\n        yy: sharedState_yy\n    };\n    var p;\n    var yyrulelen;\n    var this_production;\n    var newState;\n    var retval = false;\n\n\n    try {\n        this.__reentrant_call_depth++;\n\n        lexer.setInput(input, sharedState_yy);\n\n        // NOTE: we *assume* no lexer pre/post handlers are set up *after* \n        // this initial `setInput()` call: hence we can now check and decide\n        // whether we'll go with the standard, slower, lex() API or the\n        // `fast_lex()` one:\n        if (typeof lexer.canIUse === 'function') {\n            var lexerInfo = lexer.canIUse();\n            if (lexerInfo.fastLex && typeof fastLex === 'function') {\n                lex = fastLex;\n            }\n        } \n\n\n\n        vstack[sp] = null;\n        sstack[sp] = 0;\n        stack[sp] = 0;\n        ++sp;\n\n\n\n\n\n        if (this.pre_parse) {\n            this.pre_parse.call(this, sharedState_yy);\n        }\n        if (sharedState_yy.pre_parse) {\n            sharedState_yy.pre_parse.call(this, sharedState_yy);\n        }\n\n        newState = sstack[sp - 1];\n        for (;;) {\n            // retrieve state number from top of stack\n            state = newState;               // sstack[sp - 1];\n\n            // use default actions if available\n            if (this.defaultActions[state]) {\n                action = 2;\n                newState = this.defaultActions[state];\n            } else {\n                // The single `==` condition below covers both these `===` comparisons in a single\n                // operation:\n                //\n                //     if (symbol === null || typeof symbol === 'undefined') ...\n                if (!symbol) {\n                    symbol = lex();\n                }\n                // read action for current state and first input\n                t = (table[state] && table[state][symbol]) || NO_ACTION;\n                newState = t[1];\n                action = t[0];\n\n\n\n\n\n\n\n\n\n\n\n                // handle parse error\n                if (!action) {\n                    var errStr;\n                    var errSymbolDescr = (this.describeSymbol(symbol) || symbol);\n                    var expected = this.collect_expected_token_set(state);\n\n                    // Report error\n                    if (typeof lexer.yylineno === 'number') {\n                        errStr = 'Parse error on line ' + (lexer.yylineno + 1) + ': ';\n                    } else {\n                        errStr = 'Parse error: ';\n                    }\n                    if (typeof lexer.showPosition === 'function') {\n                        errStr += '\\n' + lexer.showPosition(79 - 10, 10) + '\\n';\n                    }\n                    if (expected.length) {\n                        errStr += 'Expecting ' + expected.join(', ') + ', got unexpected ' + errSymbolDescr;\n                    } else {\n                        errStr += 'Unexpected ' + errSymbolDescr;\n                    }\n                    // we cannot recover from the error!\n                    p = this.constructParseErrorInfo(errStr, null, expected, false);\n                    r = this.parseError(p.errStr, p, this.JisonParserError);\n                    if (typeof r !== 'undefined') {\n                        retval = r;\n                    }\n                    break;\n                }\n\n\n            }\n\n\n\n\n\n\n\n\n\n\n            switch (action) {\n            // catch misc. parse failures:\n            default:\n                // this shouldn't happen, unless resolve defaults are off\n                if (action instanceof Array) {\n                    p = this.constructParseErrorInfo('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol, null, null, false);\n                    r = this.parseError(p.errStr, p, this.JisonParserError);\n                    if (typeof r !== 'undefined') {\n                        retval = r;\n                    }\n                    break;\n                }\n                // Another case of better safe than sorry: in case state transitions come out of another error recovery process\n                // or a buggy LUT (LookUp Table):\n                p = this.constructParseErrorInfo('Parsing halted. No viable error recovery approach available due to internal system failure.', null, null, false);\n                r = this.parseError(p.errStr, p, this.JisonParserError);\n                if (typeof r !== 'undefined') {\n                    retval = r;\n                }\n                break;\n\n            // shift:\n            case 1:\n                stack[sp] = symbol;\n                vstack[sp] = lexer.yytext;\n\n                sstack[sp] = newState; // push state\n\n                ++sp;\n                symbol = 0;\n\n\n\n\n                // Pick up the lexer details for the current symbol as that one is not 'look-ahead' any more:\n\n\n\n\n                continue;\n\n            // reduce:\n            case 2:\n\n\n\n                this_production = this.productions_[newState - 1];  // `this.productions_[]` is zero-based indexed while states start from 1 upwards...\n                yyrulelen = this_production[1];\n\n\n\n\n\n\n\n\n\n\n                r = this.performAction.call(yyval, newState, sp - 1, vstack);\n\n                if (typeof r !== 'undefined') {\n                    retval = r;\n                    break;\n                }\n\n                // pop off stack\n                sp -= yyrulelen;\n\n                // don't overwrite the `symbol` variable: use a local var to speed things up:\n                var ntsymbol = this_production[0];    // push nonterminal (reduce)\n                stack[sp] = ntsymbol;\n                vstack[sp] = yyval.$;\n\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[sstack[sp - 1]][ntsymbol];\n                sstack[sp] = newState;\n                ++sp;\n\n\n\n\n\n\n\n\n\n                continue;\n\n            // accept:\n            case 3:\n                if (sp !== -2) {\n                    retval = true;\n                    // Return the `$accept` rule's `$$` result, if available.\n                    //\n                    // Also note that JISON always adds this top-most `$accept` rule (with implicit,\n                    // default, action):\n                    //\n                    //     $accept: <startSymbol> $end\n                    //                  %{ $$ = $1; @$ = @1; %}\n                    //\n                    // which, combined with the parse kernel's `$accept` state behaviour coded below,\n                    // will produce the `$$` value output of the <startSymbol> rule as the parse result,\n                    // IFF that result is *not* `undefined`. (See also the parser kernel code.)\n                    //\n                    // In code:\n                    //\n                    //                  %{\n                    //                      @$ = @1;            // if location tracking support is included\n                    //                      if (typeof $1 !== 'undefined')\n                    //                          return $1;\n                    //                      else\n                    //                          return true;           // the default parse result if the rule actions don't produce anything\n                    //                  %}\n                    sp--;\n                    if (typeof vstack[sp] !== 'undefined') {\n                        retval = vstack[sp];\n                    }\n                }\n                break;\n            }\n\n            // break out of loop: we accept or fail with error\n            break;\n        }\n    } catch (ex) {\n        // report exceptions through the parseError callback too, but keep the exception intact\n        // if it is a known parser or lexer error which has been thrown by parseError() already:\n        if (ex instanceof this.JisonParserError) {\n            throw ex;\n        }\n        else if (lexer && typeof lexer.JisonLexerError === 'function' && ex instanceof lexer.JisonLexerError) {\n            throw ex;\n        }\n\n        p = this.constructParseErrorInfo('Parsing aborted due to exception.', ex, null, false);\n        retval = false;\n        r = this.parseError(p.errStr, p, this.JisonParserError);\n        if (typeof r !== 'undefined') {\n            retval = r;\n        }\n    } finally {\n        retval = this.cleanupAfterParse(retval, true, true);\n        this.__reentrant_call_depth--;\n    }   // /finally\n\n    return retval;\n}\n};\nparser.originalParseError = parser.parseError;\nparser.originalQuoteName = parser.quoteName;\n/* lexer generated by jison-lex 0.6.1-215 */\n\n/*\n * Returns a Lexer object of the following structure:\n *\n *  Lexer: {\n *    yy: {}     The so-called \"shared state\" or rather the *source* of it;\n *               the real \"shared state\" `yy` passed around to\n *               the rule actions, etc. is a direct reference!\n *\n *               This \"shared context\" object was passed to the lexer by way of \n *               the `lexer.setInput(str, yy)` API before you may use it.\n *\n *               This \"shared context\" object is passed to the lexer action code in `performAction()`\n *               so userland code in the lexer actions may communicate with the outside world \n *               and/or other lexer rules' actions in more or less complex ways.\n *\n *  }\n *\n *  Lexer.prototype: {\n *    EOF: 1,\n *    ERROR: 2,\n *\n *    yy:        The overall \"shared context\" object reference.\n *\n *    JisonLexerError: function(msg, hash),\n *\n *    performAction: function lexer__performAction(yy, yyrulenumber, YY_START),\n *\n *               The function parameters and `this` have the following value/meaning:\n *               - `this`    : reference to the `lexer` instance. \n *                               `yy_` is an alias for `this` lexer instance reference used internally.\n *\n *               - `yy`      : a reference to the `yy` \"shared state\" object which was passed to the lexer\n *                             by way of the `lexer.setInput(str, yy)` API before.\n *\n *                             Note:\n *                             The extra arguments you specified in the `%parse-param` statement in your\n *                             **parser** grammar definition file are passed to the lexer via this object\n *                             reference as member variables.\n *\n *               - `yyrulenumber`   : index of the matched lexer rule (regex), used internally.\n *\n *               - `YY_START`: the current lexer \"start condition\" state.\n *\n *    parseError: function(str, hash, ExceptionClass),\n *\n *    constructLexErrorInfo: function(error_message, is_recoverable),\n *               Helper function.\n *               Produces a new errorInfo 'hash object' which can be passed into `parseError()`.\n *               See it's use in this lexer kernel in many places; example usage:\n *\n *                   var infoObj = lexer.constructParseErrorInfo('fail!', true);\n *                   var retVal = lexer.parseError(infoObj.errStr, infoObj, lexer.JisonLexerError);\n *\n *    options: { ... lexer %options ... },\n *\n *    lex: function(),\n *               Produce one token of lexed input, which was passed in earlier via the `lexer.setInput()` API.\n *               You MAY use the additional `args...` parameters as per `%parse-param` spec of the **lexer** grammar:\n *               these extra `args...` are added verbatim to the `yy` object reference as member variables.\n *\n *               WARNING:\n *               Lexer's additional `args...` parameters (via lexer's `%parse-param`) MAY conflict with\n *               any attributes already added to `yy` by the **parser** or the jison run-time; \n *               when such a collision is detected an exception is thrown to prevent the generated run-time \n *               from silently accepting this confusing and potentially hazardous situation! \n *\n *    cleanupAfterLex: function(do_not_nuke_errorinfos),\n *               Helper function.\n *\n *               This helper API is invoked when the **parse process** has completed: it is the responsibility\n *               of the **parser** (or the calling userland code) to invoke this method once cleanup is desired. \n *\n *               This helper may be invoked by user code to ensure the internal lexer gets properly garbage collected.\n *\n *    setInput: function(input, [yy]),\n *\n *\n *    input: function(),\n *\n *\n *    unput: function(str),\n *\n *\n *    more: function(),\n *\n *\n *    reject: function(),\n *\n *\n *    less: function(n),\n *\n *\n *    pastInput: function(n),\n *\n *\n *    upcomingInput: function(n),\n *\n *\n *    showPosition: function(),\n *\n *\n *    test_match: function(regex_match_array, rule_index),\n *\n *\n *    next: function(),\n *\n *\n *    begin: function(condition),\n *\n *\n *    pushState: function(condition),\n *\n *\n *    popState: function(),\n *\n *\n *    topState: function(),\n *\n *\n *    _currentRules: function(),\n *\n *\n *    stateStackSize: function(),\n *\n *\n *    performAction: function(yy, yy_, yyrulenumber, YY_START),\n *\n *\n *    rules: [...],\n *\n *\n *    conditions: {associative list: name ==> set},\n *  }\n *\n *\n *  token location info (`yylloc`): {\n *    first_line: n,\n *    last_line: n,\n *    first_column: n,\n *    last_column: n,\n *    range: [start_number, end_number]\n *               (where the numbers are indexes into the input string, zero-based)\n *  }\n *\n * ---\n *\n * The `parseError` function receives a 'hash' object with these members for lexer errors:\n *\n *  {\n *    text:        (matched text)\n *    token:       (the produced terminal token, if any)\n *    token_id:    (the produced terminal token numeric ID, if any)\n *    line:        (yylineno)\n *    loc:         (yylloc)\n *    recoverable: (boolean: TRUE when the parser MAY have an error recovery rule\n *                  available for this particular error)\n *    yy:          (object: the current parser internal \"shared state\" `yy`\n *                  as is also available in the rule actions; this can be used,\n *                  for instance, for advanced error analysis and reporting)\n *    lexer:       (reference to the current lexer instance used by the parser)\n *  }\n *\n * while `this` will reference the current lexer instance.\n *\n * When `parseError` is invoked by the lexer, the default implementation will\n * attempt to invoke `yy.parser.parseError()`; when this callback is not provided\n * it will try to invoke `yy.parseError()` instead. When that callback is also not\n * provided, a `JisonLexerError` exception will be thrown containing the error\n * message and `hash`, as constructed by the `constructLexErrorInfo()` API.\n *\n * Note that the lexer's `JisonLexerError` error class is passed via the\n * `ExceptionClass` argument, which is invoked to construct the exception\n * instance to be thrown, so technically `parseError` will throw the object\n * produced by the `new ExceptionClass(str, hash)` JavaScript expression.\n *\n * ---\n *\n * You can specify lexer options by setting / modifying the `.options` object of your Lexer instance.\n * These options are available:\n *\n * (Options are permanent.)\n *  \n *  yy: {\n *      parseError: function(str, hash, ExceptionClass)\n *                 optional: overrides the default `parseError` function.\n *  }\n *\n *  lexer.options: {\n *      pre_lex:  function()\n *                 optional: is invoked before the lexer is invoked to produce another token.\n *                 `this` refers to the Lexer object.\n *      post_lex: function(token) { return token; }\n *                 optional: is invoked when the lexer has produced a token `token`;\n *                 this function can override the returned token value by returning another.\n *                 When it does not return any (truthy) value, the lexer will return\n *                 the original `token`.\n *                 `this` refers to the Lexer object.\n *\n * WARNING: the next set of options are not meant to be changed. They echo the abilities of\n * the lexer as per when it was compiled!\n *\n *      ranges: boolean\n *                 optional: `true` ==> token location info will include a .range[] member.\n *      flex: boolean\n *                 optional: `true` ==> flex-like lexing behaviour where the rules are tested\n *                 exhaustively to find the longest match.\n *      backtrack_lexer: boolean\n *                 optional: `true` ==> lexer regexes are tested in order and for invoked;\n *                 the lexer terminates the scan when a token is returned by the action code.\n *      xregexp: boolean\n *                 optional: `true` ==> lexer rule regexes are \"extended regex format\" requiring the\n *                 `XRegExp` library. When this %option has not been specified at compile time, all lexer\n *                 rule regexes have been written as standard JavaScript RegExp expressions.\n *  }\n */\n\n\nvar lexer = function() {\n  /**\n   * See also:\n   * http://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript/#35881508\n   * but we keep the prototype.constructor and prototype.name assignment lines too for compatibility\n   * with userland code which might access the derived class in a 'classic' way.\n   *\n   * @public\n   * @constructor\n   * @nocollapse\n   */\n  function JisonLexerError(msg, hash) {\n    Object.defineProperty(this, 'name', {\n      enumerable: false,\n      writable: false,\n      value: 'JisonLexerError'\n    });\n\n    if (msg == null)\n      msg = '???';\n\n    Object.defineProperty(this, 'message', {\n      enumerable: false,\n      writable: true,\n      value: msg\n    });\n\n    this.hash = hash;\n    var stacktrace;\n\n    if (hash && hash.exception instanceof Error) {\n      var ex2 = hash.exception;\n      this.message = ex2.message || msg;\n      stacktrace = ex2.stack;\n    }\n\n    if (!stacktrace) {\n      if (Error.hasOwnProperty('captureStackTrace')) {\n        // V8\n        Error.captureStackTrace(this, this.constructor);\n      } else {\n        stacktrace = new Error(msg).stack;\n      }\n    }\n\n    if (stacktrace) {\n      Object.defineProperty(this, 'stack', {\n        enumerable: false,\n        writable: false,\n        value: stacktrace\n      });\n    }\n  }\n\n  if (typeof Object.setPrototypeOf === 'function') {\n    Object.setPrototypeOf(JisonLexerError.prototype, Error.prototype);\n  } else {\n    JisonLexerError.prototype = Object.create(Error.prototype);\n  }\n\n  JisonLexerError.prototype.constructor = JisonLexerError;\n  JisonLexerError.prototype.name = 'JisonLexerError';\n\n  var lexer = {\n    \n// Code Generator Information Report\n// ---------------------------------\n//\n// Options:\n//\n//   backtracking: .................... false\n//   location.ranges: ................. false\n//   location line+column tracking: ... true\n//\n//\n// Forwarded Parser Analysis flags:\n//\n//   uses yyleng: ..................... false\n//   uses yylineno: ................... false\n//   uses yytext: ..................... false\n//   uses yylloc: ..................... false\n//   uses lexer values: ............... true / true\n//   location tracking: ............... false\n//   location assignment: ............. false\n//\n//\n// Lexer Analysis flags:\n//\n//   uses yyleng: ..................... ???\n//   uses yylineno: ................... ???\n//   uses yytext: ..................... ???\n//   uses yylloc: ..................... ???\n//   uses ParseError API: ............. ???\n//   uses yyerror: .................... ???\n//   uses location tracking & editing:  ???\n//   uses more() API: ................. ???\n//   uses unput() API: ................ ???\n//   uses reject() API: ............... ???\n//   uses less() API: ................. ???\n//   uses display APIs pastInput(), upcomingInput(), showPosition():\n//        ............................. ???\n//   uses describeYYLLOC() API: ....... ???\n//\n// --------- END OF REPORT -----------\n\nEOF: 1,\n    ERROR: 2,\n\n    // JisonLexerError: JisonLexerError,        /// <-- injected by the code generator\n\n    // options: {},                             /// <-- injected by the code generator\n\n    // yy: ...,                                 /// <-- injected by setInput()\n\n    __currentRuleSet__: null,                   /// INTERNAL USE ONLY: internal rule set cache for the current lexer state  \n\n    __error_infos: [],                          /// INTERNAL USE ONLY: the set of lexErrorInfo objects created since the last cleanup  \n    __decompressed: false,                      /// INTERNAL USE ONLY: mark whether the lexer instance has been 'unfolded' completely and is now ready for use  \n    done: false,                                /// INTERNAL USE ONLY  \n    _backtrack: false,                          /// INTERNAL USE ONLY  \n    _input: '',                                 /// INTERNAL USE ONLY  \n    _more: false,                               /// INTERNAL USE ONLY  \n    _signaled_error_token: false,               /// INTERNAL USE ONLY  \n    conditionStack: [],                         /// INTERNAL USE ONLY; managed via `pushState()`, `popState()`, `topState()` and `stateStackSize()`  \n    match: '',                                  /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: tracks input which has been matched so far for the lexer token under construction. `match` is identical to `yytext` except that this one still contains the matched input string after `lexer.performAction()` has been invoked, where userland code MAY have changed/replaced the `yytext` value entirely!  \n    matched: '',                                /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: tracks entire input which has been matched so far  \n    matches: false,                             /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: tracks RE match result for last (successful) match attempt  \n    yytext: '',                                 /// ADVANCED USE ONLY: tracks input which has been matched so far for the lexer token under construction; this value is transferred to the parser as the 'token value' when the parser consumes the lexer token produced through a call to the `lex()` API.  \n    offset: 0,                                  /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: tracks the 'cursor position' in the input string, i.e. the number of characters matched so far  \n    yyleng: 0,                                  /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: length of matched input for the token under construction (`yytext`)  \n    yylineno: 0,                                /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: 'line number' at which the token under construction is located  \n    yylloc: null,                               /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: tracks location info (lines + columns) for the token under construction  \n\n    /**\n     * INTERNAL USE: construct a suitable error info hash object instance for `parseError`.\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    constructLexErrorInfo: function lexer_constructLexErrorInfo(msg, recoverable, show_input_position) {\n      msg = '' + msg;\n\n      // heuristic to determine if the error message already contains a (partial) source code dump\n      // as produced by either `showPosition()` or `prettyPrintRange()`:\n      if (show_input_position == undefined) {\n        show_input_position = !(msg.indexOf('\\n') > 0 && msg.indexOf('^') > 0);\n      }\n\n      if (this.yylloc && show_input_position) {\n        if (typeof this.prettyPrintRange === 'function') {\n          var pretty_src = this.prettyPrintRange(this.yylloc);\n\n          if (!/\\n\\s*$/.test(msg)) {\n            msg += '\\n';\n          }\n\n          msg += '\\n  Erroneous area:\\n' + this.prettyPrintRange(this.yylloc);\n        } else if (typeof this.showPosition === 'function') {\n          var pos_str = this.showPosition();\n\n          if (pos_str) {\n            if (msg.length && msg[msg.length - 1] !== '\\n' && pos_str[0] !== '\\n') {\n              msg += '\\n' + pos_str;\n            } else {\n              msg += pos_str;\n            }\n          }\n        }\n      }\n\n      /** @constructor */\n      var pei = {\n        errStr: msg,\n        recoverable: !!recoverable,\n        text: this.match,           // This one MAY be empty; userland code should use the `upcomingInput` API to obtain more text which follows the 'lexer cursor position'...  \n        token: null,\n        line: this.yylineno,\n        loc: this.yylloc,\n        yy: this.yy,\n        lexer: this,\n\n        /**\n         * and make sure the error info doesn't stay due to potential\n         * ref cycle via userland code manipulations.\n         * These would otherwise all be memory leak opportunities!\n         * \n         * Note that only array and object references are nuked as those\n         * constitute the set of elements which can produce a cyclic ref.\n         * The rest of the members is kept intact as they are harmless.\n         * \n         * @public\n         * @this {LexErrorInfo}\n         */\n        destroy: function destructLexErrorInfo() {\n          // remove cyclic references added to error info:\n          // info.yy = null;\n          // info.lexer = null;\n          // ...\n          var rec = !!this.recoverable;\n\n          for (var key in this) {\n            if (this.hasOwnProperty(key) && typeof key === 'object') {\n              this[key] = undefined;\n            }\n          }\n\n          this.recoverable = rec;\n        }\n      };\n\n      // track this instance so we can `destroy()` it once we deem it superfluous and ready for garbage collection!\n      this.__error_infos.push(pei);\n\n      return pei;\n    },\n\n    /**\n     * handler which is invoked when a lexer error occurs.\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    parseError: function lexer_parseError(str, hash, ExceptionClass) {\n      if (!ExceptionClass) {\n        ExceptionClass = this.JisonLexerError;\n      }\n\n      if (this.yy) {\n        if (this.yy.parser && typeof this.yy.parser.parseError === 'function') {\n          return this.yy.parser.parseError.call(this, str, hash, ExceptionClass) || this.ERROR;\n        } else if (typeof this.yy.parseError === 'function') {\n          return this.yy.parseError.call(this, str, hash, ExceptionClass) || this.ERROR;\n        }\n      }\n\n      throw new ExceptionClass(str, hash);\n    },\n\n    /**\n     * method which implements `yyerror(str, ...args)` functionality for use inside lexer actions.\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    yyerror: function yyError(str /*, ...args */) {\n      var lineno_msg = '';\n\n      if (this.yylloc) {\n        lineno_msg = ' on line ' + (this.yylineno + 1);\n      }\n\n      var p = this.constructLexErrorInfo(\n        'Lexical error' + lineno_msg + ': ' + str,\n        this.options.lexerErrorsAreRecoverable\n      );\n\n      // Add any extra args to the hash under the name `extra_error_attributes`:\n      var args = Array.prototype.slice.call(arguments, 1);\n\n      if (args.length) {\n        p.extra_error_attributes = args;\n      }\n\n      return this.parseError(p.errStr, p, this.JisonLexerError) || this.ERROR;\n    },\n\n    /**\n     * final cleanup function for when we have completed lexing the input;\n     * make it an API so that external code can use this one once userland\n     * code has decided it's time to destroy any lingering lexer error\n     * hash object instances and the like: this function helps to clean\n     * up these constructs, which *may* carry cyclic references which would\n     * otherwise prevent the instances from being properly and timely\n     * garbage-collected, i.e. this function helps prevent memory leaks!\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    cleanupAfterLex: function lexer_cleanupAfterLex(do_not_nuke_errorinfos) {\n      // prevent lingering circular references from causing memory leaks:\n      this.setInput('', {});\n\n      // nuke the error hash info instances created during this run.\n      // Userland code must COPY any data/references\n      // in the error hash instance(s) it is more permanently interested in.\n      if (!do_not_nuke_errorinfos) {\n        for (var i = this.__error_infos.length - 1; i >= 0; i--) {\n          var el = this.__error_infos[i];\n\n          if (el && typeof el.destroy === 'function') {\n            el.destroy();\n          }\n        }\n\n        this.__error_infos.length = 0;\n      }\n\n      return this;\n    },\n\n    /**\n     * clear the lexer token context; intended for internal use only\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    clear: function lexer_clear() {\n      this.yytext = '';\n      this.yyleng = 0;\n      this.match = '';\n\n      // - DO NOT reset `this.matched`\n      this.matches = false;\n\n      this._more = false;\n      this._backtrack = false;\n      var col = (this.yylloc ? this.yylloc.last_column : 0);\n\n      this.yylloc = {\n        first_line: this.yylineno + 1,\n        first_column: col,\n        last_line: this.yylineno + 1,\n        last_column: col,\n        range: [this.offset, this.offset]\n      };\n    },\n\n    /**\n     * resets the lexer, sets new input\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    setInput: function lexer_setInput(input, yy) {\n      this.yy = yy || this.yy || {};\n\n      // also check if we've fully initialized the lexer instance,\n      // including expansion work to be done to go from a loaded\n      // lexer to a usable lexer:\n      if (!this.__decompressed) {\n        // step 1: decompress the regex list:\n        var rules = this.rules;\n\n        for (var i = 0, len = rules.length; i < len; i++) {\n          var rule_re = rules[i];\n\n          // compression: is the RE an xref to another RE slot in the rules[] table?\n          if (typeof rule_re === 'number') {\n            rules[i] = rules[rule_re];\n          }\n        }\n\n        // step 2: unfold the conditions[] set to make these ready for use:\n        var conditions = this.conditions;\n\n        for (var k in conditions) {\n          var spec = conditions[k];\n          var rule_ids = spec.rules;\n          var len = rule_ids.length;\n          var rule_regexes = new Array(len + 1);             // slot 0 is unused; we use a 1-based index approach here to keep the hottest code in `lexer_next()` fast and simple! \n          var rule_new_ids = new Array(len + 1);\n\n          for (var i = 0; i < len; i++) {\n            var idx = rule_ids[i];\n            var rule_re = rules[idx];\n            rule_regexes[i + 1] = rule_re;\n            rule_new_ids[i + 1] = idx;\n          }\n\n          spec.rules = rule_new_ids;\n          spec.__rule_regexes = rule_regexes;\n          spec.__rule_count = len;\n        }\n\n        this.__decompressed = true;\n      }\n\n      this._input = input || '';\n      this.clear();\n      this._signaled_error_token = false;\n      this.done = false;\n      this.yylineno = 0;\n      this.matched = '';\n      this.conditionStack = ['INITIAL'];\n      this.__currentRuleSet__ = null;\n\n      this.yylloc = {\n        first_line: 1,\n        first_column: 0,\n        last_line: 1,\n        last_column: 0,\n        range: [0, 0]\n      };\n\n      this.offset = 0;\n      return this;\n    },\n\n    /**\n     * edit the remaining input via user-specified callback.\n     * This can be used to forward-adjust the input-to-parse, \n     * e.g. inserting macro expansions and alike in the\n     * input which has yet to be lexed.\n     * The behaviour of this API contrasts the `unput()` et al\n     * APIs as those act on the *consumed* input, while this\n     * one allows one to manipulate the future, without impacting\n     * the current `yyloc` cursor location or any history. \n     * \n     * Use this API to help implement C-preprocessor-like\n     * `#include` statements, etc.\n     * \n     * The provided callback must be synchronous and is\n     * expected to return the edited input (string).\n     *\n     * The `cpsArg` argument value is passed to the callback\n     * as-is.\n     *\n     * `callback` interface: \n     * `function callback(input, cpsArg)`\n     * \n     * - `input` will carry the remaining-input-to-lex string\n     *   from the lexer.\n     * - `cpsArg` is `cpsArg` passed into this API.\n     * \n     * The `this` reference for the callback will be set to\n     * reference this lexer instance so that userland code\n     * in the callback can easily and quickly access any lexer\n     * API. \n     *\n     * When the callback returns a non-string-type falsey value,\n     * we assume the callback did not edit the input and we\n     * will using the input as-is.\n     *\n     * When the callback returns a non-string-type value, it\n     * is converted to a string for lexing via the `\"\" + retval`\n     * operation. (See also why: http://2ality.com/2012/03/converting-to-string.html \n     * -- that way any returned object's `toValue()` and `toString()`\n     * methods will be invoked in a proper/desirable order.)\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    editRemainingInput: function lexer_editRemainingInput(callback, cpsArg) {\n      var rv = callback.call(this, this._input, cpsArg);\n\n      if (typeof rv !== 'string') {\n        if (rv) {\n          this._input = '' + rv;\n        } \n        // else: keep `this._input` as is.  \n      } else {\n        this._input = rv;\n      }\n\n      return this;\n    },\n\n    /**\n     * consumes and returns one char from the input\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    input: function lexer_input() {\n      if (!this._input) {\n        //this.done = true;    -- don't set `done` as we want the lex()/next() API to be able to produce one custom EOF token match after this anyhow. (lexer can match special <<EOF>> tokens and perform user action code for a <<EOF>> match, but only does so *once*)\n        return null;\n      }\n\n      var ch = this._input[0];\n      this.yytext += ch;\n      this.yyleng++;\n      this.offset++;\n      this.match += ch;\n      this.matched += ch;\n\n      // Count the linenumber up when we hit the LF (or a stand-alone CR).\n      // On CRLF, the linenumber is incremented when you fetch the CR or the CRLF combo\n      // and we advance immediately past the LF as well, returning both together as if\n      // it was all a single 'character' only.\n      var slice_len = 1;\n\n      var lines = false;\n\n      if (ch === '\\n') {\n        lines = true;\n      } else if (ch === '\\r') {\n        lines = true;\n        var ch2 = this._input[1];\n\n        if (ch2 === '\\n') {\n          slice_len++;\n          ch += ch2;\n          this.yytext += ch2;\n          this.yyleng++;\n          this.offset++;\n          this.match += ch2;\n          this.matched += ch2;\n          this.yylloc.range[1]++;\n        }\n      }\n\n      if (lines) {\n        this.yylineno++;\n        this.yylloc.last_line++;\n        this.yylloc.last_column = 0;\n      } else {\n        this.yylloc.last_column++;\n      }\n\n      this.yylloc.range[1]++;\n      this._input = this._input.slice(slice_len);\n      return ch;\n    },\n\n    /**\n     * unshifts one char (or an entire string) into the input\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    unput: function lexer_unput(ch) {\n      var len = ch.length;\n      var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n      this._input = ch + this._input;\n      this.yytext = this.yytext.substr(0, this.yytext.length - len);\n      this.yyleng = this.yytext.length;\n      this.offset -= len;\n      this.match = this.match.substr(0, this.match.length - len);\n      this.matched = this.matched.substr(0, this.matched.length - len);\n\n      if (lines.length > 1) {\n        this.yylineno -= lines.length - 1;\n        this.yylloc.last_line = this.yylineno + 1;\n\n        // Get last entirely matched line into the `pre_lines[]` array's\n        // last index slot; we don't mind when other previously \n        // matched lines end up in the array too. \n        var pre = this.match;\n\n        var pre_lines = pre.split(/(?:\\r\\n?|\\n)/g);\n\n        if (pre_lines.length === 1) {\n          pre = this.matched;\n          pre_lines = pre.split(/(?:\\r\\n?|\\n)/g);\n        }\n\n        this.yylloc.last_column = pre_lines[pre_lines.length - 1].length;\n      } else {\n        this.yylloc.last_column -= len;\n      }\n\n      this.yylloc.range[1] = this.yylloc.range[0] + this.yyleng;\n      this.done = false;\n      return this;\n    },\n\n    /**\n     * cache matched text and append it on next action\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    more: function lexer_more() {\n      this._more = true;\n      return this;\n    },\n\n    /**\n     * signal the lexer that this rule fails to match the input, so the\n     * next matching rule (regex) should be tested instead.\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    reject: function lexer_reject() {\n      if (this.options.backtrack_lexer) {\n        this._backtrack = true;\n      } else {\n        // when the `parseError()` call returns, we MUST ensure that the error is registered.\n        // We accomplish this by signaling an 'error' token to be produced for the current\n        // `.lex()` run.\n        var lineno_msg = '';\n\n        if (this.yylloc) {\n          lineno_msg = ' on line ' + (this.yylineno + 1);\n        }\n\n        var p = this.constructLexErrorInfo(\n          'Lexical error' + lineno_msg + ': You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).',\n          false\n        );\n\n        this._signaled_error_token = this.parseError(p.errStr, p, this.JisonLexerError) || this.ERROR;\n      }\n\n      return this;\n    },\n\n    /**\n     * retain first n characters of the match\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    less: function lexer_less(n) {\n      return this.unput(this.match.slice(n));\n    },\n\n    /**\n     * return (part of the) already matched input, i.e. for error\n     * messages.\n     * \n     * Limit the returned string length to `maxSize` (default: 20).\n     * \n     * Limit the returned string to the `maxLines` number of lines of\n     * input (default: 1).\n     * \n     * Negative limit values equal *unlimited*.\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    pastInput: function lexer_pastInput(maxSize, maxLines) {\n      var past = this.matched.substring(0, this.matched.length - this.match.length);\n\n      if (maxSize < 0)\n        maxSize = past.length;\n      else if (!maxSize)\n        maxSize = 20;\n\n      if (maxLines < 0)\n        maxLines = past.length;          // can't ever have more input lines than this! \n      else if (!maxLines)\n        maxLines = 1;\n\n      // `substr` anticipation: treat \\r\\n as a single character and take a little\n      // more than necessary so that we can still properly check against maxSize\n      // after we've transformed and limited the newLines in here:\n      past = past.substr(-maxSize * 2 - 2);\n\n      // now that we have a significantly reduced string to process, transform the newlines\n      // and chop them, then limit them:\n      var a = past.replace(/\\r\\n|\\r/g, '\\n').split('\\n');\n\n      a = a.slice(-maxLines);\n      past = a.join('\\n');\n\n      // When, after limiting to maxLines, we still have too much to return,\n      // do add an ellipsis prefix...\n      if (past.length > maxSize) {\n        past = '...' + past.substr(-maxSize);\n      }\n\n      return past;\n    },\n\n    /**\n     * return (part of the) upcoming input, i.e. for error messages.\n     * \n     * Limit the returned string length to `maxSize` (default: 20).\n     * \n     * Limit the returned string to the `maxLines` number of lines of input (default: 1).\n     * \n     * Negative limit values equal *unlimited*.\n     *\n     * > ### NOTE ###\n     * >\n     * > *\"upcoming input\"* is defined as the whole of the both\n     * > the *currently lexed* input, together with any remaining input\n     * > following that. *\"currently lexed\"* input is the input \n     * > already recognized by the lexer but not yet returned with\n     * > the lexer token. This happens when you are invoking this API\n     * > from inside any lexer rule action code block. \n     * >\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    upcomingInput: function lexer_upcomingInput(maxSize, maxLines) {\n      var next = this.match;\n\n      if (maxSize < 0)\n        maxSize = next.length + this._input.length;\n      else if (!maxSize)\n        maxSize = 20;\n\n      if (maxLines < 0)\n        maxLines = maxSize;          // can't ever have more input lines than this! \n      else if (!maxLines)\n        maxLines = 1;\n\n      // `substring` anticipation: treat \\r\\n as a single character and take a little\n      // more than necessary so that we can still properly check against maxSize\n      // after we've transformed and limited the newLines in here:\n      if (next.length < maxSize * 2 + 2) {\n        next += this._input.substring(0, maxSize * 2 + 2);   // substring is faster on Chrome/V8 \n      }\n\n      // now that we have a significantly reduced string to process, transform the newlines\n      // and chop them, then limit them:\n      var a = next.replace(/\\r\\n|\\r/g, '\\n').split('\\n');\n\n      a = a.slice(0, maxLines);\n      next = a.join('\\n');\n\n      // When, after limiting to maxLines, we still have too much to return,\n      // do add an ellipsis postfix...\n      if (next.length > maxSize) {\n        next = next.substring(0, maxSize) + '...';\n      }\n\n      return next;\n    },\n\n    /**\n     * return a string which displays the character position where the\n     * lexing error occurred, i.e. for error messages\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    showPosition: function lexer_showPosition(maxPrefix, maxPostfix) {\n      var pre = this.pastInput(maxPrefix).replace(/\\s/g, ' ');\n      var c = new Array(pre.length + 1).join('-');\n      return pre + this.upcomingInput(maxPostfix).replace(/\\s/g, ' ') + '\\n' + c + '^';\n    },\n\n    /**\n     * return an YYLLOC info object derived off the given context (actual, preceding, following, current).\n     * Use this method when the given `actual` location is not guaranteed to exist (i.e. when\n     * it MAY be NULL) and you MUST have a valid location info object anyway:\n     * then we take the given context of the `preceding` and `following` locations, IFF those are available,\n     * and reconstruct the `actual` location info from those.\n     * If this fails, the heuristic is to take the `current` location, IFF available.\n     * If this fails as well, we assume the sought location is at/around the current lexer position\n     * and then produce that one as a response. DO NOTE that these heuristic/derived location info\n     * values MAY be inaccurate!\n     *\n     * NOTE: `deriveLocationInfo()` ALWAYS produces a location info object *copy* of `actual`, not just\n     * a *reference* hence all input location objects can be assumed to be 'constant' (function has no side-effects).\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    deriveLocationInfo: function lexer_deriveYYLLOC(actual, preceding, following, current) {\n      var loc = {\n        first_line: 1,\n        first_column: 0,\n        last_line: 1,\n        last_column: 0,\n        range: [0, 0]\n      };\n\n      if (actual) {\n        loc.first_line = actual.first_line | 0;\n        loc.last_line = actual.last_line | 0;\n        loc.first_column = actual.first_column | 0;\n        loc.last_column = actual.last_column | 0;\n\n        if (actual.range) {\n          loc.range[0] = actual.range[0] | 0;\n          loc.range[1] = actual.range[1] | 0;\n        }\n      }\n\n      if (loc.first_line <= 0 || loc.last_line < loc.first_line) {\n        // plan B: heuristic using preceding and following:\n        if (loc.first_line <= 0 && preceding) {\n          loc.first_line = preceding.last_line | 0;\n          loc.first_column = preceding.last_column | 0;\n\n          if (preceding.range) {\n            loc.range[0] = actual.range[1] | 0;\n          }\n        }\n\n        if ((loc.last_line <= 0 || loc.last_line < loc.first_line) && following) {\n          loc.last_line = following.first_line | 0;\n          loc.last_column = following.first_column | 0;\n\n          if (following.range) {\n            loc.range[1] = actual.range[0] | 0;\n          }\n        }\n\n        // plan C?: see if the 'current' location is useful/sane too:\n        if (loc.first_line <= 0 && current && (loc.last_line <= 0 || current.last_line <= loc.last_line)) {\n          loc.first_line = current.first_line | 0;\n          loc.first_column = current.first_column | 0;\n\n          if (current.range) {\n            loc.range[0] = current.range[0] | 0;\n          }\n        }\n\n        if (loc.last_line <= 0 && current && (loc.first_line <= 0 || current.first_line >= loc.first_line)) {\n          loc.last_line = current.last_line | 0;\n          loc.last_column = current.last_column | 0;\n\n          if (current.range) {\n            loc.range[1] = current.range[1] | 0;\n          }\n        }\n      }\n\n      // sanitize: fix last_line BEFORE we fix first_line as we use the 'raw' value of the latter\n      // or plan D heuristics to produce a 'sensible' last_line value:\n      if (loc.last_line <= 0) {\n        if (loc.first_line <= 0) {\n          loc.first_line = this.yylloc.first_line;\n          loc.last_line = this.yylloc.last_line;\n          loc.first_column = this.yylloc.first_column;\n          loc.last_column = this.yylloc.last_column;\n          loc.range[0] = this.yylloc.range[0];\n          loc.range[1] = this.yylloc.range[1];\n        } else {\n          loc.last_line = this.yylloc.last_line;\n          loc.last_column = this.yylloc.last_column;\n          loc.range[1] = this.yylloc.range[1];\n        }\n      }\n\n      if (loc.first_line <= 0) {\n        loc.first_line = loc.last_line;\n        loc.first_column = 0;  // loc.last_column; \n        loc.range[1] = loc.range[0];\n      }\n\n      if (loc.first_column < 0) {\n        loc.first_column = 0;\n      }\n\n      if (loc.last_column < 0) {\n        loc.last_column = (loc.first_column > 0 ? loc.first_column : 80);\n      }\n\n      return loc;\n    },\n\n    /**\n     * return a string which displays the lines & columns of input which are referenced \n     * by the given location info range, plus a few lines of context.\n     * \n     * This function pretty-prints the indicated section of the input, with line numbers \n     * and everything!\n     * \n     * This function is very useful to provide highly readable error reports, while\n     * the location range may be specified in various flexible ways:\n     * \n     * - `loc` is the location info object which references the area which should be\n     *   displayed and 'marked up': these lines & columns of text are marked up by `^`\n     *   characters below each character in the entire input range.\n     * \n     * - `context_loc` is the *optional* location info object which instructs this\n     *   pretty-printer how much *leading* context should be displayed alongside\n     *   the area referenced by `loc`. This can help provide context for the displayed\n     *   error, etc.\n     * \n     *   When this location info is not provided, a default context of 3 lines is\n     *   used.\n     * \n     * - `context_loc2` is another *optional* location info object, which serves\n     *   a similar purpose to `context_loc`: it specifies the amount of *trailing*\n     *   context lines to display in the pretty-print output.\n     * \n     *   When this location info is not provided, a default context of 1 line only is\n     *   used.\n     * \n     * Special Notes:\n     * \n     * - when the `loc`-indicated range is very large (about 5 lines or more), then\n     *   only the first and last few lines of this block are printed while a\n     *   `...continued...` message will be printed between them.\n     * \n     *   This serves the purpose of not printing a huge amount of text when the `loc`\n     *   range happens to be huge: this way a manageable & readable output results\n     *   for arbitrary large ranges.\n     * \n     * - this function can display lines of input which whave not yet been lexed.\n     *   `prettyPrintRange()` can access the entire input!\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    prettyPrintRange: function lexer_prettyPrintRange(loc, context_loc, context_loc2) {\n      loc = this.deriveLocationInfo(loc, context_loc, context_loc2);\n      const CONTEXT = 3;\n      const CONTEXT_TAIL = 1;\n      const MINIMUM_VISIBLE_NONEMPTY_LINE_COUNT = 2;\n      var input = this.matched + this._input;\n      var lines = input.split('\\n');\n      var l0 = Math.max(1, (context_loc ? context_loc.first_line : loc.first_line - CONTEXT));\n      var l1 = Math.max(1, (context_loc2 ? context_loc2.last_line : loc.last_line + CONTEXT_TAIL));\n      var lineno_display_width = 1 + Math.log10(l1 | 1) | 0;\n      var ws_prefix = new Array(lineno_display_width).join(' ');\n      var nonempty_line_indexes = [];\n\n      var rv = lines.slice(l0 - 1, l1 + 1).map(function injectLineNumber(line, index) {\n        var lno = index + l0;\n        var lno_pfx = (ws_prefix + lno).substr(-lineno_display_width);\n        var rv = lno_pfx + ': ' + line;\n        var errpfx = new Array(lineno_display_width + 1).join('^');\n        var offset = 2 + 1;\n        var len = 0;\n\n        if (lno === loc.first_line) {\n          offset += loc.first_column;\n\n          len = Math.max(\n            2,\n            ((lno === loc.last_line ? loc.last_column : line.length)) - loc.first_column + 1\n          );\n        } else if (lno === loc.last_line) {\n          len = Math.max(2, loc.last_column + 1);\n        } else if (lno > loc.first_line && lno < loc.last_line) {\n          len = Math.max(2, line.length + 1);\n        }\n\n        if (len) {\n          var lead = new Array(offset).join('.');\n          var mark = new Array(len).join('^');\n          rv += '\\n' + errpfx + lead + mark;\n\n          if (line.trim().length > 0) {\n            nonempty_line_indexes.push(index);\n          }\n        }\n\n        rv = rv.replace(/\\t/g, ' ');\n        return rv;\n      });\n\n      // now make sure we don't print an overly large amount of error area: limit it \n      // to the top and bottom line count:\n      if (nonempty_line_indexes.length > 2 * MINIMUM_VISIBLE_NONEMPTY_LINE_COUNT) {\n        var clip_start = nonempty_line_indexes[MINIMUM_VISIBLE_NONEMPTY_LINE_COUNT - 1] + 1;\n        var clip_end = nonempty_line_indexes[nonempty_line_indexes.length - MINIMUM_VISIBLE_NONEMPTY_LINE_COUNT] - 1;\n        var intermediate_line = new Array(lineno_display_width + 1).join(' ') + '  (...continued...)';\n        intermediate_line += '\\n' + new Array(lineno_display_width + 1).join('-') + '  (---------------)';\n        rv.splice(clip_start, clip_end - clip_start + 1, intermediate_line);\n      }\n\n      return rv.join('\\n');\n    },\n\n    /**\n     * helper function, used to produce a human readable description as a string, given\n     * the input `yylloc` location object.\n     * \n     * Set `display_range_too` to TRUE to include the string character index position(s)\n     * in the description if the `yylloc.range` is available.\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    describeYYLLOC: function lexer_describe_yylloc(yylloc, display_range_too) {\n      var l1 = yylloc.first_line;\n      var l2 = yylloc.last_line;\n      var c1 = yylloc.first_column;\n      var c2 = yylloc.last_column;\n      var dl = l2 - l1;\n      var dc = c2 - c1;\n      var rv;\n\n      if (dl === 0) {\n        rv = 'line ' + l1 + ', ';\n\n        if (dc <= 1) {\n          rv += 'column ' + c1;\n        } else {\n          rv += 'columns ' + c1 + ' .. ' + c2;\n        }\n      } else {\n        rv = 'lines ' + l1 + '(column ' + c1 + ') .. ' + l2 + '(column ' + c2 + ')';\n      }\n\n      if (yylloc.range && display_range_too) {\n        var r1 = yylloc.range[0];\n        var r2 = yylloc.range[1] - 1;\n\n        if (r2 <= r1) {\n          rv += ' {String Offset: ' + r1 + '}';\n        } else {\n          rv += ' {String Offset range: ' + r1 + ' .. ' + r2 + '}';\n        }\n      }\n\n      return rv;\n    },\n\n    /**\n     * test the lexed token: return FALSE when not a match, otherwise return token.\n     * \n     * `match` is supposed to be an array coming out of a regex match, i.e. `match[0]`\n     * contains the actually matched text string.\n     * \n     * Also move the input cursor forward and update the match collectors:\n     * \n     * - `yytext`\n     * - `yyleng`\n     * - `match`\n     * - `matches`\n     * - `yylloc`\n     * - `offset`\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    test_match: function lexer_test_match(match, indexed_rule) {\n      var token, lines, backup, match_str, match_str_len;\n\n      if (this.options.backtrack_lexer) {\n        // save context\n        backup = {\n          yylineno: this.yylineno,\n\n          yylloc: {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylloc.last_line,\n            first_column: this.yylloc.first_column,\n            last_column: this.yylloc.last_column,\n            range: this.yylloc.range.slice(0)\n          },\n\n          yytext: this.yytext,\n          match: this.match,\n          matches: this.matches,\n          matched: this.matched,\n          yyleng: this.yyleng,\n          offset: this.offset,\n          _more: this._more,\n          _input: this._input,\n\n          //_signaled_error_token: this._signaled_error_token,\n          yy: this.yy,\n\n          conditionStack: this.conditionStack.slice(0),\n          done: this.done\n        };\n      }\n\n      match_str = match[0];\n      match_str_len = match_str.length;\n\n      // if (match_str.indexOf('\\n') !== -1 || match_str.indexOf('\\r') !== -1) {\n      lines = match_str.split(/(?:\\r\\n?|\\n)/g);\n\n      if (lines.length > 1) {\n        this.yylineno += lines.length - 1;\n        this.yylloc.last_line = this.yylineno + 1;\n        this.yylloc.last_column = lines[lines.length - 1].length;\n      } else {\n        this.yylloc.last_column += match_str_len;\n      }\n\n      // }\n      this.yytext += match_str;\n\n      this.match += match_str;\n      this.matched += match_str;\n      this.matches = match;\n      this.yyleng = this.yytext.length;\n      this.yylloc.range[1] += match_str_len;\n\n      // previous lex rules MAY have invoked the `more()` API rather than producing a token:\n      // those rules will already have moved this `offset` forward matching their match lengths,\n      // hence we must only add our own match length now:\n      this.offset += match_str_len;\n\n      this._more = false;\n      this._backtrack = false;\n      this._input = this._input.slice(match_str_len);\n\n      // calling this method:\n      //\n      //   function lexer__performAction(yy, yyrulenumber, YY_START) {...}\n      token = this.performAction.call(\n        this,\n        this.yy,\n        indexed_rule,\n        this.conditionStack[this.conditionStack.length - 1] /* = YY_START */\n      );\n\n      // otherwise, when the action codes are all simple return token statements:\n      //token = this.simpleCaseActionClusters[indexed_rule];\n\n      if (this.done && this._input) {\n        this.done = false;\n      }\n\n      if (token) {\n        return token;\n      } else if (this._backtrack) {\n        // recover context\n        for (var k in backup) {\n          this[k] = backup[k];\n        }\n\n        this.__currentRuleSet__ = null;\n        return false;  // rule action called reject() implying the next rule should be tested instead. \n      } else if (this._signaled_error_token) {\n        // produce one 'error' token as `.parseError()` in `reject()`\n        // did not guarantee a failure signal by throwing an exception!\n        token = this._signaled_error_token;\n\n        this._signaled_error_token = false;\n        return token;\n      }\n\n      return false;\n    },\n\n    /**\n     * return next match in input\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    next: function lexer_next() {\n      if (this.done) {\n        this.clear();\n        return this.EOF;\n      }\n\n      if (!this._input) {\n        this.done = true;\n      }\n\n      var token, match, tempMatch, index;\n\n      if (!this._more) {\n        this.clear();\n      }\n\n      var spec = this.__currentRuleSet__;\n\n      if (!spec) {\n        // Update the ruleset cache as we apparently encountered a state change or just started lexing.\n        // The cache is set up for fast lookup -- we assume a lexer will switch states much less often than it will\n        // invoke the `lex()` token-producing API and related APIs, hence caching the set for direct access helps\n        // speed up those activities a tiny bit.\n        spec = this.__currentRuleSet__ = this._currentRules();\n\n        // Check whether a *sane* condition has been pushed before: this makes the lexer robust against\n        // user-programmer bugs such as https://github.com/zaach/jison-lex/issues/19\n        if (!spec || !spec.rules) {\n          var lineno_msg = '';\n\n          if (this.options.trackPosition) {\n            lineno_msg = ' on line ' + (this.yylineno + 1);\n          }\n\n          var p = this.constructLexErrorInfo(\n            'Internal lexer engine error' + lineno_msg + ': The lex grammar programmer pushed a non-existing condition name \"' + this.topState() + '\"; this is a fatal error and should be reported to the application programmer team!',\n            false\n          );\n\n          // produce one 'error' token until this situation has been resolved, most probably by parse termination!\n          return this.parseError(p.errStr, p, this.JisonLexerError) || this.ERROR;\n        }\n      }\n\n      var rule_ids = spec.rules;\n      var regexes = spec.__rule_regexes;\n      var len = spec.__rule_count;\n\n      // Note: the arrays are 1-based, while `len` itself is a valid index,\n      // hence the non-standard less-or-equal check in the next loop condition!\n      for (var i = 1; i <= len; i++) {\n        tempMatch = this._input.match(regexes[i]);\n\n        if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n          match = tempMatch;\n          index = i;\n\n          if (this.options.backtrack_lexer) {\n            token = this.test_match(tempMatch, rule_ids[i]);\n\n            if (token !== false) {\n              return token;\n            } else if (this._backtrack) {\n              match = undefined;\n              continue;  // rule action called reject() implying a rule MISmatch. \n            } else {\n              // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n              return false;\n            }\n          } else if (!this.options.flex) {\n            break;\n          }\n        }\n      }\n\n      if (match) {\n        token = this.test_match(match, rule_ids[index]);\n\n        if (token !== false) {\n          return token;\n        }\n\n        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n        return false;\n      }\n\n      if (!this._input) {\n        this.done = true;\n        this.clear();\n        return this.EOF;\n      } else {\n        var lineno_msg = '';\n\n        if (this.options.trackPosition) {\n          lineno_msg = ' on line ' + (this.yylineno + 1);\n        }\n\n        var p = this.constructLexErrorInfo(\n          'Lexical error' + lineno_msg + ': Unrecognized text.',\n          this.options.lexerErrorsAreRecoverable\n        );\n\n        var pendingInput = this._input;\n        var activeCondition = this.topState();\n        var conditionStackDepth = this.conditionStack.length;\n        token = this.parseError(p.errStr, p, this.JisonLexerError) || this.ERROR;\n\n        if (token === this.ERROR) {\n          // we can try to recover from a lexer error that `parseError()` did not 'recover' for us\n          // by moving forward at least one character at a time IFF the (user-specified?) `parseError()`\n          // has not consumed/modified any pending input or changed state in the error handler:\n          if (!this.matches && // and make sure the input has been modified/consumed ...\n          pendingInput === this._input && // ...or the lexer state has been modified significantly enough\n          // to merit a non-consuming error handling action right now.\n          activeCondition === this.topState() && conditionStackDepth === this.conditionStack.length) {\n            this.input();\n          }\n        }\n\n        return token;\n      }\n    },\n\n    /**\n     * return next match that has a token\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    lex: function lexer_lex() {\n      var r;\n\n      // allow the PRE/POST handlers set/modify the return token for maximum flexibility of the generated lexer:\n      if (typeof this.pre_lex === 'function') {\n        r = this.pre_lex.call(this, 0);\n      }\n\n      if (typeof this.options.pre_lex === 'function') {\n        // (also account for a userdef function which does not return any value: keep the token as is)\n        r = this.options.pre_lex.call(this, r) || r;\n      }\n\n      if (this.yy && typeof this.yy.pre_lex === 'function') {\n        // (also account for a userdef function which does not return any value: keep the token as is)\n        r = this.yy.pre_lex.call(this, r) || r;\n      }\n\n      while (!r) {\n        r = this.next();\n      }\n\n      if (this.yy && typeof this.yy.post_lex === 'function') {\n        // (also account for a userdef function which does not return any value: keep the token as is)\n        r = this.yy.post_lex.call(this, r) || r;\n      }\n\n      if (typeof this.options.post_lex === 'function') {\n        // (also account for a userdef function which does not return any value: keep the token as is)\n        r = this.options.post_lex.call(this, r) || r;\n      }\n\n      if (typeof this.post_lex === 'function') {\n        // (also account for a userdef function which does not return any value: keep the token as is)\n        r = this.post_lex.call(this, r) || r;\n      }\n\n      return r;\n    },\n\n    /**\n     * return next match that has a token. Identical to the `lex()` API but does not invoke any of the \n     * `pre_lex()` nor any of the `post_lex()` callbacks.\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    fastLex: function lexer_fastLex() {\n      var r;\n\n      while (!r) {\n        r = this.next();\n      }\n\n      return r;\n    },\n\n    /**\n     * return info about the lexer state that can help a parser or other lexer API user to use the\n     * most efficient means available. This API is provided to aid run-time performance for larger\n     * systems which employ this lexer.\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    canIUse: function lexer_canIUse() {\n      var rv = {\n        fastLex: !(typeof this.pre_lex === 'function' || typeof this.options.pre_lex === 'function' || this.yy && typeof this.yy.pre_lex === 'function' || this.yy && typeof this.yy.post_lex === 'function' || typeof this.options.post_lex === 'function' || typeof this.post_lex === 'function') && typeof this.fastLex === 'function'\n      };\n\n      return rv;\n    },\n\n    /**\n     * backwards compatible alias for `pushState()`;\n     * the latter is symmetrical with `popState()` and we advise to use\n     * those APIs in any modern lexer code, rather than `begin()`.\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    begin: function lexer_begin(condition) {\n      return this.pushState(condition);\n    },\n\n    /**\n     * activates a new lexer condition state (pushes the new lexer\n     * condition state onto the condition stack)\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    pushState: function lexer_pushState(condition) {\n      this.conditionStack.push(condition);\n      this.__currentRuleSet__ = null;\n      return this;\n    },\n\n    /**\n     * pop the previously active lexer condition state off the condition\n     * stack\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    popState: function lexer_popState() {\n      var n = this.conditionStack.length - 1;\n\n      if (n > 0) {\n        this.__currentRuleSet__ = null;\n        return this.conditionStack.pop();\n      } else {\n        return this.conditionStack[0];\n      }\n    },\n\n    /**\n     * return the currently active lexer condition state; when an index\n     * argument is provided it produces the N-th previous condition state,\n     * if available\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    topState: function lexer_topState(n) {\n      n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\n      if (n >= 0) {\n        return this.conditionStack[n];\n      } else {\n        return 'INITIAL';\n      }\n    },\n\n    /**\n     * (internal) determine the lexer rule set which is active for the\n     * currently active lexer condition state\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    _currentRules: function lexer__currentRules() {\n      if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n        return this.conditions[this.conditionStack[this.conditionStack.length - 1]];\n      } else {\n        return this.conditions['INITIAL'];\n      }\n    },\n\n    /**\n     * return the number of states currently on the stack\n     * \n     * @public\n     * @this {RegExpLexer}\n     */\n    stateStackSize: function lexer_stateStackSize() {\n      return this.conditionStack.length;\n    },\n\n    options: {\n      trackPosition: true\n    },\n\n    JisonLexerError: JisonLexerError,\n\n    performAction: function lexer__performAction(yy, yyrulenumber, YY_START) {\n      var yy_ = this;\n      var YYSTATE = YY_START;\n\n      switch (yyrulenumber) {\n      case 2:\n        /*! Conditions:: QUANTITY */\n        /*! Rule::       \\} */\n        {\n          this.popState();\n          return 8;\n        }\n\n        break;\n\n      case 3:\n        /*! Conditions:: INITIAL CHARCLASS */\n        /*! Rule::       \\[\\^ */\n        this.begin('CHARCLASS');\n\n        return 18;\n        break;\n\n      case 4:\n        /*! Conditions:: INITIAL CHARCLASS */\n        /*! Rule::       \\[ */\n        this.begin('CHARCLASS');\n\n        return 13;\n        break;\n\n      case 10:\n        /*! Conditions:: CHARCLASS */\n        /*! Rule::       \\] */\n        this.popState();\n\n        return 12;\n        break;\n\n      case 17:\n        /*! Conditions:: INITIAL */\n        /*! Rule::       \\{ */\n        this.begin('QUANTITY');\n\n        return 7;\n        break;\n\n      default:\n        return this.simpleCaseActionClusters[yyrulenumber];\n      }\n    },\n\n    simpleCaseActionClusters: {\n      /*! Conditions:: QUANTITY */\n      /*! Rule::       [0-9] */\n      0: 15,\n\n      /*! Conditions:: QUANTITY */\n      /*! Rule::       , */\n      1: 9,\n\n      /*! Conditions:: INITIAL CHARCLASS */\n      /*! Rule::       \\\\[-nrt\\|.?*+(){}[\\]^] */\n      5: 22,\n\n      /*! Conditions:: INITIAL CHARCLASS */\n      /*! Rule::       \\\\[sSiIcCdDwW] */\n      6: 23,\n\n      /*! Conditions:: CHARCLASS */\n      /*! Rule::       -(?=\\[) */\n      7: 19,\n\n      /*! Conditions:: CHARCLASS */\n      /*! Rule::       - */\n      8: 14,\n\n      /*! Conditions:: CHARCLASS */\n      /*! Rule::       [^-[\\]] */\n      9: 20,\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       \\( */\n      11: 10,\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       \\| */\n      12: 3,\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       \\) */\n      13: 11,\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       \\* */\n      14: 5,\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       \\+ */\n      15: 6,\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       \\? */\n      16: 4,\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       \\} */\n      18: 8,\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       \\] */\n      19: 12,\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       \\^ */\n      20: '^',\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       \\\\p\\{.*?\\} */\n      21: 24,\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       \\\\P\\{.*?\\} */\n      22: 25,\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       \\. */\n      23: 17,\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       $ */\n      24: 1,\n\n      /*! Conditions:: INITIAL */\n      /*! Rule::       [^\\\\] */\n      25: 16\n    },\n\n    rules: [\n      /*  0: */  /^(?:\\d)/,\n      /*  1: */  /^(?:,)/,\n      /*  2: */  /^(?:\\})/,\n      /*  3: */  /^(?:\\[\\^)/,\n      /*  4: */  /^(?:\\[)/,\n      /*  5: */  /^(?:\\\\[-nrt\\|.?*+(){}[\\]^])/,\n      /*  6: */  /^(?:\\\\[sSiIcCdDwW])/,\n      /*  7: */  /^(?:-(?=\\[))/,\n      /*  8: */  /^(?:-)/,\n      /*  9: */  /^(?:[^-[\\]])/,\n      /* 10: */  /^(?:\\])/,\n      /* 11: */  /^(?:\\()/,\n      /* 12: */  /^(?:\\|)/,\n      /* 13: */  /^(?:\\))/,\n      /* 14: */  /^(?:\\*)/,\n      /* 15: */  /^(?:\\+)/,\n      /* 16: */  /^(?:\\?)/,\n      /* 17: */  /^(?:\\{)/,\n      /* 18: */  /^(?:\\})/,\n      /* 19: */  /^(?:\\])/,\n      /* 20: */  /^(?:\\^)/,\n      /* 21: */  /^(?:\\\\p\\{.*?\\})/,\n      /* 22: */  /^(?:\\\\P\\{.*?\\})/,\n      /* 23: */  /^(?:\\.)/,\n      /* 24: */  /^(?:$)/,\n      /* 25: */  /^(?:[^\\\\])/\n    ],\n\n    conditions: {\n      'QUANTITY': {\n        rules: [0, 1, 2],\n        inclusive: false\n      },\n\n      'CHARCLASS': {\n        rules: [3, 4, 5, 6, 7, 8, 9, 10],\n        inclusive: false\n      },\n\n      'INITIAL': {\n        rules: [3, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\n        inclusive: true\n      }\n    }\n  };\n\n  return lexer;\n}();\nparser.lexer = lexer;\n\nvar xmlcharacters = require(\"./xmlcharacters\");\nvar XRegExp = require(\"xregexp\");\n\n// We use the name ``Salve`` to help avoid potential\n// clashes. ``ParsingError`` seems too risky.\nfunction SalveParsingError(msg) {\n  // This is crap to work around the fact that Error is a terribly\n  // designed class or prototype or whatever. Unfortunately the\n  // stack trace contains an extra frame.\n  var err = new Error(msg);\n  this.name = \"SalveParsingError\";\n  this.stack = err.stack;\n  this.message = err.message;\n}\n\nSalveParsingError.prototype = new Error();\n\n// This will serve as a replacement for the default parseError method on\n// the parser.\nfunction parseError(str, hash) {\n  throw new SalveParsingError(str);\n}\n\n// Export this error.\nif (typeof exports !== 'undefined') {\n  exports.SalveParsingError = SalveParsingError;\n}\nelse {\n  parser.SalveParsingError = SalveParsingError;\n}\n\n\nvar xmlNameChar = xmlcharacters.xmlNameChar;\nvar xmlLetter = xmlcharacters.xmlLetter;\n\n// Maintain a group state.\nvar groupState = [];\nvar needsXRegExpRe = /\\\\p/i;\n\nfunction unshiftGroupState(negative) {\n  groupState.unshift({\n    negative: negative,\n    capturedMultiChar: [],\n  });\n}\n\nvar multiCharEscapesInGroup = {\n    \"\\\\s\": \" \\\\t\\\\n\\\\r\",\n    \"\\\\S\": \"^ \\\\t\\\\n\\\\r\",\n    \"\\\\i\": \"\" + xmlLetter + \"_:\",\n    \"\\\\I\": \"^\" + xmlLetter + \"_:\",\n    \"\\\\c\": \"\" + xmlNameChar,\n    \"\\\\C\": \"^\" + xmlNameChar,\n    \"\\\\d\": \"\\\\p{Nd}\",\n    \"\\\\D\": \"^\\\\p{Nd}\",\n    \"\\\\w\": \"^\\\\p{P}\\\\p{Z}\\\\p{C}\",\n    \"\\\\W\": \"\\\\p{P}\\\\p{Z}\\\\p{C}\"\n};\n\nvar multiCharEscapes = [];\nfor(var i in multiCharEscapesInGroup) {\n  if (!multiCharEscapesInGroup.hasOwnProperty(i)) {\n    continue;\n  }\n  multiCharEscapes[i] = \"[\" + multiCharEscapesInGroup[i] + \"]\";\n}\n\nfunction Parser() {\n  this.yy = {};\n}\nParser.prototype = parser;\nparser.Parser = Parser;\n\nreturn new Parser();\n})();\n\n        \n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  exports.parser = parser;\n  exports.Parser = parser.Parser;\n  exports.parse = function () {\n    return parser.parse.apply(parser, arguments);\n  };\n  \n}\n","\"use strict\";\n/**\n * Implementation of the XMLSchema datatypes.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar errors_1 = require(\"./errors\");\nvar regexp = require(\"./regexp\");\nvar xmlcharacters_1 = require(\"./xmlcharacters\");\n// tslint:disable: no-reserved-keywords\n/**\n * Check whether a parameter is an integer.\n *\n * @param value The parameter value.\n *\n * @param name The name of the parameter.\n *\n * @return ``false`` if there is no error. Otherwise it returns a [[ParamError]]\n * that records the error.\n *\n * @private\n */\nfunction failIfNotInteger(value, name) {\n    if (value.search(/^\\d+$/) !== -1) {\n        return false;\n    }\n    return new errors_1.ParamError(name + \" must have an integer value\");\n}\n/**\n * Check whether a parameter is a non-negative integer.\n *\n * @param value The parameter value.\n *\n * @param name The name of the parameter.\n *\n * @return ``false`` if there is no error. Otherwise it returns a [[ParamError]]\n * that records the error.\n *\n * @private\n */\nfunction failIfNotNonNegativeInteger(value, name) {\n    if (!failIfNotInteger(value, name) && Number(value) >= 0) {\n        return false;\n    }\n    return new errors_1.ParamError(name + \" must have a non-negative integer value\");\n}\n/**\n * Check whether a parameter is a positive integer.\n *\n * @param value The parameter value.\n *\n * @param name The name of the parameter.\n *\n * @return ``false`` if there is no error. Otherwise it returns a [[ParamError]]\n * that records the error.\n *\n * @private\n */\nfunction failIfNotPositiveInteger(value, name) {\n    if (!failIfNotInteger(value, name) && Number(value) > 0) {\n        return false;\n    }\n    return new errors_1.ParamError(name + \" must have a positive value\");\n}\n/**\n * Convert a number to an internal representation. This takes care of the\n * differences between JavaScript and XML Schema (e.g. \"Infinity\" vs \"INF\").\n *\n * @param value The value as expressed in an XML file or schema.\n *\n * @returns The number, in its internal representation.\n */\nfunction convertToInternalNumber(value) {\n    if (value === \"INF\") {\n        return Infinity;\n    }\n    if (value === \"-INF\") {\n        return -Infinity;\n    }\n    return Number(value);\n}\n/**\n * Convert an internal representation of a number to a string. This takes care\n * of the differences between JavaScript and XML Schema. For instance, a value\n * of ``Infinity`` will be represented as the string ``\"INF\"``.\n *\n * @param number The internal representation.\n *\n * @returns The string representation.\n */\nfunction convertInternalNumberToString(value) {\n    if (value === Infinity) {\n        return \"INF\";\n    }\n    if (value === -Infinity) {\n        return \"-INF\";\n    }\n    return value.toString();\n}\n//\n// The parameters\n//\n/**\n * A parameter used for XML\n * Schema type processing.\n */\nvar Parameter = /** @class */ (function () {\n    function Parameter() {\n        /**\n         * Whether the parameter can appear more than once on the same type.\n         */\n        this.repeatable = false;\n    }\n    /**\n     * Combine multiple values from the schema into an internal value. This method\n     * may be called only for parameters that are repeatable.\n     *\n     * @param values The values to combine\n     *\n     * @returns An array of internal values.\n     */\n    Parameter.prototype.combine = function (values) {\n        if (!this.repeatable) {\n            throw new Error(\"this parameter is not repeatable\");\n        }\n        throw new Error(\"derived classes must implement this method \" +\n            \"if they are repeatable\");\n    };\n    return Parameter;\n}());\nvar NumericParameter = /** @class */ (function (_super) {\n    tslib_1.__extends(NumericParameter, _super);\n    function NumericParameter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumericParameter.prototype.convert = function (value) {\n        return convertToInternalNumber(value);\n    };\n    return NumericParameter;\n}(Parameter));\nvar NonNegativeIntegerParameter = /** @class */ (function (_super) {\n    tslib_1.__extends(NonNegativeIntegerParameter, _super);\n    function NonNegativeIntegerParameter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NonNegativeIntegerParameter.prototype.isInvalidParam = function (value, name) {\n        return failIfNotNonNegativeInteger(value, name);\n    };\n    return NonNegativeIntegerParameter;\n}(NumericParameter));\nvar LengthP = /** @class */ (function (_super) {\n    tslib_1.__extends(LengthP, _super);\n    function LengthP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"length\";\n        return _this;\n    }\n    LengthP.prototype.isInvalidValue = function (value, param, type) {\n        if (type.valueLength(value) === param) {\n            return false;\n        }\n        return new errors_1.ValueError(\"length of value should be \" + param);\n    };\n    return LengthP;\n}(NonNegativeIntegerParameter));\nvar lengthP = new LengthP();\nvar MinLengthP = /** @class */ (function (_super) {\n    tslib_1.__extends(MinLengthP, _super);\n    function MinLengthP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"minLength\";\n        return _this;\n    }\n    MinLengthP.prototype.isInvalidValue = function (value, param, type) {\n        if (type.valueLength(value) >= param) {\n            return false;\n        }\n        return new errors_1.ValueError(\"length of value should be greater than \" +\n            (\"or equal to \" + param));\n    };\n    return MinLengthP;\n}(NonNegativeIntegerParameter));\nvar minLengthP = new MinLengthP();\nvar MaxLengthP = /** @class */ (function (_super) {\n    tslib_1.__extends(MaxLengthP, _super);\n    function MaxLengthP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"maxLength\";\n        return _this;\n    }\n    MaxLengthP.prototype.isInvalidValue = function (value, param, type) {\n        if (type.valueLength(value) <= param) {\n            return false;\n        }\n        return new errors_1.ValueError(\"length of value should be less than \" +\n            (\"or equal to \" + param));\n    };\n    return MaxLengthP;\n}(NonNegativeIntegerParameter));\nvar maxLengthP = new MaxLengthP();\n//\n// pattern is special. It converts the param value found in the RNG file into an\n// object with two fields: ``rng`` and ``internal``. RNG is the string value\n// from the RNG file, and ``internal`` is a representation internal to salve. We\n// use ``internal`` for performing the validation but present ``rng`` to the\n// user. Note that if pattern appears multiple times as a parameter, the two\n// values are the result of the concatenation of all the instance of the pattern\n// parameter. (Why this? Because it would be confusing to show the internal\n// value in error messages to the user.)\n//\n/**\n * A mapping of raw schema values to the corresponding ``RegExp`` object.\n */\nvar reCache = Object.create(null);\nvar PatternP = /** @class */ (function (_super) {\n    tslib_1.__extends(PatternP, _super);\n    function PatternP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"pattern\";\n        _this.repeatable = true;\n        return _this;\n    }\n    PatternP.prototype.convert = function (value) {\n        var internal = reCache[value];\n        if (internal === undefined) {\n            internal = reCache[value] = regexp.parse(value);\n        }\n        return {\n            rng: value,\n            internal: internal,\n        };\n    };\n    PatternP.prototype.combine = function (values) {\n        return values.map(this.convert);\n    };\n    PatternP.prototype.isInvalidParam = function (value) {\n        try {\n            this.convert(value);\n        }\n        catch (ex) {\n            // Convert the error into something that makes sense for salve.\n            if (ex instanceof regexp.SalveParsingError) {\n                return new errors_1.ParamError(ex.message);\n            }\n            // Rethrow\n            throw ex;\n        }\n        return false;\n    };\n    PatternP.prototype.isInvalidValue = function (value, param) {\n        if (param instanceof Array) {\n            var failedOn = void 0;\n            try {\n                for (var param_1 = tslib_1.__values(param), param_1_1 = param_1.next(); !param_1_1.done; param_1_1 = param_1.next()) {\n                    var p = param_1_1.value;\n                    if (!p.internal.test(value)) {\n                        failedOn = p;\n                        break;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (param_1_1 && !param_1_1.done && (_a = param_1.return)) _a.call(param_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (failedOn === undefined) {\n                return false;\n            }\n            return new errors_1.ValueError(\"value does not match the pattern \" + failedOn.rng);\n        }\n        if (param.internal.test(value)) {\n            return false;\n        }\n        return new errors_1.ValueError(\"value does not match the pattern \" + param.rng);\n        var e_1, _a;\n    };\n    return PatternP;\n}(Parameter));\nvar patternP = new PatternP();\nvar TotalDigitsP = /** @class */ (function (_super) {\n    tslib_1.__extends(TotalDigitsP, _super);\n    function TotalDigitsP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"totalDigits\";\n        return _this;\n    }\n    TotalDigitsP.prototype.isInvalidParam = function (value, name) {\n        return failIfNotPositiveInteger(value, name);\n    };\n    TotalDigitsP.prototype.isInvalidValue = function (value, param) {\n        var str = String(Number(value)).replace(/[-+.]/g, \"\");\n        if (str.length > param) {\n            return new errors_1.ValueError(\"value must have at most \" + param + \" digits\");\n        }\n        return false;\n    };\n    return TotalDigitsP;\n}(NumericParameter));\nvar totalDigitsP = new TotalDigitsP();\nvar FractionDigitsP = /** @class */ (function (_super) {\n    tslib_1.__extends(FractionDigitsP, _super);\n    function FractionDigitsP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"fractionDigits\";\n        return _this;\n    }\n    FractionDigitsP.prototype.isInvalidValue = function (value, param) {\n        var str = String(Number(value)).replace(/^.*\\./, \"\");\n        if (str.length > param) {\n            return new errors_1.ValueError(\"value must have at most \" + param + \" fraction digits\");\n        }\n        return false;\n    };\n    return FractionDigitsP;\n}(NonNegativeIntegerParameter));\nvar NumericTypeDependentParameter = /** @class */ (function (_super) {\n    tslib_1.__extends(NumericTypeDependentParameter, _super);\n    function NumericTypeDependentParameter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumericTypeDependentParameter.prototype.isInvalidParam = function (value, name, type) {\n        var errors = type.disallows(value);\n        if (!errors) {\n            return false;\n        }\n        // Support for multiple value errors is mainly so that we can report if a\n        // value violates multiple param specifications. When we check a param in\n        // isolation, it is unlikely that we'd get multiple errors. If we do, we\n        // narrow it to the first error and convert the ValueError to a ParamError.\n        return new errors_1.ParamError(errors[0].message);\n    };\n    return NumericTypeDependentParameter;\n}(NumericParameter));\nvar fractionDigitsP = new FractionDigitsP();\nvar MaxInclusiveP = /** @class */ (function (_super) {\n    tslib_1.__extends(MaxInclusiveP, _super);\n    function MaxInclusiveP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"maxInclusive\";\n        return _this;\n    }\n    MaxInclusiveP.prototype.isInvalidValue = function (value, param) {\n        if ((isNaN(value) !== isNaN(param)) || value > param) {\n            var repr = convertInternalNumberToString(param);\n            return new errors_1.ValueError(\"value must be less than or equal to \" + repr);\n        }\n        return false;\n    };\n    return MaxInclusiveP;\n}(NumericTypeDependentParameter));\nvar maxInclusiveP = new MaxInclusiveP();\nvar MaxExclusiveP = /** @class */ (function (_super) {\n    tslib_1.__extends(MaxExclusiveP, _super);\n    function MaxExclusiveP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"maxExclusive\";\n        return _this;\n    }\n    MaxExclusiveP.prototype.isInvalidValue = function (value, param) {\n        // The negation of a less-than test allows handling a parameter value of NaN\n        // automatically.\n        if (!(value < param)) {\n            var repr = convertInternalNumberToString(param);\n            return new errors_1.ValueError(\"value must be less than \" + repr);\n        }\n        return false;\n    };\n    return MaxExclusiveP;\n}(NumericTypeDependentParameter));\nvar maxExclusiveP = new MaxExclusiveP();\nvar MinInclusiveP = /** @class */ (function (_super) {\n    tslib_1.__extends(MinInclusiveP, _super);\n    function MinInclusiveP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"minInclusive\";\n        return _this;\n    }\n    MinInclusiveP.prototype.isInvalidValue = function (value, param) {\n        if ((isNaN(value) !== isNaN(param)) || value < param) {\n            var repr = convertInternalNumberToString(param);\n            return new errors_1.ValueError(\"value must be greater than or equal to \" + repr);\n        }\n        return false;\n    };\n    return MinInclusiveP;\n}(NumericTypeDependentParameter));\nvar minInclusiveP = new MinInclusiveP();\nvar MinExclusiveP = /** @class */ (function (_super) {\n    tslib_1.__extends(MinExclusiveP, _super);\n    function MinExclusiveP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"minExclusive\";\n        return _this;\n    }\n    MinExclusiveP.prototype.isInvalidValue = function (value, param) {\n        // The negation of a greater-than test allows handling a parameter value of\n        // NaN automatically.\n        if (!(value > param)) {\n            var repr = convertInternalNumberToString(param);\n            return new errors_1.ValueError(\"value must be greater than \" + repr);\n        }\n        return false;\n    };\n    return MinExclusiveP;\n}(NumericTypeDependentParameter));\nvar minExclusiveP = new MinExclusiveP();\nfunction whitespacePreserve(value) {\n    return value;\n}\nfunction whitespaceCollapse(value) {\n    return value.replace(/\\s+/g, \" \").trim();\n}\nfunction whitespaceReplace(value) {\n    return value.replace(/\\s+/g, \" \");\n}\n/**\n * The structure that all datatype implementations in this module share.\n *\n * @private\n *\n */\nvar Base = /** @class */ (function () {\n    function Base() {\n        /**\n         * The default whitespace processing for this type.\n         */\n        this.processWhitespace = whitespaceCollapse;\n    }\n    Base.throwMissingLocation = function (errors) {\n        // The only time location is undefined is if ``parseParams`` was called\n        // without arguments. That's an internal error because we should always be\n        // able to call ``parseParams`` to \"parse\" the default parameter values.\n        throw new Error(\"internal error: undefined location\");\n    };\n    Object.defineProperty(Base.prototype, \"paramNameToObj\", {\n        /**\n         * A mapping of parameter names to parameter objects. It is constructed during\n         * initialization of the type.\n         */\n        get: function () {\n            var paramNameToObj = this._paramNameToObj;\n            var ret = paramNameToObj !== undefined ? paramNameToObj :\n                Object.create(null);\n            if (paramNameToObj === undefined) {\n                this._paramNameToObj = ret;\n                try {\n                    for (var _a = tslib_1.__values(this.validParams), _b = _a.next(); !_b.done; _b = _a.next()) {\n                        var param = _b.value;\n                        ret[param.name] = param;\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            return ret;\n            var e_2, _c;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Base.prototype, \"defaultParams\", {\n        /**\n         * The default parameters if none are specified.\n         */\n        get: function () {\n            var defaultParams = this._defaultParams;\n            if (defaultParams !== undefined) {\n                return defaultParams;\n            }\n            return this._defaultParams = this.parseParams(\"**INTERNAL**\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Computes the value's length. This may differ from the value's length, as it\n     * appears in the XML document it comes from.\n     *\n     * @param value The value from the XML document.\n     *\n     * @returns The length.\n     */\n    Base.prototype.valueLength = function (value) {\n        return value.length;\n    };\n    Base.prototype.parseValue = function (location, value, context) {\n        var errors = this.disallows(value, undefined, context);\n        if (errors) {\n            throw new errors_1.ValueValidationError(location, errors);\n        }\n        return { value: this.convertValue(location, value, context) };\n    };\n    // tslint:disable-next-line: max-func-body-length\n    Base.prototype.parseParams = function (location, params) {\n        var names = Object.create(null);\n        if (params === undefined) {\n            // Yes, if the list of parameters is empty, we return an empty map because\n            // by default there are no default parameters.\n            return names;\n        }\n        var errors = [];\n        try {\n            for (var params_1 = tslib_1.__values(params), params_1_1 = params_1.next(); !params_1_1.done; params_1_1 = params_1.next()) {\n                var x = params_1_1.value;\n                var name_1 = x.name, value = x.value;\n                var prop = this.paramNameToObj[name_1];\n                // Do we know this parameter?\n                if (prop === undefined) {\n                    errors.push(new errors_1.ParamError(\"unexpected parameter: \" + name_1));\n                    continue;\n                }\n                // Is the value valid at all?\n                var invalid = prop.isInvalidParam(value, name_1, this);\n                if (invalid) {\n                    errors.push(invalid);\n                }\n                // Is it repeated, and repeatable?\n                if (names[name_1] !== undefined && !prop.repeatable) {\n                    errors.push(new errors_1.ParamError(\"cannot repeat parameter \" + name_1));\n                }\n                // We gather all the values in a map of name to value.\n                var values = names[name_1];\n                if (values === undefined) {\n                    values = names[name_1] = [];\n                }\n                values.push(value);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (params_1_1 && !params_1_1.done && (_a = params_1.return)) _a.call(params_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (errors.length !== 0) {\n            throw new errors_1.ParameterParsingError(location, errors);\n        }\n        // We just modify the ``names`` object to produce a return value.\n        var ret = names;\n        for (var key in ret) { // tslint:disable-line:forin\n            var value = ret[key];\n            var prop = this.paramNameToObj[key];\n            if (value.length > 1) {\n                ret[key] = prop.combine(value);\n            }\n            else {\n                ret[key] = ((prop.convert !== undefined) ?\n                    prop.convert(value[0]) : value[0]);\n            }\n        }\n        // Inter-parameter checks. There's no point in trying to generalize\n        // this.\n        /* tslint:disable: no-string-literal */\n        if (ret[\"minLength\"] > ret[\"maxLength\"]) {\n            errors.push(new errors_1.ParamError(\"minLength must be less than or equal to maxLength\"));\n        }\n        if (ret[\"length\"] !== undefined) {\n            if (ret[\"minLength\"] !== undefined) {\n                errors.push(new errors_1.ParamError(\"length and minLength cannot appear together\"));\n            }\n            if (ret[\"maxLength\"] !== undefined) {\n                errors.push(new errors_1.ParamError(\"length and maxLength cannot appear together\"));\n            }\n        }\n        if (ret[\"maxInclusive\"] !== undefined) {\n            if (ret[\"maxExclusive\"] !== undefined) {\n                errors.push(new errors_1.ParamError(\"maxInclusive and maxExclusive cannot appear together\"));\n            }\n            // maxInclusive, minExclusive\n            if (ret[\"minExclusive\"] >= ret[\"maxInclusive\"]) {\n                errors.push(new errors_1.ParamError(\"minExclusive must be less than maxInclusive\"));\n            }\n        }\n        if (ret[\"minInclusive\"] !== undefined) {\n            if (ret[\"minExclusive\"] !== undefined) {\n                errors.push(new errors_1.ParamError(\"minInclusive and minExclusive cannot appear together\"));\n            }\n            // maxInclusive, minInclusive\n            if (ret[\"minInclusive\"] > ret[\"maxInclusive\"]) {\n                errors.push(new errors_1.ParamError(\"minInclusive must be less than or equal to maxInclusive\"));\n            }\n            // maxExclusive, minInclusive\n            if (ret[\"minInclusive\"] >= ret[\"maxExclusive\"]) {\n                errors.push(new errors_1.ParamError(\"minInclusive must be less than maxExclusive\"));\n            }\n        }\n        // maxExclusive, minExclusive\n        if (ret[\"minExclusive\"] > ret[\"maxExclusive\"]) {\n            errors.push(new errors_1.ParamError(\"minExclusive must be less than or equal to maxExclusive\"));\n        }\n        /* tslint:enable: no-string-literal */\n        if (errors.length !== 0) {\n            throw new errors_1.ParameterParsingError(location, errors);\n        }\n        return ret;\n        var e_3, _a;\n    };\n    Base.prototype.equal = function (value, schemaValue, context) {\n        var converted;\n        try {\n            // We pass an empty string as location because we do not generally keep\n            // track of locations in the XML file being validated. The\n            // ValueValidationError is caught and turned into a boolean below so the\n            // specific location is not important here.\n            converted = this.convertValue(\"\", value, context);\n        }\n        catch (ex) {\n            // An invalid value cannot be equal.\n            if (ex instanceof errors_1.ValueValidationError) {\n                return false;\n            }\n            throw ex;\n        }\n        return converted === schemaValue.value;\n    };\n    Base.prototype.disallows = function (value, params, context) {\n        if (value.match(this.regexp) === null) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        var converted;\n        try {\n            // We pass an empty string as location because we do not generally keep\n            // track of locations in the XML file being validated. The\n            // ValueValidationError is caught below and its errors are extracted and\n            // returned.\n            converted = this.convertValue(\"\", value, context);\n        }\n        catch (ex) {\n            // An invalid value is not allowed.\n            if (ex instanceof errors_1.ValueValidationError) {\n                return ex.errors;\n            }\n            throw ex;\n        }\n        if (params === undefined || Object.keys(params).length === 0) {\n            // If no params were passed, get the default params.\n            // tslint:disable-next-line:no-parameter-reassignment\n            params = this.defaultParams;\n        }\n        var paramNames = Object.keys(params);\n        if (paramNames.length === 0) {\n            return false;\n        }\n        var errors = [];\n        try {\n            // We use Object.keys because we don't know the precise type of params.\n            for (var paramNames_1 = tslib_1.__values(paramNames), paramNames_1_1 = paramNames_1.next(); !paramNames_1_1.done; paramNames_1_1 = paramNames_1.next()) {\n                var name_2 = paramNames_1_1.value;\n                var param = this.paramNameToObj[name_2];\n                var err = param.isInvalidValue(converted, params[name_2], this);\n                if (err) {\n                    errors.push(err);\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (paramNames_1_1 && !paramNames_1_1.done && (_a = paramNames_1.return)) _a.call(paramNames_1);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return (errors.length !== 0) ? errors : false;\n        var e_4, _a;\n    };\n    return Base;\n}());\n//\n// String family\n//\nvar CommonStringBased = /** @class */ (function (_super) {\n    tslib_1.__extends(CommonStringBased, _super);\n    function CommonStringBased() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CommonStringBased.prototype.convertValue = function (location, value, context) {\n        return this.processWhitespace(value);\n    };\n    return CommonStringBased;\n}(Base));\n/* tslint:disable:class-name */\nvar string_ = /** @class */ (function (_super) {\n    tslib_1.__extends(string_, _super);\n    function string_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"string\";\n        _this.typeErrorMsg = \"value is not a string\";\n        _this.processWhitespace = whitespacePreserve;\n        _this.validParams = [lengthP, minLengthP, maxLengthP,\n            patternP];\n        _this.needsContext = false;\n        // [^] means \"any character\". The dot would exclude line terminators (\\r\\n,\n        // etc.).\n        _this.regexp = /^[^]*$/;\n        return _this;\n    }\n    // This is a specialized version of disallows that avoids bothering with tests\n    // that don't affect the results. string and some of its immediate derivates\n    // are not affected by their regexp, nor do they have default parameters that\n    // affect what values are allowed.\n    string_.prototype.disallows = function (value, params, context) {\n        if (params === undefined || Object.keys(params).length === 0) {\n            // The default params don't disallow anything.\n            return false;\n        }\n        var converted = this.convertValue(\"\", value, context);\n        var errors = [];\n        try {\n            // We use Object.keys because we don't know the precise type of params.\n            for (var _a = tslib_1.__values(Object.keys(params)), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var name_3 = _b.value;\n                var param = this.paramNameToObj[name_3];\n                var err = param.isInvalidValue(converted, params[name_3], this);\n                if (err) {\n                    errors.push(err);\n                }\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        return (errors.length !== 0) ? errors : false;\n        var e_5, _c;\n    };\n    return string_;\n}(CommonStringBased));\nvar normalizedString = /** @class */ (function (_super) {\n    tslib_1.__extends(normalizedString, _super);\n    function normalizedString() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"normalizedString\";\n        _this.typeErrorMsg = \"string contains a tab, carriage return or newline\";\n        _this.processWhitespace = whitespaceReplace;\n        return _this;\n    }\n    return normalizedString;\n}(string_));\nvar token = /** @class */ (function (_super) {\n    tslib_1.__extends(token, _super);\n    function token() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"token\";\n        _this.typeErrorMsg = \"not a valid token\";\n        _this.processWhitespace = whitespaceCollapse;\n        return _this;\n    }\n    return token;\n}(normalizedString));\nvar tokenInternal = /** @class */ (function (_super) {\n    tslib_1.__extends(tokenInternal, _super);\n    function tokenInternal() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    tokenInternal.prototype.disallows = function (value, params, context) {\n        if (value.match(this.regexp) === null) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return _super.prototype.disallows.call(this, value, params, context);\n    };\n    return tokenInternal;\n}(token));\nvar language = /** @class */ (function (_super) {\n    tslib_1.__extends(language, _super);\n    function language() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"language\";\n        _this.typeErrorMsg = \"not a valid language identifier\";\n        _this.regexp = /^\\s*[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*\\s*$/;\n        return _this;\n    }\n    return language;\n}(tokenInternal));\nvar Name = /** @class */ (function (_super) {\n    tslib_1.__extends(Name, _super);\n    function Name() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Name\";\n        _this.typeErrorMsg = \"not a valid Name\";\n        _this.regexp = xmlcharacters_1.xmlNameRe;\n        return _this;\n    }\n    return Name;\n}(tokenInternal));\nvar NCName = /** @class */ (function (_super) {\n    tslib_1.__extends(NCName, _super);\n    function NCName() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"NCName\";\n        _this.typeErrorMsg = \"not a valid NCName\";\n        _this.regexp = xmlcharacters_1.xmlNcnameRe;\n        return _this;\n    }\n    return NCName;\n}(Name));\nvar NMTOKEN = /** @class */ (function (_super) {\n    tslib_1.__extends(NMTOKEN, _super);\n    function NMTOKEN() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"NMTOKEN\";\n        _this.typeErrorMsg = \"not a valid NMTOKEN\";\n        _this.regexp = new RegExp(\"^\\\\s*[\" + xmlcharacters_1.xmlNameChar + \"]+\\\\s*$\");\n        return _this;\n    }\n    return NMTOKEN;\n}(tokenInternal));\nvar NMTOKENS = /** @class */ (function (_super) {\n    tslib_1.__extends(NMTOKENS, _super);\n    function NMTOKENS() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"NMTOKENS\";\n        _this.typeErrorMsg = \"not a valid NMTOKENS\";\n        _this.regexp = new RegExp(\"^\\\\s*[\" + xmlcharacters_1.xmlNameChar + \"]+(?:\\\\s+[\" + xmlcharacters_1.xmlNameChar + \"]+)*\\\\s*$\");\n        return _this;\n    }\n    return NMTOKENS;\n}(NMTOKEN));\nvar ID = /** @class */ (function (_super) {\n    tslib_1.__extends(ID, _super);\n    function ID() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"ID\";\n        _this.typeErrorMsg = \"not a valid ID\";\n        return _this;\n    }\n    return ID;\n}(NCName));\nvar IDREF = /** @class */ (function (_super) {\n    tslib_1.__extends(IDREF, _super);\n    function IDREF() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"IDREF\";\n        _this.typeErrorMsg = \"not a valid IDREF\";\n        return _this;\n    }\n    return IDREF;\n}(NCName));\nvar IDREFS = /** @class */ (function (_super) {\n    tslib_1.__extends(IDREFS, _super);\n    function IDREFS() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"IDREFS\";\n        _this.typeErrorMsg = \"not a valid IDREFS\";\n        _this.regexp = new RegExp(\"^\\\\s*\" + xmlcharacters_1.xmlNcname + \"(?:\\\\s+\" + xmlcharacters_1.xmlNcname + \")*\\\\s*$\");\n        return _this;\n    }\n    return IDREFS;\n}(IDREF));\nvar ENTITY = /** @class */ (function (_super) {\n    tslib_1.__extends(ENTITY, _super);\n    function ENTITY() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"ENTITY\";\n        _this.typeErrorMsg = \"not a valid ENTITY\";\n        return _this;\n    }\n    return ENTITY;\n}(NCName));\nvar ENTITIES = /** @class */ (function (_super) {\n    tslib_1.__extends(ENTITIES, _super);\n    function ENTITIES() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"ENTITIES\";\n        _this.typeErrorMsg = \"not a valid ENTITIES\";\n        _this.regexp = new RegExp(\"^\\\\s*\" + xmlcharacters_1.xmlNcname + \"(?:\\\\s+\" + xmlcharacters_1.xmlNcname + \")*\\\\s*$\");\n        return _this;\n    }\n    return ENTITIES;\n}(ENTITY));\n//\n// Decimal family\n//\nvar decimalPattern = \"[-+]?(?!$)\\\\d*(\\\\.\\\\d*)?\";\nvar decimal = /** @class */ (function (_super) {\n    tslib_1.__extends(decimal, _super);\n    function decimal() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"decimal\";\n        _this.typeErrorMsg = \"value not a decimal number\";\n        _this.regexp = new RegExp(\"^\\\\s*\" + decimalPattern + \"\\\\s*$\");\n        _this.processWhitespace = whitespaceCollapse;\n        _this.needsContext = false;\n        _this.validParams = [\n            totalDigitsP, fractionDigitsP, patternP, minExclusiveP, minInclusiveP,\n            maxExclusiveP, maxInclusiveP,\n        ];\n        return _this;\n    }\n    decimal.prototype.convertValue = function (location, value) {\n        // We don't need to do white-space processing on the value.\n        return Number(value);\n    };\n    return decimal;\n}(Base));\nvar integerPattern = \"[-+]?\\\\d+\";\nvar integer = /** @class */ (function (_super) {\n    tslib_1.__extends(integer, _super);\n    function integer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"integer\";\n        _this.typeErrorMsg = \"value is not an integer\";\n        _this.regexp = new RegExp(\"^\\\\s*\" + integerPattern + \"\\\\s*$\");\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    integer.prototype.parseParams = function (location, params) {\n        var me;\n        var mi;\n        var ret = _super.prototype.parseParams.call(this, location, params);\n        function fail(message) {\n            throw new errors_1.ParameterParsingError(location, [new errors_1.ParamError(message)]);\n        }\n        var highestVal = this.highestVal;\n        if (highestVal !== undefined) {\n            /* tslint:disable:no-string-literal */\n            if (ret[\"maxExclusive\"] !== undefined) {\n                me = ret[\"maxExclusive\"];\n                if (me > highestVal) {\n                    fail(\"maxExclusive cannot be greater than \" + highestVal);\n                }\n            }\n            else if (ret[\"maxInclusive\"] !== undefined) {\n                mi = ret[\"maxInclusive\"];\n                if (mi > highestVal) {\n                    fail(\"maxInclusive cannot be greater than \" + highestVal);\n                }\n            }\n            else {\n                ret[\"maxInclusive\"] = highestVal;\n            }\n        }\n        var lowestVal = this.lowestVal;\n        if (lowestVal !== undefined) {\n            if (ret[\"minExclusive\"] !== undefined) {\n                me = ret[\"minExclusive\"];\n                if (me < lowestVal) {\n                    fail(\"minExclusive cannot be lower than \" + this.lowestVal);\n                }\n            }\n            else if (ret[\"minInclusive\"] !== undefined) {\n                mi = ret[\"minInclusive\"];\n                if (mi < lowestVal) {\n                    fail(\"minInclusive cannot be lower than \" + this.lowestVal);\n                }\n            }\n            else {\n                ret[\"minInclusive\"] = lowestVal;\n            }\n        }\n        /* tslint:enable:no-string-literal */\n        return ret;\n    };\n    return integer;\n}(decimal));\nvar nonPositiveInteger = /** @class */ (function (_super) {\n    tslib_1.__extends(nonPositiveInteger, _super);\n    function nonPositiveInteger() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"nonPositiveInteger\";\n        _this.typeErrorMsg = \"value is not a nonPositiveInteger\";\n        _this.regexp = /^\\s*\\+?0+|-\\d+\\s*$/;\n        _this.highestVal = 0;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return nonPositiveInteger;\n}(integer));\nvar negativeInteger = /** @class */ (function (_super) {\n    tslib_1.__extends(negativeInteger, _super);\n    function negativeInteger() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"negativeInteger\";\n        _this.typeErrorMsg = \"value is not a negativeInteger\";\n        _this.regexp = /^\\s*-\\d+\\s*$/;\n        _this.highestVal = -1;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return negativeInteger;\n}(nonPositiveInteger));\nvar nonNegativeInteger = /** @class */ (function (_super) {\n    tslib_1.__extends(nonNegativeInteger, _super);\n    function nonNegativeInteger() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"nonNegativeInteger\";\n        _this.typeErrorMsg = \"value is not a nonNegativeInteger\";\n        _this.regexp = /^\\s*(\\+?\\d+|-0)\\s*$/;\n        _this.lowestVal = 0;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return nonNegativeInteger;\n}(integer));\nvar positiveInteger = /** @class */ (function (_super) {\n    tslib_1.__extends(positiveInteger, _super);\n    function positiveInteger() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"positiveInteger\";\n        _this.typeErrorMsg = \"value is not a positiveInteger\";\n        _this.regexp = /^\\s*\\+?\\d+\\s*$/;\n        _this.lowestVal = 1;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return positiveInteger;\n}(nonNegativeInteger));\nvar long_ = /** @class */ (function (_super) {\n    tslib_1.__extends(long_, _super);\n    function long_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"long\";\n        _this.typeErrorMsg = \"value is not a long\";\n        _this.highestVal = 9223372036854775807;\n        _this.lowestVal = -9223372036854775808;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return long_;\n}(integer));\nvar int_ = /** @class */ (function (_super) {\n    tslib_1.__extends(int_, _super);\n    function int_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"int\";\n        _this.typeErrorMsg = \"value is not an int\";\n        _this.highestVal = 2147483647;\n        _this.lowestVal = -2147483648;\n        return _this;\n    }\n    return int_;\n}(long_));\nvar short_ = /** @class */ (function (_super) {\n    tslib_1.__extends(short_, _super);\n    function short_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"short\";\n        _this.typeErrorMsg = \"value is not a short\";\n        _this.highestVal = 32767;\n        _this.lowestVal = -32768;\n        return _this;\n    }\n    return short_;\n}(int_));\nvar byte_ = /** @class */ (function (_super) {\n    tslib_1.__extends(byte_, _super);\n    function byte_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"byte\";\n        _this.typeErrorMsg = \"value is not a byte\";\n        _this.highestVal = 127;\n        _this.lowestVal = -128;\n        return _this;\n    }\n    return byte_;\n}(short_));\nvar unsignedLong = /** @class */ (function (_super) {\n    tslib_1.__extends(unsignedLong, _super);\n    function unsignedLong() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"unsignedLong\";\n        _this.typeErrorMsg = \"value is not an unsignedLong\";\n        _this.highestVal = 18446744073709551615;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return unsignedLong;\n}(nonNegativeInteger));\nvar unsignedInt = /** @class */ (function (_super) {\n    tslib_1.__extends(unsignedInt, _super);\n    function unsignedInt() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"unsignedInt\";\n        _this.typeErrorMsg = \"value is not an unsignedInt\";\n        _this.highestVal = 4294967295;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return unsignedInt;\n}(unsignedLong));\nvar unsignedShort = /** @class */ (function (_super) {\n    tslib_1.__extends(unsignedShort, _super);\n    function unsignedShort() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"unsignedShort\";\n        _this.typeErrorMsg = \"value is not an unsignedShort\";\n        _this.highestVal = 65535;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return unsignedShort;\n}(unsignedInt));\nvar unsignedByte = /** @class */ (function (_super) {\n    tslib_1.__extends(unsignedByte, _super);\n    function unsignedByte() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"unsignedByte\";\n        _this.typeErrorMsg = \"value is not an unsignedByte\";\n        _this.highestVal = 255;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return unsignedByte;\n}(unsignedShort));\nvar boolean_ = /** @class */ (function (_super) {\n    tslib_1.__extends(boolean_, _super);\n    function boolean_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"boolean\";\n        _this.typeErrorMsg = \"not a valid boolean\";\n        _this.regexp = /^\\s*(1|0|true|false)\\s*$/;\n        _this.validParams = [patternP];\n        _this.needsContext = false;\n        return _this;\n    }\n    boolean_.prototype.convertValue = function (_location, value) {\n        return (value === \"1\" || value === \"true\");\n    };\n    return boolean_;\n}(Base));\nvar B04 = \"[AQgw]\";\nvar B16 = \"[AEIMQUYcgkosw048]\";\nvar B64 = \"[A-Za-z0-9+/]\";\nvar B64S = \"(?:\" + B64 + \"\\\\s*)\";\nvar B16S = \"(?:\" + B16 + \"\\\\s*)\";\nvar B04S = \"(?:\" + B04 + \"\\\\s*)\";\nvar base64BinaryRe = new RegExp(\"^\\\\s*(?:(?:\" + B64S + \"{4})*(?:(?:\" + B64S + \"{3}\" + B64 + \")|(?:\" + B64S + \"{2}\" + B16S + \"=)|(?:\" +\n    (\"\" + B64S + B04S + \"= ?=)))?\\\\s*$\"));\nvar base64Binary = /** @class */ (function (_super) {\n    tslib_1.__extends(base64Binary, _super);\n    function base64Binary() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"base64Binary\";\n        _this.typeErrorMsg = \"not a valid base64Binary\";\n        _this.regexp = base64BinaryRe;\n        _this.needsContext = false;\n        _this.validParams = [lengthP, minLengthP, maxLengthP, patternP];\n        return _this;\n    }\n    base64Binary.prototype.convertValue = function (_location, value) {\n        // We don't need to actually decode it.\n        return value.replace(/\\s/g, \"\");\n    };\n    base64Binary.prototype.valueLength = function (value) {\n        // Length of the decoded value.\n        return Math.floor((value.replace(/[\\s=]/g, \"\").length * 3) / 4);\n    };\n    return base64Binary;\n}(Base));\nvar hexBinary = /** @class */ (function (_super) {\n    tslib_1.__extends(hexBinary, _super);\n    function hexBinary() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"hexBinary\";\n        _this.typeErrorMsg = \"not a valid hexBinary\";\n        _this.regexp = /^\\s*(?:[0-9a-fA-F]{2})*\\s*$/;\n        _this.needsContext = false;\n        _this.validParams = [lengthP, minLengthP, maxLengthP, patternP];\n        return _this;\n    }\n    hexBinary.prototype.convertValue = function (_location, value) {\n        return value;\n    };\n    hexBinary.prototype.valueLength = function (value) {\n        // Length of the byte list.\n        return value.length / 2;\n    };\n    return hexBinary;\n}(Base));\nvar doubleRe = new RegExp(\"^\\\\s*(?:(?:[-+]?INF)|(?:NaN)|(?:\" + decimalPattern + \"(?:[Ee]\" + integerPattern + \")?))\\\\s*$\");\nvar float_ = /** @class */ (function (_super) {\n    tslib_1.__extends(float_, _super);\n    function float_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"float\";\n        _this.typeErrorMsg = \"not a valid float\";\n        _this.regexp = doubleRe;\n        _this.needsContext = false;\n        _this.validParams = [\n            patternP, minInclusiveP, minExclusiveP, maxInclusiveP, maxExclusiveP,\n        ];\n        return _this;\n    }\n    float_.prototype.convertValue = function (_location, value, context) {\n        return convertToInternalNumber(value);\n    };\n    float_.prototype.equal = function (value, schemaValue, context) {\n        var converted;\n        try {\n            // We pass an empty string as location because we do not generally keep\n            // track of locations in the XML file being validated. The\n            // ValueValidationError is caught and turned into a boolean below so the\n            // specific location is not important here.\n            converted = this.convertValue(\"\", value, context);\n        }\n        catch (ex) {\n            // An invalid value cannot be equal.\n            if (ex instanceof errors_1.ValueValidationError) {\n                return false;\n            }\n            throw ex;\n        }\n        // In the IEEE 754-1985 standard, which is what XMLSChema 1.0 follows, NaN\n        // is equal to NaN. In JavaScript NaN is equal to nothing, not even itself.\n        // So we need to handle this difference.\n        if (isNaN(converted)) {\n            return isNaN(schemaValue.value);\n        }\n        return converted === schemaValue.value;\n    };\n    return float_;\n}(Base));\nvar double_ = /** @class */ (function (_super) {\n    tslib_1.__extends(double_, _super);\n    function double_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"double\";\n        _this.typeErrorMsg = \"not a valid double\";\n        return _this;\n    }\n    return double_;\n}(float_));\nvar QName = /** @class */ (function (_super) {\n    tslib_1.__extends(QName, _super);\n    function QName() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"QName\";\n        _this.typeErrorMsg = \"not a valid QName\";\n        _this.regexp = new RegExp(\"^\\\\s*(?:\" + xmlcharacters_1.xmlNcname + \":)?\" + xmlcharacters_1.xmlNcname + \"\\\\s*$\");\n        _this.needsContext = true;\n        _this.validParams = [patternP, lengthP, minLengthP, maxLengthP];\n        return _this;\n    }\n    QName.prototype.convertValue = function (location, value, context) {\n        var ret = context.resolver.resolveName(this.processWhitespace(value));\n        if (ret === undefined) {\n            throw new errors_1.ValueValidationError(location, [new errors_1.ValueError(\"cannot resolve the name \" + value)]);\n        }\n        return \"{\" + ret.ns + \"}\" + ret.name;\n    };\n    return QName;\n}(Base));\nvar NOTATION = /** @class */ (function (_super) {\n    tslib_1.__extends(NOTATION, _super);\n    function NOTATION() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"NOTATION\";\n        _this.typeErrorMsg = \"not a valid NOTATION\";\n        _this.regexp = new RegExp(\"^\\\\s*(?:\" + xmlcharacters_1.xmlNcname + \":)?\" + xmlcharacters_1.xmlNcname + \"\\\\s*$\");\n        _this.needsContext = true;\n        _this.validParams = [patternP, lengthP, minLengthP, maxLengthP];\n        return _this;\n    }\n    NOTATION.prototype.convertValue = function (location, value, context) {\n        var ret = context.resolver.resolveName(this.processWhitespace(value));\n        if (ret === undefined) {\n            throw new errors_1.ValueValidationError(location, [new errors_1.ValueError(\"cannot resolve the name \" + value)]);\n        }\n        return \"{\" + ret.ns + \"}\" + ret.name;\n    };\n    return NOTATION;\n}(Base));\nvar duration = /** @class */ (function (_super) {\n    tslib_1.__extends(duration, _super);\n    function duration() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"duration\";\n        _this.typeErrorMsg = \"not a valid duration\";\n        _this.regexp = \n        // tslint:disable-next-line:max-line-length\n        /^\\s*-?P(?!$)(?:\\d+Y)?(?:\\d+M)?(?:\\d+D)?(?:T(?!$)(?:\\d+H)?(?:\\d+M)?(?:\\d+(\\.\\d+)?S)?)?\\s*$/;\n        _this.validParams = [patternP];\n        _this.needsContext = false;\n        return _this;\n    }\n    return duration;\n}(CommonStringBased));\nvar yearPattern = \"-?(?:[1-9]\\\\d*)?\\\\d{4}\";\nvar monthPattern = \"[01]\\\\d\";\nvar domPattern = \"[0-3]\\\\d\";\nvar timePattern = \"[012]\\\\d:[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d+)?\";\nvar tzPattern = \"(?:[+-][01]\\\\d:[0-5]\\\\d|Z)\";\nvar tzRe = new RegExp(tzPattern + \"$\");\nfunction isLeapYear(year) {\n    return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\nvar dateGroupingRe = new RegExp(\"^\\\\s*(\" + yearPattern + \")-(\" + monthPattern + \")-(\" + domPattern + \")T(\" + timePattern + \")\" +\n    (\"(\" + tzPattern + \"?)\\\\s*$\"));\nvar maxDoms = [undefined, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction checkDate(value) {\n    // The Date.parse method of JavaScript is not reliable.\n    var match = value.match(dateGroupingRe);\n    if (match === null) {\n        return false;\n    }\n    var year = match[1];\n    var leap = isLeapYear(Number(year));\n    var month = Number(match[2]);\n    if (month === 0 || month > 12) {\n        return false;\n    }\n    var dom = Number(match[3]);\n    // We cannot have an undefined value here... so...\n    // tslint:disable-next-line:no-non-null-assertion\n    var maxDom = maxDoms[month];\n    if (month === 2 && !leap) {\n        maxDom = 28;\n    }\n    if (dom === 0 || dom > maxDom) {\n        return false;\n    }\n    var timeParts = match[4].split(\":\");\n    var minutes = Number(timeParts[1]);\n    if (minutes > 59) {\n        return false;\n    }\n    var seconds = Number(timeParts[2]);\n    if (seconds > 59) {\n        return false;\n    }\n    // 24 is valid if minutes and seconds are at 0, otherwise 23 is the\n    // limit.\n    var hoursLimit = (minutes === 0 && seconds === 0) ? 24 : 23;\n    if (Number(timeParts[0]) > hoursLimit) {\n        return false;\n    }\n    if (match[5] !== undefined && match[5] !== \"\" && match[5] !== \"Z\") {\n        // We have a TZ\n        var tzParts = match[5].split(\":\");\n        // Slice: skip the sign.\n        var tzHours = Number(tzParts[0].slice(1));\n        if (tzHours > 14) {\n            return false;\n        }\n        var tzSeconds = Number(tzParts[1]);\n        if (tzSeconds > 59) {\n            return false;\n        }\n        if (tzHours === 14 && tzSeconds !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\nvar dateTime = /** @class */ (function (_super) {\n    tslib_1.__extends(dateTime, _super);\n    function dateTime() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"dateTime\";\n        _this.typeErrorMsg = \"not a valid dateTime\";\n        _this.regexp = new RegExp(\"^\\\\s*\" + yearPattern + \"-\" + monthPattern + \"-\" + domPattern +\n            (\"T\" + timePattern + tzPattern + \"?\\\\s*$\"));\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    dateTime.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret instanceof Array) {\n            return ret;\n        }\n        if (!checkDate(value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return dateTime;\n}(CommonStringBased));\nvar time = /** @class */ (function (_super) {\n    tslib_1.__extends(time, _super);\n    function time() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"time\";\n        _this.typeErrorMsg = \"not a valid time\";\n        _this.regexp = new RegExp(\"^\\\\s*\" + timePattern + tzPattern + \"?\\\\s*$\");\n        _this.validParams = [patternP];\n        _this.needsContext = false;\n        return _this;\n    }\n    time.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // Date does not validate times, so set the date to something fake.\n        if (!checkDate(\"1901-01-01T\" + value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return time;\n}(CommonStringBased));\nvar date = /** @class */ (function (_super) {\n    tslib_1.__extends(date, _super);\n    function date() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"date\";\n        _this.typeErrorMsg = \"not a valid date\";\n        _this.regexp = new RegExp(\"^\\\\s*\" + yearPattern + \"-\" + monthPattern + \"-\" + domPattern + tzPattern + \"?\\\\s*$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    date.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add time for Date() to parse it.\n        var match = value.match(tzRe);\n        var withTime = match !== null ?\n            value.slice(0, match.index) + \"T00:00:00\" + match[0] :\n            value + \"T00:00:00\";\n        if (!checkDate(withTime)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return date;\n}(CommonStringBased));\nvar gYearMonth = /** @class */ (function (_super) {\n    tslib_1.__extends(gYearMonth, _super);\n    function gYearMonth() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gYearMonth\";\n        _this.typeErrorMsg = \"not a valid gYearMonth\";\n        _this.regexp = new RegExp(\"^\\\\s*\" + yearPattern + \"-\" + monthPattern + tzPattern + \"?\\\\s*$\");\n        _this.validParams = [patternP];\n        _this.needsContext = false;\n        return _this;\n    }\n    gYearMonth.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a day and time for Date() to parse it.\n        var match = value.match(tzRe);\n        var withTime = match !== null ?\n            value.slice(0, match.index) + \"-01T00:00:00\" + match[0] :\n            value + \"-01T00:00:00\";\n        if (!checkDate(withTime)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gYearMonth;\n}(CommonStringBased));\nvar gYear = /** @class */ (function (_super) {\n    tslib_1.__extends(gYear, _super);\n    function gYear() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gYear\";\n        _this.typeErrorMsg = \"not a valid gYear\";\n        _this.regexp = new RegExp(\"^\\\\s*\" + yearPattern + tzPattern + \"?\\\\s*$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    gYear.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a month, a day and a time for Date() to parse it.\n        var match = value.match(tzRe);\n        var withTime = match !== null ?\n            value.slice(0, match.index) + \"-01-01T00:00:00\" + match[0] :\n            value + \"-01-01T00:00:00\";\n        if (!checkDate(withTime)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gYear;\n}(CommonStringBased));\nvar gMonthDay = /** @class */ (function (_super) {\n    tslib_1.__extends(gMonthDay, _super);\n    function gMonthDay() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gMonthDay\";\n        _this.typeErrorMsg = \"not a valid gMonthDay\";\n        _this.regexp = new RegExp(\"^\\\\s*\" + monthPattern + \"-\" + domPattern + tzPattern + \"?\\\\s*$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    gMonthDay.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a year and a time for Date() to parse it.\n        var match = value.match(tzRe);\n        var withTime = match !== null ?\n            value.slice(0, match.index) + \"T00:00:00\" + match[0] :\n            value + \"T00:00:00\";\n        // We always add 2000, which is a leap year, so 01-29 won't raise an\n        // error.\n        if (!checkDate(\"2000-\" + withTime)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gMonthDay;\n}(CommonStringBased));\nvar gDay = /** @class */ (function (_super) {\n    tslib_1.__extends(gDay, _super);\n    function gDay() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gDay\";\n        _this.typeErrorMsg = \"not a valid gDay\";\n        _this.regexp = new RegExp(\"^\\\\s*\" + domPattern + tzPattern + \"?\\\\s*$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    gDay.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a year and a time for Date() to parse it.\n        var match = value.match(tzRe);\n        var withTime = match !== null ?\n            value.slice(0, match.index) + \"T00:00:00\" + match[0] :\n            value + \"T00:00:00\";\n        // We always add 2000, which is a leap year, so 01-29 won't raise an\n        // error.\n        if (!checkDate(\"2000-01-\" + withTime)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gDay;\n}(CommonStringBased));\nvar gMonth = /** @class */ (function (_super) {\n    tslib_1.__extends(gMonth, _super);\n    function gMonth() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gMonth\";\n        _this.typeErrorMsg = \"not a valid gMonth\";\n        _this.regexp = new RegExp(\"^\\\\s*\" + monthPattern + tzPattern + \"?\\\\s*$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    gMonth.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a year and a time for Date() to parse it.\n        var match = value.match(tzRe);\n        var withTime = match !== null ?\n            value.slice(0, match.index) + \"-01T00:00:00\" + match[0] :\n            value + \"-01T00:00:00\";\n        // We always add 2000, which is a leap year, so 01-29 won't raise an\n        // error.\n        if (!checkDate(\"2000-\" + withTime)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gMonth;\n}(CommonStringBased));\n//\n// See\n// https://www.w3.org/TR/2012/REC-xmlschema11-2-20120405/datatypes.html#anyURI\n//\n// Though the specification referred above above does not require any syntactic\n// checks, in practice Jing reports errors on malformed URIs. We follow Jing's\n// lead.\n//\n// Generated from http://jmrware.com/articles/2009/uri_regexp/URI_regex.html\n// tslint:disable-next-line:max-line-length\nvar reJsRfc3986UriReference = /^\\s*(?:[A-Za-z][A-Za-z0-9+\\-.]*:(?:\\/\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9A-Fa-f]{1,4}:){6}|::(?:[0-9A-Fa-f]{1,4}:){5}|(?:[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}|(?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}|(?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:|(?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)(?:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\\.[A-Za-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-Za-z0-9\\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*)(?::[0-9]*)?(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|)(?:\\?(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?(?:\\#(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?|(?:\\/\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9A-Fa-f]{1,4}:){6}|::(?:[0-9A-Fa-f]{1,4}:){5}|(?:[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}|(?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}|(?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:|(?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)(?:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\\.[A-Za-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-Za-z0-9\\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*)(?::[0-9]*)?(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|(?:[A-Za-z0-9\\-._~!$&'()*+,;=@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|)(?:\\?(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?(?:\\#(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?)\\s*$/;\nvar anyURI = /** @class */ (function (_super) {\n    tslib_1.__extends(anyURI, _super);\n    function anyURI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"anyURI\";\n        _this.typeErrorMsg = \"not a valid anyURI\";\n        _this.regexp = reJsRfc3986UriReference;\n        _this.needsContext = false;\n        _this.validParams = [patternP, lengthP, minLengthP, maxLengthP];\n        return _this;\n    }\n    return anyURI;\n}(CommonStringBased));\nvar types = [\n    string_,\n    normalizedString,\n    token,\n    language,\n    Name,\n    NCName,\n    NMTOKEN,\n    NMTOKENS,\n    ID,\n    IDREF,\n    IDREFS,\n    ENTITY,\n    ENTITIES,\n    decimal,\n    integer,\n    nonPositiveInteger,\n    negativeInteger,\n    nonNegativeInteger,\n    positiveInteger,\n    long_,\n    int_,\n    short_,\n    byte_,\n    unsignedLong,\n    unsignedInt,\n    unsignedShort,\n    unsignedByte,\n    boolean_,\n    base64Binary,\n    hexBinary,\n    float_,\n    double_,\n    QName,\n    NOTATION,\n    duration,\n    dateTime,\n    time,\n    date,\n    gYearMonth,\n    gYear,\n    gMonthDay,\n    gDay,\n    gMonth,\n    anyURI,\n];\nvar library = {\n    // tslint:disable-next-line: no-http-string\n    uri: \"http://www.w3.org/2001/XMLSchema-datatypes\",\n    types: {},\n};\ntry {\n    for (var types_1 = tslib_1.__values(types), types_1_1 = types_1.next(); !types_1_1.done; types_1_1 = types_1.next()) {\n        var type = types_1_1.value;\n        var instance = new type();\n        library.types[instance.name] = instance;\n    }\n}\ncatch (e_6_1) { e_6 = { error: e_6_1 }; }\nfinally {\n    try {\n        if (types_1_1 && !types_1_1.done && (_a = types_1.return)) _a.call(types_1);\n    }\n    finally { if (e_6) throw e_6.error; }\n}\n/**\n * The XML Schema datatype library.\n */\nexports.xmlschema = library;\nvar e_6, _a;\n//  LocalWords:  XMLSchema datatypes MPL whitespace param minLength maxLength\n//  LocalWords:  RNG rng failedOn totalDigits fractionDigits ValueError repr zA\n//  LocalWords:  ParamError maxInclusive maxExclusive NaN minInclusive params\n//  LocalWords:  minExclusive whitespaces parseParams unparsed XMLSChema NCName\n//  LocalWords:  normalizedString xmlNameChar NMTOKEN NMTOKENS IDREF xmlNcname\n//  LocalWords:  IDREFS decimalPattern integerPattern highestVal lowestVal AQgw\n//  LocalWords:  nonPositiveInteger negativeInteger nonNegativeInteger Za fA Ee\n//  LocalWords:  positiveInteger unsignedLong unsignedInt unsignedShort QName\n//  LocalWords:  unsignedByte AEIMQUYcgkosw hexBinary tzPattern yearPattern TZ\n//  LocalWords:  monthPattern domPattern timePattern dateTime gYearMonth gYear\n//  LocalWords:  gMonthDay gDay gMonth anyURI withTime\n//# sourceMappingURL=xmlschema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Implementation of the builtin Relax NG datatype library.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = require(\"./errors\");\n/**\n * Strips leading and trailing space. Normalize all internal spaces to a single\n * space.\n *\n * @private\n *\n * @param value The value whose space we want to normalize.\n *\n * @returns The normalized value.\n */\nfunction normalizeSpace(value) {\n    return value.replace(/\\s+/g, \" \").trim();\n}\n//\n// TypeScript does not automatically treat unimplemented interface bits as\n// abstract. :-(\n//\n// See https://github.com/Microsoft/TypeScript/issues/4670\n//\nvar Base = /** @class */ (function () {\n    function Base() {\n    }\n    Base.prototype.parseParams = function (location, params) {\n        if (params !== undefined && params.length > 0) {\n            throw new errors_1.ParameterParsingError(location, [new errors_1.ParamError(\"this type does not accept parameters\")]);\n        }\n        return Object.create(null);\n    };\n    Base.prototype.parseValue = function (location, value) {\n        var errors = this.disallows(value);\n        if (errors && errors.length !== 0) {\n            throw new errors_1.ValueValidationError(location, errors);\n        }\n        return { value: value };\n    };\n    return Base;\n}());\nvar StringT = /** @class */ (function (_super) {\n    tslib_1.__extends(StringT, _super);\n    function StringT() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.regexp = /^[^]*$/;\n        _this.needsContext = false;\n        return _this;\n    }\n    StringT.prototype.equal = function (value, schemaValue) {\n        return value === schemaValue.value;\n    };\n    StringT.prototype.disallows = function (value) {\n        return false;\n    };\n    return StringT;\n}(Base));\nvar stringT = new StringT();\nvar Token = /** @class */ (function (_super) {\n    tslib_1.__extends(Token, _super);\n    function Token() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"token\";\n        _this.needsContext = false;\n        _this.regexp = /^[^]*$/;\n        return _this;\n    }\n    Token.prototype.equal = function (value, schemaValue) {\n        return normalizeSpace(value) === normalizeSpace(schemaValue.value);\n    };\n    Token.prototype.disallows = function (value) {\n        // Yep, token allows anything, just like string.\n        return false;\n    };\n    return Token;\n}(Base));\nvar token = new Token();\n/**\n * The builtin datatype library.\n */\nexports.builtin = {\n    uri: \"\",\n    types: {\n        string: stringT,\n        token: token,\n    },\n};\n//  LocalWords:  NG MPL unparsed\n//# sourceMappingURL=builtin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Pattern and walker for RNG's ``data`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar datatypes_1 = require(\"../datatypes\");\nvar errors_1 = require(\"../errors\");\nvar base_1 = require(\"./base\");\n/**\n * Data pattern.\n */\nvar Data = /** @class */ (function (_super) {\n    tslib_1.__extends(Data, _super);\n    /**\n     *\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param type The type of value.\n     *\n     * @param datatypeLibrary The URI of the datatype library to use.\n     *\n     * @param params The parameters from the RNG file.\n     *\n     * @param except The exception pattern.\n     */\n    // tslint:disable-next-line: no-reserved-keywords\n    function Data(xmlPath, type, datatypeLibrary, params, except) {\n        if (type === void 0) { type = \"token\"; }\n        if (datatypeLibrary === void 0) { datatypeLibrary = \"\"; }\n        var _this = _super.call(this, xmlPath) || this;\n        _this.type = type;\n        _this.datatypeLibrary = datatypeLibrary;\n        _this.except = except;\n        _this.datatype = datatypes_1.registry.get(_this.datatypeLibrary).types[_this.type];\n        if (_this.datatype === undefined) {\n            throw new Error(\"unknown type: \" + type);\n        }\n        _this.rngParams = params;\n        return _this;\n    }\n    Object.defineProperty(Data.prototype, \"params\", {\n        get: function () {\n            var ret = this._params;\n            if (ret != null) {\n                return ret;\n            }\n            ret = this._params = this.datatype.parseParams(this.xmlPath, this.rngParams);\n            return ret;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Data.prototype.allowsEmptyContent = function () {\n        return !(this.except !== undefined && this.except.hasEmptyPattern()) &&\n            !this.datatype.disallows(\"\", this.params);\n    };\n    Data.prototype.newWalker = function (nameResolver) {\n        // tslint:disable-next-line:no-use-before-declare\n        return new DataWalker(this, nameResolver);\n    };\n    return Data;\n}(base_1.Pattern));\nexports.Data = Data;\n/**\n * Walker for [[Data]].\n */\nvar DataWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(DataWalker, _super);\n    function DataWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = _super.call(this) || this;\n        if (elOrWalker.newWalker !== undefined) {\n            var el = elOrWalker;\n            var nameResolver = nameResolverOrMemo;\n            _this.el = el;\n            _this.nameResolver = nameResolver;\n            _this.context = el.datatype.needsContext ?\n                { resolver: _this.nameResolver } : undefined;\n            _this.matched = false;\n            _this.canEnd = _this.el.allowsEmptyContent();\n            _this.canEndAttribute = _this.canEnd;\n        }\n        else {\n            var walker = elOrWalker;\n            var memo = nameResolverOrMemo;\n            _this.el = walker.el;\n            _this.nameResolver = base_1.cloneIfNeeded(walker.nameResolver, memo);\n            _this.context = walker.context !== undefined ?\n                { resolver: _this.nameResolver } : undefined;\n            _this.matched = walker.matched;\n            _this.canEnd = walker.canEnd;\n            _this.canEndAttribute = walker.canEndAttribute;\n        }\n        return _this;\n    }\n    DataWalker.prototype._clone = function (memo) {\n        return new DataWalker(this, memo);\n    };\n    DataWalker.prototype.possible = function () {\n        // We completely ignore the possible exception when producing the\n        // possibilities. There is no clean way to specify such an exception.\n        return new Set(this.matched ? undefined :\n            [new base_1.Event(\"text\", this.el.datatype.regexp)]);\n    };\n    DataWalker.prototype.possibleAttributes = function () {\n        return new Set();\n    };\n    DataWalker.prototype.fireEvent = function (name, params) {\n        var ret = new base_1.InternalFireEventResult(false);\n        if (this.matched || name !== \"text\" ||\n            this.el.datatype.disallows(params[0], this.el.params, this.context)) {\n            return ret;\n        }\n        if (this.el.except !== undefined) {\n            var walker = this.el.except.newWalker(this.nameResolver);\n            var exceptRet = walker.fireEvent(name, params);\n            // False, so the except does match the text, and so this pattern does\n            // not match it.\n            if (exceptRet.matched) {\n                return ret;\n            }\n            // Otherwise, it is undefined, in which case it means the except does\n            // not match the text, and we are fine. Or it would be possible for the\n            // walker to have returned an error but there is nothing we can do with\n            // such errors here.\n        }\n        // If we matched, we are done. salve does not allow text that appears in\n        // an XML element to be passed as two \"text\" events. So there is nothing\n        // to come that could falsify the match. (If a client *does* pass\n        // multiple text events one after the other, it is using salve\n        // incorrectly.)\n        this.matched = true;\n        this.canEnd = true;\n        this.canEndAttribute = true;\n        ret.matched = true;\n        return ret;\n    };\n    DataWalker.prototype.end = function () {\n        return this.canEnd ? false : [new errors_1.ValidationError(\"value required\")];\n    };\n    DataWalker.prototype.endAttributes = function () {\n        return false;\n    };\n    return DataWalker;\n}(base_1.InternalWalker));\n//  LocalWords:  RNG's MPL RNG nd possibleCached\n//# sourceMappingURL=data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Pattern and walker for RNG's ``choice`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = require(\"../errors\");\nvar set_1 = require(\"../set\");\nvar base_1 = require(\"./base\");\nvar empty_1 = require(\"./empty\");\n/**\n * A pattern for ``<choice>``.\n */\nvar Choice = /** @class */ (function (_super) {\n    tslib_1.__extends(Choice, _super);\n    function Choice(xmlPath, patA, patB) {\n        var _this = _super.call(this, xmlPath, patA, patB) || this;\n        _this.optional = patA instanceof empty_1.Empty;\n        return _this;\n    }\n    Choice.prototype._computeHasEmptyPattern = function () {\n        return this.patA.hasEmptyPattern() || this.patB.hasEmptyPattern();\n    };\n    Choice.prototype.newWalker = function (resolver) {\n        return this.optional ?\n            // tslint:disable-next-line:no-use-before-declare\n            new OptionalChoiceWalker(this, resolver) :\n            // tslint:disable-next-line:no-use-before-declare\n            new ChoiceWalker(this, resolver);\n    };\n    return Choice;\n}(base_1.TwoSubpatterns));\nexports.Choice = Choice;\n/**\n * Walker for [[Choice]].\n */\nvar ChoiceWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(ChoiceWalker, _super);\n    function ChoiceWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = _super.call(this) || this;\n        if (elOrWalker.newWalker !== undefined) {\n            var el = elOrWalker;\n            var nameResolver = nameResolverOrMemo;\n            _this.el = el;\n            _this.hasAttrs = el.hasAttrs();\n            _this.nameResolver = nameResolver;\n            _this.deactivateA = false;\n            _this.deactivateB = false;\n            var walkerA = _this.walkerA = el.patA.newWalker(nameResolver);\n            var walkerB = _this.walkerB = el.patB.newWalker(nameResolver);\n            _this.canEndAttribute = !_this.hasAttrs ||\n                walkerA.canEndAttribute || walkerB.canEndAttribute;\n            _this.canEnd = walkerA.canEnd || walkerB.canEnd;\n        }\n        else {\n            var walker = elOrWalker;\n            var memo = nameResolverOrMemo;\n            _this.el = walker.el;\n            _this.hasAttrs = walker.hasAttrs;\n            _this.nameResolver = base_1.cloneIfNeeded(walker.nameResolver, memo);\n            _this.walkerA = walker.walkerA._clone(memo);\n            _this.walkerB = walker.walkerB._clone(memo);\n            _this.deactivateA = walker.deactivateA;\n            _this.deactivateB = walker.deactivateB;\n            _this.canEndAttribute = walker.canEndAttribute;\n            _this.canEnd = walker.canEnd;\n        }\n        return _this;\n    }\n    ChoiceWalker.prototype._clone = function (memo) {\n        return new ChoiceWalker(this, memo);\n    };\n    ChoiceWalker.prototype.possible = function () {\n        var walkerA = this.walkerA;\n        var ret = this.deactivateA ? undefined : walkerA.possible();\n        var walkerB = this.walkerB;\n        if (!this.deactivateB) {\n            var possibleB = walkerB.possible();\n            if (ret === undefined) {\n                ret = possibleB;\n            }\n            else {\n                set_1.union(ret, possibleB);\n            }\n        }\n        else if (ret === undefined) {\n            ret = new Set();\n        }\n        return ret;\n    };\n    ChoiceWalker.prototype.possibleAttributes = function () {\n        var walkerA = this.walkerA;\n        var ret = this.deactivateA ? undefined : walkerA.possibleAttributes();\n        var walkerB = this.walkerB;\n        if (!this.deactivateB) {\n            var possibleB = walkerB.possibleAttributes();\n            if (ret === undefined) {\n                ret = possibleB;\n            }\n            else {\n                set_1.union(ret, possibleB);\n            }\n        }\n        else if (ret === undefined) {\n            ret = new Set();\n        }\n        return ret;\n    };\n    ChoiceWalker.prototype.fireEvent = function (name, params) {\n        var ret = new base_1.InternalFireEventResult(false);\n        if (this.deactivateA && this.deactivateB) {\n            return ret;\n        }\n        var evIsAttributeEvent = base_1.isAttributeEvent(name);\n        if (evIsAttributeEvent && !this.hasAttrs) {\n            return ret;\n        }\n        var retA = this.deactivateA ? new base_1.InternalFireEventResult(false) :\n            this.walkerA.fireEvent(name, params);\n        var retB = this.deactivateB ? new base_1.InternalFireEventResult(false) :\n            this.walkerB.fireEvent(name, params);\n        if (retA.matched) {\n            if (!retB.matched) {\n                this.deactivateB = true;\n                if (evIsAttributeEvent) {\n                    this.canEndAttribute = this.walkerA.canEndAttribute;\n                }\n                this.canEnd = this.walkerA.canEnd;\n            }\n            else {\n                if (evIsAttributeEvent) {\n                    this.canEndAttribute = this.walkerA.canEndAttribute ||\n                        this.walkerB.canEndAttribute;\n                }\n                this.canEnd = this.walkerA.canEnd || this.walkerB.canEnd;\n            }\n            return retA.combine(retB);\n        }\n        if (retB.matched) {\n            this.deactivateA = true;\n            if (evIsAttributeEvent) {\n                this.canEndAttribute = this.walkerB.canEndAttribute;\n            }\n            this.canEnd = this.walkerB.canEnd;\n        }\n        return retB.combine(retA);\n    };\n    ChoiceWalker.prototype.end = function () {\n        if (this.canEnd) {\n            // Instead of an ended flag, we set both flags.\n            this.deactivateA = true;\n            this.deactivateB = true;\n            return false;\n        }\n        var retA = this.deactivateA ? false : this.walkerA.end();\n        var retB = this.deactivateB ? false : this.walkerB.end();\n        if (!retA) {\n            return retB;\n        }\n        if (!retB) {\n            return retA;\n        }\n        // If we are here both walkers exist and returned an error. We combine the\n        // errors no matter which walker may have been deactivated.\n        var combined = this.combineChoices();\n        return combined.length !== 0 ? combined : retA;\n    };\n    ChoiceWalker.prototype.endAttributes = function () {\n        if (this.canEndAttribute) {\n            return false;\n        }\n        var retA = this.deactivateA ? false : this.walkerA.endAttributes();\n        var retB = this.deactivateB ? false : this.walkerB.endAttributes();\n        if (!retA) {\n            return retB;\n        }\n        if (!retB) {\n            return retA;\n        }\n        // If we are here both walkers exist and returned an error. We combine the\n        // errors no matter which walker may have been deactivated.\n        var combined = this.combineChoices();\n        return combined.length !== 0 ? combined : retA;\n    };\n    ChoiceWalker.prototype.combineChoices = function () {\n        var namesA = [];\n        var values = [];\n        var notAChoiceError = false;\n        try {\n            for (var _a = tslib_1.__values(this.walkerA.possible()), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var ev = _b.value;\n                var name_1 = ev.params[0];\n                if (name_1 === \"enterStartTag\" || name_1 === \"attributeName\") {\n                    namesA.push(ev.params[1]);\n                }\n                else if (name_1 === \"attributeValue\" || name_1 === \"text\") {\n                    values.push(ev.params[1]);\n                }\n                else {\n                    notAChoiceError = true;\n                    break;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (!notAChoiceError) {\n            var namesB = [];\n            try {\n                for (var _d = tslib_1.__values(this.walkerB.possible()), _e = _d.next(); !_e.done; _e = _d.next()) {\n                    var ev = _e.value;\n                    var name_2 = ev.params[0];\n                    if (name_2 === \"enterStartTag\" || name_2 === \"attributeName\") {\n                        namesB.push(ev.params[1]);\n                    }\n                    else if (name_2 === \"attributeValue\" || name_2 === \"text\") {\n                        values.push(ev.params[1]);\n                    }\n                    else {\n                        notAChoiceError = true;\n                        break;\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_e && !_e.done && (_f = _d.return)) _f.call(_d);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            if (!notAChoiceError) {\n                return [\n                    values.length !== 0 ?\n                        new errors_1.ValidationError(\"one value required from the following: \" + values.join(\", \")) :\n                        new errors_1.ChoiceError(namesA, namesB),\n                ];\n            }\n        }\n        // We cannot make a good combination.\n        return [];\n        var e_1, _c, e_2, _f;\n    };\n    return ChoiceWalker;\n}(base_1.InternalWalker));\n/**\n * Walker for [[Choice]].\n */\nvar OptionalChoiceWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(OptionalChoiceWalker, _super);\n    function OptionalChoiceWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = _super.call(this) || this;\n        if (elOrWalker.newWalker !== undefined) {\n            var el = elOrWalker;\n            var nameResolver = nameResolverOrMemo;\n            _this.el = el;\n            _this.hasAttrs = el.hasAttrs();\n            _this.nameResolver = nameResolver;\n            _this.ended = false;\n            _this.walkerB = el.patB.newWalker(nameResolver);\n            _this.canEndAttribute = true;\n            _this.canEnd = true;\n        }\n        else {\n            var walker = elOrWalker;\n            var memo = nameResolverOrMemo;\n            _this.el = walker.el;\n            _this.hasAttrs = walker.hasAttrs;\n            _this.nameResolver = base_1.cloneIfNeeded(walker.nameResolver, memo);\n            _this.walkerB = walker.walkerB._clone(memo);\n            _this.ended = walker.ended;\n            _this.canEndAttribute = walker.canEndAttribute;\n            _this.canEnd = walker.canEnd;\n        }\n        return _this;\n    }\n    OptionalChoiceWalker.prototype._clone = function (memo) {\n        return new OptionalChoiceWalker(this, memo);\n    };\n    OptionalChoiceWalker.prototype.possible = function () {\n        return this.ended ? new Set() : this.walkerB.possible();\n    };\n    OptionalChoiceWalker.prototype.possibleAttributes = function () {\n        return this.ended ? new Set() : this.walkerB.possibleAttributes();\n    };\n    OptionalChoiceWalker.prototype.fireEvent = function (name, params) {\n        var ret = new base_1.InternalFireEventResult(false);\n        if (this.ended) {\n            return ret;\n        }\n        var evIsAttributeEvent = base_1.isAttributeEvent(name);\n        if (evIsAttributeEvent && !this.hasAttrs) {\n            return ret;\n        }\n        var retA = new base_1.InternalFireEventResult(name === \"text\" && !/\\S/.test(params[0]));\n        if (retA.matched) {\n            return retA;\n        }\n        var retB = this.walkerB.fireEvent(name, params);\n        if (retB.matched) {\n            if (evIsAttributeEvent) {\n                this.canEndAttribute = this.walkerB.canEndAttribute;\n            }\n            this.canEnd = this.walkerB.canEnd;\n        }\n        return retB;\n    };\n    OptionalChoiceWalker.prototype.end = function () {\n        if (this.canEnd) {\n            this.ended = true;\n            return false;\n        }\n        return this.walkerB.end();\n    };\n    OptionalChoiceWalker.prototype.endAttributes = function () {\n        if (this.canEndAttribute) {\n            return false;\n        }\n        return this.walkerB.endAttributes();\n    };\n    return OptionalChoiceWalker;\n}(base_1.InternalWalker));\n//  LocalWords:  RNG's MPL retA ChoiceWalker enterStartTag notAChoiceError\n//  LocalWords:  tslint ChoiceError\n//# sourceMappingURL=choice.js.map","\"use strict\";\n/**\n * A mock implementation of Node's util package. This module implements only\n * what is actually used in salve.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A mock of Node's ``util.inspect``.\n */\nfunction inspect(x) {\n    if (x === undefined) {\n        return \"undefined\";\n    }\n    if (x === null) {\n        return \"null\";\n    }\n    return x.toString();\n}\nexports.inspect = inspect;\n//  LocalWords:  Mangalam MPL Dubeau util\n//# sourceMappingURL=util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Pattern and walker for RNG's ``attribute`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = require(\"../errors\");\nvar set_1 = require(\"../set\");\nvar base_1 = require(\"./base\");\n/**\n * A pattern for attributes.\n */\nvar Attribute = /** @class */ (function (_super) {\n    tslib_1.__extends(Attribute, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param name The qualified name of the attribute.\n     *\n     * @param pat The pattern contained by this one.\n     */\n    function Attribute(xmlPath, name, pat) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.name = name;\n        _this.pat = pat;\n        return _this;\n    }\n    Attribute.prototype._prepare = function (definitions, namespaces) {\n        var ret = this.pat._prepare(definitions, namespaces);\n        this.name._recordNamespaces(namespaces, false);\n        return ret;\n    };\n    Attribute.prototype.hasAttrs = function () {\n        return true;\n    };\n    Attribute.prototype.hasEmptyPattern = function () {\n        return false;\n    };\n    Attribute.prototype.newWalker = function (nameResolver) {\n        // tslint:disable-next-line:no-use-before-declare\n        return new AttributeWalker(this, nameResolver);\n    };\n    return Attribute;\n}(base_1.Pattern));\nexports.Attribute = Attribute;\n/**\n * Walker for [[Attribute]].\n */\nvar AttributeWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(AttributeWalker, _super);\n    function AttributeWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = _super.call(this) || this;\n        if (elOrWalker.newWalker !== undefined) {\n            var el = elOrWalker;\n            _this.el = el;\n            _this.nameResolver = nameResolverOrMemo;\n            _this.subwalker = el.pat.newWalker(_this.nameResolver);\n            _this.name = el.name;\n            _this.seenName = false;\n            _this.canEndAttribute = false;\n            _this.canEnd = false;\n        }\n        else {\n            var walker = elOrWalker;\n            var memo = nameResolverOrMemo;\n            _this.el = walker.el;\n            _this.nameResolver = base_1.cloneIfNeeded(walker.nameResolver, memo);\n            _this.seenName = walker.seenName;\n            _this.subwalker = walker.subwalker._clone(memo);\n            _this.name = walker.name;\n            _this.canEndAttribute = walker.canEndAttribute;\n            _this.canEnd = walker.canEnd;\n        }\n        return _this;\n    }\n    AttributeWalker.prototype._clone = function (memo) {\n        return new AttributeWalker(this, memo);\n    };\n    AttributeWalker.prototype.possible = function () {\n        return new Set();\n    };\n    AttributeWalker.prototype.possibleAttributes = function () {\n        if (this.canEnd) {\n            return new Set();\n        }\n        if (!this.seenName) {\n            return new Set([new base_1.Event(\"attributeName\", this.name)]);\n        }\n        // Convert text events to attributeValue events.\n        return set_1.map(this.subwalker.possible(), function (ev) {\n            if (ev.params[0] !== \"text\") {\n                throw new Error(\"unexpected event type: \" + ev.params[0]);\n            }\n            return new base_1.Event(\"attributeValue\", ev.params[1]);\n        });\n    };\n    AttributeWalker.prototype.fireEvent = function (name, params) {\n        // If canEnd is true, we've done everything we could. So we don't\n        // want to match again.\n        var ret = new base_1.InternalFireEventResult(false);\n        if (this.canEnd) {\n            return ret;\n        }\n        var value;\n        if (this.seenName) {\n            if (name === \"attributeValue\") {\n                // Convert the attributeValue event to a text event.\n                value = params[0];\n            }\n        }\n        else if ((name === \"attributeName\" || name === \"attributeNameAndValue\") &&\n            this.name.match(params[0], params[1])) {\n            this.seenName = true;\n            if (name === \"attributeName\") {\n                ret.matched = true;\n                return ret;\n            }\n            value = params[2];\n        }\n        if (value !== undefined) {\n            this.canEnd = true;\n            this.canEndAttribute = true;\n            if (value !== \"\") {\n                ret = this.subwalker.fireEvent(\"text\", [value]);\n                if (!ret.matched) {\n                    ret.errors =\n                        [new errors_1.AttributeValueError(\"invalid attribute value\", this.name)];\n                }\n            }\n            else {\n                ret.matched = true;\n            }\n            if (ret.matched) {\n                return base_1.InternalFireEventResult.fromEndResult(this.subwalker.end());\n            }\n        }\n        return ret;\n    };\n    AttributeWalker.prototype.endAttributes = function () {\n        if (this.canEnd) {\n            return false;\n        }\n        // We set the canEnd flags true even though we did not end properly. This\n        // prevents producing errors about the same attribute multiple times,\n        // because end is called by element walkers when leaveStartTag is\n        // encountered, and again when the element closes.\n        this.canEnd = true;\n        this.canEndAttribute = true;\n        return [this.seenName ?\n                new errors_1.AttributeValueError(\"attribute value missing\", this.name) :\n                new errors_1.AttributeNameError(\"attribute missing\", this.name)];\n    };\n    AttributeWalker.prototype.end = function () {\n        return false;\n    };\n    return AttributeWalker;\n}(base_1.InternalWalker));\n//  LocalWords:  RNG's MPL RNG attributeName attributeValue ev params\n//  LocalWords:  neutralizeAttribute\n//# sourceMappingURL=attribute.js.map","\"use strict\";\n/**\n * RNG-based validator.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = \"7.0.2\";\nvar patterns_1 = require(\"./patterns\");\nexports.eventsToTreeString = patterns_1.eventsToTreeString;\nexports.Event = patterns_1.Event;\nexports.Grammar = patterns_1.Grammar;\nexports.GrammarWalker = patterns_1.GrammarWalker;\nexports.BasePattern = patterns_1.BasePattern;\nexports.RefError = patterns_1.RefError;\nvar conversion_1 = require(\"./conversion\");\nexports.convertRNGToPattern = conversion_1.convertRNGToPattern;\nvar write_1 = require(\"./json-format/write\");\nexports.writeTreeToJSON = write_1.writeTreeToJSON;\nexports.renameRefsDefines = write_1.renameRefsDefines;\nvar read_1 = require(\"./json-format/read\");\nexports.constructTree = read_1.constructTree;\nexports.readTreeFromJSON = read_1.readTreeFromJSON;\nvar ename_1 = require(\"./ename\");\nexports.EName = ename_1.EName;\nvar errors_1 = require(\"./errors\");\nexports.AttributeNameError = errors_1.AttributeNameError;\nexports.AttributeValueError = errors_1.AttributeValueError;\nexports.ChoiceError = errors_1.ChoiceError;\nexports.ElementNameError = errors_1.ElementNameError;\nexports.ValidationError = errors_1.ValidationError;\nvar name_resolver_1 = require(\"./name_resolver\");\nexports.NameResolver = name_resolver_1.NameResolver;\nvar name_patterns_1 = require(\"./name_patterns\");\nexports.BaseName = name_patterns_1.Base;\nexports.Name = name_patterns_1.Name;\nexports.NameChoice = name_patterns_1.NameChoice;\nexports.NsName = name_patterns_1.NsName;\nexports.AnyName = name_patterns_1.AnyName;\n//  LocalWords:  rng Mangalam Dubeau MPL RNG constructTree validator\n//# sourceMappingURL=validate.js.map"],"sourceRoot":""}