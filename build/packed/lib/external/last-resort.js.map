{"version":3,"sources":["src/last-resort.js","src/last-resort.ts"],"names":["triggered","OnError","context","options","_triggered","_triggeredUncaughtException","_triggeredUnhandledException","_onunhandledrejection","_context","_onerror","_makeErrorHandler","addEventListener","noUnhandledRejection","onunhandledrejection","_makeUnhandledRejectionHandler","self","importScripts","Promise","version","getNewLibraryCopy","prototype","uninstall","removeEventListener","register","fn","_registered","_handle","evContext","ev","registered","call","_this","exports","install","force","previous","__LastResortInstalledOnError","Error","ret","isInstalled","wasTriggered"],"mappings":"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","file":"src/last-resort.js","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2016 Louis-Dominique Dubeau\n */\n/* global define module require Promise */\n(function boot(root, factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define([\n            'module',\n            'exports'\n        ], function stub(module, exports) {\n            if (root.LastResort) {\n                module.exports = root.LastResort;\n                return;\n            }\n            factory(exports);\n        });\n    } else if (typeof module === 'object' && module.exports) {\n        if (root.LastResort) {\n            module.exports = root.LastResort;\n            return;\n        }\n        factory(module.exports);\n    } else {\n        var exports = root.LastResort = {};\n        factory(exports);\n    }\n}(this, function factory(exports) {\n    'use strict';\n    'use strict';\n    var triggered = false;\n    var OnError = function () {\n        function OnError(context, options) {\n            this._triggered = false;\n            this._triggeredUncaughtException = false;\n            this._triggeredUnhandledException = false;\n            this._onunhandledrejection = null;\n            this._context = context;\n            this._onerror = this._makeErrorHandler();\n            this._onunhandledrejection = null;\n            context.addEventListener('error', this._onerror);\n            if (options.noUnhandledRejection) {\n                return;\n            }\n            var onunhandledrejection = this._onunhandledrejection = this._makeUnhandledRejectionHandler();\n            context.addEventListener('unhandledrejection', onunhandledrejection);\n        }\n        OnError.prototype.uninstall = function () {\n            var context = this._context;\n            if (this._onerror) {\n                context.removeEventListener('error', this._onerror);\n                this._onerror = null;\n            }\n            if (!this._onunhandledrejection) {\n                return;\n            }\n            context.removeEventListener('unhandledrejection', this._onunhandledrejection);\n            this._onunhandledrejection = null;\n        };\n        OnError.prototype.register = function (fn) {\n            this._registered = fn;\n        };\n        OnError.prototype._handle = function (evContext, ev) {\n            var registered = this._registered;\n            this._triggered = true;\n            triggered = true;\n            // Nothing to do!\n            if (!registered) {\n                return;\n            }\n            this.uninstall();\n            registered.call(evContext, ev);\n        };\n        OnError.prototype._makeErrorHandler = function () {\n            var _this = this;\n            return function (ev) {\n                _this._triggeredUncaughtException = true;\n                _this._handle(_this, ev);\n            };\n        };\n        OnError.prototype._makeUnhandledRejectionHandler = function () {\n            var _this = this;\n            return function (ev) {\n                _this._triggeredUnhandledException = true;\n                _this._handle(_this, ev);\n            };\n        };\n        return OnError;\n    }();\n    exports.OnError = OnError;\n    function install(context, options) {\n        options = options || {\n            force: false,\n            noUnhandledRejection: false\n        };\n        var force = options.force;\n        var previous = context.__LastResortInstalledOnError;\n        if (previous) {\n            if (!force) {\n                throw new Error('trying to set onerror more than once on the same context.');\n            }\n            previous.uninstall();\n        }\n        var ret = context.__LastResortInstalledOnError = new OnError(context, options);\n        return ret;\n    }\n    exports.install = install;\n    function isInstalled(context) {\n        return !!context.__LastResortInstalledOnError;\n    }\n    exports.isInstalled = isInstalled;\n    function wasTriggered() {\n        return triggered;\n    }\n    exports.wasTriggered = wasTriggered;\n    exports.version = '0.1.0';\n}));\n//# sourceMappingURL=last-resort.js.map\n","/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright 2016 Louis-Dominique Dubeau\n */\n/* global define module require Promise */\nexport interface Options {\n  noUnhandledRejection: boolean;\n  force: boolean;\n}\n\nlet triggered: boolean = false;\n\nexport type Handler = (ev: any) => void;\nexport type Context = Window;\n\nexport class OnError {\n  private _context: Context;\n  private _registered: Handler;\n  private _triggered: boolean = false;\n  private _triggeredUncaughtException: boolean = false;\n  private _triggeredUnhandledException: boolean = false;\n  private _onerror: any;\n  private _onunhandledrejection: any = null;\n\n  constructor(context: Context, options: Options) {\n    this._context = context;\n    this._onerror = this._makeErrorHandler();\n    this._onunhandledrejection = null;\n\n    context.addEventListener(\"error\", this._onerror);\n\n    if (options.noUnhandledRejection) {\n      return;\n    }\n\n    const onunhandledrejection: Handler =\n      this._onunhandledrejection = this._makeUnhandledRejectionHandler();\n\n    //\n    // It is currently impossible to use ``addEventListener`` robustly in\n    // workers to listen for ``unhandledrejection``. In brief,\n    // ``addEventListener`` works on Chrome, FF and Opera but fails\n    // elsewhere. See this for details:\n    //\n    // https://github.com/petkaantonov/bluebird/pull/1213\n    //\n    // There could be more sophisticated ways to detect the issue and work\n    // around it but I don't want to put more work into this than\n    // necessary. This works. We check that we are in a worker. Bluebird has a\n    // ``version`` field, a ``getNewLibraryCopy`` function and has a ``Promise``\n    // reference on ``Promise``.\n    //\n    if (!(typeof self !== \"undefined\" && self.importScripts &&\n          Promise.version && Promise.getNewLibraryCopy &&\n          Promise.Promise === Promise)) {\n      context.addEventListener(\"unhandledrejection\", onunhandledrejection);\n    }\n    else {\n      context.onunhandledrejection = onunhandledrejection;\n    }\n  }\n\n  public uninstall(): void {\n    const context: Context = this._context;\n\n    if (this._onerror) {\n      context.removeEventListener(\"error\", this._onerror);\n      this._onerror = null;\n    }\n\n    if (!this._onunhandledrejection) {\n      return;\n    }\n\n    context.removeEventListener(\"unhandledrejection\",\n                                this._onunhandledrejection);\n\n    // Undo the workaround if necessary.\n    if (context.onunhandledrejection === this._onunhandledrejection) {\n      context.onunhandledrejection = null;\n    }\n\n    this._onunhandledrejection = null;\n  }\n\n  public register(fn: Handler): void {\n    this._registered = fn;\n  }\n\n  private _handle(evContext: any, ev: any): void {\n    const registered: Handler = this._registered;\n    this._triggered = true;\n    triggered = true;\n\n    // Nothing to do!\n    if (!registered) {\n      return;\n    }\n\n    this.uninstall();\n    registered.call(evContext, ev);\n  }\n\n  private _makeErrorHandler(): Handler {\n    return (ev: any) => {\n      this._triggeredUncaughtException = true;\n      this._handle(this, ev);\n    };\n  }\n\n  private _makeUnhandledRejectionHandler(): Handler {\n    return (ev: any) => {\n      this._triggeredUnhandledException = true;\n      this._handle(this, ev);\n    };\n  }\n}\n\nexport function install(context: Context, options?: Options): OnError {\n  options = options || {\n    force: false,\n    noUnhandledRejection: false,\n  };\n\n  const force: boolean = options.force;\n\n  const previous: OnError = context.__LastResortInstalledOnError;\n  if (previous) {\n    if (!force) {\n      throw new Error(\n        \"trying to set onerror more than once on the same context.\");\n    }\n    previous.uninstall();\n  }\n\n  const ret: OnError = context.__LastResortInstalledOnError =\n    new OnError(context, options);\n  return ret;\n}\n\nexport function isInstalled(context: Context): boolean {\n  return !!context.__LastResortInstalledOnError;\n}\n\nexport function wasTriggered(): boolean {\n  return triggered;\n}\n\nexport const version: string = \"0.1.0\";\n"],"sourceRoot":"/source/"}