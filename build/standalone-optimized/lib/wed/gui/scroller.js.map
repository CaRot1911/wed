{"version":3,"sources":["../../../wed/gui/scroller.ts"],"names":[],"mappings":"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","file":"scroller.js","sourcesContent":["/**\n * Content scroller.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\nimport { Observable, Subject } from \"rxjs\";\n\nimport { pointInContents } from \"../domutil\";\n\n/**\n * Event emitted when the scroller scrolls.\n */\nexport interface ScrollEvent {\n  /** The scroller that generated this event. */\n  scroller: Scroller;\n}\n\n/**\n * Content scroller. This object is responsible for scrolling the GUI tree.\n */\nexport class Scroller {\n  private readonly _events: Subject<ScrollEvent> = new Subject();\n\n  /** This is where you can listen to scrolling events. */\n  readonly events: Observable<ScrollEvent>= this._events.asObservable();\n\n  /**\n   * @param el The DOM element responsible for scrolling.\n   */\n  constructor(private readonly el: HTMLElement) {\n    $(el).on(\"scroll\", () => {\n      this._events.next({ scroller: this });\n    });\n  }\n\n  get scrollTop(): number {\n    return this.el.scrollTop;\n  }\n\n  get scrollLeft(): number {\n    return this.el.scrollLeft;\n  }\n\n  getBoundingClientRect(): ClientRect {\n    return this.el.getBoundingClientRect();\n  }\n\n  /**\n   * Coerce this scroller to a specific height in pixels.\n   *\n   * @param height The height to which to coerce.\n   */\n  coerceHeight(height: number): void {\n    const el = this.el;\n    const heightStr = `${height}px`;\n    el.style.maxHeight = heightStr;\n    el.style.minHeight = heightStr;\n  }\n\n  /**\n   * Determine whether a point is inside the DOM element managed by this\n   * scroller.\n   */\n  isPointInside(x: number, y: number): boolean {\n    return pointInContents(this.el, x, y);\n  }\n\n  /**\n   * Scrolls the window and scroller so that the rectangle is visible to the\n   * user. The rectangle coordinates must be relative to the scroller\n   * element.\n   *\n   * This method tries to be the least disruptive it can: it will adjust the\n   * scoller and the window *just enough* to show the rectangle.\n   */\n  scrollIntoView(left: number, top: number, right: number,\n                 bottom: number): void {\n    // Adjust gui_root.\n    const el = this.el;\n    let vtop = el.scrollTop;\n    const vheight = el.clientHeight;\n    const vbottom = vtop + vheight;\n\n    if (top < vtop || bottom > vbottom) {\n      // Not already in view.\n      vtop = top < vtop ? top : bottom - vheight;\n      el.scrollTop = vtop;\n    }\n\n    let vleft = el.scrollLeft;\n    const vwidth = el.clientWidth;\n    const vright = vleft + vwidth;\n\n    if (left < vleft || right > vright) {\n      // Not already in view.\n      vleft = left < vleft ? left : right - vwidth;\n      el.scrollLeft = vleft;\n    }\n\n    const pos = el.getBoundingClientRect();\n\n    // Compute the coordinates relative to the client.\n    left = left - vleft + pos.left;\n    right = right - vleft + pos.left;\n    top = top - vtop + pos.top;\n    bottom = bottom - vtop + pos.top;\n\n    const doc = el.ownerDocument;\n    const sheight = doc.body.scrollHeight;\n    const swidth = doc.body.scrollWidth;\n\n    let byY = 0;\n    if (top < 0 || bottom > sheight) {\n      byY = top < 0 ? top : bottom;\n    }\n\n    let byX = 0;\n    if (left < 0 || right > swidth) {\n      byX = left < 0 ? left : right;\n    }\n\n    doc.defaultView.scrollBy(byX, byY);\n  }\n}\n"]}