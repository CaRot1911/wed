{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../../../lib/wed/gui/button.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from \"rxjs/Observable\";\nimport { Subject } from \"rxjs/Subject\";\n\nexport interface ButtonEvent {\n  name: string;\n  button: Button;\n}\n\nexport interface ClickEvent extends ButtonEvent {\n  name: \"Click\";\n}\n\n/**\n * A simple button that can be clicked.\n */\nexport class Button {\n  /**\n   * The current DOM element representing the button, if it has been rendered\n   * already.\n   */\n  protected el: Element | undefined;\n\n  /**\n   * The object on which this class and subclasses may push new events.\n   */\n  protected readonly _events: Subject<ClickEvent> = new Subject();\n\n  /**\n   * The observable on which clients can listen for events.\n   */\n  readonly events: Observable<ClickEvent> = this._events.asObservable();\n\n  /**\n   * @param desc The full description of what the button does. This will be used\n   * in the button's tooltip.\n   *\n   * @param abbreviatedDesc An abbreviated description. This may be used as text\n   * inside the button.\n   *\n   * @param icon An optional icon for the button.\n   *\n   * @param extraClass Extra classes to add to ``className``.\n   */\n  constructor(readonly desc: string,\n              readonly abbreviatedDesc: string | undefined,\n              readonly icon: string = \"\",\n              readonly extraClass: string = \"\") {}\n\n  /** The class name that [[makeButton]] must use. */\n  protected get buttonClassName(): string {\n    let extraClass = this.extraClass;\n    if (extraClass !== \"\") {\n      extraClass = ` ${extraClass}`;\n    }\n\n    return `btn btn-default${extraClass}`;\n  }\n\n  /**\n   * The text that goes inside a button. This is the abbreviated description, or\n   * if unavailable, the long description.\n   */\n  protected get buttonText(): string {\n    // If we don't have an abbreviation, we get the regular description.\n    return this.abbreviatedDesc === undefined ?\n      this.desc : this.abbreviatedDesc;\n  }\n\n  /**\n   * Render the button.\n   *\n   * @param parent On first render, this parameter must contain the parent DOM\n   * element of the button. On later renders, this parameter is ignored.\n   *\n   */\n  render(parent?: Element | Document | DocumentFragment): void {\n    let position: Node | null = null;\n    if (this.el !== undefined) {\n      position = this.el.nextSibling;\n      parent = this.el.parentNode as Element;\n      const $el = $(this.el);\n      $el.remove();\n      $el.tooltip(\"destroy\");\n    }\n\n    if (parent == null) {\n      throw new Error(\"called first render without a parent\");\n    }\n\n    const button = this.makeButton(parent.ownerDocument);\n    this.el = button;\n    parent.insertBefore(button, position);\n  }\n\n  /**\n   * Create a button, fill its contents, set its tooltip and add the event\n   * handlers.\n   *\n   * @param doc The document in which we are creating the element.\n   *\n   * @returns The new button.\n   */\n  protected makeButton(doc: Document): Element {\n    const button = doc.createElement(\"button\");\n    button.className = this.buttonClassName;\n    const $button = $(button);\n    this.setButtonContent(button);\n    this.setButtonTooltip($button);\n    this.setButtonEventHandlers($button);\n\n    return button;\n  }\n\n  /**\n   * Fill the content of the button.\n   *\n   * @param button The button to fill.\n   */\n  protected setButtonContent(button: Element): void {\n    const icon = this.icon;\n    if (icon !== \"\") {\n      // tslint:disable-next-line:no-inner-html\n      button.innerHTML = icon;\n    }\n    else {\n      button.textContent = this.buttonText;\n    }\n  }\n\n  /**\n   * Make a tooltip for the button.\n   *\n   * @param $button The button for which to make a tooltip.\n   */\n  protected setButtonTooltip($button: JQuery): void {\n    const desc = this.desc;\n    if (this.icon !== \"\" || this.buttonText !== desc) {\n      $button[0].setAttribute(\"title\", desc);\n      $button.tooltip({ title: desc,\n                        container: \"body\",\n                        placement: \"auto\",\n                        trigger: \"hover\" });\n    }\n  }\n\n  /**\n   * Set event handlers on the button.\n   */\n  setButtonEventHandlers($button: JQuery): void {\n    $button.click(() => {\n      this._events.next({ name: \"Click\", button: this });\n      return false;\n    });\n\n    // Prevents acquiring the focus.\n    $button.mousedown(false);\n  }\n}\n\n/**\n * A button that represents an on/off state.\n */\nexport class ToggleButton extends Button {\n  protected _pressed: boolean;\n\n  /**\n   * @param initialyPressed Whether the button is initially pressed.\n   *\n   * @param desc See [[Button]].\n   *\n   * @param abbreviatedDesc See [[Button]].\n   *\n   * @param icon See [[Button]].\n   *\n   * @param extraClass See [[Button]].\n   */\n  constructor(initialyPressed: boolean,\n              readonly desc: string,\n              readonly abbreviatedDesc: string | undefined,\n              readonly icon: string = \"\",\n              readonly extraClass: string = \"\") {\n    super(desc, abbreviatedDesc, icon, extraClass);\n    this._pressed = initialyPressed;\n\n    this.events.subscribe((event) => {\n      if (event.name !== \"Click\" || this.el === undefined) {\n        return;\n      }\n\n      this._pressed = !this._pressed;\n      this.render();\n    });\n  }\n\n  /**\n   * Whether the button is in the pressed state.\n   */\n  get pressed(): boolean {\n    return this._pressed;\n  }\n\n  set pressed(value: boolean) {\n    if (this._pressed === value) {\n      return;\n    }\n\n    this._pressed = value;\n    if (this.el !== undefined) {\n      this.render();\n    }\n  }\n\n  protected get buttonClassName(): string {\n    let extraClass = this.extraClass;\n    if (extraClass !== \"\") {\n      extraClass = ` ${extraClass}`;\n    }\n\n    return `btn btn-default${extraClass}${this._pressed ? \" active\" : \"\"}`;\n  }\n}\n"]}