{"version":3,"sources":["../../../wed/decorator.ts"],"names":[],"mappings":"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","file":"decorator.js","sourcesContent":["/**\n * Basic decoration facilities.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\nimport * as  $ from \"jquery\";\nimport * as mergeOptions from \"merge-options\";\nimport * as salve from \"salve\";\n\nimport { Action } from \"./action\";\nimport { CaretManager } from \"./caret-manager\";\nimport { DLoc } from \"./dloc\";\nimport { Listener } from \"./domlistener\";\nimport { isAttr, isText } from \"./domtypeguards\";\nimport * as  domutil from \"./domutil\";\nimport { GUIUpdater } from \"./gui-updater\";\nimport { ContextMenu } from \"./gui/action-context-menu\";\nimport { Transformation, TransformationData } from \"./transformation\";\nimport { BeforeInsertNodeAtEvent } from \"./tree-updater\";\nimport * as  util from \"./util\";\nimport { Validator } from \"./validator\";\n\nconst indexOf = domutil.indexOf;\nconst closestByClass = domutil.closestByClass;\n\nexport interface Editor {\n  gui_root: Element;\n  data_root: Element;\n  max_label_level: number;\n  complex_pattern_action: Action<{}>;\n  attributes: string;\n  validator: Validator;\n  caretManager: CaretManager;\n  // tslint:disable-next-line:no-any\n  mode: any;\n  _makeMenuItemForAction(action: Action<{}>, data?: {}): HTMLElement;\n  resolver: salve.NameResolver;\n  isAttrProtected(name: string, parent: Element): boolean;\n  isAttrProtected(node: Node): boolean;\n  toDataNode(el: Node): Node | Attr;\n  makeDocumentationLink(url: string): HTMLElement;\n  getElementTransformationsAt(pos: DLoc, transformationType: string):\n  { name: string,\n    tr: Transformation<TransformationData> }[];\n  // tslint:disable-next-line:no-any\n  [key: string]: any;\n}\n\nfunction tryToSetDataCaret(editor: Editor, dataCaret: DLoc): void {\n  try {\n    editor.caretManager.setCaret(dataCaret, { textEdit: true });\n  }\n  catch (e) {\n    // Do nothing.\n  }\n}\n\nfunction attributeSelectorMatch(selector: string, name: string): boolean {\n  return selector === \"*\" || selector === name;\n}\n\ninterface AttributeHidingSpecs {\n  elements: {\n    selector: string,\n    attributes: (string | { except: string[]})[];\n  }[];\n}\n\n/**\n * A decorator is responsible for adding decorations to a tree of DOM\n * elements. Decorations are GUI elements.\n */\nexport class Decorator {\n  private _attributeHidingSpecs: AttributeHidingSpecs | null;\n\n  /**\n   * @param domlistener The listener that the decorator must use to know when\n   * the DOM tree has changed and must be redecorated.\n   *\n   * @param editor The editor instance for which this decorator was created.\n   *\n   * @param guiUpdater The updater to use to modify the GUI tree. All\n   * modifications to the GUI must go through this updater.\n   */\n  constructor(protected readonly domlistener: Listener,\n              protected readonly editor: Editor,\n              protected readonly guiUpdater: GUIUpdater) {}\n\n  /**\n   * Request that the decorator add its event handlers to its listener.\n   */\n  addHandlers(): void {\n    this.guiUpdater.events.subscribe((ev) => {\n      if (ev.name !== \"BeforeInsertNodeAt\" || isText(ev.node)) {\n        return;\n      }\n\n      this.contentEditableHandler(ev);\n    });\n  }\n\n  /**\n   * Start listening to changes to the DOM tree.\n   */\n  startListening(): void {\n    this.domlistener.startListening();\n  }\n\n  /**\n   * This function adds a separator between each child element of the element\n   * passed as ``el``. The function only considers ``._real`` elements.\n   *\n   * @param el The element to decorate.\n   *\n   * @param sep A separator.\n   */\n  listDecorator(el: Element, sep: string | Element): void {\n    // We expect to work with a homogeneous list. That is, all children the same\n    // element.\n    const nameMap: Record<string, number> = Object.create(null);\n    let child = el.firstElementChild;\n    while (child !== null) {\n      if (child.classList.contains(\"_real\")) {\n        nameMap[util.getOriginalName(child)] = 1;\n      }\n      child = child.nextElementSibling;\n    }\n\n    const tags = Object.keys(nameMap);\n    if (tags.length > 1) {\n      throw new Error(\"calling listDecorator on a non-homogeneous list.\");\n    }\n\n    if (tags.length === 0) {\n      return;\n    } // Nothing to work with\n\n    // First drop all children that are separators\n    child = el.firstElementChild;\n    while (child !== null) {\n      // Grab it before the node is removed.\n      const next = child.nextElementSibling;\n      if (child.hasAttribute(\"data-wed--separator-for\")) {\n        this.guiUpdater.removeNode(child);\n      }\n      child = next;\n    }\n\n    const tagName = tags[0];\n\n    // If sep is a string, create an appropriate div.\n    let sepNode: Element;\n    if (typeof sep === \"string\") {\n      sepNode = el.ownerDocument.createElement(\"div\");\n      sepNode.textContent = sep;\n    }\n    else {\n      sepNode = sep;\n    }\n\n    sepNode.classList.add(\"_text\");\n    sepNode.classList.add(\"_phantom\");\n    sepNode.setAttribute(\"data-wed--separator-for\", tagName);\n\n    let first = true;\n    child = el.firstElementChild;\n    while (child !== null) {\n      if (child.classList.contains(\"_real\")) {\n        if (!first) {\n          this.guiUpdater.insertBefore(el, sepNode.cloneNode(true) as Element,\n                                       child);\n        }\n        else {\n          first = false;\n        }\n      }\n      child = child.nextElementSibling;\n    }\n  }\n\n  /**\n   * Generic handler for setting ``contenteditable`` on nodes included into the\n   * tree.\n   */\n  contentEditableHandler(ev: BeforeInsertNodeAtEvent): void {\n    const editAttributes = this.editor.attributes === \"edit\";\n    function mod(el: Element): void {\n      // All elements that may get a selection must be focusable to\n      // work around issue:\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=921444\n      el.setAttribute(\"tabindex\", \"-1\");\n      el.setAttribute(\"contenteditable\",\n                      String(el.classList.contains(\"_real\") ||\n                             (editAttributes &&\n                              el.classList.contains(\"_attribute_value\"))));\n      let child = el.firstElementChild;\n      while (child !== null) {\n        mod(child);\n        child = child.nextElementSibling;\n      }\n    }\n\n    // We never call this function with something else than an Element for\n    // ev.node.\n    mod(ev.node as Element);\n  }\n\n  /**\n   * Add a start label at the start of an element and an end label at the end.\n   *\n   * @param root The root of the decorated tree.\n   *\n   * @param el The element to decorate.\n   *\n   * @param level The level of the labels for this element.\n   *\n   * @param preContextHandler An event handler to run when the user invokes a\n   * context menu on the start label.\n   *\n   * @param postContextHandler An event handler to run when the user invokes a\n   * context menu on the end label.\n   */\n  elementDecorator(root: Element, el: Element, level: number,\n                   preContextHandler: ((wedEv: JQueryMouseEventObject,\n                                        ev: Event) => boolean) | undefined,\n                   postContextHandler: ((wedEv: JQueryMouseEventObject,\n                                         ev: Event) => boolean) | undefined):\n  void {\n    if (level > this.editor.max_label_level) {\n      throw new Error(\n        `level higher than the maximum set by the mode: ${level}`);\n    }\n\n    // Save the caret because the decoration may mess up the GUI caret.\n    let dataCaret: DLoc | undefined = this.editor.caretManager.getDataCaret();\n    if (dataCaret != null &&\n        !(isAttr(dataCaret.node) &&\n          dataCaret.node.ownerElement === $.data(el, \"wed_mirror_node\"))) {\n      dataCaret = undefined;\n    }\n\n    const dataNode = $.data(el, \"wed_mirror_node\");\n    this.setReadOnly(el, Boolean(this.editor.validator.getNodeProperty(\n      dataNode, \"PossibleDueToWildcard\")));\n\n    const origName = util.getOriginalName(el);\n    // _[name]_label is used locally to make the function idempotent.\n    let cls = `_${origName}_label`;\n\n    // We must grab a list of nodes to remove before we start removing them\n    // because an element that has a placeholder in it is going to lose the\n    // placeholder while we are modifying it. This could throw off the scan.\n    const toRemove = domutil.childrenByClass(el, cls);\n    for (const remove of toRemove) {\n      el.removeChild(remove);\n    }\n\n    const attributesHTML = [];\n    let hiddenAttributes = false;\n    if (this.editor.attributes === \"show\" ||\n        this.editor.attributes === \"edit\") {\n      // include the attributes\n      const attributes = util.getOriginalAttributes(el);\n      const names = Object.keys(attributes).sort();\n\n      for (const name of names) {\n        const hideAttribute = this.mustHideAttribute(el, name);\n        if (hideAttribute) {\n          hiddenAttributes = true;\n        }\n\n        const extra = hideAttribute ? \" _shown_when_caret_in_label\" : \"\";\n\n        attributesHTML.push([\n          `<span class=\\\"_phantom _attribute${extra}\\\">`,\n          \"<span class=\\\"_phantom _attribute_name\\\">\", name,\n          \"</span>=\\\"<span class=\\\"_phantom _attribute_value\\\">\",\n          domutil.textToHTML(attributes[name]),\n          \"</span>\\\"</span>\",\n        ].join(\"\"));\n      }\n    }\n    const attributesStr = (attributesHTML.length !== 0 ? \" \" : \"\") +\n      attributesHTML.join(\" \");\n\n    const doc = el.ownerDocument;\n    cls += ` _label_level_${level}`;\n\n    // Save the cls of the end label here so that we don't further modify it.\n    const endCls = cls;\n\n    if (hiddenAttributes) {\n      cls += \" _autohidden_attributes\";\n    }\n    const pre = doc.createElement(\"span\");\n    pre.className = `_gui _phantom __start_label _start_wrapper ${cls} _label`;\n    const prePh = doc.createElement(\"span\");\n    prePh.className = \"_phantom\";\n    // tslint:disable-next-line:no-inner-html\n    prePh.innerHTML = `&nbsp;<span class='_phantom _element_name'>${origName}\\\n</span>${attributesStr}<span class='_phantom _greater_than'> >&nbsp;</span>`;\n    pre.appendChild(prePh);\n    this.guiUpdater.insertNodeAt(el, 0, pre);\n\n    const post = doc.createElement(\"span\");\n    post.className = `_gui _phantom __end_label _end_wrapper ${endCls} _label`;\n    const postPh = doc.createElement(\"span\");\n    postPh.className = \"_phantom\";\n    // tslint:disable-next-line:no-inner-html\n    postPh.innerHTML = `<span class='_phantom _less_than'>&nbsp;&lt; </span>\\\n<span class='_phantom _element_name'>${origName}</span>&nbsp;`;\n    post.appendChild(postPh);\n    this.guiUpdater.insertBefore(el, post, null);\n\n    // Setup a handler so that clicking one label highlights it and\n    // the other label.\n    $(pre).on(\"wed-context-menu\",\n              preContextHandler !== undefined ? preContextHandler : false);\n\n    $(post).on(\"wed-context-menu\",\n               postContextHandler !== undefined ? postContextHandler : false);\n\n    if (dataCaret != null) {\n      tryToSetDataCaret(this.editor, dataCaret);\n    }\n  }\n\n  /**\n   * Determine whether an attribute must be hidden. The default implementation\n   * calls upon the ``attributes.autohide`` section of the \"wed options\" that\n   * were used by the mode in effect to determine whether an attribute should be\n   * hidden or not.\n   *\n   * @param el The element in the GUI tree that we want to test.\n   *\n   * @param name The attribute name in \"prefix:localName\" format where \"prefix\"\n   * is to be understood according to the absolute mapping defined by the mode.\n   *\n   * @returns ``true`` if the attribute must be hidden. ``false`` otherwise.\n   */\n  mustHideAttribute(el: Element, name: string): boolean {\n    const specs = this.attributeHidingSpecs;\n    if (specs === null) {\n      return false;\n    }\n\n    for (const element of specs.elements) {\n      if (el.matches(element.selector)) {\n        let matches = false;\n        for (const attribute of element.attributes) {\n          if (typeof attribute === \"string\") {\n            // If we already matched, there's no need to try to match with\n            // another selector.\n            if (!matches) {\n              matches = attributeSelectorMatch(attribute, name);\n            }\n          }\n          else {\n            // If we do not match yet, there's no need to try to exclude the\n            // attribute.\n            if (matches) {\n              for (const exception of attribute.except) {\n                matches = !attributeSelectorMatch(exception, name);\n                // As soon as we stop matching, there's no need to continue\n                // checking other exceptions.\n                if (!matches) {\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        // An element selector that matches is terminal.\n        return matches;\n      }\n    }\n\n    return false;\n  }\n\n  private get attributeHidingSpecs(): AttributeHidingSpecs | null {\n    if (this._attributeHidingSpecs === undefined) {\n      const attributeHiding = this.editor.attributeHiding;\n      if (attributeHiding === undefined) {\n        // No attribute hiding...\n        this._attributeHidingSpecs = null;\n      }\n      else {\n        const method = attributeHiding.method;\n        if (method !== \"selector\") {\n          throw new Error(`unknown attribute hiding method: ${method}`);\n        }\n\n        const specs: AttributeHidingSpecs = {\n          elements: [],\n        };\n\n        for (const element of attributeHiding.elements) {\n          const copy = mergeOptions({}, element);\n          copy.selector = domutil.toGUISelector(copy.selector);\n          specs.elements.push(copy);\n        }\n\n        this._attributeHidingSpecs = specs;\n      }\n    }\n\n    return this._attributeHidingSpecs;\n  }\n\n  /**\n   * Add or remove the CSS class ``_readonly`` on the basis of the 2nd argument.\n   *\n   * @param el The element to modify. Must be in the GUI tree.\n   *\n   * @param readonly Whether the element is readonly or not.\n   */\n  setReadOnly(el: Element, readonly: boolean): void {\n    const cl = el.classList;\n    (readonly ? cl.add : cl.remove).call(cl, \"_readonly\");\n  }\n\n  /**\n   * Context menu handler for the labels of elements decorated by\n   * [[Decorator.elementDecorator]].\n   *\n   * @param atStart Whether or not this event is for the start label.\n   *\n   * @param wedEv The DOM event that wed generated to trigger this handler.\n   *\n   * @param ev The DOM event that wed received.\n   *\n   * @returns To be interpreted the same way as for all DOM event handlers.\n   */\n  // tslint:disable-next-line:max-func-body-length\n  protected contextMenuHandler(atStart: boolean, wedEv: JQueryMouseEventObject,\n                               ev: Event): boolean {\n    const editor = this.editor;\n    let node = wedEv.target as Element;\n    const menuItems: {\n      action: Action<{}> | null,\n      item: Element,\n      data?: TransformationData | null,\n    }[] = [];\n    const mode = editor.mode;\n    const doc = node.ownerDocument;\n    const atStartToTxt: Record<string, string> = {\n      undefined: \"\",\n      true: \" before this element\",\n      false: \" after this element\",\n    };\n\n    function pushItem(data: TransformationData | undefined,\n                      tr: Action<{}>, start?: boolean | undefined): void {\n      const li = editor._makeMenuItemForAction(tr, data) as Element;\n      const a = li.getElementsByTagName(\"a\")[0];\n      const text = doc.createTextNode(atStartToTxt[String(start)]);\n      a.appendChild(text);\n      a.normalize();\n      menuItems.push({ action: tr, item: li, data: data });\n    }\n\n    function pushItems(data: TransformationData | undefined,\n                       trs?: Action<{}>[], start?: boolean | undefined): void {\n      if (trs === undefined) {\n        return;\n      }\n\n      for (const tr of trs) {\n        pushItem(data, tr, start);\n      }\n    }\n\n    function processAttributeNameEvent(event: salve.Event,\n                                       element: Element): void {\n      const namePattern = event.params[1] as salve.Name;\n      // The next if line causes tslint to inexplicably raise a failure. I am\n      // able to reproduce it with something as small as:\n      //\n      // import { Name } from \"salve\";\n      //\n      // export function func(p: Name): void {\n      //   if (p.simple()) {\n      //     document.body.textContent = \"1\";\n      //   }\n      // }\n      //\n      // tslint:disable-next-line:strict-boolean-expressions\n      if (namePattern.simple()) {\n        for (const name of namePattern.toArray()) {\n          const unresolved = editor.resolver.unresolveName(name.ns, name.name);\n          if (unresolved === undefined) {\n            throw new Error(\"cannot unresolve attribute\");\n          }\n\n          if (editor.isAttrProtected(unresolved, element)) {\n            return;\n          }\n\n          pushItems({ name: unresolved, node: element },\n                    mode.getContextualActions(\"add-attribute\", unresolved,\n                                              element));\n        }\n      }\n      else {\n        pushItem(undefined, editor.complex_pattern_action);\n      }\n    }\n\n    const real = closestByClass(node, \"_real\", editor.gui_root);\n    const readonly = real !== null && real.classList.contains(\"_readonly\");\n\n    const attrVal = closestByClass(node, \"_attribute_value\", editor.gui_root);\n    if (attrVal !== null) {\n      const dataNode = editor.toDataNode(attrVal) as Attr;\n      const treeCaret =\n        DLoc.mustMakeDLoc(editor.data_root, dataNode.ownerElement);\n      editor.validator.possibleAt(treeCaret, true).forEach((event) => {\n        if (event.params[0] !== \"attributeName\") {\n          return;\n        }\n        const toAddTo = treeCaret.node.childNodes[treeCaret.offset];\n        processAttributeNameEvent(event, toAddTo as Element);\n      });\n\n      const name = dataNode.name;\n      if (!editor.isAttrProtected(dataNode)) {\n        pushItems({ name: name, node: dataNode },\n                  mode.getContextualActions(\"delete-attribute\", name,\n                                            dataNode));\n      }\n    }\n    else {\n      // We want the first real parent.\n      const candidate = closestByClass(node, \"_real\", editor.gui_root);\n      if (candidate === null) {\n        throw new Error(\"cannot find real parent\");\n      }\n\n      node = candidate;\n\n      const topNode = (node.parentNode === editor.gui_root);\n\n      // We first gather the transformations that pertain to the node to which\n      // the label belongs.\n      const orig = util.getOriginalName(node);\n\n      const docURL = mode.documentationLinkFor(orig);\n      if (docURL != null) {\n        const li = doc.createElement(\"li\");\n        li.appendChild(this.editor.makeDocumentationLink(docURL));\n        menuItems.push({ action: null, item: li, data: null });\n      }\n\n      if (!topNode) {\n        pushItems({ node: node, name: orig },\n                  mode.getContextualActions(\n                    [\"unwrap\", \"delete-element\"],\n                    orig, $.data(node, \"wed_mirror_node\"), 0));\n      }\n\n      // Then we check what could be done before the node (if the\n      // user clicked on an start element label) or after the node\n      // (if the user clicked on an end element label).\n      const parent = node.parentNode!;\n      let index = indexOf(parent.childNodes, node);\n\n      // If we're on the end label, we want the events *after* the node.\n      if (!atStart) {\n        index++;\n      }\n      const treeCaret = editor.caretManager.toDataLocation(parent, index);\n      if (treeCaret === undefined) {\n        throw new Error(\"cannot get caret\");\n      }\n\n      if (atStart && editor.attributes === \"edit\") {\n        editor.validator.possibleAt(treeCaret, true).forEach((event) => {\n            if (event.params[0] !== \"attributeName\") {\n              return;\n            }\n            const toAddTo = treeCaret.node.childNodes[treeCaret.offset];\n            processAttributeNameEvent(event, toAddTo as Element);\n          });\n      }\n\n      if (!topNode) {\n        for (const tr of editor.getElementTransformationsAt(treeCaret,\n                                                            \"insert\")) {\n          if (tr.name !== undefined) {\n            // Regular case: we have a real transformation.\n            pushItem({ name: tr.name, moveCaretTo: treeCaret }, tr.tr, atStart);\n          }\n          else {\n            // It is an action rather than a transformation.\n            pushItem(undefined, tr.tr);\n          }\n        }\n\n        if (atStart) {\n          // Move to inside the element and get the get the wrap-content\n          // possibilities.\n          const caretInside =\n            treeCaret.make(treeCaret.node.childNodes[treeCaret.offset], 0);\n          for (const tr of editor.getElementTransformationsAt(caretInside,\n                                                              \"wrap-content\")) {\n            pushItem(tr.name !== undefined ? { name: tr.name, node: node }\n                     : undefined,\n                     tr.tr);\n          }\n        }\n      }\n    }\n\n    // There's no menu to display, so let the event bubble up.\n    if (menuItems.length === 0) {\n      return true;\n    }\n\n    const pos = editor.computeContextMenuPosition(ev);\n    editor.displayContextMenu(ContextMenu, pos.left, pos.top, menuItems,\n                              readonly);\n    return false;\n  }\n}\n\n//  LocalWords:  sep el focusable lt enterStartTag unclick nbsp li\n//  LocalWords:  tabindex listDecorator contenteditable href jQuery\n//  LocalWords:  gui domlistener domutil util validator jquery\n//  LocalWords:  Mangalam MPL Dubeau\n"]}