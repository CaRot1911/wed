{"version":3,"sources":["../../../wed/savers/ajax.ts"],"names":[],"mappings":"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","file":"ajax.js","sourcesContent":["/**\n * Data saving functionality, using Ajax.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\nimport * as Promise from \"bluebird\";\nimport * as $ from \"jquery\";\n\nimport { Runtime } from \"../runtime\";\nimport * as saver from \"../saver\";\nimport { TreeUpdater } from \"../tree-updater\";\n\ninterface Message {\n  command: string;\n  version: string;\n  data?: string;\n}\n\ninterface Response {\n  messages: saver.SaveError[];\n}\n\ninterface ParsedResponse {\n  [key: string]: saver.SaveError;\n}\n\n/**\n * Processes a list of messages received from the server.\n *\n * @param data The data received from the server.\n *\n * @returns An object which has for field names message types and for field\n * values a message of the corresponding type.\n *\n * @throws {Error} If there is more than one message of the same type in the\n * data being processed.\n */\nfunction getMessages(data: Response): ParsedResponse | undefined {\n  const raw = data.messages;\n  if (raw === undefined || raw.length === 0) {\n    return undefined;\n  }\n\n  const ret: ParsedResponse = {};\n  for (const msg of raw) {\n    // When we parse responses from the server it is not possible to get an\n    // answer for which msg.type is undefined.\n    const errType = msg.type!;\n    if (ret[errType] !== undefined) {\n      throw new Error(\"same type of message appearing more than \" +\n                      \"once in one transaction\");\n    }\n    ret[errType] = msg;\n  }\n  return ret;\n}\n\nexport interface Options {\n  /** The url location to POST save requests. */\n  url: string;\n\n  /**\n   * Headers to set on the POST request. This may be necessary for cross\n   * domain request protection, for instance.\n   */\n  headers?: Record<string, string>;\n\n  /** The initial ETag to use. */\n  initial_etag?: string;\n}\n\n/**\n * A saver responsible for communicating with a server to save the data edited\n * by a wed editor.\n *\n * @param runtime The runtime under which this saver is created.\n *\n * @param version The version of wed for which this object is created.\n *\n * @param dataUpdater The updater that the editor created for its data tree.\n *\n * @param {Node} dataTree The editor's data tree.\n *\n * @param options The options specific to this class.\n */\nclass AjaxSaver extends saver.Saver {\n  private readonly url: string;\n  private readonly headers: Record<string, string> | undefined;\n  private etag: string | undefined;\n\n  constructor(runtime: Runtime, version: string, dataUpdater: TreeUpdater,\n              dataTree: Node, options: Options) {\n    super(runtime, version, dataUpdater, dataTree);\n\n    this.headers = options.headers;\n    // This value is saved with the double quotes around it so that we can just\n    // pass it to 'If-Match'.\n    this.etag = `\"${options.initial_etag}\"`;\n    this.url = options.url;\n\n    // Every 5 minutes.\n    this.setAutosaveInterval(5 * 60 * 1000);\n  }\n\n  init(): Promise<void> {\n    return this._post({ command: \"check\", version: this.version }, \"json\")\n      .then(() => {\n        this.initialized = true;\n        this.failed = false;\n      })\n      .catch(() => {\n        // This effectively aborts the editing session. This is okay, since\n        // there's a good chance that the issue is major.\n        throw new Error(`${this.url} is not responding to a check; \\\nsaving is not possible.`);\n      });\n  }\n\n  _save(autosave: boolean): Promise<void> {\n    return Promise.resolve().then(() => {\n      if (!this.initialized) {\n        return;\n      }\n\n      // We must store this value now because a modifying operation could occur\n      // after the data is sent to the server but before we can be sure the data\n      // is saved.\n      const savingGeneration = this.currentGeneration;\n\n      let ignore = false;\n      return this._post({\n        command: autosave ? \"autosave\" : \"save\",\n        version: this.version,\n        data: this.getData(),\n      }, \"json\")\n        .catch(() => {\n          ignore = true;\n          const error = {\n            msg: \"Your browser cannot contact the server\",\n            type: \"save_disconnected\",\n          };\n          this._fail(error);\n        })\n          .then((data: Response): void => {\n            if (ignore) {\n              return;\n            }\n\n            const msgs = getMessages(data);\n            if (msgs === undefined) {\n              this._fail();\n              throw new Error(`The server accepted the save request but did \\\nnot return any information regarding whether the save was successful or not.`);\n            }\n\n            if (msgs.save_fatal_error !== undefined) {\n              this._fail();\n              throw new Error(`The server was not able to save the data due to \\\na fatal error. Please contact technical support before trying to edit again.`);\n            }\n\n            if (msgs.save_transient_error !== undefined) {\n              this._events.next({ name: \"Failed\",\n                                  error: msgs.save_transient_error });\n              return;\n            }\n\n            if (msgs.save_edited !== undefined) {\n              this._fail(msgs.save_edited);\n              return;\n            }\n\n            if (msgs.save_successful === undefined) {\n              this._fail();\n              throw new Error(`Unexpected response from the server while \\\nsaving. Please contact technical support before trying to edit again.`);\n            }\n\n            if (msgs.version_too_old_error !== undefined) {\n              this._fail({ type: \"too_old\", msg: \"\" });\n              return;\n            }\n\n            this._saveSuccess(autosave, savingGeneration);\n          });\n    });\n  }\n\n  _recover(): Promise<boolean> {\n    const success = (data: Response): boolean => {\n      const msgs = getMessages(data);\n      if (msgs === undefined) {\n        return false;\n      }\n\n      if (msgs.save_fatal_error !== undefined) {\n        return false;\n      }\n\n      if (msgs.save_successful === undefined) {\n        return false;\n      }\n\n      return true;\n    };\n\n    return this._post({\n      command: \"recover\",\n      version: this.version,\n      data: this.getData(),\n    }, \"json\")\n      .then(success)\n      .catch(() => false);\n  }\n\n  /**\n   * Utility wrapper for Ajax queries. Read the code for more information.\n   *\n   * @private\n   *\n   * @param data\n   * @param dataType\n   *\n   * @returns A promise that resolves when the post is over.\n   */\n  private _post(data: Message, dataType: string): Promise<Response> {\n    let headers;\n\n    if (this.etag !== undefined) {\n      headers = $.extend({}, this.headers);\n      headers[\"If-Match\"] = this.etag;\n    }\n    else {\n      headers = this.headers;\n    }\n\n    return this.runtime.ajax({\n      type: \"POST\",\n      url: this.url,\n      data: data,\n      dataType: dataType,\n      headers: headers,\n      bluejaxOptions: {\n        verboseResults: true,\n      },\n    }).then(([reply, , jqXHR]) => {\n      const msgs = getMessages(reply);\n      // Unsuccessful operations don't have a valid etag.\n      if (msgs !== undefined && msgs.save_successful !== undefined) {\n        this.etag = jqXHR.getResponseHeader(\"ETag\");\n      }\n\n      return reply;\n      // tslint:disable-next-line:no-any\n    }).catch((bluejaxError: any) => {\n      const jqXHR = bluejaxError.jqXHR;\n      // This is a case where a precondition failed.\n      if (jqXHR.status === 412) {\n        // We transform the 412 status into a Response object that will\n        // produce the right reaction.\n        return {\n          messages: [{\n            msg: \"The document was edited by someone else.\",\n            type: \"save_edited\",\n          }],\n        };\n      }\n      throw bluejaxError;\n    });\n  }\n}\n\nexport { AjaxSaver as Saver };\n"]}