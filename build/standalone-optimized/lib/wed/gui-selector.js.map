{"version":3,"sources":["../../../wed/gui-selector.ts"],"names":[],"mappings":";;;IAQA,IAAM,KAAK,GAAG,IAAI,OAAO,EAAuB,CAAC;IAEjD;;OAEG;IACH;QAGE;;WAEG;QACH,qBAAoB,KAAa;YAC/B,IAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAClC,EAAE,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,QAAQ,CAAC;YAClB,CAAC;YAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;QAED;;;;WAIG;QACI,wBAAY,GAAnB,UAAoB,QAAgB;YAClC,MAAM,CAAC,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC;QAED;;;;;;;;;;WAUG;QACI,4BAAgB,GAAvB,UAAwB,QAAgB,EAChB,UAAkC;YACxD,MAAM,CAAC,IAAI,WAAW,CAAC,uBAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;QAC9D,CAAC;QACH,kBAAC;IAAD,CAvCA,AAuCC,IAAA;IAvCY,kCAAW;;AAyCxB,oBAAoB","file":"gui-selector.js","sourcesContent":["/**\n * GUI tree selectors.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { toGUISelector } from \"./domutil\";\n\nconst cache = new WeakMap<String, GUISelector>();\n\n/**\n * A \"GUI selector\" is a CSS selector apt to be used in the GUI tree.\n */\nexport class GUISelector {\n  /** The value that the selector holds. */\n  public readonly value: string;\n  /**\n   * @param value The value that the selector holds.\n   */\n  private constructor(value: string) {\n    const existing = cache.get(value);\n    if (existing !== undefined) {\n      return existing;\n    }\n\n    this.value = value;\n  }\n\n  /**\n   * Make a GUI selector from a CSS selector, as-is.\n   *\n   * @param selector The value that the selector will hold.\n   */\n  static makeVerbatim(selector: string): GUISelector {\n    return new GUISelector(selector);\n  }\n\n  /**\n   * Make a GUI selector from a data selector. The limitations on the selector\n   * are the same as for [[\"domutil\".toGUISelector]].\n   *\n   * @param selector A selector fit for selecting in the data tree.\n   *\n   * @param namespaces The namespace mappings to use to convert prefixes in the\n   * selector.\n   *\n   * @returns A [[GUISelector]] corresponding to the parameters used.\n   */\n  static fromDataSelector(selector: string,\n                          namespaces: Record<string, string>): GUISelector {\n    return new GUISelector(toGUISelector(selector, namespaces));\n  }\n}\n\n//  LocalWords:  MPL\n"]}