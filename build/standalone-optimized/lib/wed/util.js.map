{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../lib/wed/util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Various utilities for wed.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\nimport { diffChars } from \"diff\";\n\n/**\n * Calculates the distance on the basis of two deltas. This would typically be\n * called with the difference of X coordinates and the difference of Y\n * coordinates.\n *\n * @param delta1 The first delta.\n *\n * @param delta2 The second delta.\n *\n * @returns The distance.\n */\nexport function distFromDeltas(delta1: number, delta2: number): number {\n  return Math.sqrt(delta1 * delta1 + delta2 * delta2);\n}\n\n/**\n * Measures the distance of a point from a rectangle. If the point is in the\n * rectangle or touches it, the distance is 0. In the nomenclature below, left\n * and right are on the X axis and top and bottom on the Y axis.\n *\n * @param x The x coordinate of the point.\n *\n * @param y The y coordinate of the point.\n *\n * @param left The left coordinate of the rectangle.\n *\n * @param top The top coordinate of the rectangle.\n *\n * @param right The right coordinate of the rectangle.\n *\n * @param bottom The bottom coordinate of the rectangle.\n *\n * @returns The distance.\n */\nexport function distFromRect(x: number, y: number, left: number, top: number,\n                             right: number, bottom: number): number {\n  const topDelta = y - top;\n  const leftDelta = x - left;\n  const bottomDelta = y - bottom;\n  const rightDelta = x - right;\n\n  const above = topDelta < 0;\n  const below = bottomDelta > 0;\n  // Neologism used to avoid conflict with left above.\n  const lefter = leftDelta < 0;\n  const righter = rightDelta > 0;\n\n  const deltaX = lefter ? leftDelta : (righter ? rightDelta : 0);\n  const deltaY = above ? topDelta : (below ? bottomDelta : 0);\n\n  return distFromDeltas(deltaX, deltaY);\n}\n\n/**\n * Measures the absolute horizontal and vertical distances of a point from a\n * rectangle. If the point is in the rectangle or touches it, the distance is\n * 0. In the nomenclature below, left and right are on the X axis and top and\n * bottom on the Y axis.\n *\n * @param x The x coordinate of the point.\n *\n * @param y The y coordinate of the point.\n *\n * @param left The left coordinate of the rectangle.\n *\n * @param top The top coordinate of the rectangle.\n *\n * @param right The right coordinate of the rectangle.\n *\n * @param bottom The bottom coordinate of the rectangle.\n *\n * @returns The distance.\n */\nexport function distsFromRect(x: number, y: number, left: number, top: number,\n                              right: number, bottom: number):\n{x: number, y: number} {\n  const topDelta = y - top;\n  const leftDelta = x - left;\n  const bottomDelta = y - bottom;\n  const rightDelta = x - right;\n\n  const above = topDelta < 0;\n  const below = bottomDelta > 0;\n  // Neologism used to avoid conflict with left above.\n  const lefter = leftDelta < 0;\n  const righter = rightDelta > 0;\n\n  const deltaX = lefter ? leftDelta : (righter ? rightDelta : 0);\n  const deltaY = above ? topDelta : (below ? bottomDelta : 0);\n\n  return { x: Math.abs(deltaX), y: Math.abs(deltaY) };\n}\n\n/**\n * Escape character in CSS class that could cause trouble in CSS\n * selectors. *This is not a general solution.* It supports enough for the needs\n * of wed.\n *\n * @param cls The class\n *\n * @returns The escaped class.\n */\nexport function escapeCSSClass(cls: string): string {\n  // We should investigate replacing this with CSS.escape whenever the spec for\n  // that function becomes stable.\n  return cls.replace(/([\\][\\\\/!\"#$%&'()*+,.:;<=>?@^`{|}~])/g, \"\\\\$1\");\n}\n\n/**\n * Get the original element name of a node created for wed's data tree.\n *\n * @param el The element whose name we want.\n *\n * @returns The name.\n */\nexport function getOriginalName(el: Element): string {\n  // The original name is the first class name of the element that was created.\n  return el.classList[0];\n}\n\n/**\n * Makes a class string for a node in wed's data tree. The string is meant to be\n * used for the corresponding node in wed's GUI tree.\n *\n * @param name The original element name.\n *\n * @param namespaces The namespaces that are known. This is used to convert\n * element name prefixes to namespace URIs.\n *\n * @returns The class string.\n */\nexport function classFromOriginalName(name: string,\n                                      namespaces: Record<string, string>):\nstring {\n  // Special case if we want to match all\n  if (name === \"*\") {\n    return \"._real\";\n  }\n\n  let [prefix, localName] = name.split(\":\");\n\n  if (localName === undefined) {\n    localName = prefix;\n    prefix = \"\";\n  }\n\n  const ns = namespaces[prefix];\n  if (ns === undefined) {\n    throw new Error(`prefix ${prefix} is not defined in namespaces`);\n  }\n\n  // We do not output `.${escapeCSSClass(name)}` because that's redundant for a\n  // search.\n  return `._local_${escapeCSSClass(localName)}\\\n._xmlns_${escapeCSSClass(ns)}._real`;\n}\n\n/**\n * Convert a string to a sequence of char codes. Each char code will be preceded\n * by the character ``x``. The char codes are converted to hexadecimal.\n *\n * This is meant to be used by wed's internal code.\n *\n * @private\n *\n * @param str The string to encode.\n *\n * @returns The encoded string.\n */\nexport function stringToCodeSequence(str: string):  string {\n  let encoded = \"\";\n  for (const char of str) {\n    encoded += `x${char.charCodeAt(0).toString(16)}`;\n  }\n  return encoded;\n}\n\nconst ENCODED_RE = /^(?:x[a-f0-9]+)+$/;\n\n/**\n * Convert a code sequence created with [[stringToCodeSequence]] to a string.\n *\n * This is meant to be used by wed's internal code.\n *\n * @private\n *\n * @param str The sequence to decode.\n *\n * @returns The decoded string.\n */\nexport function codeSequenceToString(str: string):  string {\n  if (!ENCODED_RE.test(str)) {\n    throw new Error(\"badly encoded string\");\n  }\n\n  let decoded = \"\";\n  // We slice to skip the initial x, and not get a first part which is \"\".\n  for (const code of str.slice(1).split(\"x\")) {\n    decoded += String.fromCharCode(parseInt(code, 16));\n  }\n  return decoded;\n}\n\n/**\n * Encode the difference between an original string, and a modified string. This\n * is a specialized function designed to handle the difference between the name\n * we want to set for an attribute, and the name that HTML actually records.\n *\n * This function records the difference as a series of steps to recover the\n * original string:\n *\n * - ``g[number]`` means take ``[number]`` characters from the modified string\n *   as they are.\n *\n * - ``m[number]`` means remove ``[number]`` characters from the modified\n *   string.\n *\n * - ``p[codes]`` means add the codes ``[codes]`` to the modified string.\n *\n * - ``u[number]`` means convert ``[number]`` characters from the modified\n *   string to uppercase.\n *\n * This is meant to be used by wed's internal code.\n *\n * @private\n *\n * @param orig The original.\n *\n * @param modified The modified string.\n *\n * @returns The difference, encoded as a string.\n */\nexport function encodeDiff(orig: string, modified: string): string {\n  let diff = \"\";\n  if (orig !== modified) {\n    const results = diffChars(modified, orig);\n    const last = results[results.length - 1];\n    for (let ix = 0; ix < results.length; ++ix) {\n      const result = results[ix];\n      if (result.added === true) {\n        diff += `p${stringToCodeSequence(result.value)}`;\n      }\n      else if (result.removed ===  true) {\n        const next = results[ix + 1];\n        if ((next !== undefined && next.added === true) &&\n            (result.value.toUpperCase() === next.value)) {\n          diff += `u${result.value.length}`;\n          ix++;\n        }\n        else {\n          diff += `m${result.value.length}`;\n        }\n      }\n      else {\n        // We don't output this if it is last, as it is implied.\n        if (result !== last) {\n          diff += `g${result.value.length}`;\n        }\n      }\n    }\n  }\n\n  return diff;\n}\n\nconst OP_RE =  /^(?:p([xa-f0-9]+))|(?:[gmu](\\d+))/;\n\n/**\n * Decode the diff produced with [[encodeDiff]].\n *\n * This is meant to be used by wed's internal code.\n *\n * @private\n *\n * @param name The name, after encoding.\n *\n * @param diff The diff.\n *\n * @returns The decoded attribute name.\n */\nexport function decodeDiff(name: string, diff: string): string {\n  if (diff === \"\") {\n    return name;\n  }\n\n  let nameIndex = 0;\n  let result = \"\";\n  while (diff.length > 0) {\n    const match = diff.match(OP_RE);\n    if (match !== null) {\n      diff = diff.slice(match[0].length);\n      const op = match[0][0];\n      switch (op) {\n      case \"g\":\n      case \"m\":\n      case \"u\":\n        const length = parseInt(match[2]);\n        switch (op) {\n        case \"g\":\n          result += name.slice(nameIndex, nameIndex + length);\n          break;\n        case \"u\":\n          result += name.slice(nameIndex, nameIndex + length).toUpperCase();\n          break;\n        case \"m\":\n          break;\n        default:\n          throw new Error(`internal error: unexpected op ${op}`);\n        }\n        nameIndex += length;\n        break;\n      case \"p\":\n        result += codeSequenceToString(match[1]);\n        break;\n      default:\n        throw new Error(`unexpected operator ${op}`);\n      }\n    }\n\n    // Nothing matched\n    if (match === null) {\n      throw new Error(`cannot parse diff: ${diff}`);\n    }\n  }\n\n  // It is implied that the rest of the name is added.\n  result += name.slice(nameIndex);\n\n  return result;\n}\n\n/**\n * Transforms an attribute name from wed's data tree to the original attribute\n * name before the data was transformed for use with wed. This reverses the\n * transformation done with [[encodeAttrName]].\n *\n * @param encoded The encoded name.\n *\n * @returns A structure containing the decoded name the optional qualifier.\n */\nexport function decodeAttrName(encoded: string):\n{ name: string, qualifier: string | undefined } {\n  const match = /^data-wed-(.+)-([^-]*?)$/.exec(encoded);\n  if (match === null) {\n    throw new Error(\"malformed name\");\n  }\n\n  // tslint:disable-next-line:prefer-const\n  let [, name, diff] = match;\n\n  let qualifier: string | undefined;\n  // qualifier\n  if (name[0] === \"-\") {\n    const parts = /^-(.+?)-(.+)$/.exec(name);\n    if (parts === null) {\n      throw new Error(\"malformed name\");\n    }\n    [, qualifier, name] = parts;\n  }\n\n  name = name.replace(/---/, \":\").replace(/---(-+)/g, \"--$1\");\n\n  if (diff !== \"\") {\n    name = decodeDiff(name, diff);\n  }\n\n  return { name, qualifier };\n}\n\n/**\n * Transforms an attribute name from its unencoded form in the original XML data\n * (before transformation for use with wed) to its encoded name.\n *\n * The first thing this algorithm does is compute a difference between the\n * original XML name and how HTML will record it. The issue here is that XML\n * allows more characters in a name than what HTML allows and doing\n * ``setAttribute(name, value)`` will silently convert ``name`` to something\n * HTML likes. The issue most frequently encountered is that uppercase letters\n * are encoded as lowercase. This is especially vexing seeing as XML allows the\n * attribute names ``x`` and ``X`` to exist as different attributes, whereas\n * HTML does not. For HTML ``x`` and ``X`` are the same attribute. This function\n * records any differences between the original name and the way HTML records it\n * with a diff string that is appended to the final name after a dash. If\n * nothing appears after the final dash, then the HTML name and the XML name are\n * the same.\n *\n * A sequence of three dashes or more is converted by adding another dash. (So\n * sequences of single dash, or a pair of dashes remain unchanged. But all\n * sequences of 3 dashes or more gets an additional dash.)\n *\n * A colon (``:``) is converted to three dashes ``---``.\n *\n * After transformation above the name is prepended with ``data-wed-`` and it is\n * appended with the diff described above.\n *\n * Examples:\n *\n * - ``foo:bar`` becomes ``data-wed-foo---bar-``. Note how the diff is\n *    empty, because ``foo:bar`` can be represented as-is in HTML.\n *\n * - ``MOO:aBc---def`` becomes ``data-wed-moo---abc----def-u3g2u1``. Note the\n *   diff suffix, which allows restoring the orignal case.\n *\n * When ``qualifier`` is used, the qualifier is added just after ``data-wed-``\n * and is prepended and appended with a dash. So ``foo:bar`` with the qualifier\n * ``ns`` would become ``data-wed--ns-foo---bar-``. The addition of a dash in\n * front of the qualifier makes it impossible to confuse an encoding that has a\n * qualifier from one that does not, as XML attribute names are not allowed to\n * start with a dash.\n *\n * @param name The unencoded name (i.e. the attribute name as it is in XML).\n *\n * @param qualifier An optional qualifier.\n *\n * @returns The encoded name.\n */\nexport function encodeAttrName(name: string, qualifier?: string): string {\n  const el = document.createElement(\"div\");\n  // We havve to add the \"data-\" prefix to guard against some problems. IE11,\n  // for instance, will choke if we set an attribute with the name \"style\". It\n  // simply does not generally allow ``setAttribute(\"style\", ...)``. Adding the\n  // prefix, works around the problem. And we know \"data-\" will not be mangled,\n  // so we can just strip it afterwards.\n  el.setAttribute(`data-${name}`, \"\");\n  // Slice it to remove the \"data-\" prefix.\n  const attrName = el.attributes[0].name.slice(5);\n  const sanitized = attrName.replace(/--(-+)/g, \"---$1\").replace(/:/, \"---\");\n  qualifier = qualifier === undefined ? \"\" : `-${qualifier}-`;\n  return `data-wed-${qualifier}${sanitized}-${encodeDiff(name, attrName)}`;\n}\n\n/**\n * Determines whether a ``data-wed-`` attribute corresponds to an XML attribute.\n */\nexport function isXMLAttrName(name: string): boolean {\n  return /^data-wed-(?!-)/.test(name);\n}\n\n/**\n * Gets all the attributes of the node that were \"original\" attributes in the\n * XML document being edited, by opposition to those attributes that exist only\n * for HTML rendering.\n *\n * @param node The node to process.\n *\n * @returns An object whose keys are attribute names and values are attribute\n * values.\n */\nexport function getOriginalAttributes(node: Element): Record<string, string> {\n  const original: Record<string, string> =\n    Object.create(null) as Record<string, string>;\n  const attributes = node.attributes;\n  for (let i = 0; i < attributes.length; ++i) {\n    const attr = attributes[i];\n    const localName = attr.localName!;\n    if (isXMLAttrName(localName)) {\n      original[decodeAttrName(localName).name] = attr.value;\n    }\n  }\n  return original;\n}\n\nlet nextID = 0;\n\n/**\n * Generates a new generic element id. This id is guaranteed to be unique for\n * the current run of wed. The ids generated by this function are meant to be\n * eventually replaced by something more permanent.\n *\n * @returns An element id.\n */\nexport function newGenericID(): string {\n  return `WED-ID-${++nextID}`;\n}\n\n/**\n * @param ev A DOM event.\n *\n * @returns ``true`` if Control, Alt or Meta were held when the event was\n * created. Otherwise, ``false``.\n */\nexport function anySpecialKeyHeld(ev: Event): boolean {\n  const anyEv = ev as KeyboardEvent;\n  return anyEv.altKey || anyEv.ctrlKey || anyEv.metaKey;\n}\n\n/**\n * **This function is meant to be used in debugging.** It creates a\n * ``selenium_log`` object on ``window`` which is an array that contains the\n * series of ``obj`` passed to this function. Remember that ultimately\n * ``selenium_log`` is going to be serialized by Selenium. So go easy on what\n * you put in there and be aware that Selenium may have bugs that prevent\n * serialization of certain objects.\n *\n * @param args Objects to log.\n */\n/* tslint:disable:no-any no-unsafe-any */\nexport function seleniumLog(...args: any[]): void {\n  const w = window as any;\n  if (w.selenium_log === undefined) {\n    w.selenium_log = [];\n  }\n\n  w.selenium_log.push.apply(w.selenium_log, args);\n}\n\nfunction _exceptionStackTrace(err: any): string {\n  try {\n    throw err;\n  }\n  catch (e) {\n    return e.stack;\n  }\n}\n/* tslint:enable */\n\n/**\n * **This function is meant to be used in debugging.** Gets a stack trace. This\n * is only as cross-platform as needed for the platforms we support.\n *\n * Support for IE 9 is missing because it was designed by baboons.\n */\nexport function stackTrace(): string {\n  const err = new Error();\n  if (err.stack != null) {\n    return err.stack;\n  }\n\n  // If the stack is not filled already (true of IE 10, 11) then raise an\n  // exception to fill it.\n  return _exceptionStackTrace(err);\n}\n\n/**\n * Convert a \"pattern object\" to a string that can be shown to the user. This\n * function is meant to be used for \"complex\" name patterns that we may get from\n * salve. Note that a \"pattern object\" is the result of calling ``toObject()``\n * on the pattern. The goal of this function is to convert the pattern object to\n * a string that would be interpretable by the end user.\n *\n * An explanation about how this handles namespaces and wildcard patterns is in\n * order. In a Relax NG schema the name pattern ``*`` in the compact notation is\n * equivalent to ``<anyName/>`` in the expanded notation. And ``foo:*`` is\n * equivalent to ``<nsName ns=\"uri_of_foo\">`` where ``uri_of_foo`` is the URI\n * that has been associated with ``foo`` in the compact schema. It would be nice\n * if the function here could reuse this notation, but we cannot. Consider the\n * case where an Relax NG schema in the compact notation wants to declare a name\n * pattern which means \"any name in the default namespace\". In XML we express a\n * name in the default namespace currently in effect by simply not prefixing it\n * with a namespace name: whereas ``foo:bar`` is the ``bar`` element in the\n * ``foo`` namespace, ``bar`` is the ``bar`` element in the default\n * namespace. The pattern \"any element in namespace foo\" is represented with\n * ``foo:*``, however we cannot use ``*`` to mean \"any element in the default\n * namespace\", because ``*`` means \"any name in any namespace whatsoever\". The\n * compact notation forces the author of the schema to use a prefix for the\n * default namespace. And because of this, ``*`` means unambiguously \"any\n * element in any namespace\".\n *\n * So the ``*`` in the Relax NG schema becomes ``*:*`` here. \"Any element in the\n * default namespace\" is represented by ``*``. Thus ``foo:*`` and ``*`` can\n * stand in the same relation to one another as ``foo:bar`` and ``bar``.\n *\n * @param obj The \"pattern object\" to convert.\n * @param resolver The resolver to use to convert URIs to prefixes.\n * @returns The string representing the pattern.\n */\n/* tslint:disable:no-any no-unsafe-any */\nexport function convertPatternObj(obj: any, resolver: any): string {\n  // NameChoice\n  if (obj.a != null && obj.b != null) {\n    return `(${convertPatternObj(obj.a, resolver)}) or \\\n(${convertPatternObj(obj.b, resolver)})`;\n  }\n\n  let ret: string;\n\n  // AnyName\n  if (obj.pattern === \"AnyName\") {\n    ret = \"*:*\";\n  }\n  else {\n    // Name and NsName\n    if (obj.ns === undefined) {\n      throw new Error(\"unexpected undefined obj.ns\");\n    }\n\n    if (obj.name !== undefined) {\n      ret = resolver.unresolveName(obj.ns, obj.name);\n      // Cannot unresolve, use the expanded name.\n      if (ret === undefined) {\n        ret = `{${obj.ns}}${obj.name}`;\n      }\n    }\n    else {\n      const ns = resolver.prefixFromURI(obj.ns);\n      // If ns is undefined, we cannot resolve the URI, so we\n      // display the expanded name.\n      if (ns === undefined) {\n        ret = `{${obj.ns}}`;\n      }\n      else {\n        // An empty ns happens if the URI refers to the default\n        // namespace.\n        ret = (ns !== \"\") ? (`${ns}:`) : ns;\n      }\n      ret += \"*\";\n    }\n  }\n\n  if (obj.except != null) {\n    ret += ` except (${convertPatternObj(obj.except, resolver)})`;\n  }\n  return ret;\n}\n/* tslint:enable */\n\nexport function readFile(file: File): Promise<string> {\n  const reader = new FileReader();\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = () => {\n      resolve(reader.result as string);\n    };\n    reader.onerror = reject;\n    reader.readAsText(file);\n  });\n}\n\n/**\n * This is required to work around a problem when extending built-in classes\n * like ``Error``. Some of the constructors for these classes return a value\n * from the constructor, which is then picked up by the constructors generated\n * by TypeScript (same with ES6 code transpiled through Babel), and this messes\n * up the inheritance chain.\n *\n * See https://github.com/Microsoft/TypeScript/issues/12123.\n */\n// tslint:disable:no-any\nexport function fixPrototype(obj: any, parent: Function): void {\n  const oldProto: Function = Object.getPrototypeOf !== undefined ?\n    Object.getPrototypeOf(obj) : (obj as any).__proto__;\n\n  if (oldProto !== parent) {\n    if (Object.setPrototypeOf !== undefined) {\n      Object.setPrototypeOf(obj, parent.prototype);\n    }\n    else {\n      (obj as any).__proto__ = parent.prototype;\n    }\n  }\n}\n\nexport function suppressUnhandledRejections<P extends Promise<any>>(p: P): P {\n  const pAsAny: any = p as any;\n  if (pAsAny.suppressUnhandledRejections as boolean) {\n    pAsAny.suppressUnhandledRejections();\n  }\n\n  return p;\n}\n// tslint:enable:no-any\n\n//  LocalWords:  Mangalam MPL Dubeau util CSS wed's unencoded URIs localName ns\n//  LocalWords:  escapeCSSClass xmlns prepended nextID NG NameChoice AnyName\n//  LocalWords:  convertPatternObj NsName\n"]}