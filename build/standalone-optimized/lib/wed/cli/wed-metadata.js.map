{"version":3,"sources":["../../../wed/cli/wed-metadata.ts"],"names":[],"mappings":"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","file":"wed-metadata.js","sourcesContent":["/**\n * Metadata management cli tool.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\nimport * as Ajv from \"ajv\";\nimport { ArgumentParser } from \"argparse\";\nimport * as fs from \"fs\";\nimport * as yaml from \"js-yaml\";\nimport * as path from \"path\";\n\nimport { compile } from \"../modes/generic/doc-pattern\";\nimport { Metadata } from \"../modes/generic/metadata-as-json\";\n// tslint:disable-next-line:no-require-imports import-name\nimport schema = require(\"../modes/generic/metadata-schema.json\");\nimport { fixPrototype } from \"../util\";\n\n// tslint:disable-next-line:completed-docs\nclass Fatal extends Error {\n  constructor(msg: string) {\n    super(msg);\n    this.name = \"Fatal\";\n    this.message = msg;\n    fixPrototype(this, Fatal);\n }\n}\n\nconst prog = path.basename(process.argv[1]);\n\n// tslint:disable-next-line:no-any\nprocess.on(\"uncaughtException\", (ex: any) => {\n  if (ex instanceof Fatal) {\n    process.stderr.write(`${prog}: ${ex.message}\\n`);\n    process.exit(1);\n  }\n  else {\n    throw ex;\n  }\n});\n\n//\n// Actual logic\n//\n\nfunction fileAsString(p: string): string {\n  return fs.readFileSync(path.resolve(p), \"utf8\").toString();\n}\n\n// tslint:disable-next-line:no-any\nfunction parseFile(name: string, data: string): any {\n  let ret;\n\n  try {\n    ret = JSON.parse(data);\n  }\n  // tslint:disable-next-line:no-empty\n  catch (ex) {}\n\n  if (ret !== undefined) {\n    return ret;\n  }\n\n  try {\n    ret = yaml.safeLoad(data, {\n      schema: yaml.JSON_SCHEMA,\n    });\n  }\n  // tslint:disable-next-line:no-empty\n  catch (ex) {}\n\n  if (ret !== undefined) {\n    return ret;\n  }\n\n  throw new Fatal(`cannot parse ${name}`);\n}\n\nconst parser = new ArgumentParser({\n  addHelp: true,\n  description: \"Generates a JSON file suitable for using as the \" +\n    \"``metadata`` option for a generic Meta object. The input file must \" +\n    \"be a JSON file in the format produced by TEI's odd2json.xsl \" +\n    \"transformation.\",\n});\n\nparser.addArgument([\"input\"],\n                   { help: \"Input file.\" });\n\nparser.addArgument([\"output\"], {\n  help: \"Output file. If absent, outputs to stdout.\",\n  nargs: \"?\",\n});\n\nparser.addArgument([\"--tei\"], {\n  help: \"Treat the input as a TEI JSON file produced by TEI's odd2json.xsl.\",\n  action: \"storeTrue\",\n});\n\nparser.addArgument([\"-p\", \"--pretty\"], {\n  help: \"Pretty print the final JSON.\",\n  action: \"storeTrue\",\n});\n\nparser.addArgument([\"--merge\"], {\n  help: \"Add a file to shallow merge with the generated output.\",\n  action: \"append\",\n  defaultValue: [],\n});\n\nconst args = parser.parseArgs();\n\nconst output: Partial<Metadata> = {\n  generator: prog,\n  date: new Date().toISOString(),\n  version: \"2\",\n};\n\nif (args.tei as boolean) {\n  const inputData = fileAsString(args.input);\n  const parsed = parseFile(args.input, inputData);\n\n  output.namespaces = {\n    // tslint:disable-next-line:no-http-string\n    \"\": \"http://www.tei-c.org/ns/1.0\",\n  };\n\n  const members = parsed.members;\n  let i;\n  for (i = members.length - 1; i >= 0; i--) {\n    // Delete class specs\n    if (members[i].type !== \"elementSpec\") {\n      members.splice(i, 1);\n    }\n  }\n\n  for (const member of members) {\n    delete member.type;\n    delete member.module;\n    delete member.classes;\n    delete member.model;\n    delete member.attributes;\n    delete member.classattributes;\n    member.name = member.ident;\n    member.desc = member.desc;\n    delete member.ident;\n  }\n\n  output.elements = members;\n}\nelse {\n  if (args.merge === undefined) {\n    args.merge = [args.input];\n  }\n  else {\n    args.merge.unshift(args.input);\n  }\n}\n\nfor (const toMerge of args.merge) {\n  const data = fileAsString(toMerge);\n  const parsedMerge = parseFile(toMerge, data);\n\n  if (parsedMerge.version !== \"2\") {\n    throw new Fatal(\"files must follow metadata version 2\");\n  }\n\n  if (parsedMerge.generator !== undefined || parsedMerge.date !== undefined) {\n    throw new Error(\n      \"generator or date in a file consumed by this tool is invalid\");\n  }\n\n  if (parsedMerge.namespaces !== undefined &&\n      parsedMerge.namespaces.xml !== undefined) {\n    throw new Error(\"trying to set the xml namespace\");\n  }\n\n  // tslint:disable-next-line:forin\n  for (const key in parsedMerge) {\n    // tslint:disable-next-line:no-any\n    (output as any)[key] = parsedMerge[key];\n  }\n}\n\nconst ajv = new Ajv();\nconst validator = ajv.compile(schema);\nconst valid = validator(output);\nif (!(valid as boolean)) {\n  if (validator.errors !== undefined) {\n    for (const error of validator.errors) {\n      // tslint:disable-next-line:no-console\n      console.log(error);\n    }\n  }\n  throw new Fatal(\"output is not valid\");\n}\n\nif (output.dochtml !== undefined) {\n  if (output.dochtml.method === \"simple-pattern\") {\n    compile(output.dochtml.pattern);\n  }\n  else {\n    throw new Fatal(`unknown method: ${output.dochtml.method}`);\n  }\n}\n\nconst stringified = JSON.stringify(output, undefined,\n                                   args.pretty as boolean ? 2 : undefined);\n\nif (args.output !== undefined) {\n  fs.writeFileSync(args.output, stringified);\n}\nelse {\n  // tslint:disable-next-line:no-console\n  console.log(stringified);\n}\n"]}