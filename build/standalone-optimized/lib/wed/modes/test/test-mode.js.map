{"version":3,"file":"test-mode.js","sourceRoot":"","sources":["../../../../../../lib/wed/modes/test/test-mode.ts"],"names":[],"mappings":";;;;;;;;;;;;;IAoBA,IAAO,WAAW,GAAG,SAAG,CAAC,WAAW,CAAC,WAAW,CAAC;IAGzC,IAAA,+CAAe,EAAE,6CAAc,EAAE,+BAAO,CAAa;IAE7D,0CAA0C;IAC1C;QACE,mBAA6B,QAA4B;YAA5B,aAAQ,GAAR,QAAQ,CAAoB;QAAG,CAAC;QAE7D,oCAAgB,GAAhB;YACE,MAAM,CAAC,CAAC;oBACN,KAAK,EAAE,IAAI,uBAAe,CAAC,MAAM,CAAC;oBAClC,IAAI,EAAE,IAAI,CAAC,QAAQ;oBACnB,KAAK,EAAE,CAAC;iBACT,CAAC,CAAC;QACL,CAAC;QACH,gBAAC;IAAD,CAAC,AAVD,IAUC;IAED,0CAA0C;IAC1C;QAAmC,iCAAgB;QAAnD;YAAA,qEAoKC;YAnKkB,kBAAY,GAA2B;gBACtD,IAAI,EAAE,CAAC;gBACP,GAAG,EAAE,CAAC;gBACN,IAAI,EAAE,CAAC;aACR,CAAC;;QA+JJ,CAAC;QA3JC,mCAAW,GAAX;YACE,iBAAM,WAAW,WAAE,CAAC;YACpB,yBAAmB,CAAC,0BAA0B,CAC5C,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,iBAAW,CAAC,gBAAgB,CAAC,IAAI,EACJ,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAC,EACtE,SAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAChB,kBAAY,CAAC,SAAS,EACtB,kBAAY,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC;QAED,wCAAwC;QACxC,wCAAgB,GAAhB,UAAiB,IAAa,EAAE,EAAW;YACzC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnD,4CAA4C;gBAC5C,MAAM,CAAC;YACT,CAAC;YACD,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAY,CAAC;YACvD,IAAM,IAAI,GAAG,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAE3C,IAAM,SAAS,GAAG,QAAQ,CAAC,SAAU,CAAC;YACtC,IAAM,KAAK,GAAG,QAAQ,CAAC,YAAY,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;YAE5D,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC7D,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBACxB,KAAK,GAAG,CAAC,CAAC;YACZ,CAAC;YAED,IAAM,GAAG,GAAG,KAAK,IAAI,SAAS,KAAK,GAAG,CAAC;YACvC,IAAM,KAAK,GAAG,KAAK,IAAI,SAAS,KAAK,KAAK,CAAC;YAE3C,2CAA2C;YAC3C,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC9B,iDAAiD;gBACjD,eAAS,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CACvC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EACrB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;YAC/C,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC;gBAC3C,IAAI,CAAC,UAAU,CAAC,YAAY,CAC1B,EAAE,EACF,CAAC,CAAC,kDAAkD,CAAC,CAAC,CAAC,CAAC,EACxD,EAAE,CAAC,SAAS,CAAC,CAAC;gBAEhB,IAAM,OAAO,GAAG,CAAC,CAAC,oDAAoD,CAAC,CAAC;gBACxE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,EACd,EAAE,CAAC,UAAW,CAAC,WAAW,CAAC,CAAC;gBAEzD,OAAO,CAAC,EAAE,CAAC,kBAAkB,EAClB,EAAE,IAAI,EAAE,EAAE,EAAE,EACZ,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1D,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,+BAA+B,EAAE,MAAM,CAAC,CAAC;YACnE,CAAC;YAED,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACR,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACf,KAAK,KAAK;wBACR,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC;wBACtC,IAAI,CAAC,UAAU;6BACZ,YAAY,CACX,EAAE,EACF,CAAC,CAAC,0CAA0C;4BAC1C,wBAAwB,CAAC,CAAC,CAAC,CAAC,EAC9B,EAAE,CAAC,SAAS,CAAC,CAAC;wBAElB,IAAI,KAAK,SAAqB,CAAC;wBAC/B,IAAI,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC;wBACvC,OAAO,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;4BAC7C,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC,CAAC;gCAC7B,KAAK,GAAG,KAAK,CAAC;4BAChB,CAAC;4BACD,KAAK,GAAG,KAAK,CAAC,kBAAkB,CAAC;wBACnC,CAAC;wBACD,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,UAAU;iCACZ,YAAY,CACX,EAAE,EACF,CAAC,CAAC,0CAA0C;gCAC1C,yBAAyB,CAAC,CAAC,CAAC,CAAC,EAC/B,EAAE,CAAC,SAAS,CAAC,CAAC;4BAClB,IAAI,CAAC,UAAU;iCACZ,YAAY,CACX,EAAE,EACF,CAAC,CAAC,0CAA0C;gCAC1C,yBAAyB,CAAC,CAAC,CAAC,CAAC,EAC/B,EAAE,CAAC,SAAS,CAAC,CAAC;wBACpB,CAAC;wBACD,KAAK,CAAC;oBACR,KAAK,MAAM;wBACT,EAAE,CAAC,CAAC,cAAc,CAAC,EAAE,EAAE,WAAW,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;4BAC7C,KAAK,CAAC;wBACR,CAAC;wBAED,IAAM,QAAQ,GAAG,eAAe,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;wBAC7C,GAAG,CAAC,CAAiB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ;4BAAxB,IAAM,MAAM,iBAAA;4BACf,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;yBACxB;wBAED,IAAM,OAAO,GAAG,CAAC,CAAC,+CAA+C;4BAC/C,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5C,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,UAAsB,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;wBACrE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;wBAChD,KAAK,CAAC;oBACR;wBACE,KAAK,CAAC;gBACR,CAAC;YACH,CAAC;QACH,CAAC;QAEO,qDAA6B,GAArC,UAAsC,KAAwB,EACxB,EAAqB;YACzD,4EAA4E;YAC5E,6DAA6D;YAC7D,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7B,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAY,CAAC;YACzD,IAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAC1C,IAAI,aAAK,CAAC,QAAQ,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,EAC3D,QAAQ,CAAC,SAAU,CAAC,CAAC,CAAC;YAElC,8BAA8B;YAC9B,EAAE,CAAC,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC/B,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAED,yDAAyD;YACzD,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;YAClC,IAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAEnD,sEAAsE;YACtE,oBAAoB;YACpB,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,YAAY,EACtB,SAAS,EAAE,MAAM,CAAC,CAAC;YAClE,kCAAkC;YAClC,IAAM,IAAI,GAAG;gBACX,IAAI,EAAE,YAAY;gBAClB,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC;aACnE,CAAC;YAEF,IAAM,KAAK,GAAG,EAAE,CAAC;YACjB,GAAG,CAAC,CAAc,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;gBAApB,IAAM,GAAG,gBAAA;gBACZ,IAAM,IAAI,GAAM,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,qBAAkB,CAAC;gBACxD,IAAM,EAAE,GAAG,CAAC,CAAC,8BAA4B,IAAI,SAAM,CAAC,CAAC;gBACrD,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,oBAAoB,CAAC,CAAC;gBACzC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1C;YAED,gDAAgD;YAChD,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YAEhE,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACH,oBAAC;IAAD,CAAC,AApKD,CAAmC,oCAAgB,GAoKlD;IApKY,sCAAa;IAgL1B,0CAA0C;IAC1C;QAA8B,mCAAU;QAAxC;;QAsDA,CAAC;QApDC,iCAAO,GAAP;YACE,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAE3B,IAAM,gBAAgB,GAAG,UAAC,IAAc;gBACtC,MAAM,CAAC,UAAC,CAAS,EAAE,EAAiB;oBAClC,IAAM,EAAE,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;oBAE9B,IAAM,OAAO,GAAG,EAAE,CAAC;oBACnB,GAAG,CAAC,CAAc,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;wBAAjB,IAAM,GAAG,aAAA;wBACZ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;4BACjB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBACpB,CAAC;qBACF;oBAED,EAAE,CAAC,OAAO,CAAC,CAAC;gBACd,CAAC,CAAC;YACJ,CAAC,CAAC;YAEF,IAAM,QAAQ,GAAG,EAAE,CAAC;YACpB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC;gBAC7B,QAAQ,CAAC,IAAI,CAAC,UAAQ,CAAG,CAAC,CAAC;YAC7B,CAAC;YAED,IAAM,OAAO,GAAG;gBACd,OAAO,EAAE;oBACP,UAAU,EAAE,IAAI;oBAChB,IAAI,EAAE,IAAI;oBACV,SAAS,EAAE,IAAI;oBACf,SAAS,EAAE,CAAC;iBACb;gBACD,QAAQ,EAAE,CAAC;wBACT,MAAM,EAAE,gBAAgB,CAAC,QAAQ,CAAC;wBAClC,KAAK,EAAE,QAAQ,CAAC,MAAM;qBACvB,CAAC;aACH,CAAC;YAEF,IAAM,SAAS,GACb,MAAM,CAAC,kBAAkB,CAAC,mBAAmB,CAC3C,GAAG,EAAE,MAAM,EAAE,OAAO,EACpB,UAAC,GAAY;gBACX,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;oBAChB,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACzB,CAAC;YACH,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;YACxB,SAAS,CAAC,WAAW,EAAE,CAAC;YACxB,IAAM,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC;YAExC,qEAAqE;YACrE,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAE,KAAK,CAAC,SAAqB,CAAC,CAAC,CAAC;gBACnD,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;YACvC,CAAC;QACH,CAAC;QACH,sBAAC;IAAD,CAAC,AAtDD,CAA8B,YAAM,GAsDnC;IAED,0CAA0C;IAC1C;QAAmC,wCAAU;QAA7C;;QAcA,CAAC;QAXC,sBAAY,uCAAK;iBAAjB;gBACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;oBAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC3D,CAAC;gBAED,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACrB,CAAC;;;WAAA;QAED,sCAAO,GAAP;YACE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC;QACH,2BAAC;IAAD,CAAC,AAdD,CAAmC,YAAM,GAcxC;IAED,0CAA0C;IAC1C;QAA4C,iDAAU;QAAtD;;QAiBA,CAAC;QAdC,sBAAY,gDAAK;iBAAjB;gBACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;oBAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;wBAChC,SAAS,EAAE,IAAI;wBACf,SAAS,EAAE,IAAI;qBAChB,CAAC,CAAC;gBACP,CAAC;gBAED,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACrB,CAAC;;;WAAA;QAED,+CAAO,GAAP;YACE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC;QACH,oCAAC;IAAD,CAAC,AAjBD,CAA4C,YAAM,GAiBjD;IAED,0CAA0C;IAC1C;QAAmC,wCAAU;QAA7C;;QAcA,CAAC;QAXC,sBAAY,uCAAK;iBAAjB;gBACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;oBAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC3D,CAAC;gBAED,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACrB,CAAC;;;WAAA;QAED,sCAAO,GAAP;YACE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC;QACH,2BAAC;IAAD,CAAC,AAdD,CAAmC,YAAM,GAcxC;IAED;;;OAGG;IACH;QAA8B,4BAA4B;QAiBxD,kBAAY,MAAiB,EAAE,OAAwB;YAAvD,YACE,kBAAM,MAAM,EAAE,OAAO,CAAC,SAgCvB;YA5CQ,oBAAc,GAAa;gBAClC,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,yBAAyB,EAAE,KAAK;gBAChC,2BAA2B,EAAE,KAAK;gBAClC,eAAe,EAAE,KAAK;gBACtB,kEAAkE;gBAClE,UAAU,EAAE,KAAK;gBACjB,WAAW,EAAE,KAAK;aACnB,CAAC;YAIA,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,EAAE,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;YACpD,IAAM,MAAM,GAAG,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;YACpE,KAAI,CAAC,UAAU,CAAC,QAAQ,GAAG;gBACzB,IAAI,EAAE,SAAO,MAAQ;gBACrB,OAAO,EAAE,CAAC,wBAAwB,CAAC;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,OAAO,EAAE,SAAS;gBAClB,SAAS,EAAE,iDAAiD;aAC7D,CAAC;YACF,KAAI,CAAC,UAAU,CAAC,YAAY,GAAG;gBAC7B,GAAG,EAAE,CAAC;gBACN,OAAO,EAAE,CAAC;aACX,CAAC;YAEF,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;gBAC5B,KAAI,CAAC,UAAU,CAAC,UAAU,GAAG,MAAM,CAAC;YACtC,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,UAAU,CAAC,UAAU,GAAG;oBAC3B,QAAQ,EAAE,MAAM;oBAChB,QAAQ,EAAE;wBACR,MAAM,EAAE,UAAU;wBAClB,QAAQ,EAAE,CAAC;gCACT,QAAQ,EAAE,KAAK;gCACf,UAAU,EAAE,CAAC,GAAG,EAAE;wCAChB,MAAM,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC;qCACtC,CAAC;6BACH,CAAC;qBACH;iBACF,CAAC;YACJ,CAAC;;QACH,CAAC;QAED,uBAAI,GAAJ;YAAA,iBAeC;YAdC,MAAM,CAAC,iBAAM,IAAI,WAAE;iBAChB,IAAI,CAAC;gBACJ,IAAM,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC;gBAC3B,KAAI,CAAC,eAAe,GAAG,IAAI,eAAe,CACxC,MAAM,EAAE,gBAAgB,EAAE,SAAS,EACnC,kCAAkC,EAAE,IAAI,CAAC,CAAC;gBAE5C,KAAI,CAAC,eAAe,GAAG,IAAI,oBAAoB,CAC7C,MAAM,EAAE,gBAAgB,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;gBACxD,KAAI,CAAC,eAAe,GAAG,IAAI,oBAAoB,CAC7C,MAAM,EAAE,gBAAgB,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;gBACxD,KAAI,CAAC,wBAAwB,GAAG,IAAI,6BAA6B,CAC/D,MAAM,EAAE,0BAA0B,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;YACpE,CAAC,CAAC,CAAC;QACP,CAAC;QAED,iCAAc,GAAd;YACE,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YAC7C,MAAM,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;QACtD,CAAC;QAED,oCAAiB,GAAjB;YACE,MAAM,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,CAAC;QAC7C,CAAC;QAED,uCAAoB,GAApB,UAAqB,kBAAqC,EACrC,GAAW,EACX,SAAe,EACf,MAAc;YACjC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,2BAA2B;gBACxC,GAAG,KAAK,UAAU,IAAI,kBAAkB,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC1D,MAAM,CAAC,CAAC,IAAI,oBAAc,CAAC,cAAc,CACvC,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI;oBACxD,8DAA8D;oBAC9D,oCAAoC;oBACpC,cAAO,CAAC,CAAC,CAAC,CAAC;YACf,CAAC;YAED,IAAI,GAAG,GAAG,iBAAM,oBAAoB,YAAC,kBAAkB,EAAE,GAAG,EACvB,SAAS,EAAE,MAAM,CAAC,CAAC;YAExD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,yBAAyB;gBACtC,GAAG,KAAK,UAAU,IAAI,kBAAkB,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC1D,wCAAwC;gBACxC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC;YAED,EAAE,CAAC,CAAC,GAAG,KAAK,KAAK;gBACb,CAAC,kBAAkB,KAAK,QAAQ,IAAI,kBAAkB,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;gBACvE,qEAAqE;gBACrE,iDAAiD;gBACjD,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,EAC1C,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,wBAAwB,CAAC,CAAC;YAChE,CAAC;YAED,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;QAED,gCAAa,GAAb;YACE,MAAM,CAAC,IAAI,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3E,CAAC;QAED,0CAAuB,GAAvB,UAAwB,IAAU;YAChC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;gBACtB,MAAM,CAAC,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YACxC,CAAC;YAED,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAED,+BAAY,GAAZ;YACE,MAAM,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC7C,CAAC;QACH,eAAC;IAAD,CAAC,AA9HD,CAA8B,cAAW,GA8HxC;IA9HY,4BAAQ;IAgIA,wBAAI;;AAEzB,8EAA8E;AAC9E,uEAAuE","sourcesContent":["/**\n * A mode for testing.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport * as $ from \"jquery\";\nimport * as mergeOptions from \"merge-options\";\nimport { EName, ValidationError } from \"salve\";\nimport { ErrorData } from \"salve-dom\";\n\nimport { Action, Decorator, domutil, EditorAPI, gui, GUISelector,\n         inputTriggerFactory, key, keyConstants, ModeValidator, objectCheck,\n         transformation } from \"wed\";\nimport { GenericModeOptions,\n         Mode as GenericMode } from \"wed/modes/generic/generic\";\nimport { GenericDecorator } from \"wed/modes/generic/generic-decorator\";\n\nimport Template = objectCheck.Template;\nimport Button = gui.button.Button;\nimport ContextMenu = gui.contextMenu.ContextMenu;\nimport Modal = gui.modal.Modal;\n\nconst { childrenByClass, closestByClass, indexOf } = domutil;\n\n// tslint:disable-next-line:completed-docs\nclass Validator implements ModeValidator {\n  constructor(private readonly dataRoot: Element | Document) {}\n\n  validateDocument(): ErrorData[] {\n    return [{\n      error: new ValidationError(\"Test\"),\n      node: this.dataRoot,\n      index: 0,\n    }];\n  }\n}\n\n// tslint:disable-next-line:completed-docs\nexport class TestDecorator extends GenericDecorator {\n  private readonly elementLevel: Record<string, number> = {\n    term: 2,\n    ref: 2,\n    text: 1,\n  };\n\n  protected readonly mode: TestMode;\n\n  addHandlers(): void {\n    super.addHandlers();\n    inputTriggerFactory.makeSplitMergeInputTrigger(\n      this.editor,\n      this.mode,\n      GUISelector.fromDataSelector(\"hi\",\n                                   this.mode.getAbsoluteNamespaceMappings()),\n      key.makeKey(\";\"),\n      keyConstants.BACKSPACE,\n      keyConstants.DELETE);\n  }\n\n  // tslint:disable:no-jquery-raw-elements\n  elementDecorator(root: Element, el: Element): void {\n    if (this.editor.modeTree.getMode(el) !== this.mode) {\n      // The element is not governed by this mode.\n      return;\n    }\n    const dataNode = this.editor.toDataNode(el) as Element;\n    const rend = dataNode.getAttribute(\"rend\");\n\n    const localName = dataNode.localName!;\n    const inTEI = dataNode.namespaceURI === this.namespaces.tei;\n\n    let level = inTEI ? this.elementLevel[localName] : undefined;\n    if (level === undefined) {\n      level = 1;\n    }\n\n    const isP = inTEI && localName === \"p\";\n    const isRef = inTEI && localName === \"ref\";\n\n    // We don't run the default when we wrap p.\n    if (!(isP && rend === \"wrap\")) {\n      // There's no super.super syntax we can use here.\n      Decorator.prototype.elementDecorator.call(\n        this, root, el, level,\n        this.contextMenuHandler.bind(this, true),\n        this.contextMenuHandler.bind(this, false));\n    }\n\n    if (isRef) {\n      $(el).children(\"._text._phantom\").remove();\n      this.guiUpdater.insertBefore(\n        el,\n        $(\"<div class='_text _phantom _end_wrapper'>)</div>\")[0],\n        el.lastChild);\n\n      const $before = $(\"<div class='_text _phantom _start_wrapper'>(</div>\");\n      this.guiUpdater.insertBefore(el, $before[0],\n                                   el.firstChild!.nextSibling);\n\n      $before.on(\"wed-context-menu\",\n                 { node: el },\n                 this._navigationContextMenuHandler.bind(this));\n      $before[0].setAttribute(\"data-wed--custom-context-menu\", \"true\");\n    }\n\n    if (isP) {\n      switch (rend) {\n      case \"foo\":\n        $(el).children(\"._gui_test\").remove();\n        this.guiUpdater\n          .insertBefore(\n            el,\n            $(\"<div class='_gui _phantom _gui_test btn \" +\n              \"btn-default'>Foo</div>\")[0],\n            el.lastChild);\n\n        let found: Element | undefined;\n        let child = dataNode.firstElementChild;\n        while (found === undefined && child !== null) {\n          if (child.tagName === \"abbr\") {\n            found = child;\n          }\n          child = child.nextElementSibling;\n        }\n        if (found !== undefined) {\n          this.guiUpdater\n            .insertBefore(\n              el,\n              $(\"<div class='_gui _phantom _gui_test btn \" +\n                \"btn-default'>Foo2</div>\")[0],\n              el.lastChild);\n          this.guiUpdater\n            .insertBefore(\n              el,\n              $(\"<div class='_gui _phantom _gui_test btn \" +\n                \"btn-default'>Foo3</div>\")[0],\n              el.lastChild);\n        }\n        break;\n      case \"wrap\":\n        if (closestByClass(el, \"_gui_test\") !== null) {\n          break;\n        }\n\n        const toRemove = childrenByClass(el, \"_gui\");\n        for (const remove of toRemove) {\n          el.removeChild(remove);\n        }\n\n        const wrapper = $(\"<div class='_gui _phantom_wrap _gui_test btn \" +\n                          \"btn-default'></div>\")[0];\n        this.guiUpdater.insertBefore(el.parentNode! as Element, wrapper, el);\n        this.guiUpdater.insertBefore(wrapper, el, null);\n        break;\n      default:\n        break;\n      }\n    }\n  }\n\n  private _navigationContextMenuHandler(wedEv: JQueryEventObject,\n                                        ev: JQueryEventObject): boolean {\n    // node is the node in the GUI tree which corresponds to the navigation item\n    // for which a context menu handler was required by the user.\n    const node = wedEv.data.node;\n    const dataNode = this.editor.toDataNode(node) as Element;\n    const prefixedName = this.mode.unresolveName(\n      new EName(dataNode.namespaceURI === null ? \"\" : dataNode.namespaceURI,\n                dataNode.localName!));\n\n    // We don't know this element.\n    if (prefixedName === undefined) {\n      return true;\n    }\n\n    // container, offset: location of the node in its parent.\n    const container = node.parentNode;\n    const offset = indexOf(container.childNodes, node);\n\n    // Create \"insert\" transformations for siblings that could be inserted\n    // before this node.\n    const actions = this.mode.getContextualActions(\"insert\", prefixedName,\n                                                   container, offset);\n    // data to pass to transformations\n    const data = {\n      name: prefixedName,\n      moveCaretTo: this.editor.caretManager.makeCaret(container, offset),\n    };\n\n    const items = [];\n    for (const act of actions) {\n      const text = `${act.getLabelFor(data)} before this one`;\n      const $a = $(`<a tabindex='0' href='#'>${text}</a>`);\n      $a.click(data, act.boundTerminalHandler);\n      items.push($(\"<li></li>\").append($a)[0]);\n    }\n\n    // tslint:disable-next-line:no-unused-expression\n    new ContextMenu(this.editor.doc, ev.clientX, ev.clientY, items);\n\n    return false;\n  }\n}\n\nexport interface TestModeOptions extends GenericModeOptions {\n  ambiguous_fileDesc_insert: boolean;\n  fileDesc_insert_needs_input: boolean;\n  hide_attributes: boolean;\n  nameSuffix?: string;\n  stylesheets?: string[];\n}\n\ntype MatchCallback = (matches: string[]) => void;\n\n// tslint:disable-next-line:completed-docs\nclass TypeaheadAction extends Action<{}> {\n\n  execute(): void {\n    const editor = this.editor;\n\n    const substringMatcher = (strs: string[]) => {\n      return (q: string, cb: MatchCallback) => {\n        const re = new RegExp(q, \"i\");\n\n        const matches = [];\n        for (const str of strs) {\n          if (re.test(str)) {\n            matches.push(str);\n          }\n        }\n\n        cb(matches);\n      };\n    };\n\n    const testData = [];\n    for (let i = 0; i < 100; ++i) {\n      testData.push(`Test ${i}`);\n    }\n\n    const options = {\n      options: {\n        autoselect: true,\n        hint: true,\n        highlight: true,\n        minLength: 1,\n      },\n      datasets: [{\n        source: substringMatcher(testData),\n        limit: testData.length,\n      }],\n    };\n\n    const typeahead =\n      editor.editingMenuManager.setupTypeaheadPopup(\n        300, \"Test\", options,\n        (obj?: string) => {\n          if (obj != null) {\n            editor.insertText(obj);\n          }\n        }, undefined, true);\n    typeahead.hideSpinner();\n    const range = editor.caretManager.range;\n\n    // This is purposely not as intelligent as what real mode would need.\n    if (range != null && !(range.collapsed as boolean)) {\n      typeahead.setValue(range.toString());\n    }\n  }\n}\n\n// tslint:disable-next-line:completed-docs\nclass DraggableModalAction extends Action<{}> {\n  private _modal: Modal | undefined;\n\n  private get modal(): Modal {\n    if (this._modal === undefined) {\n      this._modal = this.editor.makeModal({ draggable: true });\n    }\n\n    return this._modal;\n  }\n\n  execute(): void {\n    this.modal.modal();\n  }\n}\n\n// tslint:disable-next-line:completed-docs\nclass DraggableResizableModalAction extends Action<{}> {\n  private _modal: Modal | undefined;\n\n  private get modal(): Modal {\n    if (this._modal === undefined) {\n      this._modal = this.editor.makeModal({\n          resizable: true,\n          draggable: true,\n        });\n    }\n\n    return this._modal;\n  }\n\n  execute(): void {\n    this.modal.modal();\n  }\n}\n\n// tslint:disable-next-line:completed-docs\nclass ResizableModalAction extends Action<{}> {\n  private _modal: Modal | undefined;\n\n  private get modal(): Modal {\n    if (this._modal === undefined) {\n      this._modal = this.editor.makeModal({ resizable: true });\n    }\n\n    return this._modal;\n  }\n\n  execute(): void {\n    this.modal.modal();\n  }\n}\n\n/**\n * This mode is purely designed to help test wed, and nothing\n * else. Don't derive anything from it and don't use it for editing.\n */\nexport class TestMode extends GenericMode<TestModeOptions> {\n  private typeaheadAction: TypeaheadAction;\n  private draggableAction: DraggableModalAction;\n  private resizableAction: ResizableModalAction;\n  private draggableResizableAction: DraggableResizableModalAction;\n\n  readonly optionTemplate: Template = {\n    metadata: true,\n    autoinsert: false,\n    ambiguous_fileDesc_insert: false,\n    fileDesc_insert_needs_input: false,\n    hide_attributes: false,\n    // We use nameSuffix to vary the name given to multiple instances.\n    nameSuffix: false,\n    stylesheets: false,\n  };\n\n  constructor(editor: EditorAPI, options: TestModeOptions) {\n    super(editor, options);\n    this.wedOptions = mergeOptions({}, this.wedOptions);\n    const suffix = options.nameSuffix != null ? options.nameSuffix : \"\";\n    this.wedOptions.metadata = {\n      name: `Test${suffix}`,\n      authors: [\"Louis-Dominique Dubeau\"],\n      description: \"TEST MODE. DO NOT USE IN PRODUCTION!\",\n      license: \"MPL 2.0\",\n      copyright: \"Mangalam Research Center for Buddhist Languages\",\n    };\n    this.wedOptions.label_levels = {\n      max: 2,\n      initial: 1,\n    };\n\n    if (options.hide_attributes) {\n      this.wedOptions.attributes = \"hide\";\n    }\n    else {\n      this.wedOptions.attributes = {\n        handling: \"edit\",\n        autohide: {\n          method: \"selector\",\n          elements: [{\n            selector: \"div\",\n            attributes: [\"*\", {\n              except: [\"sample\", \"type\", \"subtype\"],\n            }],\n          }],\n        },\n      };\n    }\n  }\n\n  init(): Promise<void> {\n    return super.init()\n      .then(() => {\n        const editor = this.editor;\n        this.typeaheadAction = new TypeaheadAction(\n          editor, \"Test typeahead\", undefined,\n          \"<i class='fa fa-plus fa-fw'></i>\", true);\n\n        this.draggableAction = new DraggableModalAction(\n          editor, \"Test draggable\", undefined, undefined, true);\n        this.resizableAction = new ResizableModalAction(\n          editor, \"Test resizable\", undefined, undefined, true);\n        this.draggableResizableAction = new DraggableResizableModalAction(\n          editor, \"Test draggable resizable\", undefined, undefined, true);\n      });\n  }\n\n  getStylesheets(): string[] {\n    const stylesheets = this.options.stylesheets;\n    return stylesheets !== undefined ? stylesheets : [];\n  }\n\n  getToolbarButtons(): Button[] {\n    return [this.typeaheadAction.makeButton()];\n  }\n\n  getContextualActions(transformationType: string | string[],\n                       tag: string,\n                       container: Node,\n                       offset: number): Action<{}>[] {\n    if (this.options.fileDesc_insert_needs_input &&\n        tag === \"fileDesc\" && transformationType === \"insert\") {\n      return [new transformation.Transformation(\n        this.editor, \"insert\", \"foo\", undefined, undefined, true,\n        // We don't need a real handler because it will not be called.\n        // tslint:disable-next-line:no-empty\n        () => {})];\n    }\n\n    let ret = super.getContextualActions(transformationType, tag,\n                                         container, offset);\n\n    if (this.options.ambiguous_fileDesc_insert &&\n        tag === \"fileDesc\" && transformationType === \"insert\") {\n      // We just duplicate the transformation.\n      ret = ret.concat(ret);\n    }\n\n    if (tag === \"ref\" &&\n        (transformationType === \"insert\" || transformationType === \"wrap\")) {\n      // It is a bit peculiar to tie the draggable and resizable actions to\n      // \"ref\", because it is not necessary, but meh...\n      ret.push(this.typeaheadAction, this.draggableAction,\n               this.resizableAction, this.draggableResizableAction);\n    }\n\n    return ret;\n  }\n\n  makeDecorator(): GenericDecorator {\n    return new TestDecorator(this, this.editor, this.metadata, this.options);\n  }\n\n  getAttributeCompletions(attr: Attr): string[] {\n    if (attr.name === \"n\") {\n      return [\"completion1\", \"completion2\"];\n    }\n\n    return [];\n  }\n\n  getValidator(): ModeValidator {\n    return new Validator(this.editor.dataRoot);\n  }\n}\n\nexport { TestMode as Mode };\n\n//  LocalWords:  Dubeau MPL Mangalam tei domutil btn getLabelFor tabindex href\n//  LocalWords:  li nameSuffix subtype typeahead fw draggable resizable\n"]}