{"version":3,"file":"metadata-versioned-reader.js","sourceRoot":"","sources":["../../../../../../lib/wed/modes/generic/metadata-versioned-reader.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Reading facilities common to all readers that read specific versions.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\nimport { EName } from \"salve\";\n\nimport { Metadata } from \"./metadata\";\nimport { Metadata as MetadataInterface } from \"./metadata-as-json\";\nimport { MetadataJSONReader } from \"./metadata-json-reader\";\nimport * as metadataSchema from \"./metadata-schema.json\";\n\n// tslint:disable-next-line:completed-docs\nexport abstract class MetadataBase implements Metadata {\n  readonly version: string;\n  readonly generator?: string;\n  readonly date?: string;\n\n  protected readonly namespaceMappings: Record<string, string>;\n  protected readonly reverseMappings: Record<string, string> =\n    Object.create(null);\n  protected descMap: Record<string, string> = Object.create(null);\n\n  constructor(expectedVersion: string,\n              protected readonly metadata: MetadataInterface) {\n    if (metadata.version !== expectedVersion) {\n      throw new Error(\n        `incorrect version number: expected ${expectedVersion}, \\\ngot ${metadata.version}`);\n    }\n    this.version = metadata.version;\n    this.generator = metadata.generator;\n    this.date = metadata.date;\n\n    if (metadata.namespaces !== undefined) {\n      this.namespaceMappings = metadata.namespaces;\n    }\n    else {\n      this.namespaceMappings = Object.create(null);\n    }\n\n    if (\"xml\" in this.namespaceMappings) {\n      throw new Error(\"xml mapping already defined\");\n    }\n\n    // tslint:disable-next-line:no-http-string\n    this.namespaceMappings.xml = \"http://www.w3.org/XML/1998/namespace\";\n\n    // tslint:disable-next-line:forin\n    for (const prefix in this.namespaceMappings) {\n      const ns = this.namespaceMappings[prefix];\n      // If prefix foo resolves to http://bar and bar resolves to the same URI\n      // and foo is before bar, then foo wins.\n      if (this.reverseMappings[ns] === undefined) {\n        this.reverseMappings[ns] = prefix;\n      }\n    }\n    this.reverseMappings[this.namespaceMappings[\"\"]] = \"\";\n\n    const elements = metadata.elements;\n    if (elements !== undefined) {\n      const descMap = this.descMap;\n\n      for (const el of elements) {\n        // Here, an undefined namespace is the tei namespace.\n        const elNs = el.ns !== undefined ? el.ns :\n          // tslint:disable-next-line:no-http-string\n          \"http://www.tei-c.org/ns/1.0\";\n        const elPrefix = this.reverseMappings[elNs];\n        if (elPrefix === undefined) {\n          throw new Error(`undefined namespace: ${elNs}`);\n        }\n        const name = elPrefix === \"\" ? el.name : `${elPrefix}:${el.name}`;\n        descMap[name] = el.desc;\n      }\n    }\n  }\n\n  getNamespaceMappings(): Record<string, string> {\n    return this.namespaceMappings;\n  }\n\n  shortDescriptionFor(name: EName): string | undefined {\n    const unresolved = this.unresolveName(name);\n    if (unresolved === undefined) {\n      return undefined;\n    }\n\n    return this.descMap[unresolved];\n  }\n\n  abstract isInline(node: Element): boolean;\n  abstract documentationLinkFor(name: EName): string | undefined;\n\n  unresolveName(name: EName): string | undefined {\n    const prefix = this.reverseMappings[name.ns];\n    if (prefix === undefined) {\n      return undefined;\n    }\n\n    return (prefix === \"\") ? name.name : `${prefix}:${name.name}`;\n  }\n}\n\n/**\n * A constructor of [[MetadataBase]] objects.\n */\nexport interface MetadataBaseCtor {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): MetadataBase;\n}\n\n/**\n * A reader that reads a versioned format of the metadata.\n */\nexport class MetadataReaderBase extends MetadataJSONReader {\n  public static readonly version: string = \"1\";\n\n  constructor(protected readonly metadataClass: MetadataBaseCtor) {\n    super(metadataSchema);\n  }\n\n  protected convert(object: Object): Metadata {\n    return new this.metadataClass(object as MetadataInterface);\n  }\n}\n\n//  LocalWords:  MPL expectedVersion xml tei elNs elPrefix el\n"]}