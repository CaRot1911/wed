{"version":3,"file":"generic-decorator.js","sourceRoot":"","sources":["../../../../../../lib/wed/modes/generic/generic-decorator.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Decorator for the generic mode.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { Decorator, domtypeguards, EditorAPI, Mode, util } from \"wed\";\n\nconst { isElement, isText } = domtypeguards;\n\nimport { Metadata } from \"./metadata\";\n\n/**\n * A decorator for the generic mode.\n */\nexport class GenericDecorator extends Decorator {\n  /**\n   * @param mode The mode object.\n   *\n   * @param editor The wed editor to which the mode is applied.\n   *\n   * @param metadata Meta-information about the schema.\n   *\n   * @param options The options object passed to the mode which uses this\n   * decorator.\n   *\n   */\n  // tslint:disable-next-line:no-any\n  constructor(mode: Mode, editor: EditorAPI,\n              protected readonly metadata: Metadata,\n              // tslint:disable-next-line:no-any\n              protected readonly options: any) {\n    super(mode, editor);\n  }\n\n  addHandlers(): void {\n    this.domlistener.addHandler(\n      \"included-element\",\n      util.classFromOriginalName(\"*\", {}),\n      (root: Element, tree: Element, parent: Element, prev: Node | null,\n       next: Node | null, el: Element) => {\n         // Skip elements which would already have been removed from the\n         // tree. Unlikely but...\n         if (!root.contains(el)) {\n           return;\n         }\n\n         this.elementDecorator(root, el);\n\n         const klass = this.getAdditionalClasses(el);\n         if (klass.length > 0) {\n           el.className += ` ${klass}`;\n         }\n       });\n\n    this.domlistener.addHandler(\n      \"children-changed\",\n      util.classFromOriginalName(\"*\", {}),\n      (root: Element, added: Node[], removed: Node[],\n       previousSibling: Node | null, nextSibling: Node | null, el: Element) => {\n         for (const child of added.concat(removed)) {\n           if (isText(child) || (isElement(child) &&\n                                 (child.classList.contains(\"_real\") ||\n                                  child.classList.contains(\"_phantom_wrap\")))) {\n             this.elementDecorator(root, el);\n             break;\n           }\n         }\n       });\n\n    this.domlistener.addHandler(\"text-changed\",\n                                util.classFromOriginalName(\"*\", {}),\n                                (root: Element, node: Text) => {\n                                  this.elementDecorator(\n                                    root, node.parentNode! as Element);\n                                });\n\n    this.domlistener.addHandler(\"attribute-changed\",\n                                util.classFromOriginalName(\"*\", {}),\n                                (root: Element, el: Element) => {\n                                  this.elementDecorator(root, el);\n                                });\n  }\n\n  elementDecorator(root: Element, el: Element): void {\n    super.elementDecorator(root, el, 1,\n                           this.contextMenuHandler.bind(this, true),\n                           this.contextMenuHandler.bind(this, false));\n  }\n\n  /**\n   * Returns additional classes that should apply to a node.\n   *\n   * @param node The node to check.\n   *\n   * @returns A string that contains all the class names separated by spaces. In\n   * other words, a string that could be put as the value of the ``class``\n   * attribute in an HTML tree.\n   */\n  getAdditionalClasses(node: Element): string {\n    const ret = [];\n    if (this.metadata.isInline(node)) {\n      ret.push(\"_inline\");\n    }\n    return ret.join(\" \");\n  }\n}\n\n//  LocalWords:  Dubeau MPL Mangalam util klass\n"]}