{"version":3,"sources":["../../../wed/log.ts"],"names":[],"mappings":"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","file":"log.js","sourcesContent":["/**\n * Logging facilities\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n// tslint:disable:no-any\nimport * as log4javascript from \"log4javascript\";\n\nlog4javascript.setShowStackTraces(true);\n\nconst ajaxLogger = log4javascript.getLogger(\"wed\");\najaxLogger.setLevel(log4javascript.Level.ALL);\n\nconst log = log4javascript.getLogger(\"wed.common\");\nlog.setLevel(log4javascript.Level.ALL);\nconst popup = new log4javascript.PopUpAppender(true);\npopup.setThreshold(log4javascript.Level.ERROR);\npopup.setInitiallyMinimized(true);\npopup.setNewestMessageAtTop(true);\n\nlog.addAppender(popup);\n\nexport type Log4JSMethod = (...messages: any[]) => void;\n\nexport const trace: Log4JSMethod = log.trace.bind(log);\nexport const debug: Log4JSMethod = log.debug.bind(log);\nexport const info: Log4JSMethod = log.info.bind(log);\nexport const warn: Log4JSMethod = log.warn.bind(log);\nexport const error: Log4JSMethod = log.error.bind(log);\nexport const fatal: Log4JSMethod = log.fatal.bind(log);\n\n/**\n * Shows the popup appender.\n */\nexport function showPopup(): void {\n  popup.show();\n}\n\n/**\n * Wrapper for handled exceptions.\n */\nexport class Handled {\n  /**\n   * original The original exception that was raised.\n   */\n  constructor(public readonly original: any) {}\n}\n\n/**\n * Reports an unhandled exception. Avoids reporting the same exception\n * more than once.\n *\n * **Use this function only if it makes sense to not abort the current execution\n * by throwing a new exception.** In most cases you want to use [[handle]]\n * instead of this function.\n *\n * @param e The exception to report. This exception will not be\n * reported if it happens to be a [[Handled]] object.\n *\n * @returns A wrapper around the original exception.\n */\nexport function unhandled(e: any): Handled {\n  if (!(e instanceof Handled)) {\n    log.fatal(\"Unhandled exception\", e);\n    // tslint:disable-next-line:no-typeof-undefined\n    if (typeof console !== \"undefined\") {\n      // tslint:disable:no-console\n      console.log(e);\n      console.log(e.stack);\n      // tslint:enable:no-console\n    }\n    return new Handled(e);\n  }\n  return e;\n}\n\n/**\n * Handles an unhandled exception. In almost all cases where you have to deal\n * with an unhandled exception, you want to interrupt the flow of\n * execution. This function does this.\n *\n * @param e The exception that is unhandled.\n *\n * @throws {Handled} Always.\n */\nexport function handle(e: any): never {\n  throw unhandled(e);\n}\n\n/**\n * Wraps a function into an unhandled exception logger. The exceptions caught\n * are rethrown after being logged.\n *\n * @param f The function to wrap.\n *\n * @returns The value returned by f.\n */\nexport function wrap<T extends (this: any, ...args: any[]) => any>(fn: T): T {\n  return function wrapper(this: any, ...args: any[]): any {\n    try {\n      // tslint:disable-next-line:no-invalid-this\n      return fn.apply(this, arguments);\n    }\n    catch (ex) {\n      handle(ex);\n    }\n  } as T;\n}\n\n/**\n * This method adds an Ajax appender to the topmost logger defined by wed so\n * that all messages are sent to the URL specified as a parameter. A server\n * should be listening at that address.\n *\n * @param url The URL for the location to send log messages.\n *\n * @param headers An object having (key, value) pairs which define header fields\n * to set for communicating. One use for this parameter would be for instance to\n * set the X-CSRFToken field when wed is being used on pages served by a Django\n * server.\n *\n * @returns The appender that was created to handle the URL. This may be used\n * with [[removeAppender]] to remove an appender that is no longer used.\n */\nexport function addURL(url: string, headers?: Record<string, string>):\nlog4javascript.AjaxAppender {\n  const appender = new log4javascript.AjaxAppender(url);\n  appender.setThreshold(log4javascript.Level.ALL);\n  const layout = new log4javascript.XmlLayout();\n  appender.setLayout(layout);\n  if (headers !== undefined) {\n    Object.keys(headers).forEach((x) => {\n      appender.addHeader(x, headers[x]);\n    });\n  }\n  ajaxLogger.addAppender(appender);\n  log.info(\"Ajax appender initialized\");\n  return appender;\n}\n\n/**\n * Removes an appender from the logger. Flushes out any pending messages first.\n *\n * @param appender The appender to remove.\n */\nexport function removeAppender(appender: log4javascript.AjaxAppender): void {\n  appender.sendAll();\n  ajaxLogger.removeAppender(appender);\n}\n\n//  LocalWords:  Dubeau MPL Mangalam popup appender unhandled rethrown Django\n//  LocalWords:  CSRFToken param\n"]}