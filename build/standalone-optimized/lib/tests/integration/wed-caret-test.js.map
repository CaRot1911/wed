{"version":3,"file":"wed-caret-test.js","sourceRoot":"","sources":["../../../../../lib/tests/integration/wed-caret-test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { first } from \"rxjs/operators/first\";\n\nimport * as browsers from \"wed/browsers\";\nimport { CaretManager } from \"wed/caret-manager\";\nimport { DLoc } from \"wed/dloc\";\nimport { childByClass, firstDescendantOrSelf, indexOf } from \"wed/domutil\";\nimport { Editor } from \"wed/editor\";\nimport * as keyConstants from \"wed/key-constants\";\nimport { distFromRect } from \"wed/util\";\n\nimport * as globalConfig from \"../base-config\";\nimport { caretCheck, dataCaretCheck, EditorSetup, firstGUI,\n         getAttributeValuesFor, getElementNameFor,\n         lastGUI } from \"../wed-test-util\";\n\nconst assert = chai.assert;\n\ndescribe(\"wed caret\", () => {\n  let setup: EditorSetup;\n  let editor: Editor;\n  let caretManager: CaretManager;\n  let ps: NodeListOf<Element>;\n\n  before(() => {\n    setup = new EditorSetup(\n      \"/base/build/standalone/lib/tests/wed_test_data/source_converted.xml\",\n      globalConfig.config,\n      document);\n    ({ editor } = setup);\n    return setup.init().then(() => {\n        // tslint:disable-next-line:no-any\n      (editor.validator as any)._validateUpTo(editor.dataRoot, -1);\n      ps = editor.guiRoot.querySelectorAll(\".body .p\");\n      caretManager = editor.caretManager;\n    });\n  });\n\n  afterEach(() => {\n    setup.reset();\n  });\n\n  after(() => {\n    setup.restore();\n    // tslint:disable-next-line:no-any\n    (editor as any) = undefined;\n    // tslint:disable-next-line:no-any\n    (caretManager as any) = undefined;\n  });\n\n  function assertIsTextPhantom(node: Node | undefined | null): void {\n    const cl = node != null ? (node as Element).classList : null;\n    assert.isTrue(cl != null ?\n                  (cl.contains(\"_text\") && cl.contains(\"_phantom\")) :\n                  false);\n  }\n\n  it(\"starts with undefined carets and selection ranges\", () => {\n    assert.isUndefined(caretManager.caret, \"no gui caret\");\n    assert.isUndefined(caretManager.getDataCaret(), \"no data caret\");\n    assert.isUndefined(caretManager.range, \"no gui selection range\");\n  });\n\n  describe(\"moveCaretRight\", () => {\n    it(\"works even if there is no caret defined\", () => {\n      editor.caretManager.onBlur();\n      assert.equal(caretManager.getNormalizedCaret(), undefined, \"no caret\");\n      caretManager.move(\"right\");\n      assert.equal(caretManager.getNormalizedCaret(), undefined, \"no caret\");\n    });\n\n    it(\"moves right into gui elements\", () => {\n      // The 6th paragraph contains a test case.\n      const initial = editor.guiRoot.querySelectorAll(\".body>.p\")[5]\n        .childNodes[1] as Text;\n      assert.equal(initial.nodeType, Node.TEXT_NODE);\n      caretManager.setCaret(initial, initial.length);\n      caretCheck(editor, initial, initial.length, \"initial\");\n      caretManager.move(\"right\");\n      // It is now located inside the text inside the label.\n      const elementName = getElementNameFor(initial.nextElementSibling!)!;\n      caretCheck(editor, elementName, 0, \"moved once\");\n      assert.equal(elementName.textContent, \"hi\");\n    });\n\n    it(\"moves into the first attribute of a start label\", () => {\n      // Start label of last paragraph...\n      const initial = ps[7];\n      const firstGUIEl = firstGUI(initial)!;\n      const offset = indexOf(initial.childNodes, firstGUIEl);\n      caretManager.setCaret(initial, offset);\n      caretCheck(editor, initial, offset, \"initial\");\n      caretManager.move(\"right\");\n      // It is now located inside the text inside the label which marks the\n      // start of the TEI element.\n      caretCheck(editor, getElementNameFor(initial)!, 0, \"moved once\");\n\n      caretManager.move(\"right\");\n      const attrNode = getAttributeValuesFor(initial)[0].firstChild!;\n      caretCheck(editor, attrNode, 0, \"moved twice\");\n\n      caretManager.move(\"right\");\n      caretCheck(editor, attrNode, 1, \"moved thrice\");\n    });\n\n    it(\"moves into empty attributes\", () => {\n      // Start label of last paragraph...\n      const initial = ps[9];\n      const firstGUIEl = firstGUI(initial)!;\n      const offset = indexOf(initial.childNodes, firstGUIEl);\n      caretManager.setCaret(initial, offset);\n      caretCheck(editor, initial, offset, \"initial\");\n      caretManager.move(\"right\");\n      // It is w located inside the text inside the label which marks the start\n      // of the TEI element.\n      caretCheck(editor, getElementNameFor(initial)!, 0, \"moved once\");\n\n      caretManager.move(\"right\");\n      caretCheck(editor, getAttributeValuesFor(initial)[0].firstChild!, 0,\n                 \"moved twice\");\n    });\n\n    it(\"moves from attribute to attribute\", () => {\n      // First attribute of the start label of last paragraph...\n      const firstGUIEl = firstGUI(ps[7])!;\n      const initial = firstGUIEl.getElementsByClassName(\"_attribute_value\")[0]\n        .firstChild as Text;\n      caretManager.setCaret(initial, initial.length);\n      caretCheck(editor, initial, initial.length, \"initial\");\n      caretManager.move(\"right\");\n      caretCheck(editor, getAttributeValuesFor(ps[7])[1].firstChild!, 0,\n                 \"moved\");\n    });\n\n    it(\"moves out of attributes\", () => {\n      // First attribute of the start label of last paragraph...\n      const firstGUIEl = firstGUI(ps[7])!;\n      const attributes = firstGUIEl.getElementsByClassName(\"_attribute_value\");\n      const initial = attributes[attributes.length - 1].firstChild as Text;\n      caretManager.setCaret(initial, initial.length);\n      caretCheck(editor, initial, initial.length, \"initial\");\n      caretManager.move(\"right\");\n      caretCheck(editor, firstGUIEl.nextSibling!, 0, \"moved\");\n    });\n\n    it(\"moves right into text\", () => {\n      const initial = editor.guiRoot.getElementsByClassName(\"title\")[0];\n      caretManager.setCaret(initial, 0);\n      caretCheck(editor, initial, 0, \"initial\");\n      caretManager.move(\"right\");\n      // It is now located inside the text inside the label which marks the\n      // start of the TEI element.\n      caretCheck(editor, getElementNameFor(initial)!, 0, \"moved once\");\n      caretManager.move(\"right\");\n      // It is now inside the text\n      const textNode = childByClass(initial, \"_gui\")!.nextSibling!;\n      caretCheck(editor, textNode, 0, \"moved 2 times\");\n      caretManager.move(\"right\");\n      // move through text\n      caretCheck(editor, textNode, 1, \"moved 3 times\");\n      caretManager.move(\"right\");\n      caretManager.move(\"right\");\n      caretManager.move(\"right\");\n      // move through text\n      caretCheck(editor, textNode, 4, \"moved 6 times\");\n      caretManager.move(\"right\");\n      // It is now inside the final gui element.\n      caretCheck(editor, getElementNameFor(initial, true)!, 0, \"moved 7 times\");\n    });\n\n    it(\"moves right from text to text\", () => {\n      const term = editor.guiRoot.querySelector(\".body>.p>.term\")!;\n      const initial = term.previousSibling as Text;\n      // Make sure we are on the right element.\n      assert.equal(initial.nodeType, Node.TEXT_NODE);\n      assert.equal(initial.nodeValue, \"Blah blah \");\n\n      caretManager.setCaret(initial, initial.length - 1);\n      caretCheck(editor, initial, initial.length - 1, \"initial\");\n\n      caretManager.move(\"right\");\n      caretCheck(editor, initial, initial.length, \"moved once\");\n\n      caretManager.move(\"right\");\n      // The first child node is an invisible element label.\n      caretCheck(editor, term.childNodes[1], 0, \"moved twice\");\n    });\n\n    it(\"moves right out of elements\", () => {\n      const title = editor.guiRoot.getElementsByClassName(\"title\")[0];\n      // Text node inside title.\n      const initial = title.childNodes[1] as Text;\n      caretManager.setCaret(initial, initial.length);\n      caretCheck(editor, initial, initial.length, \"initial\");\n      caretManager.move(\"right\");\n      // It is now inside the final gui element.\n      caretCheck(editor, getElementNameFor(initial.parentNode as Element,\n                                           true)!,\n                 0, \"moved once\");\n      caretManager.move(\"right\");\n      // It is now before the gui element at end of the title's parent.\n      const lastGUIEl = lastGUI(title.parentNode as Element)!;\n      caretCheck(editor, lastGUIEl.parentNode as Element,\n                 lastGUIEl.parentNode!.childNodes.length - 1,\n                 \"moved twice\");\n    });\n\n    it(\"moves past the initial nodes around editable contents\", () => {\n      const child = editor.guiRoot.getElementsByClassName(\"ref\")[0];\n      const initial = child.parentNode!;\n      const offset = indexOf(initial.childNodes, child);\n      caretManager.setCaret(initial, offset);\n      caretCheck(editor, initial, offset, \"initial\");\n\n      caretManager.move(\"right\");\n\n      const finalOffset = 2;\n      const caretNode = child.childNodes[finalOffset];\n      assertIsTextPhantom(caretNode);\n      assertIsTextPhantom(caretNode.previousSibling);\n      caretCheck(editor, child, finalOffset, \"moved once\");\n    });\n\n    it(\"moves out of an element when past last node around editable contents\",\n       () => {\n         const initial = editor.guiRoot.getElementsByClassName(\"ref\")[0];\n         // Check that what we are expecting to be around the caret is correct.\n         const offset = 2;\n         const caretNode = initial.childNodes[offset];\n         assertIsTextPhantom(caretNode);\n         assertIsTextPhantom(caretNode.previousSibling);\n\n         caretManager.setCaret(initial, offset);\n         caretCheck(editor, initial, offset, \"initial\");\n\n         caretManager.move(\"right\");\n\n         caretCheck(editor, initial.parentNode!,\n                    indexOf(initial.parentNode!.childNodes, initial) + 1,\n                    \"moved once\");\n       });\n\n    it(\"does not move when at end of document\", () => {\n      const initial = lastGUI(childByClass(editor.guiRoot, \"TEI\")!)!;\n      caretManager.setCaret(initial, 0);\n      caretCheck(editor, initial, 0, \"initial\");\n      caretManager.move(\"right\");\n      // Same position\n      caretCheck(editor, initial, 0, \"moved once\");\n    });\n  });\n\n  describe(\"caretManager.newPosition left\", () => {\n    it(\"returns the first position in the element name if it starts \" +\n       \"from any other position in the element name\",\n       () => {\n         const firstGUIEl =\n           editor.guiRoot.getElementsByClassName(\"__start_label\")[0];\n         const elName = firstGUIEl.getElementsByClassName(\"_element_name\")[0];\n         const before = caretManager.makeCaret(elName.firstChild, 1);\n         const after = caretManager.newPosition(before, \"left\")!;\n         assert.equal(after.node, elName);\n         assert.equal(after.offset, 0);\n       });\n\n    it(\"returns the position before the element if it starts \" +\n       \"in the first position in the element name\",\n       () => {\n         const elName = getElementNameFor(ps[7]);\n         const before = caretManager.makeCaret(elName, 0);\n         const after = caretManager.newPosition(before, \"left\")!;\n         const parent = ps[7].parentNode!;\n         assert.equal(after.node, parent);\n         assert.equal(after.offset, indexOf(parent.childNodes, ps[7]));\n       });\n  });\n\n  describe(\"caretManager.move('left')\", () => {\n    it(\"works even if there is no caret defined\", () => {\n      editor.caretManager.onBlur();\n      assert.equal(caretManager.getNormalizedCaret(), undefined, \"no caret\");\n      caretManager.move(\"left\");\n      assert.equal(caretManager.getNormalizedCaret(), undefined, \"no caret\");\n    });\n\n    it(\"moves left into gui elements\", () => {\n      const initial = editor.guiRoot.firstChild as Element;\n      const offset = initial.childNodes.length;\n      caretManager.setCaret(initial, offset);\n      caretCheck(editor, initial, offset, \"initial\");\n      const lastGUIEl = lastGUI(initial)!;\n\n      caretManager.move(\"left\");\n      // It is now located inside the text inside the label which marks the\n      // end of the TEI element.\n      caretCheck(editor, getElementNameFor(initial, true)!, 0, \"moved once\");\n\n      caretManager.move(\"left\");\n      caretCheck(editor, lastGUIEl.parentNode!,\n                 lastGUIEl.parentNode!.childNodes.length - 1,\n                 \"moved twice\");\n\n      caretManager.move(\"left\");\n      // It is now in the gui element of the 1st child.\n      const texts = initial.getElementsByClassName(\"text\");\n      caretCheck(editor, getElementNameFor(texts[texts.length - 1], true)!,\n                 0, \"moved 3 times\");\n    });\n\n    it(\"moves into the last attribute of a start label\", () => {\n      // Start label of last paragraph...\n      const firstGUIEl = firstGUI(ps[7])!;\n      const initial = firstGUIEl.parentNode!;\n      const offset = indexOf(initial.childNodes, firstGUIEl) + 1;\n      // Set the caret just after the start label\n      caretManager.setCaret(initial, offset);\n      caretCheck(editor, initial, offset, \"initial\");\n\n      const attrs = getAttributeValuesFor(ps[7]);\n      const lastAttrText = attrs[attrs.length - 1].firstChild as Text;\n      caretManager.move(\"left\");\n      caretCheck(editor, lastAttrText, lastAttrText.length, \"moved once\");\n\n      caretManager.move(\"left\");\n      caretCheck(editor, lastAttrText, lastAttrText.length - 1, \"moved twice\");\n    });\n\n    it(\"moves into empty attributes\", () => {\n      // Start label of last paragraph...\n      const firstGUIEl = firstGUI(ps[9])!;\n      const initial = firstGUIEl.parentNode!;\n      const offset = indexOf(initial.childNodes, firstGUIEl) + 1;\n      // Set the caret just after the start label\n      caretManager.setCaret(initial, offset);\n      caretCheck(editor, initial, offset, \"initial\");\n\n      const attrs = getAttributeValuesFor(ps[9]);\n      const lastAttr = attrs[attrs.length - 1];\n      caretManager.move(\"left\");\n      caretCheck(editor, lastAttr.firstChild!, 0, \"moved once\");\n    });\n\n    it(\"moves from attribute to attribute\", () => {\n      // Start label of last paragraph...\n      const attrs = getAttributeValuesFor(ps[7]);\n      const initial = attrs[attrs.length - 1].firstChild!;\n      // Set the caret at the start of the last attribute.\n      caretManager.setCaret(initial, 0);\n      caretCheck(editor, initial, 0, \"initial\");\n\n      caretManager.move(\"left\");\n      const final = attrs[attrs.length - 2].firstChild as Text;\n      caretCheck(editor, final, final.length, \"moved once\");\n    });\n\n    it(\"moves out of attributes\", () => {\n      // Start label of last paragraph...\n      const attrs = getAttributeValuesFor(ps[7]);\n      // Set the caret at the start of the first attribute.\n      const initial = attrs[0].firstChild!;\n      caretManager.setCaret(initial, 0);\n      caretCheck(editor, initial, 0, \"initial\");\n\n      caretManager.move(\"left\");\n      caretCheck(editor, getElementNameFor(ps[7])!, 0, \"moved once\");\n    });\n\n    it(\"moves out of a start label\", () => {\n      const p = ps[7];\n      const initial = getElementNameFor(p)!;\n      caretManager.setCaret(initial, 0);\n      caretCheck(editor, initial, 0, \"initial\");\n\n      const parent = p.parentNode!;\n      caretManager.move(\"left\");\n      caretCheck(editor, parent, indexOf(parent.childNodes, p), \"moved once\");\n    });\n\n    it(\"moves left into text\", () => {\n      const title = editor.guiRoot.getElementsByClassName(\"title\")[0];\n      const lastGUIEl = lastGUI(title)!;\n      const initial = getElementNameFor(title, true)!;\n      caretManager.setCaret(initial, 0);\n      caretCheck(editor, initial, 0, \"initial\");\n      caretManager.move(\"left\");\n      // It is now inside the text\n      const textNode = lastGUIEl.previousSibling as Text;\n      let offset = textNode.length;\n      caretCheck(editor, textNode, offset, \"moved once\");\n      caretManager.move(\"left\");\n      // move through text\n      offset--;\n      caretCheck(editor, textNode, offset, \"moved twice\");\n      caretManager.move(\"left\");\n      caretManager.move(\"left\");\n      caretManager.move(\"left\");\n      caretCheck(editor, textNode, 0, \"moved 5 times\");\n      caretManager.move(\"left\");\n      // It is now inside the first gui element.\n      caretCheck(editor, getElementNameFor(title)!, 0, \"moved 6 times\");\n    });\n\n    it(\"moves left out of elements\", () => {\n      const title = editor.guiRoot.getElementsByClassName(\"title\")[0];\n      const initial = firstGUI(title)!;\n      caretManager.setCaret(initial, 0);\n      caretCheck(editor, initial, 0, \"initial\");\n      caretManager.move(\"left\");\n      // It is now after the gui element at start of the title's parent.\n      const firstGUIEl = firstGUI(title.parentNode as Element)!;\n\n      caretCheck(editor, firstGUIEl.parentNode!, 1, \"moved once\");\n    });\n\n    it(\"moves left from text to text\", () => {\n      const term = editor.guiRoot.querySelector(\".body>.p>.term\")!;\n      const initial = term.nextSibling!;\n      // Make sure we are on the right element.\n      assert.equal(initial.nodeType, Node.TEXT_NODE);\n      assert.equal(initial.nodeValue, \" blah.\");\n\n      caretManager.setCaret(initial, 1);\n      caretCheck(editor, initial, 1, \"initial\");\n\n      caretManager.move(\"left\");\n      caretCheck(editor, initial, 0, \"moved once\");\n\n      caretManager.move(\"left\");\n      caretCheck(editor, term.childNodes[1],\n                 (term.childNodes[1] as Text).length, \"moved twice\");\n    });\n\n    it(\"moves past the final nodes around editable contents\", () => {\n      const child = editor.guiRoot.getElementsByClassName(\"ref\")[0];\n      const initial = child.parentNode!;\n      const offset = indexOf(initial.childNodes, child) + 1;\n      caretManager.setCaret(initial, offset);\n      caretCheck(editor, initial, offset, \"initial\");\n\n      caretManager.move(\"left\");\n\n      const finalOffset = 2;\n      const caretNode = child.childNodes[finalOffset];\n      assertIsTextPhantom(caretNode);\n      assertIsTextPhantom(caretNode.previousSibling);\n      caretCheck(editor, child, finalOffset, \"moved once\");\n    });\n\n    it(\"moves out of an element when past first node around editable contents\",\n       () => {\n         const initial = editor.guiRoot.getElementsByClassName(\"ref\")[0];\n         // Check that what we are expecting to be around the caret is correct.\n         const offset = 2;\n         const caretNode = initial.childNodes[offset];\n         assertIsTextPhantom(caretNode);\n         assertIsTextPhantom(caretNode.previousSibling);\n\n         caretManager.setCaret(initial, offset);\n         caretCheck(editor, initial, offset, \"initial\");\n\n         caretManager.move(\"left\");\n\n         caretCheck(editor, initial.parentNode!,\n                    indexOf(initial.parentNode!.childNodes, initial),\n                    \"moved once\");\n       });\n\n    it(\"does not move when at start of document\", () => {\n      const initial = firstGUI(childByClass(editor.guiRoot, \"TEI\")!)!;\n      caretManager.setCaret(initial, 0);\n      caretCheck(editor, initial, 0, \"initial\");\n      caretManager.move(\"left\");\n      // Same position\n      caretCheck(editor, initial, 0, \"moved once\");\n    });\n  });\n\n  describe(\"caretManager.move('up')\", () => {\n    it(\"does not move when at the start of a document\", () => {\n      const initial = firstGUI(childByClass(editor.guiRoot, \"TEI\")!)!;\n      caretManager.setCaret(initial, 0);\n      caretCheck(editor, initial, 0, \"initial\");\n      caretManager.move(\"up\");\n      // Same position\n      caretCheck(editor, initial, 0, \"moved once\");\n    });\n\n    it(\"does not crash when moving from 2nd line\", () => {\n      const tei = getElementNameFor(childByClass(editor.guiRoot, \"TEI\")!)!;\n      const initial =\n        firstGUI(editor.guiRoot.getElementsByClassName(\"teiHeader\")[0])!;\n      caretManager.setCaret(initial, 0);\n      caretCheck(editor, initial, 0, \"initial\");\n      caretManager.move(\"up\");\n      // It will be in the element name of TEI.\n      caretCheck(editor, tei, 0, \"moved once\");\n    });\n  });\n\n  describe(\"caretManager.move('down')\", () => {\n    it(\"does not move when at end of document\", () => {\n      const initial = lastGUI(childByClass(editor.guiRoot, \"TEI\")!)!;\n      caretManager.setCaret(initial, 0);\n      caretCheck(editor, initial, 0, \"initial\");\n      caretManager.move(\"down\");\n      // Same position\n      caretCheck(editor, initial, 0, \"moved once\");\n    });\n\n    it(\"does not crash when moving from 2nd to last line\", () => {\n      const initial =\n        lastGUI(editor.guiRoot.getElementsByClassName(\"text\")[0])!;\n      caretManager.setCaret(initial, 0);\n      caretCheck(editor, initial, 0, \"initial\");\n      caretManager.move(\"down\");\n      // It will be in the element name of TEI.\n      const tei =\n        getElementNameFor(childByClass(editor.guiRoot, \"TEI\")!, true)!;\n      caretCheck(editor, tei, 0, \"moved once\");\n    });\n  });\n\n  describe(\"down arrow\", () => {\n    it(\"moves the caret to the next line\", () => {\n      // Text node inside paragraph.\n      const initial = editor.dataRoot.querySelector(\"body>p\")!;\n      caretManager.setCaret(initial.firstChild, 0);\n\n      editor.type(keyConstants.DOWN_ARROW);\n\n      // We end up in the next paragraph.\n      dataCaretCheck(editor,\n                     firstDescendantOrSelf(initial.nextElementSibling)!,\n                     0, \"moved down\");\n    });\n  });\n\n  describe(\"up arrow\", () => {\n    it(\"moves the caret to the previous line\", () => {\n      // Text node inside 2nd paragraph.\n      const initial = editor.dataRoot.querySelectorAll(\"body>p\")[1];\n      caretManager.setCaret(initial.firstChild, 0);\n\n      editor.type(keyConstants.UP_ARROW);\n\n      // We end up in the previous paragraph.\n      dataCaretCheck(editor,\n                     firstDescendantOrSelf(initial.previousElementSibling)!,\n                     0, \"moved up\");\n    });\n  });\n\n  it(\"moving the caret scrolls the pane\", (done) => {\n    const initial = editor.dataRoot;\n    caretManager.setCaret(initial.firstChild, 0);\n\n    // tslint:disable-next-line:no-any\n    const scroller = (editor as any).scroller;\n\n    const initialScroll = scroller.scrollTop;\n\n    scroller.events.pipe(first()).subscribe(() => {\n      // We need to wait until the scroller has fired the scroll event.\n      assert.isTrue(initialScroll < scroller.scrollTop);\n      const caretRect = editor.caretManager.mark.getBoundingClientRect();\n      const scrollerRect = scroller.getBoundingClientRect();\n      assert.equal(distFromRect(caretRect.left, caretRect.top,\n                                scrollerRect.left, scrollerRect.top,\n                                scrollerRect.right,\n                                scrollerRect.bottom),\n                   0, \"caret should be in visible space\");\n      done();\n    });\n\n    caretManager.setCaret(initial.firstChild,\n                          initial.firstChild!.childNodes.length);\n  });\n\n  it(\"proper caret position for words that are too long to word wrap\", () => {\n    const p = editor.dataRoot.getElementsByTagName(\"p\")[0];\n    editor.dataUpdater.insertText(\n      p, 0,\n      \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\");\n    caretManager.setCaret(p, 0);\n    const range = editor.window.document.createRange();\n    const guiCaret = caretManager.fromDataLocation(p.firstChild!, 0)!;\n    range.selectNode(guiCaret.node);\n    const rect = range.getBoundingClientRect();\n    // The caret should not be above the rectangle around the unbreakable text.\n    assert.isTrue(Math.round(rect.top) <=\n                  Math.round(caretManager.mark.getBoundingClientRect().top));\n  });\n\n  // tslint:disable-next-line:mocha-no-side-effect-code\n  const itNoIE = browsers.MSIE ? it.skip : it;\n\n  // We cannot right now run this on IE.\n  // tslint:disable-next-line:mocha-no-side-effect-code\n  itNoIE(\"proper caret position for elements that span lines\", () => {\n    const p = editor.dataRoot.querySelectorAll(\"body>p\")[5];\n\n    // Check that we are testing what we want to test. The end label for the hi\n    // element must be on the next line. If we don't have that condition yet,\n    // we modify the document to create the condition we want.\n    let textLoc: DLoc;\n    let hi: Element;\n    // This is extremely high on purpose. We don't want to have an arbitrarily\n    // low number that will cause issues *sometimes*.\n    let tries = 1000;\n    let satisfied = false;\n    // tslint:disable-next-line:no-constant-condition\n    while (true) {\n      tries--;\n      textLoc = caretManager.fromDataLocation(p.lastChild!, 2)!;\n      assert.equal(textLoc.node.nodeType, Node.TEXT_NODE);\n      const his =\n        (textLoc.node.parentNode as Element).getElementsByClassName(\"hi\");\n      hi = his[his.length - 1];\n      const startRect = firstGUI(hi)!.getBoundingClientRect();\n      const endRect = lastGUI(hi)!.getBoundingClientRect();\n      if (endRect.top > startRect.top + startRect.height) {\n        satisfied = true;\n        break;\n      }\n      if (tries === 0) {\n        break;\n      }\n      editor.dataUpdater.insertText(editor.toDataNode(hi)!, 0, \"AA\");\n    }\n\n    assert.isTrue(satisfied,\n                  \"PRECONDITION FAILED: the test is unable to establish the \\\nnecessary precondition\");\n\n    hi.scrollIntoView(true);\n    const event = new $.Event(\"mousedown\");\n    event.target = textLoc.node.parentNode as Element;\n    const { range } = textLoc.makeRange(textLoc.make(textLoc.node, 3))!;\n    const { top, bottom, left } = range.getBoundingClientRect();\n    event.clientX = left;\n    event.clientY = (top + bottom) / 2;\n    event.pageX = event.clientX + editor.window.document.body.scrollLeft;\n    event.pageY = event.clientY + editor.window.document.body.scrollTop;\n    event.which = 1; // First mouse button.\n    editor.$guiRoot.trigger(event);\n    caretCheck(editor, textLoc.node, textLoc.offset,\n               \"the caret should be in the text node\");\n  });\n});\n"]}