{"version":3,"sources":["../../../tests/integration/wed-error-handling-test.ts"],"names":[],"mappings":";;;IAYA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAE3B,QAAQ,CAAC,qBAAqB,EAAE;QAC9B,IAAI,KAAkB,CAAC;QACvB,IAAI,MAAkB,CAAC;QACvB,IAAI,MAAiB,CAAC;QAEtB,UAAU,CAAC;YACT,KAAK,GAAG,IAAI,2BAAW,CACrB;iCAC2B,EAC3B,YAAY,CAAC,MAAM,EACnB,QAAQ,CAAC,CAAC;YACZ,CAAG,qBAAM,EAAE,qBAAM,CAAW,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC;YACR,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE,UAAC,IAAI;YAClD,MAAM,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAClC,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;YACrC,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE;gBAC1B,+DAA+D;gBAC/D,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wDAAwD,EAAE,UAAC,IAAI;YAChE,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;YACzB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;YAClE,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE;gBAC1B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,EAAE,IAAK,OAAA,EAAE,CAAC,IAAI,KAAK,OAAO,EAAnB,CAAmB,CAAC;qBACpD,KAAK,EAAE,CAAC,SAAS,CAAC,UAAC,EAAE;oBACpB,sBAAsB;oBAEtB,qEAAqE;oBACrE,sBAAsB;oBACtB,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC;gBAEL,MAAM,CAAC,KAAK,EAAE,CAAC;gBACf,yBAAyB;gBACzB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yDAAyD,EAAE,UAAC,IAAI;YACjE,MAAM,CAAC,sBAAsB,GAAG,IAAI,CAAC;YACrC,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,WAAW,EAAE,CAAC;YACrE,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE;gBAC1B,oBAAoB;gBACpB,MAAM,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;gBACpC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACrB,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sDAAsD,EAAE,UAAC,IAAI;YAC9D,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;YAC3B,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;YAC9D,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE;gBAC1B,oBAAoB;gBACpB,MAAM,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;gBACpC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACrB,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,UAAC,IAAI;YAC1C,MAAM,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAClC,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;YACrC,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE;gBAC1B,+DAA+D;gBAC/D,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;gBAEvB,2DAA2D;gBAC3D,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,EAAE;oBACvC,yDAAyD;oBACzD,OAAO,EAAE,MAAM;oBACf,OAAO,EAAE,GAAG,CAAC,OAAO;oBACpB,IAAI,EACJ;;;;6CAIqC;iBACtC,CAAC,CAAC;gBACH,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,UAAC,IAAI;YACxC,0EAA0E;YAC1E,oEAAoE;YACpE,2CAA2C;YAE3C,UAAU,CAAC;gBACT,UAAU,CAAC;oBACT,+DAA+D;oBAC/D,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;oBACvB,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,EAAE;wBACvC,OAAO,EAAE,SAAS;wBAClB,OAAO,EAAE,GAAG,CAAC,OAAO;wBACpB,IAAI,EACJ;;;;6CAImC;qBACpC,CAAC,CAAC;oBACH,IAAI,EAAE,CAAC;gBACT,CAAC,EAAE,IAAI,CAAC,CAAC;gBACT,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;YAClC,CAAC,EAAE,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC","file":"wed-error-handling-test.js","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport * as keyConstants from \"wed/key-constants\";\nimport * as onerror from \"wed/onerror\";\nimport * as wed from \"wed/wed\";\n\nimport * as globalConfig from \"../base-config\";\nimport { EditorSetup, WedServer } from \"../wed-test-util\";\n\nconst assert = chai.assert;\n\ndescribe(\"wed error handling:\", () => {\n  let setup: EditorSetup;\n  let editor: wed.Editor;\n  let server: WedServer;\n\n  beforeEach(() => {\n    setup = new EditorSetup(\n      \"/base/build/standalone/lib/tests/wed_test_data/\\\nserver_interaction_converted.xml\",\n      globalConfig.config,\n      document);\n    ({ editor, server } = setup);\n    return setup.init();\n  });\n\n  afterEach(() => {\n    setup.restore();\n  });\n\n  it(\"tell user to reload when save fails hard\", (done) => {\n    server.emptyResponseOnSave = true;\n    const $modal = onerror.__test.$modal;\n    $modal.on(\"shown.bs.modal\", () => {\n      // Reset the state so we don't get a failure in the after hook.\n      onerror.__test.reset();\n      done();\n    });\n\n    editor.type(keyConstants.CTRLEQ_S);\n  });\n\n  it(\"warn of disconnection when server returns a bad status\", (done) => {\n    server.failOnSave = true;\n    const $modal = editor.modals.getModal(\"disconnect\").getTopLevel();\n    $modal.on(\"shown.bs.modal\", () => {\n      editor.saver.events.filter((ev) => ev.name === \"Saved\")\n        .first().subscribe((ev) => {\n          // Was saved on retry!\n\n          // This allows us to let the whole save process run its course before\n          // we declare it done.\n          setTimeout(done, 0);\n        });\n\n      server.reset();\n      // This triggers a retry.\n      $modal.modal(\"hide\");\n    });\n\n    editor.type(keyConstants.CTRLEQ_S);\n  });\n\n  it(\"bring up modal when document was edited by someone else\", (done) => {\n    server.preconditionFailOnSave = true;\n    const $modal = editor.modals.getModal(\"editedByOther\").getTopLevel();\n    $modal.on(\"shown.bs.modal\", () => {\n      // Prevent a reload.\n      $modal.off(\"hidden.bs.modal.modal\");\n      $modal.modal(\"hide\");\n      done();\n    });\n\n    editor.type(keyConstants.CTRLEQ_S);\n  });\n\n  it(\"bring up modal when there is a new version of editor\", (done) => {\n    server.tooOldOnSave = true;\n    const $modal = editor.modals.getModal(\"tooOld\").getTopLevel();\n    $modal.on(\"shown.bs.modal\", () => {\n      // Prevent a reload.\n      $modal.off(\"hidden.bs.modal.modal\");\n      $modal.modal(\"hide\");\n      done();\n    });\n\n    editor.type(keyConstants.CTRLEQ_S);\n  });\n\n  it(\"no recovery when save fails hard\", (done) => {\n    server.emptyResponseOnSave = true;\n    const $modal = onerror.__test.$modal;\n    $modal.on(\"shown.bs.modal\", () => {\n      // Reset the state so we don't get a failure in the after hook.\n      onerror.__test.reset();\n\n      // The data was saved even though the server replied badly.\n      assert.deepEqual(server.lastSaveRequest, {\n        // It is important that this be \"save\" and not \"recover\".\n        command: \"save\",\n        version: wed.version,\n        data:\n        \"<TEI xmlns=\\\"http://www.tei-c.org/ns/1.0\\\">\\\n<teiHeader><fileDesc><titleStmt><title>abcd</title></titleStmt>\\\n<publicationStmt><p/></publicationStmt><sourceDesc><p/></sourceDesc>\\\n</fileDesc></teiHeader><text><body><p>Blah blah <term>blah</term> blah.</p>\\\n<p><term>blah</term></p></body></text></TEI>\",\n      });\n      done();\n    });\n\n    editor.type(keyConstants.CTRLEQ_S);\n  });\n\n  it(\"recovery on uncaught exception\", (done) => {\n    // We can't just raise an exception because mocha will intercept it and it\n    // will never get to the onerror handler. If we raise the error in a\n    // timeout, it will go straight to onerror.\n\n    setTimeout(() => {\n      setTimeout(() => {\n        // Reset the state so we don't get a failure in the after hook.\n        onerror.__test.reset();\n        assert.deepEqual(server.lastSaveRequest, {\n          command: \"recover\",\n          version: wed.version,\n          data:\n          \"<TEI xmlns=\\\"http://www.tei-c.org/ns/1.0\\\">\\\n<teiHeader><fileDesc><titleStmt><title>abcd</title></titleStmt>\\\n<publicationStmt><p/></publicationStmt><sourceDesc><p/></sourceDesc>\\\n</fileDesc></teiHeader><text><body><p>Blah blah <term>blah</term> blah.</p>\\\n<p><term>blah</term></p></body></text></TEI>\",\n        });\n        done();\n      }, 1000);\n      throw new Error(\"I'm failing!\");\n    }, 5);\n  });\n});\n"]}