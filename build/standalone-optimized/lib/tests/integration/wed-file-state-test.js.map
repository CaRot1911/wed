{"version":3,"file":"wed-file-state-test.js","sourceRoot":"","sources":["../../../../../lib/tests/integration/wed-file-state-test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { CaretManager } from \"wed/caret-manager\";\nimport { Editor } from \"wed/editor\";\nimport * as keyConstants from \"wed/key-constants\";\n\nimport * as globalConfig from \"../base-config\";\nimport { waitForSuccess } from \"../util\";\nimport { EditorSetup } from \"../wed-test-util\";\n\nconst assert = chai.assert;\n\ndescribe(\"wed file state:\", () => {\n  let setup: EditorSetup;\n  let editor: Editor;\n  let caretManager: CaretManager;\n  let $modificationStatus: JQuery;\n  let $saveStatus: JQuery;\n  let titles: NodeListOf<Element>;\n\n  beforeEach(() => {\n    setup = new EditorSetup(\n      \"/base/build/standalone/lib/tests/wed_test_data/source_converted.xml\",\n      globalConfig.config,\n      document);\n    ({ editor } = setup);\n    return setup.init().then(() => {\n      // tslint:disable-next-line:no-any\n      (editor.validator as any)._validateUpTo(editor.dataRoot, -1);\n      caretManager = editor.caretManager;\n      // tslint:disable-next-line:no-any\n      $modificationStatus = (editor as any).$modificationStatus;\n      // tslint:disable-next-line:no-any\n      $saveStatus = (editor as any).$saveStatus;\n      titles = editor.guiRoot.getElementsByClassName(\"title\");\n    });\n  });\n\n  afterEach(() => {\n    setup.restore();\n  });\n\n  it(\"modification status shows an unmodified document when starting\", () => {\n    assert.isTrue($modificationStatus.hasClass(\"label-success\"));\n  });\n\n  it(\"save status shows an unsaved document when starting\", () => {\n    assert.isTrue($saveStatus.hasClass(\"label-default\"));\n    assert.equal($saveStatus.children(\"span\").text(), \"\");\n  });\n\n  it(\"onbeforeunload returns falsy on unmodified doc\", () => {\n    assert.isFalse(!!editor.window.onbeforeunload\n                   // tslint:disable-next-line:no-any\n                   .call(editor.window, undefined) as any);\n  });\n\n  it(\"modification status shows a modified document after modification\", () => {\n    // Text node inside title.\n    const initial = titles[0].childNodes[1];\n    caretManager.setCaret(initial, 0);\n    editor.type(\" \");\n\n    assert.isTrue($modificationStatus.hasClass(\"label-warning\"));\n  });\n\n  it(\"onbeforeunload returns truthy on modified doc\", () => {\n    // Text node inside title.\n    const initial = titles[0].childNodes[1];\n    caretManager.setCaret(initial, 0);\n    editor.type(\" \");\n\n    assert.isTrue(!!editor.window.onbeforeunload\n                  .call(editor.window, undefined));\n  });\n\n  it(\"modification status shows an unmodified document after save\", () => {\n    // Text node inside title.\n    const initial = titles[0].childNodes[1];\n    caretManager.setCaret(initial, 0);\n    editor.type(\" \");\n\n    assert.isTrue($modificationStatus.hasClass(\"label-warning\"));\n    editor.type(keyConstants.SAVE);\n    return waitForSuccess(() => {\n      assert.isTrue($modificationStatus.hasClass(\"label-success\"));\n    });\n  });\n\n  it(\"save status shows a saved document after a save\", () => {\n    assert.isTrue($saveStatus.hasClass(\"label-default\"));\n    assert.equal($saveStatus.children(\"span\").text(), \"\");\n\n    editor.type(keyConstants.SAVE);\n    return waitForSuccess(() => {\n      assert.isTrue($saveStatus.hasClass(\"label-success\"));\n      assert.equal($saveStatus.children(\"span\").text(), \"moments ago\");\n      // We also check the tooltip text.\n      assert.equal($saveStatus.data(\"bs.tooltip\").getTitle(),\n                   \"The last save was a manual save.\");\n    });\n  });\n\n  it(\"save status shows a saved document after an autosave\", () => {\n    assert.isTrue($saveStatus.hasClass(\"label-default\"));\n    assert.equal($saveStatus.children(\"span\").text(), \"\");\n\n    // Text node inside title.\n    const initial = titles[0].childNodes[1];\n    caretManager.setCaret(initial, 0);\n    editor.type(\" \");\n    editor.saver.setAutosaveInterval(50);\n    return waitForSuccess(() => {\n      assert.isTrue($saveStatus.hasClass(\"label-info\"));\n      assert.equal($saveStatus.children(\"span\").text(), \"moments ago\");\n      // We also check the tooltip text.\n      assert.equal($saveStatus.data(\"bs.tooltip\").getTitle(),\n                   \"The last save was an autosave.\");\n    });\n  });\n\n  it(\"save status tooltip updated after a different kind of save\", async () => {\n    // Text node inside title.\n    const initial = titles[0].childNodes[1];\n    caretManager.setCaret(initial, 0);\n    editor.type(\" \");\n    editor.saver.setAutosaveInterval(50);\n    await waitForSuccess(() => {\n      // We check the initial tooltip text.\n      const tooltip = $saveStatus.data(\"bs.tooltip\");\n      assert.isDefined(tooltip);\n      assert.equal(tooltip.getTitle(), \"The last save was an autosave.\");\n    });\n\n    // Now perform a save.\n    editor.type(keyConstants.SAVE);\n\n    return waitForSuccess(() => {\n      // We check the tooltip changed.\n      const tooltip = $saveStatus.data(\"bs.tooltip\");\n      assert.isDefined(tooltip);\n      assert.equal(tooltip.getTitle(), \"The last save was a manual save.\");\n    });\n  });\n});\n"]}