{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///salve.min.js","webpack:///webpack/bootstrap 0547a20c9ec84a8ba94b?0d29","webpack:///./build/dist/lib/salve/patterns/base.js?b957","webpack:///./build/dist/lib/salve/errors.js?bf49","webpack:///./build/dist/lib/salve/name_patterns.js?68b2","webpack:///./build/dist/lib/salve/name_resolver.js?52b8","webpack:///./build/dist/lib/salve/ename.js?4251","webpack:///./build/dist/lib/salve/datatypes/errors.js?de94","webpack:///./build/dist/lib/salve/patterns/not_allowed.js?19cf","webpack:///./build/dist/lib/salve/tools.js?226c","webpack:///./build/dist/lib/salve/hashstructs.js?09e1","webpack:///./build/dist/lib/salve/patterns.js?c271","webpack:///./build/dist/lib/salve/datatypes.js?e470","webpack:///./build/dist/lib/salve/datatypes/xmlcharacters.js?5bc3","webpack:///./build/dist/lib/salve/patterns/grammar.js?475f","webpack:///./build/dist/lib/salve/set.js?6505","webpack:///./build/dist/lib/salve/formats.js?2e57","webpack:///./build/dist/lib/salve/datatypes/builtin.js?bd12","webpack:///./build/dist/lib/salve/datatypes/regexp.js?a997","webpack:///./build/dist/lib/salve/datatypes/xmlschema.js?58fb","webpack:///./build/dist/lib/salve/patterns/attribute.js?3bcc","webpack:///./build/dist/lib/salve/patterns/choice.js?8717","webpack:///./build/dist/lib/salve/patterns/data.js?506b","webpack:///./build/dist/lib/salve/patterns/element.js?d0ee","webpack:///./build/dist/lib/salve/patterns/empty.js?9c87","webpack:///./build/dist/lib/salve/patterns/group.js?af57","webpack:///./build/dist/lib/salve/patterns/interleave.js?1f21","webpack:///./build/dist/lib/salve/patterns/list.js?499e","webpack:///./build/dist/lib/salve/patterns/one_or_more.js?9fb9","webpack:///./build/dist/lib/salve/patterns/param.js?c240","webpack:///./build/dist/lib/salve/patterns/text.js?6e7f","webpack:///./build/dist/lib/salve/patterns/value.js?7aa0","webpack:///./build/dist/lib/salve/util.js?361a","webpack:///./build/dist/lib/salve/validate.js?4300","webpack:///./~/process/browser.js?82e4","webpack:///(webpack)/buildin/module.js?c3c2","webpack:///./~/xregexp/src/addons/build.js?e0cf","webpack:///./~/xregexp/src/addons/matchrecursive.js?e7c6","webpack:///./~/xregexp/src/addons/unicode-base.js?397a","webpack:///./~/xregexp/src/addons/unicode-blocks.js?cfcc","webpack:///./~/xregexp/src/addons/unicode-categories.js?b99a","webpack:///./~/xregexp/src/addons/unicode-properties.js?e4fe","webpack:///./~/xregexp/src/addons/unicode-scripts.js?0363","webpack:///./~/xregexp/src/index.js?add3","webpack:///./~/xregexp/src/xregexp.js?251a"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","noop","_args","_i","arguments","length","addWalker","elCls","walkerCls","newWalker","resolver","hashHelper","hash","eventsToTreeString","evs","hashF","x","set_1","NaiveSet","toArray","hashstructs_1","HashMap","forEach","ev","params","node","add","nextNode","has","undefined","dumpTree","dumpTreeBuf","ret","keys","sort","keys_1","key","slice","isHashMap","msg","Error","isNameResolver","name_resolver_1","NameResolver","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","util","DEBUG","trace_1","console","log","stack","possibleTracer","fireEventTracer","plainTracer","callDump","buf","nameOrPath","walker","el","xmlPath","named","toString","boundName","me","id","oldMethod","args","apply","inspect","wrap","f","mangledName","set_2","EventSet","BasePattern","__newID","_resolve","definitions","_prepare","namespaces","_hasAttrs","_gatherElementDefinitions","memo","__id","Pattern","_super","OneSubpattern","pat","_this","TwoSubpatterns","patA","patB","a","concat","Event","join","cached","__cache","isAttributeEvent","emptyEvent","Walker","elOrWalker","suppressedAttributes","possibleCached","possible","_possible","canEnd","attribute","end","clone","_clone","_suppressAttributes","_cloneIfNeeded","obj","other","SingleSubwalker","subwalker","fireEvent","Ref","resolvesTo","Define","DefineWalker","nameResolverOrMemo","nameResolver","ValidationError","toStringWithNames","getNames","names","equals","SingleNameError","AttributeNameError","AttributeValueError","ElementNameError","ChoiceError","namesA","namesB","first","second","Base","path","getNamespaces","_recordNamespaces","toJSON","toObject","JSON","stringify","Name","ns","match","wildcardMatch","simple","NameChoice","pats","aArr","bArr","NsName","except","AnyName","pattern","ename_1","XML1_NAMESPACE","XMLNS_NAMESPACE","Context","forward","backwards","_contextStack","enterContext","definePrefix","prefix","uri","prefixes","unshift","push","leaveContext","shift","resolveName","parts","split","EName","cIx","unresolveName","pre","prefixFromURI","equal","tools_1","ParamError","message","ValueError","ParameterParsingError","location","errors","map","err","fixPrototype","ValueValidationError","base_1","NotAllowed","NotAllowedWalker","copy","target","source","extend","sources","_a","sources_1","parent","getPrototypeOf","HashBase","initial","backing","_size","initialBacking","initial_1","union","keys_2","_store","keys_3","size","filter","keys_4","data","t","keys_5","val","HashSet","keys_6","pair","__test","tret","attribute_1","choice_1","data_1","element_1","empty_1","grammar_1","group_1","interleave_1","list_1","not_allowed_1","one_or_more_1","param_1","text_1","value_1","namePatterns","base_2","grammar_2","Grammar","GrammarWalker","RefError","Text","__protected","Empty","Data","List","Param","Value","OneOrMore","Choice","Group","Attribute","Element","Interleave","builtin_1","xmlschema_1","Registry","libraries","library","find","registry","builtin","xmlschema","errors_1","xmlLetter","xmlBaseChar","xmlDigit","xmlCombiningChar","xmlNameChar","xmlName","xmlNameRe","RegExp","xmlNcname","xmlNcnameRe","references","start","_namespaces","missing","_elementDefinitions","newDef","whollyContextIndependent","defs","elementDefinitions","v","all","makeWalker","misplacedElements","_misplacedElements","mpe","_swallowAttributeValue","suspendedWs","ignoreNextWs","_prevEvWasText","wsErr","trim","ignoreNextWsNow","trimmed","replace","candidates","endRet","item","indexOf","len","index","result","constructTree","code","parsed","parse","OldFormatError","version","options","V2Constructor","walkObject","patterns","pro","codeToConstructor","nameToConstructor","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","V2JSONWalker","array","kind","ctor","addPath","_transformArray","_processObject","arr","splice","limit","elIx","newParams","newObj","ctorRet","OPTION_NO_PATHS","normalizeSpace","parseParams","parseValue","disallows","StringT","regexp","needsContext","schemaValue","stringT","Token","token","types","string","process","parser","SalveParsingError","parseError","str","unshiftGroupState","negative","groupState","capturedMultiChar","Parser","yy","k","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","trace","symbols_","error","input","EOF","branch","|","piece","atom","quantifier","?","*","+","{","quantity","}","NUMBER",",","CHAR","charClass","(",")","charClassEsc","charClassExpr","WILDCARDESC","charClassExprStart","charGroup","]","[","[^","posCharGroups","charClassSub","posCharGroup","charRange","CLASSSUBTRACTION","seRange","-","charOrEsc","XMLCHAR","SingleCharEsc","SINGLECHARESC","MULTICHARESC","CATESC","COMPLESC","$accept","$end","terminals_","22","23","26","29","30","31","36","38","40","41","42","43","44","45","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","outputType","$0","needsXRegExpRe","test","XRegExp","$","state","subtraction","out","multiCharEscapesInGroup","repl","charAt","multiCharEscapes","table","24","25","27","28","32","33","34","35","37","39","defaultActions","51","53","_parseError","recoverable","self","vstack","lstack","recovering","lexer","sharedState","setInput","yylloc","yyloc","ranges","symbol","preErrorSymbol","action","r","newState","expected","lex","yyval","errStr","showPosition","text","line","loc","first_line","last_line","first_column","last_column","range","xmlcharacters","\\s","\\S","\\i","\\I","\\c","\\C","\\d","\\D","\\w","\\W","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","next","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","CHARCLASS","inclusive","QUANTITY","INITIAL","main","argv","failIfNotInteger","search","failIfNotNonNegativeInteger","Number","failIfNotPositiveInteger","convertToInternalNumber","Infinity","convertInternalNumberToString","whiteSpaceProcessed","param","WhitespaceHandling","PRESERVE","REPLACE","COLLAPSE","isLeapYear","year","checkDate","dateGroupingRe","leap","month","dom","maxDom","maxDoms","timeParts","minutes","seconds","hoursLimit","tzParts","tzHours","tzSeconds","xmlcharacters_1","Parameter","repeatable","combine","values","NumericParameter","convert","NonNegativeIntegerParameter","isInvalidParam","LengthP","isInvalidValue","type","valueLength","lengthP","MinLengthP","minLengthP","MaxLengthP","maxLengthP","reCache","PatternP","internal","rng","ex","failedOn","patternP","TotalDigitsP","String","totalDigitsP","FractionDigitsP","NumericTypeDependentParameter","fractionDigitsP","MaxInclusiveP","isNaN","repr","maxInclusiveP","MaxExclusiveP","maxExclusiveP","MinInclusiveP","minInclusiveP","MinExclusiveP","minExclusiveP","whiteSpaceDefault","throwMissingLocation","paramNameToObj","_paramNameToObj","validParams","defaultParams","_defaultParams","convertValue","context","params_1","prop","invalid","disallowedByParams","raw","converted","typeErrorMsg","string_","normalizedString","language","NCName","xmlNmtokenRe","NMTOKEN","xmlNmtokensRe","NMTOKENS","ID","IDREF","IDREFS_RE","IDREFS","ENTITY","ENTITIES","decimalPattern","decimal","integerPattern","integer","fail","highestVal","lowestVal","nonPositiveInteger","negativeInteger","nonNegativeInteger","positiveInteger","long_","int_","short_","byte_","unsignedLong","unsignedInt","unsignedShort","unsignedByte","boolean_","B64","B64S","base64BinaryRe","base64Binary","floor","hexBinary","doubleRe","float_","double_","QName","NOTATION","duration","yearPattern","monthPattern","domPattern","timePattern","tzPattern","tzRe","dateTime","time","date","gYearMonth","gYear","gMonthDay","gDay","gMonth","reJsRfc3986UriReference","anyURI","types_1","instance","nss","AttributeWalker","seenName","seenValue","attrNameEvent","neutralized","sub","ret_1","textEv","ChoiceWalker","chosen","walkerA","walkerB","instantiatedWalkers","_instantiateWalkers","possibleB","retA","retB","notAChoiceError","datatypes_1","datatypeLibrary","datatype","rngParams","_params","DataWalker","ElementWalker","endedStartTag","closed","startTagEvent","endTagEvent","valueEvs_1","poss","_leaveStartTagEvent","posses","errs","errs_1","errs_2","EmptyWalker","GroupWalker","hitA","endedA","hitB","aHas","bHas","endB","retA_1","InterleaveWalker","inA","inB","ListWalker","seenTokens","tokens","tokens_1","OneOrMoreWalker","seenOnce","currentIteration","nextIteration","_instantiateCurrentIteration","_instantiateNextIteration","nextPossible","nextRet","TextWalker","_textEvent","rawValue","_value","nr","ValueWalker","patterns_1","formats_1","name_patterns_1","BaseName","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","e","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","nextTick","title","browser","env","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","webpackPolyfill","deprecate","paths","children","deanchor","leadingAnchor","trailingAnchor","asXRegExp","isRegExp","REGEX_DATA","captureNames","subParts","build","subs","flags","numPriorCaps","outerCapNames","inlineFlags","exec","numCaps","numOuterCaps","outerCapsMap","flag","$1","$2","$3","$4","capName","intro","localCapIndex","subName","ReferenceError","paren","backref","row","matchRecursive","left","right","outerStart","innerStart","leftMatch","rightMatch","esc","global","sticky","basicFlags","escapeChar","vN","valueNames","output","openTokens","delimStart","delimEnd","lastOuterEnd","escape","normalize","toLowerCase","charCode","chr","dec","charCodeAt","invertBmp","lastEnd","pad4","hex","cacheInvertedBmp","slug","unicode","bmp","buildAstral","isNegated","combined","isBmpLast","astral","cacheAstral","_dec","_hex","_pad4","addToken","scope","isAstralMode","SyntaxError","inverseOf","optionalFlags","leadChar","addUnicodeData","alias","cache","flush","unicodeData","hasNativeFlag","isSupported","exception","augment","regex","xSource","xFlags","isInternalOnly","clipDuplicates","nativ","copyRegex","TypeError","xData","getNativeFlags","flagsToAdd","flagsToRemove","xregexpSource","xregexpFlags","removeG","removeY","addG","addY","hasNamedCapture","parseInt","hasFlagsProp","isType","isQuantifierNext","pos","prepareFlags","registeredFlags","prepareOptions","registerFlag","runTokens","matchLength","handler","reparse","setAstral","features","setNatives","fixed","natives","isInstalled","patternCache","defaultScope","applied","appliedPattern","appliedFlags","nativeTokens","classScope","captures","generated","regexCache","default","class","correctExecNpcg","hasNativeU","hasNativeY","g","u","y","_hasNativeFlag","cacheName","r2","cacheKey","lastIndex","callback","globalize","install","feature","matchChain","chain","recurseChain","level","addMatch","replacement","isRegex","s2","replaceEach","replacements","separator","uninstall","rewrite","numCaptures","numPriorCaptures","origLastIndex","lastLength","lastLastIndex","endIndex"],"mappings":"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","file":"salve.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"salve\"] = factory();\n\telse\n\t\troot[\"salve\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"salve\"] = factory();\n\telse\n\t\troot[\"salve\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 31);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Classes that model RNG patterns.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hashstructs_1 = __webpack_require__(8);\nvar name_resolver_1 = __webpack_require__(3);\nvar util = __webpack_require__(30);\n// XML validation against a schema could work without any lookahead if it were\n// not for namespaces. However, namespace support means that the interpretation\n// of a tag or of an attribute may depend on information which appears *later*\n// than the earliest time at which a validation decision might be called for:\n//\n// Consider:\n//    <elephant a=\"a\" b=\"b\"... xmlns=\"elephant_uri\"/>\n//\n// It is not until xmlns is encountered that the validator will know that\n// elephant belongs to the elephant_uri namespace. This is not too troubling for\n// a validator that can access the whole document but for validators used in a\n// line-by-line process (which is the case if the validator is driven by a\n// CodeMirror or Ace tokenizer, and anything based on them), this can be\n// problematic because the attributes could appear on lines other than the line\n// on which the start of the tag appears:\n//\n// <elephant\n//  a=\"a\"\n//  b=\"b\"\n//  xmlns=\"elephant_uri\"/>\n//\n// The validator encounters the start of the tag and the attributes, without\n// knowing that eventually this elephant tag belongs to the elephant_uri\n// namespace. This discovery might result in things that were seen previously\n// and deemed valid becoming invalid. Or things that were invalid becoming\n// valid.\n//\n// Handling namespaces will require lookahead. Although the validator would\n// still expect all events that have tag and attribute names to have a proper\n// namespace uri, upon ``enterStartTag`` the parsing code which feeds events to\n// the validator would look ahead for these cases:\n//\n// * There is a valid ``>`` character ending the start tag. Scan the start tag\n//   for all namespace declarations.\n//\n// * The tag ends at EOF. Scan from beginning of tag to EOF for namespace\n//   declarations.\n//\n// * The tag is terminated by an invalid token. Scan from beginning of tag to\n//   error.\n//\n// Then issue the enterStartTag and attributeName events on the basis of what\n// was found in scanning.\n//\n// When the parsing code discovers a change in namespace declarations, for\n// instance because the user typed xmlns=\"...\" or removed a declaration, the\n// parsing code must *restart* validation *from* the location of the original\n// enterStartTag event.\nvar DEBUG = false;\n// This is here to shut the compiler up about unused variables.\n/* tslint:disable: no-empty no-invalid-this */\nfunction noop() {\n    var _args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        _args[_i] = arguments[_i];\n    }\n}\n// tslint:disable-next-line:strict-boolean-expressions\nif (DEBUG) {\n    //\n    // Debugging utilities\n    //\n    var trace_1 = function (msg) {\n        console.log(msg); // tslint:disable-line:no-console\n    };\n    var stackTrace = function () {\n        trace_1(new Error().stack);\n    };\n    noop(stackTrace);\n    // tslint:disable:no-var-keyword\n    var possibleTracer;\n    var fireEventTracer;\n    var plainTracer;\n    var callDump;\n    // tslint:enable:no-var-keyword\n    // tslint:disable-next-line:only-arrow-functions no-void-expression\n    (function buildTracingCode() {\n        var buf = \"\";\n        var step = \" \";\n        var nameOrPath = function (walker) {\n            var el = walker.el;\n            if (el == null) {\n                return \"\";\n            }\n            if (el.name === undefined) {\n                return \" with path \" + el.xmlPath;\n            }\n            var named = \" named \" + el.name.toString();\n            if (walker.boundName == null) {\n                return named;\n            }\n            return named + \" (bound to \" + walker.boundName.toString() + \")\";\n        };\n        callDump = function (msg, name, me) {\n            trace_1(\"\" + buf + msg + name + \" on class \" + me.constructor.name +\n                (\" id \" + me.id + nameOrPath(me)));\n        };\n        // tslint:disable-next-line:only-arrow-functions\n        possibleTracer = function _possibleTracer(oldMethod, name, args) {\n            buf += step;\n            callDump(\"calling \", name, this);\n            var ret = oldMethod.apply(this, args);\n            callDump(\"called \", name, this);\n            trace_1(buf + \"return from the call: \" + util.inspect(ret));\n            buf = buf.slice(step.length);\n            return ret;\n        };\n        // tslint:disable-next-line:only-arrow-functions\n        fireEventTracer = function _fireEventTracer(oldMethod, name, args) {\n            buf += step;\n            callDump(\"calling \", name, this);\n            trace_1(buf + util.inspect(args[0]));\n            var ret = oldMethod.apply(this, args);\n            callDump(\"called \", name, this);\n            if (ret !== false) {\n                trace_1(buf + \"return from the call: \" + util.inspect(ret));\n            }\n            buf = buf.slice(step.length);\n            return ret;\n        };\n        // tslint:disable-next-line:only-arrow-functions\n        plainTracer = function _plainTracer(oldMethod, name, args) {\n            buf += step;\n            callDump(\"calling \", name, this);\n            var ret = oldMethod.apply(this, args);\n            callDump(\"called \", name, this);\n            trace_1(buf + \"return from the call: \" + util.inspect(ret));\n            buf = buf.slice(step.length);\n            return ret;\n        };\n    }());\n    /**\n     * Utility function for debugging. Wraps ``me[name]`` in a wrapper\n     * function. ``me[name]`` must be a function.  ``me`` could be an instance or\n     * could be a prototype. This function cannot trivially wrap the same field on\n     * the same object twice.\n     *\n     * @private\n     * @param me The object to modify.\n     * @param name The field name to modify in the object.\n     * @param f The function that should serve as wrapper.\n     *\n     */\n    // tslint:disable-next-line:only-arrow-functions no-var-keyword prefer-const\n    var wrap = function (me, name, f) {\n        var mangledName = \"___\" + name;\n        me[mangledName] = me[name];\n        // tslint:disable-next-line:only-arrow-functions\n        me[name] = function wrapper() {\n            return f.call(this, me[mangledName], name, arguments);\n        };\n    };\n    noop(wrap);\n    /* tslint:enable */\n}\n/**\n * Sets up a ``newWalker`` method in a prototype.\n *\n * @private\n * @param elCls The class that will get the new method.\n * @param walkerCls The Walker class to instantiate.\n */\n/* tslint:disable: no-invalid-this */\nfunction addWalker(elCls, walkerCls) {\n    // `resolver` is a NameResolver.\n    // tslint:disable-next-line:only-arrow-functions\n    elCls.prototype.newWalker = function newWalker(resolver) {\n        return new walkerCls(this, resolver);\n    };\n}\nexports.addWalker = addWalker;\n/* tslint:enable */\n// function EventSet() {\n//     var args = Array.prototype.slice.call(arguments);\n//     args.unshift(function (x) { return x.hash() });\n//     HashSet.apply(this, args);\n// }\n// inherit(EventSet, HashSet);\n// The naive Set implementation turns out to be faster than the HashSet\n// implementation for how we are using it.\nvar set_1 = __webpack_require__(13);\nvar set_2 = __webpack_require__(13);\nexports.EventSet = set_2.NaiveSet;\n/**\n * Calls the ``hash()`` method on the object passed to it.\n *\n * @private\n * @param o An object that implements ``hash()``.\n * @returns The return value of ``hash()``.\n */\nfunction hashHelper(o) {\n    return o.hash();\n}\n/**\n *\n * This is the base class for all patterns created from the file passed to\n * [[\"validate\".constructTree]]. These patterns form a JavaScript representation\n * of the simplified RNG tree. The base class implements a leaf in the RNG\n * tree. In other words, it does not itself refer to children Patterns. (To put\n * it in other words, it has no subpatterns.)\n */\nvar BasePattern = (function () {\n    /**\n     * @param xmlPath This is a string which uniquely identifies the element from\n     * the simplified RNG tree. Used in debugging.\n     */\n    function BasePattern(xmlPath) {\n        this.id = \"P\" + this.__newID();\n        this.xmlPath = xmlPath;\n    }\n    /**\n     * This method is mainly used to be able to use these objects in a\n     * [[\"hashstructs\".HashSet]] or a [[\"hashstructs\".HashMap]].\n     *\n     * Returns a hash guaranteed to be unique to this object. There are some\n     * limitations. First, if this module is instantiated twice, the objects\n     * created by the two instances cannot mix without violating the uniqueness\n     * guarantee. Second, the hash is a monotonically increasing counter, so when\n     * it reaches beyond the maximum integer that the JavaScript vm can handle,\n     * things go kaboom. Third, this hash is meant to work within salve only.\n     *\n     * @returns A hash unique to this object.\n     */\n    BasePattern.prototype.hash = function () {\n        return this.id;\n    };\n    /**\n     * Resolve references to definitions.\n     *\n     * @param definitions The definitions that exist in this grammar.\n     *\n     * @returns The references that cannot be resolved, or ``undefined`` if no\n     * references cannot be resolved. The caller is free to modify the value\n     * returned as needed.\n     */\n    BasePattern.prototype._resolve = function (definitions) {\n        return undefined;\n    };\n    /**\n     * This method must be called after resolution has been performed.\n     * ``_prepare`` recursively calls children but does not traverse ref-define\n     * boundaries to avoid infinite regress...\n     *\n     * This function now performs two tasks: a) it prepares the attributes\n     * (Definition and Element objects maintain a pattern which contains only\n     * attribute patterns, and nothing else), b) it gathers all the namespaces\n     * seen in the schema.\n     *\n     * @param namespaces An object whose keys are the namespaces seen in\n     * the schema. This method populates the object.\n     *\n     */\n    BasePattern.prototype._prepare = function (namespaces) {\n        // nothing here\n    };\n    /**\n     * This method tests whether a pattern is an attribute pattern or contains\n     * attribute patterns. This method does not cross element boundaries. That is,\n     * if element X cannot have attributes of its own but can contain elements\n     * that can have attributes, the return value if this method is called on the\n     * pattern contained by element X's pattern will be ``false``.\n     *\n     * @returns True if the pattern is or has attributes. False if not.\n     */\n    BasePattern.prototype._hasAttrs = function () {\n        return false;\n    };\n    /**\n     * Populates a memo with a mapping of (element name, [list of patterns]).  In\n     * a Relax NG schema, the same element name may appear in multiple contexts,\n     * with multiple contents. For instance an element named \"name\" could require\n     * the sequence of elements \"firstName\", \"lastName\" in a certain context and\n     * text in a different context. This method allows determining whether this\n     * happens or not within a pattern.\n     *\n     * @param memo The memo in which to store the information.\n     */\n    BasePattern.prototype._gatherElementDefinitions = function (memo) {\n        // By default we have no children.\n    };\n    /**\n     * Gets a new Pattern id.\n     *\n     * @returns The new id.\n     */\n    BasePattern.prototype.__newID = function () {\n        return BasePattern.__id++;\n    };\n    /**\n     * The next id to associate to the next Pattern object to be created. This is\n     * used so that [[hash]] can return unique values.\n     */\n    BasePattern.__id = 0; // tslint:disable-line:variable-name\n    return BasePattern;\n}());\nexports.BasePattern = BasePattern;\n/**\n * This is the common class from which patterns are derived. Most patterns\n * create a new walker by passing a name resolver. The one exception is\n * [[Grammar]], which creates the name resolver that are used by other\n * patterns. So when calling it we do not need a ``resolver`` parameter and thus\n * it inherits from [[BasePattern]] rather than [[Pattern]].\n */\nvar Pattern = (function (_super) {\n    __extends(Pattern, _super);\n    function Pattern() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates a new walker to walk this pattern.\n     *\n     * @returns A walker.\n     */\n    Pattern.prototype.newWalker = function (resolver) {\n        throw new Error(\"derived classes must override this\");\n    };\n    return Pattern;\n}(BasePattern));\nexports.Pattern = Pattern;\n/**\n * Pattern objects of this class have exactly one child pattern.\n */\nvar OneSubpattern = (function (_super) {\n    __extends(OneSubpattern, _super);\n    function OneSubpattern(xmlPath, pat) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.pat = pat;\n        return _this;\n    }\n    OneSubpattern.prototype._resolve = function (definitions) {\n        return this.pat._resolve(definitions);\n    };\n    OneSubpattern.prototype._prepare = function (namespaces) {\n        this.pat._prepare(namespaces);\n    };\n    OneSubpattern.prototype._hasAttrs = function () {\n        return this.pat._hasAttrs();\n    };\n    OneSubpattern.prototype._gatherElementDefinitions = function (memo) {\n        this.pat._gatherElementDefinitions(memo);\n    };\n    return OneSubpattern;\n}(Pattern));\nexports.OneSubpattern = OneSubpattern;\n/**\n * Pattern objects of this class have exactly two child patterns.\n *\n */\nvar TwoSubpatterns = (function (_super) {\n    __extends(TwoSubpatterns, _super);\n    function TwoSubpatterns(xmlPath, patA, patB) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.patA = patA;\n        _this.patB = patB;\n        return _this;\n    }\n    TwoSubpatterns.prototype._resolve = function (definitions) {\n        var a = this.patA._resolve(definitions);\n        var b = this.patB._resolve(definitions);\n        if (a !== undefined && b !== undefined) {\n            return a.concat(b);\n        }\n        if (a !== undefined) {\n            return a;\n        }\n        return b;\n    };\n    TwoSubpatterns.prototype._prepare = function (namespaces) {\n        this.patA._prepare(namespaces);\n        this.patB._prepare(namespaces);\n    };\n    TwoSubpatterns.prototype._hasAttrs = function () {\n        return this.patA._hasAttrs() || this.patB._hasAttrs();\n    };\n    TwoSubpatterns.prototype._gatherElementDefinitions = function (memo) {\n        this.patA._gatherElementDefinitions(memo);\n        this.patB._gatherElementDefinitions(memo);\n    };\n    return TwoSubpatterns;\n}(Pattern));\nexports.TwoSubpatterns = TwoSubpatterns;\n/**\n * This class models events occurring during parsing. Upon encountering the\n * start of a start tag, an \"enterStartTag\" event is generated, etc. Event\n * objects are held to be immutable. No precautions have been made to enforce\n * this. Users of these objects simply must not modify them. Moreover, there is\n * one and only one of each event created.\n *\n * An event is made of a list of event parameters, with the first one being the\n * type of the event and the rest of the list varying depending on this type.\n *\n */\nvar Event = (function () {\n    /**\n     * @param args... The event parameters may be passed directly in the call\n     * ``(new Event(a, b, ...))`` or the first call parameter may be a list\n     * containing all the event parameters ``(new Event([a, b, ])``. All of the\n     * event parameters must be strings.\n     */\n    function Event() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var params = (args.length === 1 && args[0] instanceof Array) ? args[0] : args;\n        var key = params.join();\n        // Ensure we have only one of each event created.\n        var cached = Event.__cache[key];\n        if (cached !== undefined) {\n            return cached;\n        }\n        this.id = \"E\" + this.__newID();\n        this.params = params;\n        this.key = key;\n        Event.__cache[key] = this;\n        return this;\n    }\n    /**\n     * This method is mainly used to be able to use these objects in a\n     * [[\"hashstructs\".HashSet]] or a [[\"hashstructs\".HashMap]].\n     *\n     * Returns a hash guaranteed to be unique to this object. There are some\n     * limitations. First, if this module is instantiated twice, the objects\n     * created by the two instances cannot mix without violating the uniqueness\n     * guarantee. Second, the hash is a monotonically increasing counter, so when\n     * it reaches beyond the maximum integer that the JavaScript vm can handle,\n     * things go kaboom. Third, this hash is meant to work within salve only.\n     *\n     * @returns A hash unique to this object.\n     */\n    Event.prototype.hash = function () {\n        return this.id;\n    };\n    /**\n     * Is this Event an attribute event?\n     *\n     * @returns ``true`` if the event is an attribute event, ``false``\n     * otherwise.\n     */\n    Event.prototype.isAttributeEvent = function () {\n        return (this.params[0] === \"attributeName\" ||\n            this.params[0] === \"attributeValue\");\n    };\n    /**\n     * @returns A string representation of the event.\n     */\n    Event.prototype.toString = function () {\n        return \"Event: \" + this.params.join(\", \");\n    };\n    /**\n     * Gets a new Event id.\n     *\n     * @returns The new id.\n     */\n    Event.prototype.__newID = function () {\n        return Event.__id++;\n    };\n    /**\n     * The cache of Event objects. So that we create one and only one Event object\n     * per run.\n     */\n    // tslint:disable-next-line:variable-name\n    Event.__cache = Object.create(null);\n    /**\n     * The next id to associate to the next Event object to be created. This is\n     * used so that [[Event.hash]] can return unique values.\n     */\n    // tslint:disable-next-line:variable-name\n    Event.__id = 0;\n    return Event;\n}());\nexports.Event = Event;\n/**\n * Utility function used mainly in testing to transform a [[\"set\".NaiveSet]] of\n * events into a string containing a tree structure.  The principle is to\n * combine events of a same type together and among events of a same type\n * combine those which are in the same namespace. So for instance if there is a\n * set of events that are all attributeName events plus one ``leaveStartTag``\n * event, the output could be:\n *\n * <pre>``\n * attributeName:\n * ..uri A:\n * ....name 1\n * ....name 2\n * ..uri B:\n * ....name 3\n * ....name 4\n * leaveStartTag\n * ``</pre>\n *\n * The dots above are to represent more visually the indentation. Actual output\n * does not contain leading dots.  In this list there are two attributeName\n * events in the \"uri A\" namespace and two in the \"uri B\" namespace.\n *\n * @param evs Events to turn into a string.\n * @returns A string which contains the tree described above.\n */\nfunction eventsToTreeString(evs) {\n    function hashF(x) {\n        return x;\n    }\n    if (evs instanceof set_1.NaiveSet) {\n        evs = evs.toArray();\n    }\n    var hash = new hashstructs_1.HashMap(hashF);\n    evs.forEach(function (ev) {\n        var params = ev.params;\n        var node = hash;\n        for (var i = 0; i < params.length; ++i) {\n            if (i === params.length - 1) {\n                // Our HashSet/Map cannot deal with undefined values. So we mark\n                // leaf elements with the value false.\n                node.add(params[i], false);\n            }\n            else {\n                var nextNode = node.has(params[i]);\n                if (nextNode === undefined) {\n                    nextNode = new hashstructs_1.HashMap(hashF);\n                    node.add(params[i], nextNode);\n                }\n                node = nextNode;\n            }\n        }\n    });\n    // We don't set dumpTree to const because the compiler has a fit when dumpTree\n    // is accessed recursively.\n    // tslint:disable-next-line:prefer-const\n    var dumpTree = \n    // tslint:disable-next-line:only-arrow-functions\n    (function makeDumpTree() {\n        var dumpTreeBuf = \"\";\n        var dumpTreeIndent = \"    \";\n        // tslint:disable-next-line:no-shadowed-variable\n        return function (hash) {\n            var ret = \"\";\n            var keys = hash.keys();\n            keys.sort();\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                var sub = hash.has(key);\n                if (sub !== false) {\n                    ret += \"\" + dumpTreeBuf + key + \":\\n\";\n                    dumpTreeBuf += dumpTreeIndent;\n                    ret += dumpTree(hash.has(key));\n                    dumpTreeBuf = dumpTreeBuf.slice(dumpTreeIndent.length);\n                }\n                else {\n                    ret += \"\" + dumpTreeBuf + key + \"\\n\";\n                }\n            }\n            return ret;\n        };\n    }());\n    return dumpTree(hash);\n    /* tslint:enable */\n}\nexports.eventsToTreeString = eventsToTreeString;\n/**\n * Special event to which only the [[\"empty\".EmptyWalker]] responds\n * positively. This object is meant to be used internally by salve.\n */\nexports.emptyEvent = new Event(\"<empty>\");\n/**\n * Roughly speaking each [[Pattern]] object has a corresponding ``Walker`` class\n * that models an object which is able to walk the pattern to which it\n * belongs. So an ``Element`` has an ``ElementWalker`` and an ``Attribute`` has\n * an ``AttributeWalker``. A ``Walker`` object responds to parsing events and\n * reports whether the structure represented by these events is valid.\n *\n * This base class records only a minimal number of properties so that child\n * classes can avoid keeping useless properties. A prime example is the walker\n * for ``<empty>`` which is a terminal walker (it has no subwalker) so does not\n * need to record the name resolver.\n *\n * Note that users of this API do not instantiate Walker objects themselves.\n */\nvar Walker = (function () {\n    function Walker(elOrWalker) {\n        this.id = \"W\" + this.__newID();\n        this.suppressedAttributes = false;\n        if (elOrWalker instanceof Walker) {\n            this.el = elOrWalker.el;\n            this.possibleCached = elOrWalker.possibleCached;\n            this.suppressedAttributes = elOrWalker.suppressedAttributes;\n        }\n        else {\n            this.el = elOrWalker;\n        }\n        if (DEBUG) {\n            wrap(this, \"_possible\", possibleTracer);\n            wrap(this, \"fireEvent\", fireEventTracer);\n            wrap(this, \"end\", plainTracer);\n            wrap(this, \"_suppressAttributes\", plainTracer);\n            wrap(this, \"_clone\", plainTracer);\n        }\n    }\n    /**\n     * This method is mainly used to be able to use these objects in a\n     * [[\"hashstructs\".HashSet]] or a [[\"hashstructs\".HashMap]].\n     *\n     * Returns a hash guaranteed to be unique to this object. There are some\n     * limitations. First, if this module is instantiated twice, the objects\n     * created by the two instances cannot mix without violating the uniqueness\n     * guarantee. Second, the hash is a monotonically increasing counter, so when\n     * it reaches beyond the maximum integer that the JavaScript vm can handle,\n     * things go kaboom. Third, this hash is meant to work within salve only.\n     *\n     * @returns A hash unique to this object.\n     */\n    Walker.prototype.hash = function () {\n        return this.id;\n    };\n    /**\n     * Fetch the set of possible events at the current stage of parsing.\n     *\n     * @returns The set of events that can be fired without resulting in an error.\n     */\n    Walker.prototype.possible = function () {\n        return new set_1.NaiveSet(this._possible());\n    };\n    /**\n     * Can this Walker validly end after the previous event fired?\n     *\n     * @param attribute ``true`` if calling this method while processing\n     * attributes, ``false`` otherwise.\n     *\n     * @return ``true`` if the walker can validly end here.  ``false`` otherwise.\n     */\n    Walker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        return true;\n    };\n    /**\n     * Obtain the errors that would occur if the walker were to end here. Note the\n     * conditional phrasing. It **must** be idempotent. Therefore it **must not**\n     * change the state of the walker. The internal code of salve will sometimes\n     * call end more than once on the same walker.\n     *\n     * @param attribute ``true`` if calling this method while processing\n     * attributes, ``false`` otherwise.\n     *\n     * @returns ``false`` if the walker ended without error. Otherwise, the\n     * errors.\n     */\n    Walker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        return false;\n    };\n    /**\n     * Deep copy the Walker.\n     *\n     * @returns A deep copy of the Walker.\n     */\n    Walker.prototype.clone = function () {\n        return this._clone(new hashstructs_1.HashMap(hashHelper));\n    };\n    /**\n     * Helper function for clone. Code that is not part of the Pattern family would\n     * call clone() whereas Pattern and its derived classes call _clone() with the\n     * appropriate memo.\n     *\n     * @param memo A mapping of old object to copy object. As a tree of patterns\n     * is being cloned, this memo is populated.  So if A is cloned to B then a\n     * mapping from A to B is stored in the memo.  If A is seen again in the same\n     * cloning operation, then it will be substituted with B instead of creating a\n     * new object.\n     *\n     * This method is meant only to be used by classes derived from [[Walker]]. It\n     * is public due to a limitation of TypeScript. Don't call it from your own\n     * code. You've been warned.\n     *\n     * @protected\n     *\n     * @returns The clone.\n     */\n    Walker.prototype._clone = function (memo) {\n        return new this.constructor(this, memo);\n    };\n    /**\n     * Helper function used to prevent Walker objects from reporting attribute\n     * events as possible. In RelaxNG it is normal to mix attributes and elements\n     * in patterns. However, XML validation segregates attributes and\n     * elements. Once a start tag has been processed, attributes are not possible\n     * until a new start tag begins. For instance, if a Walker is processing\n     * ``<foo a=\"1\">``, as soon as the greater than symbol is encountered,\n     * attribute events are no longer possible. This function informs the Walker\n     * of this fact.\n     *\n     */\n    Walker.prototype._suppressAttributes = function () {\n        this.suppressedAttributes = true;\n    };\n    /**\n     * Helper method for cloning. This method should be called to clone objects\n     * that do not participate in the ``clone``, protocol. This typically means\n     * instance properties that are not ``Walker`` objects and not immutable.\n     *\n     * This method will call a ``clone`` method on ``obj``, when it determines\n     * that cloning must happen.\n     *\n     * @param obj The object to clone.\n     *\n     * @param memo A mapping of old object to copy object. As a tree of patterns\n     * is being cloned, this memo is populated. So if A is cloned to B then a\n     * mapping from A to B is stored in the memo. If A is seen again in the same\n     * cloning operation, then it will be substituted with B instead of creating a\n     * new object. This should be the same object as the one passed to the\n     * constructor.\n     *\n     * @returns A clone of ``obj``.\n     */\n    Walker.prototype._cloneIfNeeded = function (obj, memo) {\n        var other = memo.has(obj);\n        if (other !== undefined) {\n            return other;\n        }\n        other = obj.clone();\n        memo.add(obj, other);\n        return other;\n    };\n    /**\n     * Gets a new Walker id.\n     *\n     * @returns The new id.\n     */\n    Walker.prototype.__newID = function () {\n        return Walker.__id++;\n    };\n    /**\n     * The next id to associate to the next Walker object to be created. This is\n     * used so that [[hash]] can return unique values.\n     */\n    Walker.__id = 0; // tslint:disable-line:variable-name\n    return Walker;\n}());\nexports.Walker = Walker;\nfunction isHashMap(value, msg) {\n    if (msg === void 0) { msg = \"\"; }\n    if (value instanceof hashstructs_1.HashMap) {\n        return value;\n    }\n    throw new Error(\"did not get a HashMap \" + msg);\n}\nexports.isHashMap = isHashMap;\nfunction isNameResolver(value, msg) {\n    if (msg === void 0) { msg = \"\"; }\n    if (value instanceof name_resolver_1.NameResolver) {\n        return value;\n    }\n    throw new Error(\"did not get a HashMap \" + msg);\n}\nexports.isNameResolver = isNameResolver;\n/**\n * Walkers that have only one subwalker.\n */\nvar SingleSubwalker = (function (_super) {\n    __extends(SingleSubwalker, _super);\n    function SingleSubwalker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SingleSubwalker.prototype._possible = function () {\n        return this.subwalker.possible();\n    };\n    SingleSubwalker.prototype.fireEvent = function (ev) {\n        return this.subwalker.fireEvent(ev);\n    };\n    SingleSubwalker.prototype._suppressAttributes = function () {\n        if (!this.suppressedAttributes) {\n            this.suppressedAttributes = true;\n            this.subwalker._suppressAttributes();\n        }\n    };\n    SingleSubwalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        return this.subwalker.canEnd(attribute);\n    };\n    SingleSubwalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        return this.subwalker.end(attribute);\n    };\n    return SingleSubwalker;\n}(Walker));\nexports.SingleSubwalker = SingleSubwalker;\n/**\n * A pattern for RNG references.\n */\nvar Ref = (function (_super) {\n    __extends(Ref, _super);\n    /**\n     *\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param name The reference name.\n     */\n    function Ref(xmlPath, name) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.name = name;\n        return _this;\n    }\n    Ref.prototype._prepare = function () {\n        // We do not cross ref/define boundaries to avoid infinite loops.\n        return;\n    };\n    Ref.prototype._resolve = function (definitions) {\n        this.resolvesTo = definitions[this.name];\n        if (this.resolvesTo === undefined) {\n            return [this];\n        }\n        return undefined;\n    };\n    // addWalker(Ref, RefWalker); No, see below\n    // This completely skips the creation of RefWalker and DefineWalker. This\n    // returns the walker for whatever it is that the Define element this\n    // refers to ultimately contains.\n    Ref.prototype.newWalker = function (resolver) {\n        // _resolve must have been called before any walker can be created.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.resolvesTo.pat.newWalker(resolver);\n    };\n    return Ref;\n}(Pattern));\nexports.Ref = Ref;\n/**\n * A pattern for ``<define>``.\n */\nvar Define = (function (_super) {\n    __extends(Define, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param name The name of the definition.\n     *\n     * @param pat The pattern contained by this one.\n     */\n    function Define(xmlPath, name, pat) {\n        var _this = _super.call(this, xmlPath, pat) || this;\n        _this.name = name;\n        return _this;\n    }\n    return Define;\n}(OneSubpattern));\nexports.Define = Define;\n/**\n * Walker for [[Define]].\n */\nvar DefineWalker = (function (_super) {\n    __extends(DefineWalker, _super);\n    function DefineWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof DefineWalker) {\n            var walker = elOrWalker;\n            var memo = isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.subwalker = walker.subwalker._clone(memo);\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.subwalker = el.pat.newWalker(_this.nameResolver);\n        }\n        return _this;\n    }\n    return DefineWalker;\n}(SingleSubwalker));\naddWalker(Define, DefineWalker);\n//  LocalWords:  RNG MPL lookahead xmlns uri CodeMirror tokenizer enterStartTag\n//  LocalWords:  EOF attributeName el xmlPath buf nameOrPath util ret EventSet\n//  LocalWords:  NameResolver args unshift HashSet subpatterns newID NG vm pre\n//  LocalWords:  firstName lastName attributeValue leaveStartTag dumpTree const\n//  LocalWords:  dumpTreeBuf subwalker fireEvent suppressAttributes HashMap\n//  LocalWords:  ValidationError addWalker RefWalker DefineWalker\n\n//# sourceMappingURL=base.js.map\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Validation errors.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The ``fireEvent`` methods return an array of objects of this class to\n * notify the caller of errors in the file being validated.\n *\n * Note that these error objects do not record what (element, attribute, text,\n * etc.) in the XML document was responsible for the error. It is the\n * responsibility of the code that uses salve to combine the error message with\n * an object that points into the document being validated.\n *\n * This is particularly important when considering the equality of errors. Two\n * errors are considered equal if their messages (with names) are the\n * same. *They could still be associated with two different locations in the\n * document being validated.* The code calling salve must distinguish such\n * cases.\n */\nvar ValidationError = (function () {\n    /**\n     *\n     * @param msg The error message.\n     */\n    function ValidationError(msg) {\n        this.msg = msg;\n        // May be useful for debugging:\n        // this.stack_trace = new Error().stack;\n    }\n    /**\n     * The default implementation is to return the value of calling\n     * ``this.toStringWithNames(this.getNames())``.\n     *\n     * @returns The text representation of the error.\n     */\n    ValidationError.prototype.toString = function () {\n        return this.toStringWithNames(this.getNames());\n    };\n    /**\n     * This method provides the caller with the list of all names that are used in\n     * the error message.\n     *\n     * @returns The list of names used in the error message.\n     */\n    ValidationError.prototype.getNames = function () {\n        return [];\n    };\n    /**\n     * This method transforms this object to a string but uses the names in the\n     * parameter passed to it to format the string.\n     *\n     * Since salve does not work with namespace prefixes, someone using salve\n     * would typically use this method so as to replace the name patterns passed\n     * in error messages with qualified names.\n     *\n     * @param names The array of names to use. This should be an array of the same\n     * length as that returned by [[getNames]] . Each element of the array\n     * corresponds to each name in [[getNames]] and should be something that can\n     * be converted to a meaningful string.\n     *\n     * @returns The object formatted as a string.\n     */\n    ValidationError.prototype.toStringWithNames = function (names) {\n        // We do not have names in ValidationError\n        return this.msg;\n    };\n    /**\n     * Two [[ValidationError]] objects are considered equal if the values returned\n     * by [[toString]] are equal.\n     *\n     * @param other The other validation error to compare against.\n     *\n     * @returns Whether ``this`` and ``other`` are equal.\n     */\n    ValidationError.prototype.equals = function (other) {\n        return (this === other) || (this.toString() === other.toString());\n    };\n    return ValidationError;\n}());\nexports.ValidationError = ValidationError;\n/**\n * This class serves as a base for all those errors that have only\n * one name involved.\n */\nvar SingleNameError = (function (_super) {\n    __extends(SingleNameError, _super);\n    /**\n     * @param msg The error message.\n     *\n     * @param name The name of the XML entity at stake.\n     */\n    function SingleNameError(msg, name) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = name;\n        return _this;\n    }\n    SingleNameError.prototype.getNames = function () {\n        return [this.name];\n    };\n    SingleNameError.prototype.toStringWithNames = function (names) {\n        return this.msg + \": \" + names[0].toString();\n    };\n    return SingleNameError;\n}(ValidationError));\nexports.SingleNameError = SingleNameError;\n/**\n * Error returned when an attribute name is invalid.\n */\nvar AttributeNameError = (function (_super) {\n    __extends(AttributeNameError, _super);\n    function AttributeNameError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AttributeNameError;\n}(SingleNameError));\nexports.AttributeNameError = AttributeNameError;\n/**\n * Error returned when an attribute value is invalid.\n */\nvar AttributeValueError = (function (_super) {\n    __extends(AttributeValueError, _super);\n    function AttributeValueError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AttributeValueError;\n}(SingleNameError));\nexports.AttributeValueError = AttributeValueError;\n/**\n * Error returned when an element is invalid.\n */\nvar ElementNameError = (function (_super) {\n    __extends(ElementNameError, _super);\n    function ElementNameError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ElementNameError;\n}(SingleNameError));\nexports.ElementNameError = ElementNameError;\n/**\n * Error returned when choice was not satisfied.\n */\nvar ChoiceError = (function (_super) {\n    __extends(ChoiceError, _super);\n    /**\n     * @param namesA The names of the first XML entities at stake.\n     *\n     * @param namesB The names of the second XML entities at stake.\n     */\n    function ChoiceError(namesA, namesB) {\n        var _this = _super.call(this, \"\") || this;\n        _this.namesA = namesA;\n        _this.namesB = namesB;\n        return _this;\n    }\n    ChoiceError.prototype.getNames = function () {\n        return this.namesA.concat(this.namesB);\n    };\n    ChoiceError.prototype.toStringWithNames = function (names) {\n        var first = names.slice(0, this.namesA.length);\n        var second = names.slice(this.namesA.length);\n        return \"must choose either \" + first.join(\", \") + \" or \" + second.join(\", \");\n    };\n    return ChoiceError;\n}(ValidationError));\nexports.ChoiceError = ChoiceError;\n//  LocalWords:  MPL ValidationError toStringWithNames getNames toString\n\n//# sourceMappingURL=errors.js.map\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Base class for all name patterns.\n */\nvar Base = (function () {\n    /**\n     * @param path The XML path of the element that corresponds to this\n     * object in the Relax NG schema from which this object was constructed.\n     */\n    function Base(path) {\n        this.path = path;\n    }\n    /**\n     * Gets the list of namespaces used in the pattern. An ``::except`` entry\n     * indicates that there are exceptions in the pattern. A ``*`` entry indicates\n     * that any namespace is allowed.\n     *\n     * This method should be used by client code to help determine how to prompt\n     * the user for a namespace. If the return value is a list without\n     * ``::except`` or ``*``, the client code knows there is a finite list of\n     * namespaces expected, and what the possible values are. So it could present\n     * the user with a choice from the set. If ``::except`` or ``*`` appears in\n     * the list, then a different strategy must be used.\n     *\n     * @returns The list of namespaces.\n     */\n    Base.prototype.getNamespaces = function () {\n        var namespaces = Object.create(null);\n        this._recordNamespaces(namespaces);\n        return Object.keys(namespaces);\n    };\n    /**\n     * Alias of [[Base.toObject]].\n     *\n     * ``toJSON`` is a misnomer, as the data returned is not JSON but a JavaScript\n     * object. This method exists so that ``JSON.stringify`` can use it.\n     */\n    Base.prototype.toJSON = function () {\n        return this.toObject();\n    };\n    /**\n     * Stringify the pattern to a JSON string.\n     *\n     * @returns The stringified instance.\n     */\n    Base.prototype.toString = function () {\n        return JSON.stringify(this);\n    };\n    return Base;\n}());\nexports.Base = Base;\n/**\n * Models the Relax NG ``<name>`` element.\n *\n */\nvar Name = (function (_super) {\n    __extends(Name, _super);\n    /**\n     * @param path See parent class.\n     *\n     * @param ns The namespace URI for this name. Corresponds to the\n     * ``ns`` attribute in the simplified Relax NG syntax.\n     *\n     * @param name The name. Corresponds to the content of ``<name>``\n     * in the simplified Relax NG syntax.\n     */\n    function Name(path, ns, name) {\n        var _this = _super.call(this, path) || this;\n        _this.ns = ns;\n        _this.name = name;\n        return _this;\n    }\n    Name.prototype.match = function (ns, name) {\n        return this.ns === ns && this.name === name;\n    };\n    Name.prototype.wildcardMatch = function (ns, name) {\n        return false; // This is not a wildcard.\n    };\n    Name.prototype.toObject = function () {\n        return {\n            ns: this.ns,\n            name: this.name,\n        };\n    };\n    Name.prototype.simple = function () {\n        return true;\n    };\n    Name.prototype.toArray = function () {\n        return [this];\n    };\n    Name.prototype._recordNamespaces = function (namespaces) {\n        namespaces[this.ns] = 1;\n    };\n    return Name;\n}(Base));\nexports.Name = Name;\n/**\n * Models the Relax NG ``<choice>`` element when it appears in a name\n * class.\n */\nvar NameChoice = (function (_super) {\n    __extends(NameChoice, _super);\n    /**\n     * @param path See parent class.\n     *\n     * @param pats An array of length 2 which\n     * contains the two choices allowed by this object.\n     */\n    function NameChoice(path, pats) {\n        var _this = _super.call(this, path) || this;\n        _this.a = pats[0], _this.b = pats[1];\n        return _this;\n    }\n    NameChoice.prototype.match = function (ns, name) {\n        return this.a.match(ns, name) || this.b.match(ns, name);\n    };\n    NameChoice.prototype.wildcardMatch = function (ns, name) {\n        return this.a.wildcardMatch(ns, name) || this.b.wildcardMatch(ns, name);\n    };\n    NameChoice.prototype.toObject = function () {\n        return {\n            a: this.a.toObject(),\n            b: this.b.toObject(),\n        };\n    };\n    NameChoice.prototype.simple = function () {\n        return this.a.simple() && this.b.simple();\n    };\n    NameChoice.prototype.toArray = function () {\n        var aArr = this.a.toArray();\n        if (aArr === null) {\n            return null;\n        }\n        var bArr = this.b.toArray();\n        if (bArr === null) {\n            return null;\n        }\n        return aArr.concat(bArr);\n    };\n    NameChoice.prototype._recordNamespaces = function (namespaces) {\n        this.a._recordNamespaces(namespaces);\n        this.b._recordNamespaces(namespaces);\n    };\n    return NameChoice;\n}(Base));\nexports.NameChoice = NameChoice;\n/**\n * Models the Relax NG ``<nsName>`` element.\n */\nvar NsName = (function (_super) {\n    __extends(NsName, _super);\n    /**\n     *\n     * @param path See parent class.\n     *\n     * @param ns The namespace URI for this name. Corresponds to the ``ns``\n     * attribute in the simplified Relax NG syntax.\n     *\n     * @param except Corresponds to an ``<except>`` element appearing as a child\n     * of the ``<nsName>`` element in the Relax NG schema.\n     */\n    function NsName(path, ns, except) {\n        var _this = _super.call(this, path) || this;\n        _this.ns = ns;\n        _this.except = except;\n        return _this;\n    }\n    NsName.prototype.match = function (ns, name) {\n        return this.ns === ns && !(this.except !== undefined &&\n            this.except.match(ns, name));\n    };\n    NsName.prototype.wildcardMatch = function (ns, name) {\n        return this.match(ns, name);\n    };\n    NsName.prototype.toObject = function () {\n        var ret = {\n            ns: this.ns,\n        };\n        if (this.except !== undefined) {\n            ret.except = this.except.toObject();\n        }\n        return ret;\n    };\n    NsName.prototype.simple = function () {\n        return false;\n    };\n    NsName.prototype.toArray = function () {\n        return null;\n    };\n    NsName.prototype._recordNamespaces = function (namespaces) {\n        namespaces[this.ns] = 1;\n        if (this.except !== undefined) {\n            namespaces[\"::except\"] = 1;\n        }\n    };\n    return NsName;\n}(Base));\nexports.NsName = NsName;\n/**\n * Models the Relax NG ``<anyName>`` element.\n */\nvar AnyName = (function (_super) {\n    __extends(AnyName, _super);\n    /**\n     * @param path See parent class.\n     *\n     * @param except Corresponds to an ``<except>`` element appearing as a child\n     * of the ``<anyName>`` element in the Relax NG schema.\n     */\n    function AnyName(path, except) {\n        var _this = _super.call(this, path) || this;\n        _this.except = except;\n        return _this;\n    }\n    AnyName.prototype.match = function (ns, name) {\n        return (this.except === undefined) || !this.except.match(ns, name);\n    };\n    AnyName.prototype.wildcardMatch = function (ns, name) {\n        return this.match(ns, name);\n    };\n    AnyName.prototype.toObject = function () {\n        var ret = {\n            pattern: \"AnyName\",\n        };\n        if (this.except !== undefined) {\n            ret.except = this.except.toObject();\n        }\n        return ret;\n    };\n    AnyName.prototype.simple = function () {\n        return false;\n    };\n    AnyName.prototype.toArray = function () {\n        return null;\n    };\n    AnyName.prototype._recordNamespaces = function (namespaces) {\n        namespaces[\"*\"] = 1;\n        if (this.except !== undefined) {\n            namespaces[\"::except\"] = 1;\n        }\n    };\n    return AnyName;\n}(Base));\nexports.AnyName = AnyName;\n//  LocalWords:  MPL NG Stringify stringified AnyName\n\n//# sourceMappingURL=name_patterns.js.map\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Implements a name resolver for handling namespace changes in XML.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ename_1 = __webpack_require__(4);\n//\n// Both defined at:\n// http://www.w3.org/TR/REC-xml-names/#ns-decl\n//\n/**\n * The namespace URI for the \"xml\" prefix. This is part of the [XML\n * spec](http://www.w3.org/TR/REC-xml-names/#ns-decl).\n */\n// tslint:disable-next-line: no-http-string\nexports.XML1_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n/**\n * The namespace URI for the \"xmlns\" prefix. This is part of the [XML\n * spec](http://www.w3.org/TR/REC-xml-names/#ns-decl).\n */\n// tslint:disable-next-line: no-http-string\nexports.XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\";\n/**\n * A resolution context.\n *\n * @private\n */\nvar Context = (function () {\n    function Context() {\n        /**\n         * A mapping from namespace prefix to namespace uri.\n         */\n        this.forward = Object.create(null);\n        /**\n         * A mapping from namespace uri to namespace prefixes. It is \"prefixes\" in the\n         * plural because multiple prefixes may exist for the same uri.\n         */\n        this.backwards = Object.create(null);\n    }\n    return Context;\n}());\n/**\n * A name resolver for handling namespace changes in XML. This name\n * resolver maintains mappings from namespace prefix to namespace URI.\n */\nvar NameResolver = (function () {\n    function NameResolver(other) {\n        this.id = \"N\" + this.__newID();\n        if (other !== undefined) {\n            this._contextStack = other._contextStack.slice();\n        }\n        else {\n            this._contextStack = [];\n            // Create a default context.\n            this.enterContext();\n            // Both namespaces defined at:\n            // http://www.w3.org/TR/REC-xml-names/#ns-decl\n            // Skip definePrefix for these initial values.\n            /* tslint:disable no-string-literal */\n            this._contextStack[0].forward[\"xml\"] = exports.XML1_NAMESPACE;\n            this._contextStack[0].backwards[exports.XML1_NAMESPACE] = [\"xml\"];\n            this._contextStack[0].forward[\"xmlns\"] = exports.XMLNS_NAMESPACE;\n            this._contextStack[0].backwards[exports.XMLNS_NAMESPACE] = [\"xmlns\"];\n            /* tslint:enable no-string-literal */\n        }\n    }\n    /**\n     * This method is mainly used to be able to use [[NameResolver]] objects in a\n     * collection.\n     *\n     * Returns a hash guaranteed to be unique to this object. There are some\n     * limitations. First, if this module is instantiated twice, the objects\n     * created by the two instances cannot mix without violating the uniqueness\n     * guarantee. Second, the hash is a monotonically increasing counter, so when\n     * it reaches beyond the maximum integer that the JavaScript vm can handle,\n     * things go kaboom.\n     *\n     * @returns A number unique to this object.\n     */\n    NameResolver.prototype.hash = function () {\n        return this.id;\n    };\n    /**\n     * Makes a deep copy.\n     *\n     * @returns A deep copy of the resolver.\n     */\n    NameResolver.prototype.clone = function () {\n        return new NameResolver(this);\n    };\n    /**\n     * Defines a (prefix, URI) mapping.\n     *\n     * @param prefix The namespace prefix to associate with the URI.\n     *\n     * @param uri The namespace URI associated with the prefix.\n     */\n    NameResolver.prototype.definePrefix = function (prefix, uri) {\n        // http://www.w3.org/TR/REC-xml-names/#ns-decl\n        if (prefix === \"xmlns\") {\n            throw new Error(\"trying to define 'xmlns' but the XML Namespaces \" +\n                \"standard stipulates that 'xmlns' cannot be \" +\n                \"declared (= \\\"defined\\\")\");\n        }\n        if (prefix === \"xml\" && uri !== exports.XML1_NAMESPACE) {\n            throw new Error(\"trying to define 'xml' to an incorrect URI\");\n        }\n        this._contextStack[0].forward[prefix] = uri;\n        var prefixes = this._contextStack[0].backwards[uri];\n        if (prefixes === undefined) {\n            prefixes = this._contextStack[0].backwards[uri] = [];\n        }\n        // This ensure that the default namespace is given priority when\n        // unresolving names.\n        if (prefix === \"\") {\n            prefixes.unshift(\"\");\n        }\n        else {\n            prefixes.push(prefix);\n        }\n    };\n    /**\n     * This method is called to indicate the start of a new context.  Contexts\n     * enable this class to support namespace redeclarations. In XML, each start\n     * tag can potentially redefine a prefix that was already defined by an\n     * ancestor. When using this class, such redefinition must appear in a new\n     * context, otherwise it would merely overwrite the old definition.\n     *\n     * At creation, a [[NameResolver]] has a default context already\n     * created. There is no need to create it and it is not possible to leave it.\n     */\n    NameResolver.prototype.enterContext = function () {\n        this._contextStack.unshift(new Context());\n    };\n    /**\n     * This method is called to indicate the end of a context. Whatever context\n     * was in effect when the current context ends becomes effective.\n     *\n     * @throws {Error} If this method is called when there is no context created\n     * by [[NameResolver.enterContext]].\n     */\n    NameResolver.prototype.leaveContext = function () {\n        if (this._contextStack.length > 1) {\n            this._contextStack.shift();\n        }\n        else {\n            throw new Error(\"trying to leave the default context\");\n        }\n    };\n    /**\n     * Resolves a qualified name to an expanded name. A qualified name is an XML\n     * name optionally prefixed by a namespace prefix. For instance, in ``<html\n     * xml:lang=\"en\">``, \"html\" is a name without a prefix, and \"xml:lang\" is a\n     * name with the \"xml\" prefix. An expanded name is a (URI, name) pair.\n     *\n     * @param name The name to resolve.\n     *\n     * @param attribute Whether this name appears as an attribute.\n     *\n     * @throws {Error} If the name is malformed. For instance, a name with two\n     * colons would be malformed.\n     *\n     * @returns The expanded name, or ``undefined`` if the name cannot be\n     * resolved.\n     */\n    NameResolver.prototype.resolveName = function (name, attribute) {\n        if (attribute === void 0) { attribute = false; }\n        var parts = name.split(\":\");\n        if (parts.length === 1) {\n            if (attribute) {\n                return new ename_1.EName(\"\", name);\n            }\n            // We are searching for the default namespace currently in effect.\n            parts = [\"\", name];\n        }\n        if (parts.length > 2) {\n            throw new Error(\"invalid name passed to resolveName\");\n        }\n        // Search through the contexts\n        var uri;\n        for (var cIx = 0; (uri === undefined) && (cIx < this._contextStack.length); ++cIx) {\n            var ctx = this._contextStack[cIx];\n            uri = ctx.forward[parts[0]];\n        }\n        if (uri === undefined) {\n            return (parts[0] === \"\") ? new ename_1.EName(\"\", parts[1]) : undefined;\n        }\n        return new ename_1.EName(uri, parts[1]);\n    };\n    /**\n     * Unresolves an expanded name to a qualified name. An expanded name is a\n     * (URI, name) pair. Note that if we execute:\n     *\n     * <pre>\n     *   var nameResolver = new NameResolver();\n     *   var ename = nameResolver.resolveName(qname);\n     *   var qname2 = nameResolver.unresolveName(ename.ns, ename.name);\n     * </pre>\n     *\n     * then ``qname === qname2`` is not necessarily true. This would happen if two\n     * prefixes map to the same URI. In such case the prefix provided in the\n     * return value is arbitrarily chosen.\n     *\n     * @param uri The URI part of the expanded name. An empty string is\n     * valid, and basically means \"no namespace\". This occurs for unprefixed\n     * attributes but could also happen if the default namespace is undeclared.\n     *\n     * @param  name The name part.\n     *\n     * @returns The qualified name that corresponds to the expanded name, or\n     * ``undefined`` if it cannot be resolved.\n     */\n    NameResolver.prototype.unresolveName = function (uri, name) {\n        if (uri === \"\") {\n            return name;\n        }\n        // Search through the contexts\n        var prefixes;\n        for (var cIx = 0; (prefixes === undefined) &&\n            (cIx < this._contextStack.length); ++cIx) {\n            var ctx = this._contextStack[cIx];\n            prefixes = ctx.backwards[uri];\n        }\n        if (prefixes === undefined) {\n            return undefined;\n        }\n        var pre = prefixes[0];\n        return (pre !== \"\") ? pre + \":\" + name : name;\n    };\n    /**\n     * Returns a prefix that, in the current context, is mapped to the URI\n     * specified. Note that this function will return the first prefix that\n     * satisfies the requirement, starting from the innermost context.\n     *\n     * @param uri A URI for which to get a prefix.\n     *\n     * @returns A prefix that maps to this URI. Undefined if there is no prefix\n     * available.\n     */\n    NameResolver.prototype.prefixFromURI = function (uri) {\n        var prefixes;\n        for (var cIx = 0; (prefixes === undefined) &&\n            (cIx < this._contextStack.length); ++cIx) {\n            var ctx = this._contextStack[cIx];\n            prefixes = ctx.backwards[uri];\n        }\n        if (prefixes === undefined) {\n            return undefined;\n        }\n        return prefixes[0];\n    };\n    /**\n     * Gets a new Pattern id.\n     *\n     * @returns The new id.\n     */\n    NameResolver.prototype.__newID = function () {\n        return NameResolver.__id++;\n    };\n    /**\n     * The next id to associate to the next NameResolver object to be created.\n     * This is used so that [[NameResolver.hash]] can return unique values.\n     */\n    NameResolver.__id = 0; // tslint:disable-line: variable-name\n    return NameResolver;\n}());\nexports.NameResolver = NameResolver;\n//  LocalWords:  unprefixed nameResolver pre definePrefix Unresolves qname vm\n//  LocalWords:  redeclarations newID ename lang html NameResolver Mangalam uri\n//  LocalWords:  xmlns URI Dubeau resolveName xml MPL unresolving namespace\n\n//# sourceMappingURL=name_resolver.js.map\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Class for XML Expanded Names.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Immutable objects modeling XML Expanded Names.\n */\nvar EName = (function () {\n    /**\n     * @param ns The namespace URI.\n     *\n     * @param name The local name of the entity.\n     */\n    function EName(ns, name) {\n        this.ns = ns;\n        this.name = name;\n    }\n    /**\n     * @returns A string representing the expanded name.\n     */\n    EName.prototype.toString = function () {\n        return \"{\" + this.ns + \"}\" + this.name;\n    };\n    /**\n     * Compares two expanded names.\n     *\n     * @param other The other object to compare this object with.\n     *\n     * @returns  ``true`` if this object equals the other.\n     */\n    EName.prototype.equal = function (other) {\n        return this.ns === other.ns && this.name === other.name;\n    };\n    return EName;\n}());\nexports.EName = EName;\n//  LocalWords:  MPL ns\n\n//# sourceMappingURL=ename.js.map\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Errors that can be raised during parsing of types.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tools_1 = __webpack_require__(7);\n/**\n * Records an error due to an incorrect parameter (``<param>``) value. This is\n * an error in the **schema** used to validate a document. Note that these\n * errors are *returned* by salve's internal code. They are not *thrown*.\n */\nvar ParamError = (function () {\n    /**\n     *\n     * @param message The actual error description.\n     */\n    function ParamError(message) {\n        this.message = message;\n    }\n    ParamError.prototype.toString = function () {\n        return this.message;\n    };\n    return ParamError;\n}());\nexports.ParamError = ParamError;\n/**\n * Records an error due to an incorrect value (``<value>``).  This is an error\n * in the **schema** used to validate a document. Note that these errors are\n * *returned* by salve's internal code. They are not *thrown*.\n */\nvar ValueError = (function () {\n    /**\n     * @param message The actual error description.\n     */\n    function ValueError(message) {\n        this.message = message;\n    }\n    ValueError.prototype.toString = function () {\n        return this.message;\n    };\n    return ValueError;\n}());\nexports.ValueError = ValueError;\n/**\n * Records the failure of parsing a parameter (``<param>``) value. Whereas\n * [[ParamError]] records each individual issue with a parameter's parsing, this\n * object is used to throw a single failure that collects all the individual\n * issues that were encountered.\n */\nvar ParameterParsingError = (function (_super) {\n    __extends(ParameterParsingError, _super);\n    /**\n     *\n     * @param location The location of the ``<param>`` in the schema.\n     *\n     * @param errors The errors encountered.\n     */\n    function ParameterParsingError(location, errors) {\n        var _this = _super.call(this) || this;\n        _this.errors = errors;\n        // This is crap to work around the fact that Error is a terribly badly\n        // designed class or prototype or whatever. Unfortunately the stack trace is\n        // off...\n        var msg = location + \": \" + errors.map(function (x) { return x.toString(); }).join(\"\\n\");\n        var err = new Error(msg);\n        _this.name = \"ParameterParsingError\";\n        _this.stack = err.stack;\n        _this.message = err.message;\n        tools_1.fixPrototype(_this, ParameterParsingError);\n        return _this;\n    }\n    return ParameterParsingError;\n}(Error));\nexports.ParameterParsingError = ParameterParsingError;\n/**\n * Records the failure of parsing a value (``<value>``). Whereas [[ValueError]]\n * records each individual issue with a value's parsing, this object is used to\n * throw a single failure that collects all the individual issues that were\n * encountered.\n */\nvar ValueValidationError = (function (_super) {\n    __extends(ValueValidationError, _super);\n    /**\n     * @param errors The errors encountered.\n     */\n    function ValueValidationError(errors) {\n        var _this = _super.call(this) || this;\n        _this.errors = errors;\n        // This is crap to work around the fact that Error is a terribly badly\n        // designed class or prototype or whatever. Unfortunately the stack trace is\n        // off...\n        var msg = errors.map(function (x) { return x.toString(); }).join(\"\\n\");\n        var err = new Error(msg);\n        _this.name = \"ValueValidationError\";\n        _this.stack = err.stack;\n        _this.message = err.message;\n        tools_1.fixPrototype(_this, ValueValidationError);\n        return _this;\n    }\n    return ValueValidationError;\n}(Error));\nexports.ValueValidationError = ValueValidationError;\n//  LocalWords:  MPL ParamError ParameterParsingError ValueValidationError\n\n//# sourceMappingURL=errors.js.map\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_1 = __webpack_require__(0);\n/**\n * Pattern for ``<notAllowed/>``.\n */\nvar NotAllowed = (function (_super) {\n    __extends(NotAllowed, _super);\n    function NotAllowed() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NotAllowed;\n}(base_1.Pattern));\nexports.NotAllowed = NotAllowed;\n/**\n * Walker for [[NotAllowed]];\n */\nvar NotAllowedWalker = (function (_super) {\n    __extends(NotAllowedWalker, _super);\n    function NotAllowedWalker(elOrWalker, memo) {\n        var _this = this;\n        if (elOrWalker instanceof NotAllowedWalker) {\n            var walker = elOrWalker;\n            memo = base_1.isHashMap(memo); // Makes sure it is not undefined.\n            _this = _super.call(this, walker, memo) || this;\n        }\n        else {\n            var el = elOrWalker;\n            _this = _super.call(this, el) || this;\n            _this.possibleCached = new base_1.EventSet();\n        }\n        return _this;\n    }\n    NotAllowedWalker.prototype.possible = function () {\n        // Save some time by avoiding calling _possible\n        return new base_1.EventSet();\n    };\n    NotAllowedWalker.prototype._possible = function () {\n        // possibleCached is necessarily defined because of the constructor's\n        // logic.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.possibleCached;\n    };\n    NotAllowedWalker.prototype.fireEvent = function (ev) {\n        return undefined; // we never match!\n    };\n    return NotAllowedWalker;\n}(base_1.Walker));\nexports.NotAllowedWalker = NotAllowedWalker;\nbase_1.addWalker(NotAllowed, NotAllowedWalker);\n//  LocalWords:  RNG's MPL possibleCached\n\n//# sourceMappingURL=not_allowed.js.map\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Common tools for salve.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @private\n */\nfunction copy(target, source) {\n    for (var i in source) {\n        target[i] = source[i];\n    }\n}\n/**\n * Modify ``target`` by copying the sources into it. This function is designed\n * to fit the internal needs of salve and is not meant as a general purpose\n * \"extend\" function like provided by jQuery or Lodash (for instance).\n *\n * @param target The target to copy into.\n *\n * @param sources The sources from which to copy. These sources are\n * processed in order.\n *\n * @returns The target, modified.\n */\nfunction extend(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {\n        var source = sources_1[_a];\n        copy(target, source);\n    }\n    return target;\n}\nexports.extend = extend;\n/**\n * This is required to work around a problem when extending built-in classes\n * like ``Error``. Some of the constructors for these classes return a value\n * from the constructor, which is then picked up by the constructors generated\n * by TypeScript (same with ES6 code transpiled through Babel), and this messes\n * up the inheritance chain.\n *\n * See https://github.com/Microsoft/TypeScript/issues/12123.\n */\nfunction fixPrototype(obj, parent) {\n    var oldProto = Object.getPrototypeOf !== undefined ?\n        Object.getPrototypeOf(obj) : obj.__proto__;\n    if (oldProto !== parent) {\n        if (Object.setPrototypeOf !== undefined) {\n            Object.setPrototypeOf(obj, parent.prototype);\n        }\n        else {\n            obj.__proto__ = parent.prototype;\n        }\n    }\n}\nexports.fixPrototype = fixPrototype;\n//  LocalWords:  MPL jQuery Lodash\n\n//# sourceMappingURL=tools.js.map\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Implementations of some simple collections. This module is meant for salve's\n * internal purposes only. It may be yanked at any time. Do not use in your own\n * code.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n * @private\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The HashBase class provides a base class for the collections in this module.\n */\nvar HashBase = (function () {\n    /**\n     * @param hashF A function which returns a uniquely identifying hash when\n     * called with an object that a ``HashBase`` instance uses.\n     *\n     * @param initial An initial value for the object being constructed.\n     */\n    function HashBase(hashF, initial) {\n        this.hashF = hashF;\n        /**\n         * The backing store that holds objects added to this collection.\n         */\n        this.backing = Object.create(null);\n        /**\n         * The cached size of the collection.\n         */\n        this._size = 0;\n        if (initial !== undefined) {\n            if (initial instanceof HashBase) {\n                var backing = this.backing;\n                var initialBacking = initial.backing;\n                var keys = Object.keys(initialBacking);\n                for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                    var key = keys_1[_i];\n                    backing[key] = initialBacking[key];\n                }\n                this._size = keys.length;\n            }\n            else if (initial instanceof Array) {\n                for (var _a = 0, initial_1 = initial; _a < initial_1.length; _a++) {\n                    var value = initial_1[_a];\n                    this.add(value);\n                }\n            }\n            else {\n                this.add(initial);\n            }\n        }\n    }\n    /**\n     * Unites this object with another object. This method modifies the object\n     * upon which it is called so as to make it a mathematical union of the two\n     * objects.\n     *\n     * @param s The object to unite with this one. Must be of the same class as\n     * this object.\n     *\n     * @throws {Error} If ``s`` is not of the same type as this object.\n     */\n    HashBase.prototype.union = function (s) {\n        if (s == null) {\n            return;\n        }\n        if (!(s instanceof this.constructor)) {\n            throw new Error(\"union invalid class object; my class \" + this.constructor.name + \" other class \" + s.constructor.name);\n        }\n        var backing = s.backing;\n        var keys = Object.keys(backing);\n        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n            var key = keys_2[_i];\n            this._store(key, backing[key]);\n        }\n    };\n    /**\n     * Applies a function on each value stored in the object.\n     *\n     * @param f A function which accepts one parameter. The function will be\n     * called on each value.\n     */\n    HashBase.prototype.forEach = function (f) {\n        var backing = this.backing;\n        var keys = Object.keys(backing);\n        for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n            var key = keys_3[_i];\n            f(backing[key]);\n        }\n    };\n    /**\n     * @returns The number of values stored.\n     */\n    HashBase.prototype.size = function () {\n        return this._size;\n    };\n    /**\n     * Selects a subset of values.\n     *\n     * @param f A function that selects values. It is called with each value. If\n     * the value happens to be an ``Array`` then the function is *applied* to this\n     * array. A return value which is truthy includes the value, otherwise the\n     * value is excluded.\n     *\n     * @returns An object of the same class as the object on which the method is\n     * called. This object contains only the value selected by the function.\n     */\n    HashBase.prototype.filter = function (f) {\n        var ret = new this.constructor();\n        if (ret.hashF === undefined) {\n            ret.hashF = this.hashF;\n        }\n        var backing = this.backing;\n        var keys = Object.keys(backing);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var key = keys_4[_i];\n            var data = backing[key];\n            var args = data instanceof Array ? data : [data];\n            if (f.apply(undefined, args)) {\n                ret._store(key, data);\n            }\n        }\n        return ret;\n    };\n    /**\n     * Tests whether a value is contained in the object on which this method is\n     * called.\n     *\n     * @param obj The value for which to test.\n     *\n     * @returns ``true`` if the value is present, ``false`` if not.\n     */\n    HashBase.prototype.has = function (obj) {\n        var hash = this.hashF(obj);\n        return this.backing[hash] !== undefined;\n    };\n    /**\n     * Converts the object on which this method is called to a string.\n     *\n     * @returns All the values, joined with \", \".\n     */\n    HashBase.prototype.toString = function () {\n        return this.toArray().join(\", \");\n    };\n    /**\n     * Converts the object on which this method is called to an array.\n     *\n     * @returns An array that corresponds to the object.\n     *\n     */\n    HashBase.prototype.toArray = function () {\n        var t = [];\n        var backing = this.backing;\n        var keys = Object.keys(backing);\n        for (var _i = 0, keys_5 = keys; _i < keys_5.length; _i++) {\n            var key = keys_5[_i];\n            t.push(backing[key]);\n        }\n        return t;\n    };\n    /**\n     * Record a hash and value pair into the backing store. Effectively associates\n     * the hash with the value. This method assumes but does not verify that the\n     * mapping from hash to value is unique. This method cannot be used to\n     * **change** such mapping.\n     *\n     * @param hash The hash with which to associate the value. Can be any type\n     * that can be used as an array index.\n     *\n     * @param val The value to associate with the hash.\n     *\n     * @throws {Error} If the hash is undefined or null.\n     */\n    HashBase.prototype._store = function (hash, val) {\n        if (hash == null) {\n            throw new Error(\"undefined or null hash\");\n        }\n        if (this.backing[hash] === undefined) {\n            this.backing[hash] = val;\n            this._size++;\n        }\n        // else noop\n    };\n    return HashBase;\n}());\nexports.HashBase = HashBase;\n/**\n * A set of objects. The objects are distinguished by a hash\n * function.\n */\nvar HashSet = (function (_super) {\n    __extends(HashSet, _super);\n    function HashSet() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Adds a value to the set.\n     *\n     * @param x The value to add. This value must be hashable by the hash function\n     * that was used to create the collection.\n     */\n    HashSet.prototype.add = function (x) {\n        this._store(this.hashF(x), x);\n    };\n    return HashSet;\n}(HashBase));\nexports.HashSet = HashSet;\n/**\n * A map of (key, value) pairs. The keys are distinguished by means of a hash\n * function.\n */\nvar HashMap = (function (_super) {\n    __extends(HashMap, _super);\n    function HashMap(hashF, initial) {\n        var _this = _super.call(this, hashF, initial) || this;\n        _this.hashF = hashF;\n        return _this;\n    }\n    // The arrays stored in the backing store are considered immutable.\n    /**\n     * Adds a (key, value) mapping to the map.\n     *\n     * @param key This must be a value hashable with the hash function that was\n     * used to create the collection.\n     *\n     * @param value The value to associate with the key.\n     */\n    HashMap.prototype.add = function (key, value) {\n        this._store(this.hashF(key), [key, value]);\n    };\n    HashMap.prototype.forEach = function (f) {\n        var backing = this.backing;\n        var keys = Object.keys(backing);\n        for (var _i = 0, keys_6 = keys; _i < keys_6.length; _i++) {\n            var key = keys_6[_i];\n            f(backing[key][0], backing[key][1]);\n        }\n    };\n    /**\n     * Checks whether an object is a key of the map, and returns its associated\n     * value if present.\n     *\n     * @param obj The object to check.\n     *\n     * @returns The value associated with the object if present. ``undefined`` if\n     * not.\n     */\n    HashMap.prototype.has = function (obj) {\n        var hash = this.hashF(obj);\n        var pair = this.backing[hash];\n        if (pair !== undefined) {\n            return pair[1];\n        }\n        return undefined;\n    };\n    /**\n     * Gets the keys present in this mapping.\n     */\n    HashMap.prototype.keys = function () {\n        return Object.keys(this.backing);\n    };\n    return HashMap;\n}(HashBase));\nexports.HashMap = HashMap;\n//  LocalWords:  truthy Mangalam Dubeau hashable HashMap HashSet noop HashBase\n//  LocalWords:  MPL\n\n//# sourceMappingURL=hashstructs.js.map\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Classes that model RNG patterns.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar ename_1 = __webpack_require__(4);\nvar attribute_1 = __webpack_require__(18);\nvar base_1 = __webpack_require__(0);\nvar choice_1 = __webpack_require__(19);\nvar data_1 = __webpack_require__(20);\nvar element_1 = __webpack_require__(21);\nvar empty_1 = __webpack_require__(22);\nvar grammar_1 = __webpack_require__(12);\nvar group_1 = __webpack_require__(23);\nvar interleave_1 = __webpack_require__(24);\nvar list_1 = __webpack_require__(25);\nvar not_allowed_1 = __webpack_require__(6);\nvar one_or_more_1 = __webpack_require__(26);\nvar param_1 = __webpack_require__(27);\nvar text_1 = __webpack_require__(28);\nvar value_1 = __webpack_require__(29);\nvar namePatterns = __webpack_require__(2);\nvar base_2 = __webpack_require__(0);\nexports.eventsToTreeString = base_2.eventsToTreeString;\nexports.Event = base_2.Event;\nexports.EventSet = base_2.EventSet;\nexports.BasePattern = base_2.BasePattern;\nexports.Walker = base_2.Walker;\nvar grammar_2 = __webpack_require__(12);\nexports.Grammar = grammar_2.Grammar;\nexports.GrammarWalker = grammar_2.GrammarWalker;\nexports.RefError = grammar_2.RefError;\n//\n// Things used only during testing.\n//\nvar tret = {\n    GrammarWalker: grammar_1.GrammarWalker,\n    Text: text_1.Text,\n};\nfunction __test() {\n    return tret;\n}\nexports.__test = __test;\n// tslint:disable-next-line:variable-name\nexports.__protected = {\n    Empty: empty_1.Empty,\n    Data: data_1.Data,\n    List: list_1.List,\n    Param: param_1.Param,\n    Value: value_1.Value,\n    NotAllowed: not_allowed_1.NotAllowed,\n    Text: text_1.Text,\n    Ref: base_1.Ref,\n    OneOrMore: one_or_more_1.OneOrMore,\n    Choice: choice_1.Choice,\n    Group: group_1.Group,\n    Attribute: attribute_1.Attribute,\n    Element: element_1.Element,\n    Define: base_1.Define,\n    Grammar: grammar_1.Grammar,\n    EName: ename_1.EName,\n    Interleave: interleave_1.Interleave,\n    Name: namePatterns.Name,\n    NameChoice: namePatterns.NameChoice,\n    NsName: namePatterns.NsName,\n    AnyName: namePatterns.AnyName,\n};\n/*  tslint:enable */\n//  LocalWords:  EName NotAllowed oneOrMore RNG MPL Dubeau GrammarWalker rng\n//  LocalWords:  notAllowed Mangalam EventSet\n\n//# sourceMappingURL=patterns.js.map\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Classes that model datatypes used in RNG schemas.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar builtin_1 = __webpack_require__(15);\nvar xmlschema_1 = __webpack_require__(17);\n/**\n * The registry of types.\n */\nvar Registry = (function () {\n    function Registry() {\n        this.libraries = Object.create(null);\n    }\n    /**\n     * Adds a library to the registry.\n     *\n     * @param library The library to add to the registry.\n     *\n     * @throws {Error} If the URI is already registered.\n     */\n    Registry.prototype.add = function (library) {\n        var uri = library.uri;\n        if (uri in this.libraries) {\n            throw new Error(\"URI clash: \" + uri);\n        }\n        this.libraries[uri] = library;\n    };\n    /**\n     * Searches for a URI in the library.\n     *\n     * @param uri The URI to search for.\n     *\n     * @returns The library that corresponds to the URI or ``undefined`` if no\n     * such library exists.\n     */\n    Registry.prototype.find = function (uri) {\n        return this.libraries[uri];\n    };\n    /**\n     * Gets the library corresponding to a URI.\n     *\n     * @param uri The URI.\n     *\n     * @returns The library that corresponds to the URI.\n     *\n     * @throws {Error} If the library does not exist.\n     */\n    // tslint:disable-next-line: no-reserved-keywords\n    Registry.prototype.get = function (uri) {\n        var ret = this.find(uri);\n        if (ret === undefined) {\n            throw new Error(\"can't get library with URI: \" + uri);\n        }\n        return ret;\n    };\n    return Registry;\n}());\nexports.Registry = Registry;\nexports.registry = new Registry();\nexports.registry.add(builtin_1.builtin);\nexports.registry.add(xmlschema_1.xmlschema);\nvar errors_1 = __webpack_require__(5);\nexports.ParameterParsingError = errors_1.ParameterParsingError;\nexports.ValueValidationError = errors_1.ValueValidationError;\nexports.ValueError = errors_1.ValueError;\n//  LocalWords:  datatypes RNG MPL uri\n\n//# sourceMappingURL=datatypes.js.map\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Collection of constants that model the way XML refers to various\n * characters and groups of characters. This module is essentially private to\n * salve.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// The constants here are just representations in JavaScript of the character\n// classes that the XML standard uses. So we don't document them.  See the XML\n// standard and read salve's code to figure out what they are for.\n/* tslint:disable max-line-length */\nvar xmlBaseChar = \"A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF\\u0100-\\u0131\\u0134-\\u013E\\u0141-\\u0148\\u014A-\\u017E\\u0180-\\u01C3\\u01CD-\\u01F0\\u01F4-\\u01F5\\u01FA-\\u0217\\u0250-\\u02A8\\u02BB-\\u02C1\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D6\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2-\\u03F3\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E-\\u0481\\u0490-\\u04C4\\u04C7-\\u04C8\\u04CB-\\u04CC\\u04D0-\\u04EB\\u04EE-\\u04F5\\u04F8-\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0586\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0641-\\u064A\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D3\\u06D5\\u06E5-\\u06E6\\u0905-\\u0939\\u093D\\u0958-\\u0961\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AE0\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B36-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CDE\\u0CE0-\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D60-\\u0D61\\u0E01-\\u0E2E\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E45\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EAE\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0F40-\\u0F47\\u0F49-\\u0F69\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100\\u1102-\\u1103\\u1105-\\u1107\\u1109\\u110B-\\u110C\\u110E-\\u1112\\u113C\\u113E\\u1140\\u114C\\u114E\\u1150\\u1154-\\u1155\\u1159\\u115F-\\u1161\\u1163\\u1165\\u1167\\u1169\\u116D-\\u116E\\u1172-\\u1173\\u1175\\u119E\\u11A8\\u11AB\\u11AE-\\u11AF\\u11B7-\\u11B8\\u11BA\\u11BC-\\u11C2\\u11EB\\u11F0\\u11F9\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2126\\u212A-\\u212B\\u212E\\u2180-\\u2182\\u3041-\\u3094\\u30A1-\\u30FA\\u3105-\\u312C\\uAC00-\\uD7A3\";\nvar xmlIdeographic = \"\\u4E00-\\u9FA5\\u3007\\u3021-\\u3029\";\nexports.xmlLetter = xmlBaseChar + xmlIdeographic;\nvar xmlDigit = \"\\u0030-\\u0039\\u0660-\\u0669\\u06F0-\\u06F9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE7-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\";\nvar xmlCombiningChar = \"\\u0300-\\u0345\\u0360-\\u0361\\u0483-\\u0486\\u0591-\\u05A1\\u05A3-\\u05B9\\u05BB-\\u05BD\\u05BF\\u05C1-\\u05C2\\u05C4\\u064B-\\u0652\\u0670\\u06D6-\\u06DC\\u06DD-\\u06DF\\u06E0-\\u06E4\\u06E7-\\u06E8\\u06EA-\\u06ED\\u0901-\\u0903\\u093C\\u093E-\\u094C\\u094D\\u0951-\\u0954\\u0962-\\u0963\\u0981-\\u0983\\u09BC\\u09BE\\u09BF\\u09C0-\\u09C4\\u09C7-\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2-\\u09E3\\u0A02\\u0A3C\\u0A3E\\u0A3F\\u0A40-\\u0A42\\u0A47-\\u0A48\\u0A4B-\\u0A4D\\u0A70-\\u0A71\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B43\\u0B47-\\u0B48\\u0B4B-\\u0B4D\\u0B56-\\u0B57\\u0B82-\\u0B83\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C01-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55-\\u0C56\\u0C82-\\u0C83\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5-\\u0CD6\\u0D02-\\u0D03\\u0D3E-\\u0D43\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB-\\u0EBC\\u0EC8-\\u0ECD\\u0F18-\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86-\\u0F8B\\u0F90-\\u0F95\\u0F97\\u0F99-\\u0FAD\\u0FB1-\\u0FB7\\u0FB9\\u20D0-\\u20DC\\u20E1\\u302A-\\u302F\\u3099\\u309A\";\nvar xmlExtender = \"\\u00B7\\u02D0\\u02D1\\u0387\\u0640\\u0E46\\u0EC6\\u3005\\u3031-\\u3035\\u309D-\\u309E\\u30FC-\\u30FE\";\n// It is important to have the dash first to avoid issues with ranges in\n// regexps. Also, the following contain periods. However, they are doing to\n// appear inside square bracket in the regexps.\nexports.xmlNameChar = \"-\" + exports.xmlLetter + xmlDigit + \"._:\" + xmlCombiningChar + xmlExtender;\nvar xmlName = \"[\" + exports.xmlLetter + \"_:](?:[\" + exports.xmlNameChar + \"])*\";\nexports.xmlNameRe = new RegExp(\"^\" + xmlName + \"$\");\nexports.xmlNcname = \"[\" + exports.xmlLetter + \"_](?:[-\" + exports.xmlLetter + xmlDigit + \"._\" + xmlCombiningChar +\n    (xmlExtender + \"])*\");\nexports.xmlNcnameRe = new RegExp(\"^\" + exports.xmlNcname + \"$\");\n//  LocalWords:  MPL\n\n//# sourceMappingURL=xmlcharacters.js.map\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = __webpack_require__(1);\nvar namePatterns = __webpack_require__(2);\nvar name_resolver_1 = __webpack_require__(3);\nvar tools_1 = __webpack_require__(7);\nvar base_1 = __webpack_require__(0);\n/**\n * This is an exception raised to indicate references to undefined entities in a\n * schema. If for instance element A has element B as its children but B is not\n * defined, then this exception would be raised.\n *\n * This exception is indicative of an internal error because by the time this\n * module loads a schema, the schema should have been simplified already and\n * simplification should have failed due to the unresolvable reference.\n *\n * This class used to be named ``ReferenceError`` in previous versions of salve\n * but this name clashes with the built-in ``ReferenceError`` that JavaScript\n * engines have built into their runtime. The clash did not make the code fail\n * but it had unfortunate side-effects.\n */\nvar RefError = (function (_super) {\n    __extends(RefError, _super);\n    /**\n     * @param references The set of references that could not be resolved.\n     */\n    function RefError(references) {\n        var _this = _super.call(this) || this;\n        _this.references = references;\n        tools_1.fixPrototype(_this, RefError);\n        return _this;\n    }\n    /**\n     * @returns string representation of the error.\n     */\n    RefError.prototype.toString = function () {\n        return (\"Cannot resolve the following references: \" + this.references.join(\", \"));\n    };\n    return RefError;\n}(Error));\nexports.RefError = RefError;\n/**\n * Grammar object. Users of this library normally do not create objects\n * of this class themselves but rely on [[\"validate\".constructTree]].\n */\nvar Grammar = (function (_super) {\n    __extends(Grammar, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param start The start pattern of this grammar.\n     *\n     * @param definitions An array which contain all definitions specified in this\n     * grammar.\n     *\n     * @throws {RefError} When any definition in the original\n     * schema refers to a schema entity which is not defined in the schema.\n     */\n    function Grammar(xmlPath, start, definitions) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.xmlPath = xmlPath;\n        _this.start = start;\n        _this.definitions = Object.create(null);\n        _this._namespaces = Object.create(null);\n        if (definitions !== undefined) {\n            definitions.forEach(function (x) {\n                _this.add(x);\n            });\n        }\n        var missing = _this._resolve(_this.definitions);\n        if (missing !== undefined) {\n            throw new RefError(missing);\n        }\n        _this._prepare(_this._namespaces);\n        return _this;\n    }\n    /**\n     * Adds a definition.\n     *\n     * @param d The definition to add.\n     */\n    Grammar.prototype.add = function (d) {\n        this.definitions[d.name] = d;\n        if (d.name === \"start\") {\n            this.start = d;\n        }\n    };\n    /**\n     * Populates a memo with a mapping of (element name, [list of patterns]).  In\n     * a Relax NG schema, the same element name may appear in multiple contexts,\n     * with multiple contents. For instance an element named ``name`` could\n     * require the sequence of elements ``firstName, lastName`` in a certain\n     * context and text in a different context. This method allows determining\n     * whether this happens or not within a pattern.\n     *\n     * @param memo The memo in which to store the information.\n     */\n    Grammar.prototype._gatherElementDefinitions = function (memo) {\n        // tslint:disable-next-line:forin\n        for (var d in this.definitions) {\n            this.definitions[d]._gatherElementDefinitions(memo);\n        }\n    };\n    Object.defineProperty(Grammar.prototype, \"elementDefinitions\", {\n        get: function () {\n            var ret = this._elementDefinitions;\n            if (ret !== undefined) {\n                return ret;\n            }\n            var newDef = this._elementDefinitions = Object.create(null);\n            this._gatherElementDefinitions(newDef);\n            return newDef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @returns ``true`` if the schema is wholly context independent. This means\n     * that each element in the schema can be validated purely on the basis of\n     * knowing its expanded name. ``false`` otherwise.\n     */\n    Grammar.prototype.whollyContextIndependent = function () {\n        var defs = this.elementDefinitions;\n        for (var v in defs) {\n            if (defs[v].length > 1) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @returns An array of all namespaces used in the schema.  The array may\n     * contain two special values: ``*`` indicates that there was an ``anyName``\n     * element in the schema and thus that it is probably possible to insert more\n     * than the namespaces listed in the array, ``::except`` indicates that an\n     * ``except`` element is affecting what namespaces are acceptable to the\n     * schema.\n     */\n    Grammar.prototype.getNamespaces = function () {\n        return Object.keys(this._namespaces);\n    };\n    /**\n     * This method must be called after resolution has been performed.\n     *\n     * This function now performs two tasks: a) it prepares the attributes\n     * (Definition and Element objects maintain a pattern which contains only\n     * attribute patterns, and nothing else), b) it gathers all the namespaces\n     * seen in the schema.\n     *\n     * @param namespaces An object whose keys are the namespaces seen in the\n     * schema. This method populates the object.\n     */\n    Grammar.prototype._prepare = function (namespaces) {\n        this.start._prepare(namespaces);\n        // tslint:disable-next-line:forin\n        for (var d in this.definitions) {\n            this.definitions[d]._prepare(namespaces);\n        }\n    };\n    Grammar.prototype._resolve = function (definitions) {\n        var all = [];\n        var ret;\n        // tslint:disable-next-line forin\n        for (var d in definitions) {\n            ret = definitions[d]._resolve(definitions);\n            if (ret !== undefined) {\n                all = all.concat(ret);\n            }\n        }\n        ret = this.start._resolve(definitions);\n        if (ret !== undefined) {\n            all = all.concat(ret);\n        }\n        if (all.length !== 0) {\n            return all;\n        }\n        return undefined;\n    };\n    /**\n     * Creates a new walker to walk this pattern.\n     *\n     * @returns A walker.\n     */\n    Grammar.prototype.newWalker = function () {\n        // tslint:disable-next-line:no-use-before-declare\n        return GrammarWalker.makeWalker(this);\n    };\n    return Grammar;\n}(base_1.BasePattern));\nexports.Grammar = Grammar;\n/**\n * Walker for [[Grammar]].\n */\nvar GrammarWalker = (function (_super) {\n    __extends(GrammarWalker, _super);\n    function GrammarWalker(elOrWalker, memo) {\n        var _this = this;\n        if (elOrWalker instanceof GrammarWalker) {\n            var walker = elOrWalker;\n            memo = base_1.isHashMap(memo); // Checks for undefined.\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.subwalker = walker.subwalker._clone(memo);\n            var misplacedElements = _this._misplacedElements = [];\n            for (var _i = 0, _a = walker._misplacedElements; _i < _a.length; _i++) {\n                var mpe = _a[_i];\n                misplacedElements.push(mpe instanceof base_1.Walker ?\n                    mpe._clone(memo) :\n                    mpe.concat([]));\n            }\n            _this._swallowAttributeValue = walker._swallowAttributeValue;\n            _this.suspendedWs = walker.suspendedWs;\n            _this.ignoreNextWs = walker.ignoreNextWs;\n            _this._prevEvWasText = walker._prevEvWasText;\n        }\n        else {\n            var el = elOrWalker;\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = new name_resolver_1.NameResolver();\n            _this._misplacedElements = [];\n            _this._swallowAttributeValue = false;\n            _this.ignoreNextWs = false;\n            _this._prevEvWasText = false;\n            _this.subwalker = el.start.newWalker(_this.nameResolver);\n        }\n        return _this;\n    }\n    GrammarWalker.makeWalker = function (el) {\n        return new GrammarWalker(el);\n    };\n    /**\n     * Resolves a name using the walker's own name resolver.\n     *\n     * @param name A qualified name.\n     *\n     * @param attribute Whether this qualified name refers to an attribute.\n     *\n     * @returns An expanded name, or undefined if the name cannot be resolved.\n     */\n    GrammarWalker.prototype.resolveName = function (name, attribute) {\n        return this.nameResolver.resolveName(name, attribute);\n    };\n    /**\n     * See [[\"name_resolver\".NameResolver.unresolveName]].\n     *\n     * @param uri The URI part of the expanded name.\n     *\n     * @param name The name part.\n     *\n     * @returns The qualified name that corresponds to the expanded name, or\n     * ``undefined`` if it cannot be resolved.\n     */\n    GrammarWalker.prototype.unresolveName = function (uri, name) {\n        return this.nameResolver.unresolveName(uri, name);\n    };\n    /**\n     * On a [[GrammarWalker]] this method cannot return ``undefined``. An\n     * undefined value would mean nothing matched, which is a validation error.\n     *\n     * @param ev The event to fire.\n     *\n     * @returns ``false`` if there is no error or an array errors.\n     *\n     * @throws {Error} When name resolving events (``enterContext``,\n     * ``leaveContext``, or ``definePrefix``) are passed while this walker was not\n     * instructed to create its own name resolver or when trying to process an\n     * event type unknown to salve.\n     */\n    // tslint:disable-next-line: max-func-body-length\n    GrammarWalker.prototype.fireEvent = function (ev) {\n        var wsErr = false;\n        function combineWsErrWith(x) {\n            if (wsErr === undefined) {\n                wsErr = [new errors_1.ValidationError(\"text not allowed here\")];\n            }\n            if (wsErr === false) {\n                return x;\n            }\n            if (x === false) {\n                return wsErr;\n            }\n            if (x === undefined) {\n                throw new Error(\"undefined x\");\n            }\n            return wsErr.concat(x);\n        }\n        if (ev.params[0] === \"enterContext\" ||\n            ev.params[0] === \"leaveContext\" ||\n            ev.params[0] === \"definePrefix\") {\n            switch (ev.params[0]) {\n                case \"enterContext\":\n                    this.nameResolver.enterContext();\n                    break;\n                case \"leaveContext\":\n                    this.nameResolver.leaveContext();\n                    break;\n                case \"definePrefix\":\n                    this.nameResolver.definePrefix(ev.params[1], ev.params[2]);\n                    break;\n                default:\n                    throw new Error(\"unexpected event: \" + ev.params[0]);\n            }\n            return false;\n        }\n        // Process whitespace nodes\n        if (ev.params[0] === \"text\" && ev.params[1].trim() === \"\") {\n            if (this.suspendedWs !== undefined) {\n                this.suspendedWs += ev.params[1];\n            }\n            else {\n                this.suspendedWs = ev.params[1];\n            }\n            return false;\n        }\n        // This is the walker we must fire all our events on.\n        var walker = (this._misplacedElements.length > 0 &&\n            this._misplacedElements[0] instanceof base_1.Walker) ?\n            // This happens if we ran into a misplaced element that we were\n            // able to infer.\n            this._misplacedElements[0] : this.subwalker;\n        var ignoreNextWsNow = this.ignoreNextWs;\n        this.ignoreNextWs = false;\n        switch (ev.params[0]) {\n            case \"enterStartTag\":\n                // Absorb the whitespace: poof, gone!\n                this.suspendedWs = undefined;\n                break;\n            case \"text\":\n                if (this._prevEvWasText) {\n                    throw new Error(\"fired two text events in a row: this is \" +\n                        \"disallowed by salve\");\n                }\n                if (ignoreNextWsNow) {\n                    this.suspendedWs = undefined;\n                    var trimmed = ev.params[1].replace(/^\\s+/, \"\");\n                    if (trimmed.length !== ev.params[1].length) {\n                        ev = new base_1.Event(\"text\", trimmed);\n                    }\n                }\n                else if (this.suspendedWs !== undefined && this.suspendedWs !== \"\") {\n                    wsErr = walker.fireEvent(new base_1.Event(\"text\", this.suspendedWs));\n                    this.suspendedWs = undefined;\n                }\n                break;\n            case \"endTag\":\n                this.ignoreNextWs = true;\n            /* falls through */\n            default:\n                // Process the whitespace that was suspended.\n                if (this.suspendedWs !== undefined && this.suspendedWs !== \"\" &&\n                    !ignoreNextWsNow) {\n                    wsErr = walker.fireEvent(new base_1.Event(\"text\", this.suspendedWs));\n                }\n                this.suspendedWs = undefined;\n        }\n        // We can update it here because we're done examining the value that was\n        // set from the previous call to fireEvent.\n        this._prevEvWasText = (ev.params[0] === \"text\");\n        if (this._misplacedElements.length > 0 &&\n            this._misplacedElements[0] instanceof Array) {\n            // We are in a misplaced element which is foreign to the schema (or\n            // which cannot be inferred unambiguously.\n            var mpe = this._misplacedElements[0];\n            switch (ev.params[0]) {\n                case \"enterStartTag\":\n                    mpe.unshift(ev.params.slice(1));\n                    break;\n                case \"endTag\":\n                    mpe.shift();\n                    break;\n                default:\n                    // We don't care\n                    break;\n            }\n            // We're done with this context.\n            if (mpe.length === 0) {\n                this._misplacedElements.shift();\n            }\n            return false;\n        }\n        // This would happen if the user puts an attribute on a tag that does not\n        // allow one. Instead of generating errors for both the attribute name\n        // and value, we generate an error for the name and ignore the value.\n        if (this._swallowAttributeValue) {\n            // Swallow only one event.\n            this._swallowAttributeValue = false;\n            if (ev.params[0] === \"attributeValue\") {\n                return false;\n            }\n            return [new errors_1.ValidationError(\"attribute value required\")];\n        }\n        var ret = walker.fireEvent(ev);\n        if (ret === undefined) {\n            switch (ev.params[0]) {\n                case \"enterStartTag\":\n                    var name = new namePatterns.Name(\"\", ev.params[1], ev.params[2]);\n                    ret = [new errors_1.ElementNameError(\"tag not allowed here\", name)];\n                    // Try to infer what element is meant by this errant tag. If we can't\n                    // find a candidate, then fall back to a dumb mode.\n                    var candidates = this.el.elementDefinitions[name.toString()];\n                    if (candidates !== undefined && candidates.length === 1) {\n                        var newWalker = candidates[0].newWalker(this.nameResolver);\n                        this._misplacedElements.unshift(newWalker);\n                        if (newWalker.fireEvent(ev) !== false) {\n                            throw new Error(\"internal error: the inferred element \" +\n                                \"does not accept its initial event\");\n                        }\n                    }\n                    else {\n                        // Dumb mode...\n                        this._misplacedElements.unshift([ev.params.slice(1)]);\n                    }\n                    break;\n                case \"endTag\":\n                    ret = [new errors_1.ElementNameError(\"unexpected end tag\", new namePatterns.Name(\"\", ev.params[1], ev.params[2]))];\n                    break;\n                case \"attributeName\":\n                    ret = [new errors_1.AttributeNameError(\"attribute not allowed here\", new namePatterns.Name(\"\", ev.params[1], ev.params[2]))];\n                    this._swallowAttributeValue = true;\n                    break;\n                case \"attributeValue\":\n                    ret = [new errors_1.ValidationError(\"unexpected attributeValue event; it is likely \" +\n                            \"that fireEvent is incorrectly called\")];\n                    break;\n                case \"text\":\n                    ret = [new errors_1.ValidationError(\"text not allowed here\")];\n                    break;\n                case \"leaveStartTag\":\n                // If the _misplacedElements stack did not exist then we would get here\n                // if a file being validated contains a tag which is not allowed. An\n                // ElementNameError will already have been issued. So rather than\n                // violate our contract (which says no undefined value may be returned)\n                // or require that callers do something special with 'undefined' as a\n                // return value, just treat this event as a non-error.\n                //\n                // But the stack exists, so we cannot get here. If we do end up here,\n                // then there is an internal error somewhere.\n                /* falls through */\n                default:\n                    throw new Error(\"unexpected event type in GrammarWalker's fireEvent: \" + ev.params[0].toString());\n            }\n        }\n        // Check whether the context should end\n        if (this._misplacedElements.length > 0 &&\n            this._misplacedElements[0] instanceof base_1.Walker) {\n            walker = this._misplacedElements[0];\n            if (walker.canEnd()) {\n                this._misplacedElements.shift();\n                var endRet = walker.end();\n                if (endRet) {\n                    ret = ret ? ret.concat(endRet) : endRet;\n                }\n            }\n        }\n        return combineWsErrWith(ret);\n    };\n    GrammarWalker.prototype.possible = function () {\n        if (this._misplacedElements.length !== 0) {\n            var mpe = this._misplacedElements[0];\n            // Return an empty set if the tags are unknown to us.\n            return mpe instanceof base_1.Walker ? mpe.possible() : new base_1.EventSet();\n        }\n        // There's no point in calling this._possible.\n        return this.subwalker.possible();\n    };\n    GrammarWalker.prototype._suppressAttributes = function () {\n        throw new Error(\"_suppressAttributes cannot be called on a GrammarWalker\");\n    };\n    return GrammarWalker;\n}(base_1.SingleSubwalker));\nexports.GrammarWalker = GrammarWalker;\n// Nope, we're using a custom function.\n// addWalker(Grammar, GrammarWalker);\n//  LocalWords:  RNG's MPL unresolvable runtime RNG NG firstName enterContext\n//  LocalWords:  leaveContext definePrefix whitespace enterStartTag endTag\n//  LocalWords:  fireEvent attributeValue attributeName leaveStartTag addWalker\n//  LocalWords:  misplacedElements ElementNameError GrammarWalker's\n//  LocalWords:  suppressAttributes GrammarWalker\n\n//# sourceMappingURL=grammar.js.map\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Naive set implementation.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n * @private\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This is a naive implementation of sets. It stores all elements in an\n * array. All array manipulations are done by searching through the array from\n * start to hit. So when adding a new element to the ``NaiveSet`` for instance,\n * the add method will scan the whole array, find the element is not there and\n * then add the element at the end of the array. As naive as this implementation\n * is, it has been shown to be faster than [[\"hashstructs\".HashSet]] when used\n * in the context of this library.\n *\n * Note that ``NaiveSet`` cannot hold undefined values.\n */\n// tslint:disable: no-any no-reserved-keywords\nvar NaiveSet = (function () {\n    /**\n     * @param initial The value to initialize the set with. If a [[NaiveSet]],\n     * then the new ``NaiveSet`` will be a clone of the parameter. If an\n     * ``Array``, then the new ``NaiveSet`` will be initialized with the\n     * ``Array``. If something else, then the new ``NaiveSet`` will contain\n     * whatever value was passed.  The backing array that hold the values\n     * contained in the set.\n     */\n    function NaiveSet(initial) {\n        if (initial != null) {\n            if (initial instanceof NaiveSet) {\n                this.b = initial.b.concat([]);\n            }\n            else if (initial instanceof Array) {\n                this.b = [];\n                for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n                    var item = initial_1[_i];\n                    this.add(item);\n                }\n            }\n            else {\n                this.b = [initial];\n            }\n        }\n        else {\n            this.b = [];\n        }\n    }\n    /**\n     * Adds a value to the set.\n     *\n     * @param value The value to add.\n     */\n    NaiveSet.prototype.add = function (value) {\n        var t = this.b.indexOf(value);\n        if (t < 0) {\n            this.b.push(value);\n        }\n    };\n    /**\n     * Destructively adds the elements of another set to this set.\n     *\n     * @param s The set to add.\n     * @throws {Error} If ``s`` is not a ``NaiveSet`` object\n     */\n    NaiveSet.prototype.union = function (s) {\n        if (s == null) {\n            return;\n        }\n        if (!(s instanceof NaiveSet)) {\n            throw new Error(\"union with non-NaiveSet\");\n        }\n        var len = s.b.length;\n        for (var i = 0; i < len; ++i) {\n            this.add(s.b[i]);\n        }\n    };\n    /**\n     * Selects a subset of values.\n     *\n     * @param f A function that selects values.\n     *\n     * @returns An object of the same class as the object on which the method is\n     * called. This object contains only the value selected by the function.\n     */\n    NaiveSet.prototype.filter = function (f) {\n        var _this = this;\n        var ret = new this.constructor();\n        // The fat arrow is used to prevent a caller from accessing ``this.b``\n        // through the 3rd parameter that would be passed to ``f``.\n        ret.b = this.b.filter(function (value, index) { return f(value, index, _this); });\n        return ret;\n    };\n    /**\n     * This method works like Array.map but with a provision for eliminating\n     * elements from the resulting [[NaiveSet]].\n     *\n     * @param f This parameter plays the same role as for ``Array``'s ``map``\n     * method.  However, when it returns an undefined value, this return value is\n     * not added to the ``NaiveSet`` that will be returned.\n     *\n     * @returns The new set. This set is of the same class as the original set.\n     */\n    NaiveSet.prototype.map = function (f) {\n        var ret = new this.constructor();\n        for (var i = 0; i < this.b.length; ++i) {\n            var value = this.b[i];\n            var result = f(value, i, this);\n            // Undefined is not added.\n            if (result !== undefined) {\n                ret.add(result);\n            }\n        }\n        return ret;\n    };\n    /**\n     * Applies a function on each value stored in the set.\n     *\n     * @param f A function which accepts one parameter. The function will be\n     * called on each value.\n     */\n    NaiveSet.prototype.forEach = function (f) {\n        var _this = this;\n        this.b.forEach(function (value, index) {\n            f(value, index, _this);\n        });\n    };\n    /**\n     * Converts the set to a string.\n     *\n     * @returns All the values, joined with \", \".\n     */\n    NaiveSet.prototype.toString = function () {\n        return this.b.join(\", \");\n    };\n    /**\n     * @returns The number of values stored.\n     */\n    NaiveSet.prototype.size = function () {\n        return this.b.length;\n    };\n    /**\n     * Determines whether or not this set has the parameter passed.\n     *\n     * @param obj The object which we want to look for.\n     *\n     * @returns True if the object is present, false if not.\n     */\n    NaiveSet.prototype.has = function (obj) {\n        return this.b.indexOf(obj) >= 0;\n    };\n    /**\n     * Converts the object on which this method is called to an array.\n     *\n     * @returns An array that corresponds to the object.\n     */\n    NaiveSet.prototype.toArray = function () {\n        return this.b.slice();\n    };\n    return NaiveSet;\n}());\nexports.NaiveSet = NaiveSet;\n//  LocalWords:  param NaiveSet Mangalam MPL Dubeau HashSet hashstructs\n\n//# sourceMappingURL=set.js.map\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * This module contains data and utilities to work with the schema format that\n * salve uses natively.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar patterns = __webpack_require__(9);\nvar tools_1 = __webpack_require__(7);\nvar pro = patterns.__protected;\n//\n// MODIFICATIONS TO THIS TABLE MUST BE REFLECTED IN nameToConstructor\n//\nvar codeToConstructor = [\n    Array,\n    pro.Empty,\n    pro.Data,\n    pro.List,\n    pro.Param,\n    pro.Value,\n    pro.NotAllowed,\n    pro.Text,\n    pro.Ref,\n    pro.OneOrMore,\n    pro.Choice,\n    pro.Group,\n    pro.Attribute,\n    pro.Element,\n    pro.Define,\n    pro.Grammar,\n    pro.EName,\n    pro.Interleave,\n    pro.Name,\n    pro.NameChoice,\n    pro.NsName,\n    pro.AnyName,\n];\n//\n// MODIFICATIONS TO THIS TABLE MUST BE REFLECTED IN codeToConstructor\n//\nvar nameToConstructor = {\n    // Array = 0 is hard-coded elsewhere in the conversion code so don't change\n    // it.\n    0: Array,\n    Empty: pro.Empty,\n    1: pro.Empty,\n    Data: pro.Data,\n    2: pro.Data,\n    List: pro.List,\n    3: pro.List,\n    Param: pro.Param,\n    4: pro.Param,\n    Value: pro.Value,\n    5: pro.Value,\n    NotAllowed: pro.NotAllowed,\n    6: pro.NotAllowed,\n    Text: pro.Text,\n    7: pro.Text,\n    Ref: pro.Ref,\n    8: pro.Ref,\n    OneOrMore: pro.OneOrMore,\n    9: pro.OneOrMore,\n    Choice: pro.Choice,\n    10: pro.Choice,\n    Group: pro.Group,\n    11: pro.Group,\n    Attribute: pro.Attribute,\n    12: pro.Attribute,\n    Element: pro.Element,\n    13: pro.Element,\n    Define: pro.Define,\n    14: pro.Define,\n    Grammar: pro.Grammar,\n    15: pro.Grammar,\n    EName: pro.EName,\n    16: pro.EName,\n    Interleave: pro.Interleave,\n    17: pro.Interleave,\n    Name: pro.Name,\n    18: pro.Name,\n    NameChoice: pro.NameChoice,\n    19: pro.NameChoice,\n    NsName: pro.NsName,\n    20: pro.NsName,\n    AnyName: pro.AnyName,\n    21: pro.AnyName,\n};\n//\n// MODIFICATIONS TO THESE VARIABLES MUST BE REFLECTED IN rng-to-js.xsl\n//\n// This is a bit field\nvar OPTION_NO_PATHS = 1;\n// var OPTION_WHATEVER = 2;\n// var OPTION_WHATEVER_PLUS_1 = 4;\n// etc...\nvar OldFormatError = (function (_super) {\n    __extends(OldFormatError, _super);\n    function OldFormatError() {\n        var _this = _super.call(this, \"your schema file must be recreated with a newer \" +\n            \"version of salve-convert\") || this;\n        tools_1.fixPrototype(_this, OldFormatError);\n        return _this;\n    }\n    return OldFormatError;\n}(Error));\n/**\n * A class for walking the JSON object representing a schema.\n */\nvar V2JSONWalker = (function () {\n    /**\n     *\n     * @param options The options object from the file that contains the\n     * schema.\n     */\n    function V2JSONWalker(options) {\n        this.options = options;\n    }\n    /**\n     * Walks a V2 representation of a JavaScript object.\n     *\n     * @param array The array representing the object.\n     *\n     * @throws {Error} If the object is malformed.\n     *\n     * @returns The return value of [[V2JSONWalker._processObject]].\n     */\n    V2JSONWalker.prototype.walkObject = function (array) {\n        var kind = array[0];\n        var ctor = codeToConstructor[kind];\n        if (ctor === undefined) {\n            if (array.length < 1) {\n                throw new Error(\"array too small to contain object\");\n            }\n            throw new Error(\"undefined type: \" + kind);\n        }\n        if (ctor === Array) {\n            throw new Error(\"trying to build array with _constructObjectV2\");\n        }\n        var addPath = \n        // tslint:disable-next-line:no-bitwise\n        ((this.options & OPTION_NO_PATHS) !== 0) && ctor !== pro.EName;\n        var args;\n        if (array.length > 1) {\n            args = array.slice(1);\n            if (addPath) {\n                args.unshift(0, \"\");\n            }\n            else {\n                args.unshift(0);\n            }\n            this._transformArray(args);\n        }\n        else if (addPath) {\n            args = [\"\"];\n        }\n        else {\n            args = [];\n        }\n        return this._processObject(ctor, args);\n    };\n    /**\n     * Processes an object. Derived classes will want to override this method to\n     * perform their work.\n     *\n     * @param ctor The object's constructor.\n     *\n     * @param args The arguments that should be passed to the constructor.\n     *\n     * @returns If the ``V2JSONWalker`` instance is meant to convert the JSON\n     * data, then this method should return an Object. If the ``V2JSONWalker``\n     * instance is meant to check the JSON data, then it should return\n     * ``undefined``.\n     */\n    V2JSONWalker.prototype._processObject = function (ctor, args) {\n        return undefined; // Do nothing\n    };\n    V2JSONWalker.prototype._transformArray = function (arr) {\n        if (arr[0] !== 0) {\n            throw new Error(\"array type not 0, but \" + arr[0] + \" for array \" + arr);\n        }\n        arr.splice(0, 1);\n        var limit = arr.length;\n        for (var elIx = 0; elIx < limit; elIx++) {\n            var el = arr[elIx];\n            if (el instanceof Array) {\n                if (el[0] !== 0) {\n                    arr[elIx] = this.walkObject(el);\n                }\n                else {\n                    this._transformArray(el);\n                }\n            }\n        }\n    };\n    return V2JSONWalker;\n}());\nexports.V2JSONWalker = V2JSONWalker;\n/**\n * A JSON walker that constructs a pattern tree as it walks the JSON object.\n *\n * @private\n */\nvar V2Constructor = (function (_super) {\n    __extends(V2Constructor, _super);\n    function V2Constructor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    V2Constructor.prototype._processObject = function (ctor, args) {\n        if (ctor === pro.Data && args.length >= 4) {\n            // Parameters are represented as an array of strings in the file.\n            // Transform this array of strings into an array of objects.\n            var params = args[3];\n            if (params.length % 2 !== 0) {\n                throw new Error(\"parameter array length not a multiple of 2\");\n            }\n            // tslint:disable-next-line: prefer-array-literal\n            var newParams = new Array(params.length / 2);\n            var limit = params.length;\n            for (var i = 0; i < limit; i += 2) {\n                newParams[i / 2] = { name: params[i], value: params[i + 1] };\n            }\n            args[3] = newParams;\n        }\n        else if (ctor === pro.OneOrMore) {\n            //\n            // In the file we have two arguments:\n            //\n            // * the XML path.\n            // * An array of length 1 that contains the one subpattern.\n            //\n            // Here we ditch the array and replace it with its lone subpattern.\n            //\n            if (args[1].length !== 1) {\n                throw new Error(\"OneOrMore with an array of patterns that \" +\n                    \"contains other than 1 pattern\");\n            }\n            args = [args[0], args[1][0]];\n        }\n        else if (ctor === pro.Attribute ||\n            ctor === pro.Element ||\n            ctor === pro.Define) {\n            // Same thing as above, but for these elements the array of patterns is at\n            // index 2 rather than index 1.\n            if (args[2].length !== 1) {\n                throw new Error(\"PatternOnePattern with an array of patterns that \" +\n                    \"contains other than 1 pattern\");\n            }\n            args = [args[0], args[1], args[2][0]];\n        }\n        else if (ctor === pro.Choice ||\n            ctor === pro.Group ||\n            ctor === pro.Interleave) {\n            if (args[1].length !== 2) {\n                throw new Error(\"PatternTwoPatterns with an array of patterns that \" +\n                    \"contains other than 2 pattern\");\n            }\n            args = [args[0], args[1][0], args[1][1]];\n        }\n        var newObj = Object.create(ctor.prototype);\n        var ctorRet = ctor.apply(newObj, args);\n        // Some constructors return a value; make sure to use it!\n        return ctorRet !== undefined ? ctorRet : newObj;\n    };\n    return V2Constructor;\n}(V2JSONWalker));\n/**\n * Constructs a tree of patterns from the data structure produced by running\n * ``salve-convert`` on an RNG file.\n *\n * @param code The JSON representation (a string) or the deserialized JSON. **If\n * you pass an object, it will be mutated while producing the result.** So you\n * cannot pass the same object twice to this function. Note that if you are\n * calling ``constructTree`` on the same input repeatedly, you are probably\n * \"doing it wrong\". You should be caching the results rather than building\n * multiple identical trees.\n *\n * @throws {Error} When the version of the data is not supported.\n *\n * @returns The tree.\n */\nfunction constructTree(code) {\n    var parsed = (typeof code === \"string\" ? JSON.parse(code) : code);\n    if (typeof parsed === \"object\" && parsed.v === undefined) {\n        throw new OldFormatError(); // version 0\n    }\n    var version = parsed.v, options = parsed.o, data = parsed.d;\n    if (version === 3) {\n        return new V2Constructor(options).walkObject(data);\n    }\n    throw new Error(\"unknown version: \" + version);\n}\nexports.constructTree = constructTree;\n//\n// Exports which are meant for other modules internal to salve.\n//\n// DO NOT USE THIS OUTSIDE SALVE! THIS EXPORT MAY CHANGE AT ANY TIME!\n// YOU'VE BEEN WARNED!\n//\n// tslint:disable-next-line:variable-name\nexports.__protected = {\n    V2JSONWalker: V2JSONWalker,\n    nameToConstructor: nameToConstructor,\n    OPTION_NO_PATHS: OPTION_NO_PATHS,\n};\n//  LocalWords:  deserialized PatternTwoPatterns PatternOnePattern OneOrMore js\n//  LocalWords:  codeToConstructor nameToConstructor RNG subpattern JSON xsl\n//  LocalWords:  rng MPL\n\n//# sourceMappingURL=formats.js.map\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Implementation of the builtin Relax NG datatype library.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = __webpack_require__(5);\n/**\n * Strips leading and trailing space. Normalize all internal spaces to a single\n * space.\n *\n * @private\n *\n * @param value The value whose space we want to normalize.\n *\n * @returns The normalized value.\n */\nfunction normalizeSpace(value) {\n    return value.trim().replace(/\\s{2,}/g, \" \");\n}\n//\n// TypeScript does not automatically treat unimplemented interface bits as\n// abstract. :-(\n//\n// See https://github.com/Microsoft/TypeScript/issues/4670\n//\nvar Base = (function () {\n    function Base() {\n    }\n    Base.prototype.parseParams = function (location, params) {\n        if (params !== undefined && params.length > 0) {\n            throw new errors_1.ParameterParsingError(location, [new errors_1.ParamError(\"this type does not accept parameters\")]);\n        }\n    };\n    Base.prototype.parseValue = function (value) {\n        var errors = this.disallows(value);\n        if (errors instanceof Array && errors.length !== 0) {\n            throw new errors_1.ValueValidationError(errors);\n        }\n        return { value: value };\n    };\n    return Base;\n}());\nvar StringT = (function (_super) {\n    __extends(StringT, _super);\n    function StringT() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.regexp = /.*/;\n        _this.needsContext = false;\n        return _this;\n    }\n    StringT.prototype.equal = function (value, schemaValue) {\n        if (schemaValue.value === undefined) {\n            throw Error(\"it looks like you are trying to use an unparsed value\");\n        }\n        return value === schemaValue.value;\n    };\n    StringT.prototype.disallows = function (value) {\n        return false;\n    };\n    return StringT;\n}(Base));\nvar stringT = new StringT();\nvar Token = (function (_super) {\n    __extends(Token, _super);\n    function Token() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"token\";\n        _this.needsContext = false;\n        _this.regexp = /.*/;\n        return _this;\n    }\n    Token.prototype.equal = function (value, schemaValue) {\n        if (schemaValue.value === undefined) {\n            throw Error(\"it looks like you are trying to use an unparsed value\");\n        }\n        return normalizeSpace(value) === normalizeSpace(schemaValue.value);\n    };\n    Token.prototype.disallows = function (value) {\n        // Yep, token allows anything, just like string.\n        return false;\n    };\n    return Token;\n}(Base));\nvar token = new Token();\n/**\n * The builtin datatype library.\n */\nexports.builtin = {\n    uri: \"\",\n    types: {\n        string: stringT,\n        token: token,\n    },\n};\n//  LocalWords:  NG MPL unparsed\n\n//# sourceMappingURL=builtin.js.map\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module, process) {/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,8],$V1=[1,10],$V2=[1,13],$V3=[1,19],$V4=[1,20],$V5=[1,14],$V6=[1,15],$V7=[1,16],$V8=[1,17],$V9=[5,23],$Va=[5,8,20,22,23,26,30,31,42,43,44,45],$Vb=[5,8,12,13,14,15,20,22,23,26,30,31,42,43,44,45],$Vc=[5,8,12,13,14,15,20,22,23,26,29,30,31,36,38,40,41,42,43,44,45],$Vd=[1,37],$Ve=[1,39],$Vf=[1,40],$Vg=[38,40,41,42,43,44,45],$Vh=[29,36,38,40,41,42,43,44,45];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"input\":4,\"EOF\":5,\"regexp\":6,\"branch\":7,\"|\":8,\"piece\":9,\"atom\":10,\"quantifier\":11,\"?\":12,\"*\":13,\"+\":14,\"{\":15,\"quantity\":16,\"}\":17,\"NUMBER\":18,\",\":19,\"CHAR\":20,\"charClass\":21,\"(\":22,\")\":23,\"charClassEsc\":24,\"charClassExpr\":25,\"WILDCARDESC\":26,\"charClassExprStart\":27,\"charGroup\":28,\"]\":29,\"[\":30,\"[^\":31,\"posCharGroups\":32,\"charClassSub\":33,\"posCharGroup\":34,\"charRange\":35,\"CLASSSUBTRACTION\":36,\"seRange\":37,\"-\":38,\"charOrEsc\":39,\"XMLCHAR\":40,\"SingleCharEsc\":41,\"SINGLECHARESC\":42,\"MULTICHARESC\":43,\"CATESC\":44,\"COMPLESC\":45,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",8:\"|\",12:\"?\",13:\"*\",14:\"+\",15:\"{\",17:\"}\",18:\"NUMBER\",19:\",\",20:\"CHAR\",22:\"(\",23:\")\",26:\"WILDCARDESC\",29:\"]\",30:\"[\",31:\"[^\",36:\"CLASSSUBTRACTION\",38:\"-\",40:\"XMLCHAR\",41:\"SingleCharEsc\",42:\"SINGLECHARESC\",43:\"MULTICHARESC\",44:\"CATESC\",45:\"COMPLESC\"},\nproductions_: [0,[3,1],[4,1],[4,2],[6,1],[6,3],[7,1],[7,2],[9,1],[9,2],[11,1],[11,1],[11,1],[11,3],[16,1],[16,3],[16,2],[10,1],[10,1],[10,3],[21,1],[21,1],[21,1],[25,3],[27,1],[27,1],[28,1],[28,1],[32,1],[32,2],[34,1],[34,1],[33,3],[35,1],[35,1],[37,3],[37,1],[39,1],[39,1],[24,1],[24,1],[24,1],[24,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */, outputType) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n      // Overwrite the parseError method with our own. NOTE: Our own\n      // method does not allow recovering from recoverable parsing\n      // errors.\n      this.parseError = parseError;\n      outputType = outputType || \"re\";\n      switch(outputType) {\n      case \"string\":\n        return $$[$0];\n      case \"re\":\n        var constructor = (needsXRegExpRe.test($$[$0]) ? XRegExp : RegExp);\n        return new constructor($$[$0]);\n      default:\n        throw new Error(\"unsupported output type: \" + outputType);\n      }\n    \nbreak;\ncase 2:\nthis.$ = '^$';\nbreak;\ncase 3:\nthis.$ = '^' + $$[$0-1] + '$';\nbreak;\ncase 5: case 13: case 35:\nthis.$ = $$[$0-2].concat($$[$0-1], $$[$0]);\nbreak;\ncase 7: case 9: case 29:\nthis.$ = $$[$0-1] + $$[$0];\nbreak;\ncase 15:\nthis.$ = $$[$0-2].concat(',', $$[$0]);\nbreak;\ncase 16:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 19:\nthis.$ = '(?:' + $$[$0-1] + $$[$0];\nbreak;\ncase 23:\n\n      var state = groupState.shift();\n      var capturedMultiChar = state.capturedMultiChar;\n\n      var subtraction = state.subtraction ?\n            (\"(?!\" +  state.subtraction + \")\") : \"\";\n      if (capturedMultiChar.length !== 0) {\n        var out = [\"(?:\", subtraction];\n        if (state.negative) {\n          out.push(\"(?=[\");\n          for (var i = 0; i < capturedMultiChar.length; ++i) {\n            out.push(multiCharEscapesInGroup[capturedMultiChar[i]].slice(1));\n          }\n          out.push(\"])\");\n        }\n        else {\n          for (var i = 0; i < capturedMultiChar.length; ++i) {\n            out.push(\"[\", multiCharEscapesInGroup[capturedMultiChar[i]], \"]|\");\n          }\n        }\n        out.push($$[$0-2], $$[$0-1], $$[$0], \")\");\n        this.$ = out.join(\"\");\n      }\n      else {\n        this.$ = (subtraction !== \"\") ?\n          \"(?:\" + subtraction + $$[$0-2].concat($$[$0-1], $$[$0]) + \")\":\n          $$[$0-2].concat($$[$0-1], $$[$0]);\n      }\n    \nbreak;\ncase 24:\n\n      unshiftGroupState(false);\n      this.$ = $$[$0];\n    \nbreak;\ncase 25:\n\n      unshiftGroupState(true);\n      this.$ = $$[$0];\n    \nbreak;\ncase 32:\n\n      this.$ = $$[$0-2];\n      groupState[0].subtraction = $$[$0];\n    \nbreak;\ncase 40:\n\n      if (groupState.length) {\n        var repl = multiCharEscapesInGroup[$$[$0]]\n        if (repl.charAt(0) === \"^\") {\n          groupState[0].capturedMultiChar.push($$[$0]);\n          this.$ = \"\";\n        }\n        else {\n          this.$ = repl;\n        }\n      }\n      else {\n        this.$ = multiCharEscapes[$$[$0]]\n      }\n    \nbreak;\n}\n},\ntable: [{3:1,4:2,5:[1,3],6:4,7:5,9:6,10:7,20:$V0,21:9,22:$V1,24:11,25:12,26:$V2,27:18,30:$V3,31:$V4,42:$V5,43:$V6,44:$V7,45:$V8},{1:[3]},{1:[2,1]},{1:[2,2]},{5:[1,21]},o($V9,[2,4],{10:7,21:9,24:11,25:12,27:18,9:23,8:[1,22],20:$V0,22:$V1,26:$V2,30:$V3,31:$V4,42:$V5,43:$V6,44:$V7,45:$V8}),o($Va,[2,6]),o($Va,[2,8],{11:24,12:[1,25],13:[1,26],14:[1,27],15:[1,28]}),o($Vb,[2,17]),o($Vb,[2,18]),{6:29,7:5,9:6,10:7,20:$V0,21:9,22:$V1,24:11,25:12,26:$V2,27:18,30:$V3,31:$V4,42:$V5,43:$V6,44:$V7,45:$V8},o($Vb,[2,20]),o($Vb,[2,21]),o($Vb,[2,22]),o($Vc,[2,39]),o($Vc,[2,40]),o($Vc,[2,41]),o($Vc,[2,42]),{24:34,28:30,32:31,33:32,34:33,35:35,37:36,38:$Vd,39:38,40:$Ve,41:$Vf,42:$V5,43:$V6,44:$V7,45:$V8},o($Vg,[2,24]),o($Vg,[2,25]),{1:[2,3]},{6:41,7:5,9:6,10:7,20:$V0,21:9,22:$V1,24:11,25:12,26:$V2,27:18,30:$V3,31:$V4,42:$V5,43:$V6,44:$V7,45:$V8},o($Va,[2,7]),o($Va,[2,9]),o($Va,[2,10]),o($Va,[2,11]),o($Va,[2,12]),{16:42,18:[1,43]},{23:[1,44]},{29:[1,45]},{24:34,29:[2,26],34:46,35:35,36:[1,47],37:36,38:$Vd,39:38,40:$Ve,41:$Vf,42:$V5,43:$V6,44:$V7,45:$V8},{29:[2,27]},o($Vh,[2,28]),o($Vh,[2,30]),o($Vh,[2,31]),o($Vh,[2,33]),o($Vh,[2,34]),o([29,36,40,41,42,43,44,45],[2,36],{38:[1,48]}),o($Vh,[2,37]),o($Vh,[2,38]),o($V9,[2,5]),{17:[1,49]},{17:[2,14],19:[1,50]},o($Vb,[2,19]),o([5,8,12,13,14,15,20,22,23,26,29,30,31,42,43,44,45],[2,23]),o($Vh,[2,29]),{25:51,27:18,30:$V3,31:$V4},{39:52,40:$Ve,41:$Vf},o($Va,[2,13]),{17:[2,16],18:[1,53]},{29:[2,32]},o($Vh,[2,35]),{17:[2,15]}],\ndefaultActions: {2:[2,1],3:[2,2],21:[2,3],32:[2,27],51:[2,32],53:[2,15]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\nvar xmlcharacters = __webpack_require__(11);\nvar XRegExp = __webpack_require__(41);\n\n// We use the name ``Salve`` to help avoid potential\n// clashes. ``ParsingError`` seems too risky.\nfunction SalveParsingError(msg) {\n  // This is crap to work around the fact that Error is a terribly\n  // designed class or prototype or whatever. Unfortunately the\n  // stack trace contains an extra frame.\n  var err = new Error(msg);\n  this.name = \"SalveParsingError\";\n  this.stack = err.stack;\n  this.message = err.message;\n}\n\nSalveParsingError.prototype = new Error();\n\n// This will serve as a replacement for the default parseError method on\n// the parser.\nfunction parseError(str, hash) {\n  throw new SalveParsingError(str);\n}\n\n// Export this error.\nif (true) {\n  exports.SalveParsingError = SalveParsingError;\n}\nelse {\n  parser.SalveParsingError = SalveParsingError;\n}\n\n\nvar xmlNameChar = xmlcharacters.xmlNameChar;\nvar xmlLetter = xmlcharacters.xmlLetter;\n\n// Maintain a group state.\nvar groupState = [];\nvar needsXRegExpRe = /\\\\p/i;\n\nfunction unshiftGroupState(negative) {\n  groupState.unshift({\n    negative: negative,\n    capturedMultiChar: [],\n  });\n}\n\nvar multiCharEscapesInGroup = {\n    \"\\\\s\": \" \\\\t\\\\n\\\\r\",\n    \"\\\\S\": \"^ \\\\t\\\\n\\\\r\",\n    \"\\\\i\": \"\" + xmlLetter + \"_:\",\n    \"\\\\I\": \"^\" + xmlLetter + \"_:\",\n    \"\\\\c\": \"\" + xmlNameChar,\n    \"\\\\C\": \"^\" + xmlNameChar,\n    \"\\\\d\": \"\\\\p{Nd}\",\n    \"\\\\D\": \"^\\\\p{Nd}\",\n    \"\\\\w\": \"^\\\\p{P}\\\\p{Z}\\\\p{C}\",\n    \"\\\\W\": \"\\\\p{P}\\\\p{Z}\\\\p{C}\"\n};\n\nvar multiCharEscapes = [];\nfor(var i in multiCharEscapesInGroup) {\n  if (!multiCharEscapesInGroup.hasOwnProperty(i)) {\n    continue;\n  }\n  multiCharEscapes[i] = \"[\" + multiCharEscapesInGroup[i] + \"]\";\n}\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 18;\nbreak;\ncase 1:return 19;\nbreak;\ncase 2:this.popState(); return 17;\nbreak;\ncase 3:this.begin('CHARCLASS'); return 31;\nbreak;\ncase 4:this.begin('CHARCLASS'); return 30;\nbreak;\ncase 5:return 42;\nbreak;\ncase 6:return 43;\nbreak;\ncase 7:return 36;\nbreak;\ncase 8:return 38;\nbreak;\ncase 9:return 40;\nbreak;\ncase 10:this.popState(); return 29;\nbreak;\ncase 11:return 22;\nbreak;\ncase 12:return 8;\nbreak;\ncase 13:return 23;\nbreak;\ncase 14:return 13;\nbreak;\ncase 15:return 14;\nbreak;\ncase 16:return 12;\nbreak;\ncase 17:this.begin('QUANTITY'); return 15;\nbreak;\ncase 18:return 17;\nbreak;\ncase 19:return 29;\nbreak;\ncase 20:return '^';\nbreak;\ncase 21:return 44;\nbreak;\ncase 22:return 45;\nbreak;\ncase 23:return 26;\nbreak;\ncase 24:return 5;\nbreak;\ncase 25:return 20;\nbreak;\n}\n},\nrules: [/^(?:[0-9])/,/^(?:,)/,/^(?:\\})/,/^(?:\\[\\^)/,/^(?:\\[)/,/^(?:\\\\[-nrt\\|.?*+(){}[\\]^])/,/^(?:\\\\[sSiIcCdDwW])/,/^(?:-(?=\\[))/,/^(?:-)/,/^(?:[^-[\\]])/,/^(?:\\])/,/^(?:\\()/,/^(?:\\|)/,/^(?:\\))/,/^(?:\\*)/,/^(?:\\+)/,/^(?:\\?)/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\])/,/^(?:\\^)/,/^(?:\\\\p\\{.*?\\})/,/^(?:\\\\P\\{.*?\\})/,/^(?:\\.)/,/^(?:$)/,/^(?:[^\\\\])/],\nconditions: {\"CHARCLASS\":{\"rules\":[3,4,5,6,7,8,9,10],\"inclusive\":false},\"QUANTITY\":{\"rules\":[0,1,2],\"inclusive\":false},\"INITIAL\":{\"rules\":[3,4,5,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (true) {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function main() {\n      throw new Error(\"this module cannot be used as main\");\n    };\nif (typeof module !== 'undefined' && __webpack_require__.c[__webpack_require__.s] === module) {\n  exports.main(process.argv.slice(1));\n}\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(33)(module), __webpack_require__(32)))\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Implementation of the XMLSchema datatypes.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = __webpack_require__(5);\nvar regexp = __webpack_require__(16);\nvar xmlcharacters_1 = __webpack_require__(11);\n// tslint:disable: no-reserved-keywords\n/**\n * @private\n */\nvar WhitespaceHandling;\n(function (WhitespaceHandling) {\n    /**\n     * Preserve the whitespace\n     */\n    WhitespaceHandling[WhitespaceHandling[\"PRESERVE\"] = 1] = \"PRESERVE\";\n    /**\n     * Replace all instances of whitespace by spaces.\n     */\n    WhitespaceHandling[WhitespaceHandling[\"REPLACE\"] = 2] = \"REPLACE\";\n    /**\n     * Replace all instances of whitespace by spaces, collapse consecutive\n     * spaces, and remove leading and trailing spaces.\n     */\n    WhitespaceHandling[WhitespaceHandling[\"COLLAPSE\"] = 3] = \"COLLAPSE\";\n})(WhitespaceHandling || (WhitespaceHandling = {}));\n/**\n * Check whether a parameter is an integer.\n *\n * @param value The parameter value.\n *\n * @param name The name of the parameter.\n *\n * @return ``false`` if there is no error. Otherwise it returns a [[ParamError]]\n * that records the error.\n *\n * @private\n */\nfunction failIfNotInteger(value, name) {\n    if (value.search(/^\\d+$/) !== -1) {\n        return false;\n    }\n    return new errors_1.ParamError(name + \" must have an integer value\");\n}\n/**\n * Check whether a parameter is a non-negative integer.\n *\n * @param value The parameter value.\n *\n * @param name The name of the parameter.\n *\n * @return ``false`` if there is no error. Otherwise it returns a [[ParamError]]\n * that records the error.\n *\n * @private\n */\nfunction failIfNotNonNegativeInteger(value, name) {\n    if (!failIfNotInteger(value, name) && Number(value) >= 0) {\n        return false;\n    }\n    return new errors_1.ParamError(name + \" must have a non-negative integer value\");\n}\n/**\n * Check whether a parameter is a positive integer.\n *\n * @param value The parameter value.\n *\n * @param name The name of the parameter.\n *\n * @return ``false`` if there is no error. Otherwise it returns a [[ParamError]]\n * that records the error.\n *\n * @private\n */\nfunction failIfNotPositiveInteger(value, name) {\n    if (!failIfNotInteger(value, name) && Number(value) > 0) {\n        return false;\n    }\n    return new errors_1.ParamError(name + \" must have a positive value\");\n}\n/**\n * Convert a number to an internal representation. This takes care of the\n * differences between JavaScript and XML Schema (e.g. \"Infinity\" vs \"INF\").\n *\n * @param value The value as expressed in an XML file or schema.\n *\n * @returns The number, in its internal representation.\n */\nfunction convertToInternalNumber(value) {\n    if (value === \"INF\") {\n        return Infinity;\n    }\n    if (value === \"-INF\") {\n        return -Infinity;\n    }\n    return Number(value);\n}\n/**\n * Convert an internal representation of a number to a string. This takes care\n * of the differences between JavaScript and XML Schema. For instance, a value\n * of ``Infinity`` will be represented as the string ``\"INF\"``.\n *\n * @param number The internal representation.\n *\n * @returns The string representation.\n */\nfunction convertInternalNumberToString(value) {\n    if (value === Infinity) {\n        return \"INF\";\n    }\n    if (value === -Infinity) {\n        return \"-INF\";\n    }\n    return value.toString();\n}\n//\n// The parameters\n//\n/**\n * A parameter used for XML\n * Schema type processing.\n */\nvar Parameter = (function () {\n    function Parameter() {\n        /**\n         * Whether the parameter can appear more than once on the same type.\n         */\n        this.repeatable = false;\n    }\n    /**\n     * Combine multiple values from the schema into an internal value. This method\n     * may be called only for parameters that are repeatable.\n     *\n     * @param values The values to combine\n     *\n     * @returns An array of internal values.\n     */\n    Parameter.prototype.combine = function (values) {\n        if (!this.repeatable) {\n            throw new Error(\"this parameter is not repeatable\");\n        }\n        throw new Error(\"derived classes must implement this method \" +\n            \"if they are repeatable\");\n    };\n    return Parameter;\n}());\nvar NumericParameter = (function (_super) {\n    __extends(NumericParameter, _super);\n    function NumericParameter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumericParameter.prototype.convert = function (value) {\n        return convertToInternalNumber(value);\n    };\n    return NumericParameter;\n}(Parameter));\nvar NonNegativeIntegerParameter = (function (_super) {\n    __extends(NonNegativeIntegerParameter, _super);\n    function NonNegativeIntegerParameter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NonNegativeIntegerParameter.prototype.isInvalidParam = function (value, name) {\n        return failIfNotNonNegativeInteger(value, name);\n    };\n    return NonNegativeIntegerParameter;\n}(NumericParameter));\nvar LengthP = (function (_super) {\n    __extends(LengthP, _super);\n    function LengthP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"length\";\n        return _this;\n    }\n    LengthP.prototype.isInvalidValue = function (value, param, type) {\n        if (type.valueLength(value) === param) {\n            return false;\n        }\n        return new errors_1.ValueError(\"length of value should be \" + param);\n    };\n    return LengthP;\n}(NonNegativeIntegerParameter));\nvar lengthP = new LengthP();\nvar MinLengthP = (function (_super) {\n    __extends(MinLengthP, _super);\n    function MinLengthP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"minLength\";\n        return _this;\n    }\n    MinLengthP.prototype.isInvalidValue = function (value, param, type) {\n        if (type.valueLength(value) >= param) {\n            return false;\n        }\n        return new errors_1.ValueError(\"length of value should be greater than \" +\n            (\"or equal to \" + param));\n    };\n    return MinLengthP;\n}(NonNegativeIntegerParameter));\nvar minLengthP = new MinLengthP();\nvar MaxLengthP = (function (_super) {\n    __extends(MaxLengthP, _super);\n    function MaxLengthP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"maxLength\";\n        return _this;\n    }\n    MaxLengthP.prototype.isInvalidValue = function (value, param, type) {\n        if (type.valueLength(value) <= param) {\n            return false;\n        }\n        return new errors_1.ValueError(\"length of value should be less than \" +\n            (\"or equal to \" + param));\n    };\n    return MaxLengthP;\n}(NonNegativeIntegerParameter));\nvar maxLengthP = new MaxLengthP();\n//\n// pattern is special. It converts the param value found in the RNG file into an\n// object with two fields: ``rng`` and ``internal``. RNG is the string value\n// from the RNG file, and ``internal`` is a representation internal to salve. We\n// use ``internal`` for performing the validation but present ``rng`` to the\n// user. Note that if pattern appears multiple times as a parameter, the two\n// values are the result of the concatenation of all the instance of the pattern\n// parameter. (Why this? Because it would be confusing to show the internal\n// value in error messages to the user.)\n//\n/**\n * A mapping of raw schema values to the corresponding [[RegExp]] object.\n */\nvar reCache = Object.create(null);\nvar PatternP = (function (_super) {\n    __extends(PatternP, _super);\n    function PatternP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"pattern\";\n        _this.repeatable = true;\n        return _this;\n    }\n    PatternP.prototype.convert = function (value) {\n        var internal = reCache[value];\n        if (internal === undefined) {\n            internal = reCache[value] = regexp.parse(value);\n        }\n        return {\n            rng: value,\n            internal: internal,\n        };\n    };\n    PatternP.prototype.combine = function (values) {\n        return values.map(this.convert);\n    };\n    PatternP.prototype.isInvalidParam = function (value) {\n        try {\n            this.convert(value);\n        }\n        catch (ex) {\n            // Convert the error into something that makes sense for salve.\n            if (ex instanceof regexp.SalveParsingError) {\n                return new errors_1.ParamError(ex.message);\n            }\n            // Rethrow\n            throw ex;\n        }\n        return false;\n    };\n    PatternP.prototype.isInvalidValue = function (value, param) {\n        if (param instanceof Array) {\n            var failedOn = void 0;\n            for (var _i = 0, param_1 = param; _i < param_1.length; _i++) {\n                var p = param_1[_i];\n                if (!p.internal.test(value)) {\n                    failedOn = p;\n                    break;\n                }\n            }\n            if (failedOn === undefined) {\n                return false;\n            }\n            return new errors_1.ValueError(\"value does not match the pattern \" + failedOn.rng);\n        }\n        if (param.internal.test(value)) {\n            return false;\n        }\n        return new errors_1.ValueError(\"value does not match the pattern \" + param.rng);\n    };\n    return PatternP;\n}(Parameter));\nvar patternP = new PatternP();\nvar TotalDigitsP = (function (_super) {\n    __extends(TotalDigitsP, _super);\n    function TotalDigitsP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"totalDigits\";\n        return _this;\n    }\n    TotalDigitsP.prototype.isInvalidParam = function (value, name) {\n        return failIfNotPositiveInteger(value, name);\n    };\n    TotalDigitsP.prototype.isInvalidValue = function (value, param) {\n        var str = String(Number(value)).replace(/[-+.]/g, \"\");\n        if (str.length > param) {\n            return new errors_1.ValueError(\"value must have at most \" + param + \" digits\");\n        }\n        return false;\n    };\n    return TotalDigitsP;\n}(NumericParameter));\nvar totalDigitsP = new TotalDigitsP();\nvar FractionDigitsP = (function (_super) {\n    __extends(FractionDigitsP, _super);\n    function FractionDigitsP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"fractionDigits\";\n        return _this;\n    }\n    FractionDigitsP.prototype.isInvalidValue = function (value, param) {\n        var str = String(Number(value)).replace(/^.*\\./, \"\");\n        if (str.length > param) {\n            return new errors_1.ValueError(\"value must have at most \" + param + \" fraction digits\");\n        }\n        return false;\n    };\n    return FractionDigitsP;\n}(NonNegativeIntegerParameter));\nvar NumericTypeDependentParameter = (function (_super) {\n    __extends(NumericTypeDependentParameter, _super);\n    function NumericTypeDependentParameter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumericTypeDependentParameter.prototype.isInvalidParam = function (value, name, type) {\n        var errors = type.disallows(value);\n        if (!errors) {\n            return false;\n        }\n        // Support for multiple value errors is mainly so that we can report if a\n        // value violates multiple param specifications. When we check a param in\n        // isolation, it is unlikely that we'd get multiple errors. If we do, we\n        // narrow it to the first error and convert the ValueError to a ParamError.\n        return new errors_1.ParamError(errors[0].message);\n    };\n    return NumericTypeDependentParameter;\n}(NumericParameter));\nvar fractionDigitsP = new FractionDigitsP();\nvar MaxInclusiveP = (function (_super) {\n    __extends(MaxInclusiveP, _super);\n    function MaxInclusiveP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"maxInclusive\";\n        return _this;\n    }\n    MaxInclusiveP.prototype.isInvalidValue = function (value, param) {\n        if ((isNaN(value) !== isNaN(param)) || value > param) {\n            var repr = convertInternalNumberToString(param);\n            return new errors_1.ValueError(\"value must be less than or equal to \" + repr);\n        }\n        return false;\n    };\n    return MaxInclusiveP;\n}(NumericTypeDependentParameter));\nvar maxInclusiveP = new MaxInclusiveP();\nvar MaxExclusiveP = (function (_super) {\n    __extends(MaxExclusiveP, _super);\n    function MaxExclusiveP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"maxExclusive\";\n        return _this;\n    }\n    MaxExclusiveP.prototype.isInvalidValue = function (value, param) {\n        // The negation of a less-than test allows handling a parameter value of NaN\n        // automatically.\n        if (!(value < param)) {\n            var repr = convertInternalNumberToString(param);\n            return new errors_1.ValueError(\"value must be less than \" + repr);\n        }\n        return false;\n    };\n    return MaxExclusiveP;\n}(NumericTypeDependentParameter));\nvar maxExclusiveP = new MaxExclusiveP();\nvar MinInclusiveP = (function (_super) {\n    __extends(MinInclusiveP, _super);\n    function MinInclusiveP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"minInclusive\";\n        return _this;\n    }\n    MinInclusiveP.prototype.isInvalidValue = function (value, param) {\n        if ((isNaN(value) !== isNaN(param)) || value < param) {\n            var repr = convertInternalNumberToString(param);\n            return new errors_1.ValueError(\"value must be greater than or equal to \" + repr);\n        }\n        return false;\n    };\n    return MinInclusiveP;\n}(NumericTypeDependentParameter));\nvar minInclusiveP = new MinInclusiveP();\nvar MinExclusiveP = (function (_super) {\n    __extends(MinExclusiveP, _super);\n    function MinExclusiveP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"minExclusive\";\n        return _this;\n    }\n    MinExclusiveP.prototype.isInvalidValue = function (value, param) {\n        // The negation of a greater-than test allows handling a parameter value of\n        // NaN automatically.\n        if (!(value > param)) {\n            var repr = convertInternalNumberToString(param);\n            return new errors_1.ValueError(\"value must be greater than \" + repr);\n        }\n        return false;\n    };\n    return MinExclusiveP;\n}(NumericTypeDependentParameter));\nvar minExclusiveP = new MinExclusiveP();\n/**\n * @private\n *\n * @param value The value to process.\n *\n * @param param How to process the whitespaces.\n *\n * @returns The white-space-processed value. That is, the ``value`` parameter\n * once its white-spaces have been processed according to the parameter\n * passed. See the XML Schema Datatype standard for the meaning.\n */\nfunction whiteSpaceProcessed(value, param) {\n    switch (param) {\n        case WhitespaceHandling.PRESERVE:\n            break;\n        case WhitespaceHandling.REPLACE:\n            value = value.replace(/\\r\\n\\t/g, \" \");\n            break;\n        case WhitespaceHandling.COLLAPSE:\n            value = value.replace(/\\r\\n\\t/g, \" \").trim().replace(/\\s{2,}/g, \" \");\n            break;\n        default:\n            throw new Error(\"unexpected value: \" + param);\n    }\n    return value;\n}\n/**\n * The structure that all datatype implementations in this module share.\n *\n * @private\n *\n */\nvar Base = (function () {\n    function Base() {\n        /**\n         * The default whitespace processing for this type.\n         */\n        this.whiteSpaceDefault = WhitespaceHandling.COLLAPSE;\n    }\n    Base.throwMissingLocation = function (errors) {\n        // The only time location is undefined is if ``parseParams`` was called\n        // without arguments. That's an internal error because we should always be\n        // able to call ``parseParams`` to \"parse\" the default parameter values.\n        throw new Error(\"internal error: undefined location\");\n    };\n    Object.defineProperty(Base.prototype, \"paramNameToObj\", {\n        /**\n         * A mapping of parameter names to parameter objects. It is constructed during\n         * initialization of the type.\n         */\n        get: function () {\n            var paramNameToObj = this._paramNameToObj;\n            var ret = paramNameToObj !== undefined ?\n                paramNameToObj : Object.create(null);\n            if (paramNameToObj === undefined) {\n                this._paramNameToObj = ret;\n                for (var _i = 0, _a = this.validParams; _i < _a.length; _i++) {\n                    var param = _a[_i];\n                    ret[param.name] = param;\n                }\n            }\n            return ret;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Base.prototype, \"defaultParams\", {\n        /**\n         * The default parameters if none are specified.\n         */\n        get: function () {\n            var defaultParams = this._defaultParams;\n            if (defaultParams !== undefined) {\n                return defaultParams;\n            }\n            var ret;\n            this._defaultParams = ret = this.parseParams();\n            return ret;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Converts a value. It does the strict minimum to convert the value from a\n     * string to an internal representation. It is never interchangeable with\n     * [[parseValue]].\n     *\n     * @param value The value from the XML document.\n     *\n     * @param context The context of the value in the XML document.\n     *\n     * @returns An internal representation.\n     */\n    Base.prototype.convertValue = function (value, context) {\n        return whiteSpaceProcessed(value, this.whiteSpaceDefault);\n    };\n    /**\n     * Computes the value's length. This may differ from the value's length, as it\n     * appears in the XML document it comes from.\n     *\n     * @param value The value from the XML document.\n     *\n     * @returns The length.\n     */\n    Base.prototype.valueLength = function (value) {\n        return value.length;\n    };\n    Base.prototype.parseValue = function (value, context) {\n        var errors = this.disallows(value, {}, context);\n        if (errors) {\n            throw new errors_1.ValueValidationError(errors);\n        }\n        return { value: this.convertValue(value, context) };\n    };\n    // tslint:disable-next-line: max-func-body-length\n    Base.prototype.parseParams = function (location, params) {\n        var errors = [];\n        var names = Object.create(null);\n        params = params !== undefined ? params : [];\n        for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {\n            var x = params_1[_i];\n            var name = x.name, value = x.value;\n            var prop = this.paramNameToObj[name];\n            // Do we know this parameter?\n            if (prop === undefined) {\n                errors.push(new errors_1.ParamError(\"unexpected parameter: \" + name));\n                return;\n            }\n            // Is the value valid at all?\n            var invalid = prop.isInvalidParam(value, name, this);\n            if (invalid) {\n                errors.push(invalid);\n            }\n            // Is it repeated, and repeatable?\n            if (names[name] !== undefined && !prop.repeatable) {\n                errors.push(new errors_1.ParamError(\"cannot repeat parameter \" + name));\n            }\n            // We gather all the values in a map of name to value.\n            var values = names[name];\n            if (values === undefined) {\n                values = names[name] = [];\n            }\n            values.push(value);\n        }\n        if (errors.length !== 0) {\n            if (location !== undefined) {\n                throw new errors_1.ParameterParsingError(location, errors);\n            }\n            Base.throwMissingLocation(errors);\n        }\n        // We just modify the ``names`` object to produce a return value.\n        var ret = names;\n        for (var key in ret) {\n            var value = ret[key];\n            var prop = this.paramNameToObj[key];\n            if (value.length > 1) {\n                ret[key] = prop.combine(value);\n            }\n            else {\n                ret[key] = ((prop.convert !== undefined) ?\n                    prop.convert(value[0]) : value[0]);\n            }\n        }\n        // Inter-parameter checks. There's no point in trying to generalize\n        // this.\n        /* tslint:disable: no-string-literal */\n        if (ret[\"minLength\"] > ret[\"maxLength\"]) {\n            errors.push(new errors_1.ParamError(\"minLength must be less than or equal to maxLength\"));\n        }\n        if (ret[\"length\"] !== undefined) {\n            if (ret[\"minLength\"] !== undefined) {\n                errors.push(new errors_1.ParamError(\"length and minLength cannot appear together\"));\n            }\n            if (ret[\"maxLength\"] !== undefined) {\n                errors.push(new errors_1.ParamError(\"length and maxLength cannot appear together\"));\n            }\n        }\n        if (ret[\"maxInclusive\"] !== undefined) {\n            if (ret[\"maxExclusive\"] !== undefined) {\n                errors.push(new errors_1.ParamError(\"maxInclusive and maxExclusive cannot appear together\"));\n            }\n            // maxInclusive, minExclusive\n            if (ret[\"minExclusive\"] >= ret[\"maxInclusive\"]) {\n                errors.push(new errors_1.ParamError(\"minExclusive must be less than maxInclusive\"));\n            }\n        }\n        if (ret[\"minInclusive\"] !== undefined) {\n            if (ret[\"minExclusive\"] !== undefined) {\n                errors.push(new errors_1.ParamError(\"minInclusive and minExclusive cannot appear together\"));\n            }\n            // maxInclusive, minInclusive\n            if (ret[\"minInclusive\"] > ret[\"maxInclusive\"]) {\n                errors.push(new errors_1.ParamError(\"minInclusive must be less than or equal to maxInclusive\"));\n            }\n            // maxExclusive, minInclusive\n            if (ret[\"minInclusive\"] >= ret[\"maxExclusive\"]) {\n                errors.push(new errors_1.ParamError(\"minInclusive must be less than maxExclusive\"));\n            }\n        }\n        // maxExclusive, minExclusive\n        if (ret[\"minExclusive\"] > ret[\"maxExclusive\"]) {\n            errors.push(new errors_1.ParamError(\"minExclusive must be less than or equal to maxExclusive\"));\n        }\n        /* tslint:enable: no-string-literal */\n        if (errors.length !== 0) {\n            if (location !== undefined) {\n                throw new errors_1.ParameterParsingError(location, errors);\n            }\n            Base.throwMissingLocation(errors);\n        }\n        return ret;\n    };\n    /**\n     * Determines whether the parameters disallow a value.\n     *\n     * @param raw The value from the XML document.\n     *\n     * @param value The internal representation of the value, as returned from\n     * [[convertValue]].\n     *\n     * @param params The parameters, as returned from [[parseParams]].\n     *\n     * @param context The context, if needed.\n     *\n     * @returns ``false`` if there is no error. Otherwise, an array of errors.\n     */\n    Base.prototype.disallowedByParams = function (raw, value, params, context) {\n        if (params !== undefined) {\n            var errors = [];\n            // We use Object.keys because we don't know the precise type of params.\n            for (var _i = 0, _a = Object.keys(params); _i < _a.length; _i++) {\n                var name = _a[_i];\n                var param = this.paramNameToObj[name];\n                var err = param.isInvalidValue(value, params[name], this);\n                if (err) {\n                    errors.push(err);\n                }\n            }\n            if (errors.length !== 0) {\n                return errors;\n            }\n        }\n        return false;\n    };\n    Base.prototype.equal = function (value, schemaValue, context) {\n        if (schemaValue.value === undefined) {\n            throw Error(\"it looks like you are trying to use an unparsed value\");\n        }\n        var converted;\n        try {\n            converted = this.convertValue(value, context);\n        }\n        catch (ex) {\n            // An invalid value cannot be equal.\n            if (ex instanceof errors_1.ValueValidationError) {\n                return false;\n            }\n            throw ex;\n        }\n        // In the IEEE 754-1985 standard, which is what XMLSChema 1.0 follows, NaN\n        // is equal to NaN. In JavaScript NaN is equal to nothing, not even itself.\n        // So we need to handle this difference.\n        if (typeof converted === \"number\" && isNaN(converted)) {\n            return isNaN(schemaValue.value);\n        }\n        return converted === schemaValue.value;\n    };\n    Base.prototype.disallows = function (value, params, context) {\n        if (params instanceof Array) {\n            throw new Error(\"it looks like you are passing unparsed \" +\n                \"parameters to disallows\");\n        }\n        else if (params === undefined || Object.keys(params).length === 0) {\n            // If no params were passed, get the default params.\n            params = this.defaultParams;\n        }\n        // This must be done against the raw value because the **lexical** space of\n        // this type must match this.\n        if (whiteSpaceProcessed(value, WhitespaceHandling.COLLAPSE)\n            .match(this.regexp) === null) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        var converted;\n        try {\n            converted = this.convertValue(value, context);\n        }\n        catch (ex) {\n            // An invalid value is not allowed.\n            if (ex instanceof errors_1.ValueValidationError) {\n                return ex.errors;\n            }\n            throw ex;\n        }\n        return this.disallowedByParams(value, converted, params, context);\n    };\n    return Base;\n}());\n//\n// String family\n//\n/* tslint:disable:class-name */\nvar string_ = (function (_super) {\n    __extends(string_, _super);\n    function string_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"string\";\n        _this.typeErrorMsg = \"value is not a string\";\n        _this.whiteSpaceDefault = WhitespaceHandling.PRESERVE;\n        _this.validParams = [lengthP, minLengthP, maxLengthP,\n            patternP];\n        _this.needsContext = false;\n        _this.regexp = /^.*$/;\n        return _this;\n    }\n    return string_;\n}(Base));\nvar normalizedString = (function (_super) {\n    __extends(normalizedString, _super);\n    function normalizedString() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"normalizedString\";\n        _this.typeErrorMsg = \"string contains a tab, carriage return or newline\";\n        _this.regexp = /^[^\\r\\n\\t]+$/;\n        return _this;\n    }\n    return normalizedString;\n}(string_));\nvar token = (function (_super) {\n    __extends(token, _super);\n    function token() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"token\";\n        _this.typeErrorMsg = \"not a valid token\";\n        _this.regexp = /^(?:(?! )(?:(?! {3})[^\\r\\n\\t])*[^\\r\\n\\t ])?$/;\n        return _this;\n    }\n    return token;\n}(normalizedString));\nvar language = (function (_super) {\n    __extends(language, _super);\n    function language() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"language\";\n        _this.typeErrorMsg = \"not a valid language identifier\";\n        _this.regexp = /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;\n        return _this;\n    }\n    return language;\n}(token));\nvar Name = (function (_super) {\n    __extends(Name, _super);\n    function Name() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Name\";\n        _this.typeErrorMsg = \"not a valid Name\";\n        _this.regexp = xmlcharacters_1.xmlNameRe;\n        return _this;\n    }\n    return Name;\n}(token));\nvar NCName = (function (_super) {\n    __extends(NCName, _super);\n    function NCName() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"NCName\";\n        _this.typeErrorMsg = \"not a valid NCName\";\n        _this.regexp = xmlcharacters_1.xmlNcnameRe;\n        return _this;\n    }\n    return NCName;\n}(Name));\nvar xmlNmtokenRe = new RegExp(\"^[\" + xmlcharacters_1.xmlNameChar + \"]+$\");\nvar NMTOKEN = (function (_super) {\n    __extends(NMTOKEN, _super);\n    function NMTOKEN() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"NMTOKEN\";\n        _this.typeErrorMsg = \"not a valid NMTOKEN\";\n        _this.regexp = xmlNmtokenRe;\n        return _this;\n    }\n    return NMTOKEN;\n}(token));\nvar xmlNmtokensRe = new RegExp(\"^[\" + xmlcharacters_1.xmlNameChar + \"]+(?: [\" + xmlcharacters_1.xmlNameChar + \"]+)*$\");\nvar NMTOKENS = (function (_super) {\n    __extends(NMTOKENS, _super);\n    function NMTOKENS() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"NMTOKENS\";\n        _this.typeErrorMsg = \"not a valid NMTOKENS\";\n        _this.regexp = xmlNmtokensRe;\n        _this.whiteSpaceDefault = WhitespaceHandling.COLLAPSE;\n        return _this;\n    }\n    return NMTOKENS;\n}(NMTOKEN));\nvar ID = (function (_super) {\n    __extends(ID, _super);\n    function ID() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"ID\";\n        _this.typeErrorMsg = \"not a valid ID\";\n        return _this;\n    }\n    return ID;\n}(NCName));\nvar IDREF = (function (_super) {\n    __extends(IDREF, _super);\n    function IDREF() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"IDREF\";\n        _this.typeErrorMsg = \"not a valid IDREF\";\n        return _this;\n    }\n    return IDREF;\n}(NCName));\nvar IDREFS_RE = new RegExp(\"^\" + xmlcharacters_1.xmlNcname + \"(?: \" + xmlcharacters_1.xmlNcname + \")*$\");\nvar IDREFS = (function (_super) {\n    __extends(IDREFS, _super);\n    function IDREFS() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"IDREFS\";\n        _this.typeErrorMsg = \"not a valid IDREFS\";\n        _this.regexp = IDREFS_RE;\n        _this.whiteSpaceDefault = WhitespaceHandling.COLLAPSE;\n        return _this;\n    }\n    return IDREFS;\n}(IDREF));\nvar ENTITY = (function (_super) {\n    __extends(ENTITY, _super);\n    function ENTITY() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"ENTITY\";\n        _this.typeErrorMsg = \"not a valid ENTITY\";\n        return _this;\n    }\n    return ENTITY;\n}(string_));\nvar ENTITIES = (function (_super) {\n    __extends(ENTITIES, _super);\n    function ENTITIES() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"ENTITIES\";\n        _this.typeErrorMsg = \"not a valid ENTITIES\";\n        return _this;\n    }\n    return ENTITIES;\n}(string_));\n//\n// Decimal family\n//\nvar decimalPattern = \"[-+]?(?!$)\\\\d*(\\\\.\\\\d*)?\";\nvar decimal = (function (_super) {\n    __extends(decimal, _super);\n    function decimal() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"decimal\";\n        _this.typeErrorMsg = \"value not a decimal number\";\n        _this.regexp = new RegExp(\"^\" + decimalPattern + \"$\");\n        _this.whiteSpaceDefault = WhitespaceHandling.COLLAPSE;\n        _this.needsContext = false;\n        _this.validParams = [\n            totalDigitsP, fractionDigitsP, patternP, minExclusiveP, minInclusiveP,\n            maxExclusiveP, maxInclusiveP,\n        ];\n        return _this;\n    }\n    decimal.prototype.convertValue = function (value) {\n        return Number(_super.prototype.convertValue.call(this, value));\n    };\n    return decimal;\n}(Base));\nvar integerPattern = \"[-+]?\\\\d+\";\nvar integer = (function (_super) {\n    __extends(integer, _super);\n    function integer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"integer\";\n        _this.typeErrorMsg = \"value is not an integer\";\n        _this.regexp = new RegExp(\"^\" + integerPattern + \"$\");\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    integer.prototype.parseParams = function (location, params) {\n        var me;\n        var mi;\n        var ret = _super.prototype.parseParams.call(this, location, params);\n        function fail(message) {\n            var errors = [new errors_1.ParamError(message)];\n            if (location !== undefined) {\n                throw new errors_1.ParameterParsingError(location, errors);\n            }\n            return Base.throwMissingLocation(errors);\n        }\n        var highestVal = this.highestVal;\n        if (highestVal !== undefined) {\n            /* tslint:disable:no-string-literal */\n            if (ret[\"maxExclusive\"] !== undefined) {\n                me = ret[\"maxExclusive\"];\n                if (me > highestVal) {\n                    fail(\"maxExclusive cannot be greater than \" + highestVal);\n                }\n            }\n            else if (ret[\"maxInclusive\"] !== undefined) {\n                mi = ret[\"maxInclusive\"];\n                if (mi > highestVal) {\n                    fail(\"maxInclusive cannot be greater than \" + highestVal);\n                }\n            }\n            else {\n                ret[\"maxInclusive\"] = this.highestVal;\n            }\n        }\n        if (this.lowestVal !== undefined) {\n            if (ret[\"minExclusive\"] !== undefined) {\n                me = ret[\"minExclusive\"];\n                if (me < this.lowestVal) {\n                    fail(\"minExclusive cannot be lower than \" + this.lowestVal);\n                }\n            }\n            else if (ret[\"minInclusive\"] !== undefined) {\n                mi = ret[\"minInclusive\"];\n                if (mi < this.lowestVal) {\n                    fail(\"minInclusive cannot be lower than \" + this.lowestVal);\n                }\n            }\n            else {\n                ret[\"minInclusive\"] = this.lowestVal;\n            }\n        }\n        /* tslint:enable:no-string-literal */\n        return ret;\n    };\n    return integer;\n}(decimal));\nvar nonPositiveInteger = (function (_super) {\n    __extends(nonPositiveInteger, _super);\n    function nonPositiveInteger() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"nonPositiveInteger\";\n        _this.typeErrorMsg = \"value is not a nonPositiveInteger\";\n        _this.regexp = /^\\+?0+|-\\d+$/;\n        _this.highestVal = 0;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return nonPositiveInteger;\n}(integer));\nvar negativeInteger = (function (_super) {\n    __extends(negativeInteger, _super);\n    function negativeInteger() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"negativeInteger\";\n        _this.typeErrorMsg = \"value is not a negativeInteger\";\n        _this.regexp = /^-\\d+$/;\n        _this.highestVal = -1;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return negativeInteger;\n}(nonPositiveInteger));\nvar nonNegativeInteger = (function (_super) {\n    __extends(nonNegativeInteger, _super);\n    function nonNegativeInteger() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"nonNegativeInteger\";\n        _this.typeErrorMsg = \"value is not a nonNegativeInteger\";\n        _this.regexp = /^(\\+?\\d+|-0)$/;\n        _this.lowestVal = 0;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return nonNegativeInteger;\n}(integer));\nvar positiveInteger = (function (_super) {\n    __extends(positiveInteger, _super);\n    function positiveInteger() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"positiveInteger\";\n        _this.typeErrorMsg = \"value is not a positiveInteger\";\n        _this.regexp = /^\\+?\\d+$/;\n        _this.lowestVal = 1;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return positiveInteger;\n}(nonNegativeInteger));\nvar long_ = (function (_super) {\n    __extends(long_, _super);\n    function long_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"long\";\n        _this.typeErrorMsg = \"value is not a long\";\n        _this.highestVal = 9223372036854775807;\n        _this.lowestVal = -9223372036854775808;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return long_;\n}(integer));\nvar int_ = (function (_super) {\n    __extends(int_, _super);\n    function int_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"int\";\n        _this.typeErrorMsg = \"value is not an int\";\n        _this.highestVal = 2147483647;\n        _this.lowestVal = -2147483648;\n        return _this;\n    }\n    return int_;\n}(long_));\nvar short_ = (function (_super) {\n    __extends(short_, _super);\n    function short_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"short\";\n        _this.typeErrorMsg = \"value is not a short\";\n        _this.highestVal = 32767;\n        _this.lowestVal = -32768;\n        return _this;\n    }\n    return short_;\n}(int_));\nvar byte_ = (function (_super) {\n    __extends(byte_, _super);\n    function byte_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"byte\";\n        _this.typeErrorMsg = \"value is not a byte\";\n        _this.highestVal = 127;\n        _this.lowestVal = -128;\n        return _this;\n    }\n    return byte_;\n}(short_));\nvar unsignedLong = (function (_super) {\n    __extends(unsignedLong, _super);\n    function unsignedLong() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"unsignedLong\";\n        _this.typeErrorMsg = \"value is not an unsignedLong\";\n        _this.highestVal = 18446744073709551615;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return unsignedLong;\n}(nonNegativeInteger));\nvar unsignedInt = (function (_super) {\n    __extends(unsignedInt, _super);\n    function unsignedInt() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"unsignedInt\";\n        _this.typeErrorMsg = \"value is not an unsignedInt\";\n        _this.highestVal = 4294967295;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return unsignedInt;\n}(unsignedLong));\nvar unsignedShort = (function (_super) {\n    __extends(unsignedShort, _super);\n    function unsignedShort() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"unsignedShort\";\n        _this.typeErrorMsg = \"value is not an unsignedShort\";\n        _this.highestVal = 65535;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return unsignedShort;\n}(unsignedInt));\nvar unsignedByte = (function (_super) {\n    __extends(unsignedByte, _super);\n    function unsignedByte() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"unsignedByte\";\n        _this.typeErrorMsg = \"value is not an unsignedByte\";\n        _this.highestVal = 255;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return unsignedByte;\n}(unsignedShort));\nvar boolean_ = (function (_super) {\n    __extends(boolean_, _super);\n    function boolean_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"boolean\";\n        _this.typeErrorMsg = \"not a valid boolean\";\n        _this.regexp = /^(1|0|true|false)$/;\n        _this.validParams = [patternP];\n        _this.needsContext = false;\n        return _this;\n    }\n    boolean_.prototype.convertValue = function (value) {\n        return (value === \"1\" || value === \"true\");\n    };\n    return boolean_;\n}(Base));\nvar B04 = \"[AQgw]\";\nvar B16 = \"[AEIMQUYcgkosw048]\";\nvar B64 = \"[A-Za-z0-9+/]\";\nvar B64S = \"(?:\" + B64 + \" ?)\";\nvar B16S = \"(?:\" + B16 + \" ?)\";\nvar B04S = \"(?:\" + B04 + \" ?)\";\nvar base64BinaryRe = new RegExp(\"^(?:(?:\" + B64S + \"{4})*(?:(?:\" + B64S + \"{3}\" + B64 + \")|(?:\" + B64S + \"{2}\" + B16S + \"=)|(?:\" +\n    (\"\" + B64S + B04S + \"= ?=)))?$\"));\nvar base64Binary = (function (_super) {\n    __extends(base64Binary, _super);\n    function base64Binary() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"base64Binary\";\n        _this.typeErrorMsg = \"not a valid base64Binary\";\n        _this.regexp = base64BinaryRe;\n        _this.needsContext = false;\n        _this.validParams = [lengthP, minLengthP, maxLengthP, patternP];\n        return _this;\n    }\n    base64Binary.prototype.convertValue = function (value) {\n        // We don't need to actually decode it.\n        return value.replace(/\\s/g, \"\");\n    };\n    base64Binary.prototype.valueLength = function (value) {\n        // Length of the decoded value.\n        return Math.floor((value.replace(/[\\s=]/g, \"\").length * 3) / 4);\n    };\n    return base64Binary;\n}(Base));\nvar hexBinary = (function (_super) {\n    __extends(hexBinary, _super);\n    function hexBinary() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"hexBinary\";\n        _this.typeErrorMsg = \"not a valid hexBinary\";\n        _this.regexp = /^(?:[0-9a-fA-F]{2})*$/;\n        _this.needsContext = false;\n        _this.validParams = [lengthP, minLengthP, maxLengthP, patternP];\n        return _this;\n    }\n    hexBinary.prototype.convertValue = function (value) {\n        return value;\n    };\n    hexBinary.prototype.valueLength = function (value) {\n        // Length of the byte list.\n        return value.length / 2;\n    };\n    return hexBinary;\n}(Base));\nvar doubleRe = new RegExp(\"^(?:(?:[-+]?INF)|(?:NaN)|(?:\" + decimalPattern + \"(?:[Ee]\" + integerPattern + \")?))$\");\nvar float_ = (function (_super) {\n    __extends(float_, _super);\n    function float_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"float\";\n        _this.typeErrorMsg = \"not a valid float\";\n        _this.regexp = doubleRe;\n        _this.needsContext = false;\n        _this.validParams = [\n            patternP, minInclusiveP, minExclusiveP, maxInclusiveP, maxExclusiveP,\n        ];\n        return _this;\n    }\n    float_.prototype.convertValue = function (value, context) {\n        return convertToInternalNumber(value);\n    };\n    return float_;\n}(Base));\nvar double_ = (function (_super) {\n    __extends(double_, _super);\n    function double_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"double\";\n        _this.typeErrorMsg = \"not a valid double\";\n        return _this;\n    }\n    return double_;\n}(float_));\nvar QName = (function (_super) {\n    __extends(QName, _super);\n    function QName() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"QName\";\n        _this.typeErrorMsg = \"not a valid QName\";\n        _this.regexp = new RegExp(\"^(?:\" + xmlcharacters_1.xmlNcname + \":)?\" + xmlcharacters_1.xmlNcname + \"$\");\n        _this.needsContext = true;\n        _this.validParams = [patternP, lengthP, minLengthP, maxLengthP];\n        return _this;\n    }\n    QName.prototype.convertValue = function (value, context) {\n        var ret = context.resolver.resolveName(_super.prototype.convertValue.call(this, value));\n        if (ret === undefined) {\n            throw new errors_1.ValueValidationError([new errors_1.ValueError(\"cannot resolve the name \" + value)]);\n        }\n        return \"{\" + ret.ns + \"}\" + ret.name;\n    };\n    return QName;\n}(Base));\nvar NOTATION = (function (_super) {\n    __extends(NOTATION, _super);\n    function NOTATION() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"NOTATION\";\n        _this.typeErrorMsg = \"not a valid NOTATION\";\n        _this.regexp = new RegExp(\"^(?:\" + xmlcharacters_1.xmlNcname + \":)?\" + xmlcharacters_1.xmlNcname + \"$\");\n        _this.needsContext = true;\n        _this.validParams = [patternP, lengthP, minLengthP, maxLengthP];\n        return _this;\n    }\n    NOTATION.prototype.convertValue = function (value, context) {\n        var ret = context.resolver.resolveName(_super.prototype.convertValue.call(this, value));\n        if (ret === undefined) {\n            throw new errors_1.ValueValidationError([new errors_1.ValueError(\"cannot resolve the name \" + value)]);\n        }\n        return \"{\" + ret.ns + \"}\" + ret.name;\n    };\n    return NOTATION;\n}(Base));\nvar duration = (function (_super) {\n    __extends(duration, _super);\n    function duration() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"duration\";\n        _this.typeErrorMsg = \"not a valid duration\";\n        _this.regexp = \n        // tslint:disable-next-line:max-line-length\n        /^-?P(?!$)(?:\\d+Y)?(?:\\d+M)?(?:\\d+D)?(?:T(?!$)(?:\\d+H)?(?:\\d+M)?(?:\\d+(\\.\\d+)?S)?)?$/;\n        _this.validParams = [patternP];\n        _this.needsContext = false;\n        return _this;\n    }\n    return duration;\n}(Base));\nvar yearPattern = \"-?(?:[1-9]\\\\d*)?\\\\d{4}\";\nvar monthPattern = \"[01]\\\\d\";\nvar domPattern = \"[0-3]\\\\d\";\nvar timePattern = \"[012]\\\\d:[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d+)?\";\nvar tzPattern = \"(?:[+-][01]\\\\d:[0-5]\\\\d|Z)\";\nvar tzRe = new RegExp(tzPattern + \"$\");\nfunction isLeapYear(year) {\n    return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\nvar dateGroupingRe = new RegExp(\"^(\" + yearPattern + \")-(\" + monthPattern + \")-(\" + domPattern + \")T(\" + timePattern + \")\" +\n    (\"(\" + tzPattern + \"?)$\"));\nvar maxDoms = [undefined, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction checkDate(value) {\n    // The Date.parse method of JavaScript is not reliable.\n    var match = value.match(dateGroupingRe);\n    if (match === null) {\n        return false;\n    }\n    var year = match[1];\n    var leap = isLeapYear(Number(year));\n    var month = Number(match[2]);\n    if (month === 0 || month > 12) {\n        return false;\n    }\n    var dom = Number(match[3]);\n    // We cannot have an undefined value here... so...\n    // tslint:disable-next-line:no-non-null-assertion\n    var maxDom = maxDoms[month];\n    if (month === 2 && !leap) {\n        maxDom = 28;\n    }\n    if (dom === 0 || dom > maxDom) {\n        return false;\n    }\n    var timeParts = match[4].split(\":\");\n    var minutes = Number(timeParts[1]);\n    if (minutes > 59) {\n        return false;\n    }\n    var seconds = Number(timeParts[2]);\n    if (seconds > 59) {\n        return false;\n    }\n    // 24 is valid if minutes and seconds are at 0, otherwise 23 is the\n    // limit.\n    var hoursLimit = (minutes === 0 && seconds === 0) ? 24 : 23;\n    if (Number(timeParts[0]) > hoursLimit) {\n        return false;\n    }\n    if (match[5] !== undefined && match[5] !== \"\" && match[5] !== \"Z\") {\n        // We have a TZ\n        var tzParts = match[5].split(\":\");\n        // Slice: skip the sign.\n        var tzHours = Number(tzParts[0].slice(1));\n        if (tzHours > 14) {\n            return false;\n        }\n        var tzSeconds = Number(tzParts[1]);\n        if (tzSeconds > 59) {\n            return false;\n        }\n        if (tzHours === 14 && tzSeconds !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\nvar dateTime = (function (_super) {\n    __extends(dateTime, _super);\n    function dateTime() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"dateTime\";\n        _this.typeErrorMsg = \"not a valid dateTime\";\n        _this.regexp = new RegExp(\"^\" + yearPattern + \"-\" + monthPattern + \"-\" + domPattern +\n            (\"T\" + timePattern + tzPattern + \"?$\"));\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    dateTime.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret instanceof Array) {\n            return ret;\n        }\n        if (!checkDate(value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return dateTime;\n}(Base));\nvar time = (function (_super) {\n    __extends(time, _super);\n    function time() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"time\";\n        _this.typeErrorMsg = \"not a valid time\";\n        _this.regexp = new RegExp(\"^\" + timePattern + tzPattern + \"?$\");\n        _this.validParams = [patternP];\n        _this.needsContext = false;\n        return _this;\n    }\n    time.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // Date does not validate times, so set the date to something fake.\n        if (!checkDate(\"1901-01-01T\" + value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return time;\n}(Base));\nvar date = (function (_super) {\n    __extends(date, _super);\n    function date() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"date\";\n        _this.typeErrorMsg = \"not a valid date\";\n        _this.regexp = new RegExp(\"^\" + yearPattern + \"-\" + monthPattern + \"-\" + domPattern + tzPattern + \"?$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    date.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add time for Date() to parse it.\n        var match = value.match(tzRe);\n        value = match !== null ?\n            value.slice(0, match.index) + \"T00:00:00\" + match[0] :\n            value + \"T00:00:00\";\n        if (!checkDate(value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return date;\n}(Base));\nvar gYearMonth = (function (_super) {\n    __extends(gYearMonth, _super);\n    function gYearMonth() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gYearMonth\";\n        _this.typeErrorMsg = \"not a valid gYearMonth\";\n        _this.regexp = new RegExp(\"^\" + yearPattern + \"-\" + monthPattern + tzPattern + \"?$\");\n        _this.validParams = [patternP];\n        _this.needsContext = false;\n        return _this;\n    }\n    gYearMonth.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a day and time for Date() to parse it.\n        var match = value.match(tzRe);\n        value = match !== null ?\n            value.slice(0, match.index) + \"-01T00:00:00\" + match[0] :\n            value + \"-01T00:00:00\";\n        if (!checkDate(value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gYearMonth;\n}(Base));\nvar gYear = (function (_super) {\n    __extends(gYear, _super);\n    function gYear() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gYear\";\n        _this.typeErrorMsg = \"not a valid gYear\";\n        _this.regexp = new RegExp(\"^\" + yearPattern + tzPattern + \"?$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    gYear.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a month, a day and a time for Date() to parse it.\n        var match = value.match(tzRe);\n        value = match !== null ?\n            value.slice(0, match.index) + \"-01-01T00:00:00\" + match[0] :\n            value + \"-01-01T00:00:00\";\n        if (!checkDate(value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gYear;\n}(Base));\nvar gMonthDay = (function (_super) {\n    __extends(gMonthDay, _super);\n    function gMonthDay() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gMonthDay\";\n        _this.typeErrorMsg = \"not a valid gMonthDay\";\n        _this.regexp = new RegExp(\"^\" + monthPattern + \"-\" + domPattern + tzPattern + \"?$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    gMonthDay.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a year and a time for Date() to parse it.\n        var match = value.match(tzRe);\n        value = match !== null ?\n            value.slice(0, match.index) + \"T00:00:00\" + match[0] :\n            value + \"T00:00:00\";\n        // We always add 2000, which is a leap year, so 01-29 won't raise an\n        // error.\n        if (!checkDate(\"2000-\" + value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gMonthDay;\n}(Base));\nvar gDay = (function (_super) {\n    __extends(gDay, _super);\n    function gDay() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gDay\";\n        _this.typeErrorMsg = \"not a valid gDay\";\n        _this.regexp = new RegExp(\"^\" + domPattern + tzPattern + \"?$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    gDay.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a year and a time for Date() to parse it.\n        var match = value.match(tzRe);\n        value = match !== null ?\n            value.slice(0, match.index) + \"T00:00:00\" + match[0] :\n            value + \"T00:00:00\";\n        // We always add 2000, which is a leap year, so 01-29 won't raise an\n        // error.\n        if (!checkDate(\"2000-01-\" + value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gDay;\n}(Base));\nvar gMonth = (function (_super) {\n    __extends(gMonth, _super);\n    function gMonth() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gMonth\";\n        _this.typeErrorMsg = \"not a valid gMonth\";\n        _this.regexp = new RegExp(\"^\" + monthPattern + tzPattern + \"?$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    gMonth.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a year and a time for Date() to parse it.\n        var match = value.match(tzRe);\n        value = match !== null ?\n            value.slice(0, match.index) + \"-01T00:00:00\" + match[0] :\n            value + \"-01T00:00:00\";\n        // We always add 2000, which is a leap year, so 01-29 won't raise an\n        // error.\n        if (!checkDate(\"2000-\" + value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gMonth;\n}(Base));\n// Generated from http://jmrware.com/articles/2009/uri_regexp/URI_regex.html\n// tslint:disable-next-line:max-line-length\nvar reJsRfc3986UriReference = /^(?:[A-Za-z][A-Za-z0-9+\\-.]*:(?:\\/\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9A-Fa-f]{1,4}:){6}|::(?:[0-9A-Fa-f]{1,4}:){5}|(?:[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}|(?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}|(?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:|(?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)(?:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\\.[A-Za-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-Za-z0-9\\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*)(?::[0-9]*)?(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|)(?:\\?(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?(?:\\#(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?|(?:\\/\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9A-Fa-f]{1,4}:){6}|::(?:[0-9A-Fa-f]{1,4}:){5}|(?:[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}|(?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}|(?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:|(?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)(?:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\\.[A-Za-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-Za-z0-9\\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*)(?::[0-9]*)?(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|(?:[A-Za-z0-9\\-._~!$&'()*+,;=@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|)(?:\\?(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?(?:\\#(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?)$/;\nvar anyURI = (function (_super) {\n    __extends(anyURI, _super);\n    function anyURI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"anyURI\";\n        _this.typeErrorMsg = \"not a valid anyURI\";\n        _this.regexp = reJsRfc3986UriReference;\n        _this.needsContext = false;\n        _this.validParams = [patternP, lengthP, minLengthP, maxLengthP];\n        return _this;\n    }\n    return anyURI;\n}(Base));\nvar types = [\n    string_,\n    normalizedString,\n    token,\n    language,\n    Name,\n    NCName,\n    NMTOKEN,\n    NMTOKENS,\n    ID,\n    IDREF,\n    IDREFS,\n    ENTITY,\n    ENTITIES,\n    decimal,\n    integer,\n    nonPositiveInteger,\n    negativeInteger,\n    nonNegativeInteger,\n    positiveInteger,\n    long_,\n    int_,\n    short_,\n    byte_,\n    unsignedLong,\n    unsignedInt,\n    unsignedShort,\n    unsignedByte,\n    boolean_,\n    base64Binary,\n    hexBinary,\n    float_,\n    double_,\n    QName,\n    NOTATION,\n    duration,\n    dateTime,\n    time,\n    date,\n    gYearMonth,\n    gYear,\n    gMonthDay,\n    gDay,\n    gMonth,\n    anyURI,\n];\nvar library = {\n    // tslint:disable-next-line: no-http-string\n    uri: \"http://www.w3.org/2001/XMLSchema-datatypes\",\n    types: {},\n};\nfor (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n    var type = types_1[_i];\n    var instance = new type();\n    library.types[instance.name] = instance;\n}\n/**\n * The XML Schema datatype library.\n */\nexports.xmlschema = library;\n//  LocalWords:  XMLSchema datatypes MPL whitespace param minLength maxLength\n//  LocalWords:  RNG rng failedOn totalDigits fractionDigits ValueError repr zA\n//  LocalWords:  ParamError maxInclusive maxExclusive NaN minInclusive params\n//  LocalWords:  minExclusive whitespaces parseParams unparsed XMLSChema NCName\n//  LocalWords:  normalizedString xmlNameChar NMTOKEN NMTOKENS IDREF xmlNcname\n//  LocalWords:  IDREFS decimalPattern integerPattern highestVal lowestVal AQgw\n//  LocalWords:  nonPositiveInteger negativeInteger nonNegativeInteger Za fA Ee\n//  LocalWords:  positiveInteger unsignedLong unsignedInt unsignedShort QName\n//  LocalWords:  unsignedByte AEIMQUYcgkosw hexBinary tzPattern yearPattern TZ\n//  LocalWords:  monthPattern domPattern timePattern dateTime gYearMonth gYear\n//  LocalWords:  gMonthDay gDay gMonth anyURI\n\n//# sourceMappingURL=xmlschema.js.map\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``attribute`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = __webpack_require__(1);\nvar base_1 = __webpack_require__(0);\n/**\n * A pattern for attributes.\n */\nvar Attribute = (function (_super) {\n    __extends(Attribute, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param name The qualified name of the attribute.\n     *\n     * @param pat The pattern contained by this one.\n     */\n    function Attribute(xmlPath, name, pat) {\n        var _this = _super.call(this, xmlPath, pat) || this;\n        _this.name = name;\n        return _this;\n    }\n    Attribute.prototype._prepare = function (namespaces) {\n        var nss = Object.create(null);\n        this.name._recordNamespaces(nss);\n        // A lack of namespace on an attribute should not be recorded.\n        delete nss[\"\"];\n        // Copy the resulting namespaces.\n        // tslint:disable-next-line:forin\n        for (var key in nss) {\n            namespaces[key] = 1;\n        }\n    };\n    Attribute.prototype._hasAttrs = function () {\n        return true;\n    };\n    return Attribute;\n}(base_1.OneSubpattern));\nexports.Attribute = Attribute;\n/**\n * Walker for [[Attribute]].\n */\nvar AttributeWalker = (function (_super) {\n    __extends(AttributeWalker, _super);\n    function AttributeWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof AttributeWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.seenName = walker.seenName;\n            _this.seenValue = walker.seenValue;\n            _this.subwalker = walker.subwalker !== undefined ?\n                walker.subwalker._clone(memo) : undefined;\n            // No need to clone; values are immutable.\n            _this.attrNameEvent = walker.attrNameEvent;\n            _this.neutralized = walker.neutralized;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.attrNameEvent = new base_1.Event(\"attributeName\", el.name);\n            _this.seenName = false;\n            _this.seenValue = false;\n            _this.neutralized = false;\n        }\n        return _this;\n    }\n    AttributeWalker.prototype._possible = function () {\n        // We've been suppressed!\n        if (this.suppressedAttributes) {\n            return new base_1.EventSet();\n        }\n        if (!this.seenName) {\n            return new base_1.EventSet(this.attrNameEvent);\n        }\n        else if (!this.seenValue) {\n            if (this.subwalker === undefined) {\n                this.subwalker = this.el.pat.newWalker(this.nameResolver);\n            }\n            var sub = this.subwalker._possible();\n            var ret_1 = new base_1.EventSet();\n            // Convert text events to attributeValue events.\n            sub.forEach(function (ev) {\n                if (ev.params[0] !== \"text\") {\n                    throw new Error(\"unexpected event type: \" + ev.params[0]);\n                }\n                ret_1.add(new base_1.Event(\"attributeValue\", ev.params[1]));\n            });\n            return ret_1;\n        }\n        return new base_1.EventSet();\n    };\n    AttributeWalker.prototype.possible = function () {\n        // _possible always return new sets.\n        return this._possible();\n    };\n    AttributeWalker.prototype.fireEvent = function (ev) {\n        if (this.suppressedAttributes || this.neutralized) {\n            return undefined;\n        }\n        if ((ev.params[0] === \"neutralizeAttribute\") &&\n            this.el.name.toString() === ev.params[1].toString()) {\n            this.neutralized = true;\n            return false;\n        }\n        if (this.seenName) {\n            if (!this.seenValue && ev.params[0] === \"attributeValue\") {\n                this.seenValue = true;\n                if (this.subwalker === undefined) {\n                    this.subwalker = this.el.pat.newWalker(this.nameResolver);\n                }\n                // Convert the attributeValue event to a text event.\n                var textEv = new base_1.Event(\"text\", ev.params[1]);\n                var ret = this.subwalker.fireEvent(textEv);\n                if (ret === undefined) {\n                    return [new errors_1.AttributeValueError(\"invalid attribute value\", this.el.name)];\n                }\n                // Attributes end immediately.\n                if (ret === false) {\n                    ret = this.subwalker.end();\n                }\n                return ret;\n            }\n        }\n        else if (ev.params[0] === \"attributeName\" &&\n            this.el.name.match(ev.params[1], ev.params[2])) {\n            this.seenName = true;\n            return false;\n        }\n        return undefined;\n    };\n    AttributeWalker.prototype._suppressAttributes = function () {\n        this.suppressedAttributes = true;\n    };\n    AttributeWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        return this.seenValue || this.neutralized;\n    };\n    AttributeWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (this.neutralized) {\n            return false;\n        }\n        if (!this.seenName) {\n            return [new errors_1.AttributeNameError(\"attribute missing\", this.el.name)];\n        }\n        else if (!this.seenValue) {\n            return [new errors_1.AttributeValueError(\"attribute value missing\", this.el.name)];\n        }\n        return false;\n    };\n    return AttributeWalker;\n}(base_1.Walker));\nbase_1.addWalker(Attribute, AttributeWalker);\n//  LocalWords:  RNG's MPL RNG attributeName attributeValue ev params\n//  LocalWords:  neutralizeAttribute\n\n//# sourceMappingURL=attribute.js.map\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``choice`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = __webpack_require__(1);\nvar base_1 = __webpack_require__(0);\n/**\n * A pattern for ``<choice>``.\n */\nvar Choice = (function (_super) {\n    __extends(Choice, _super);\n    function Choice() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Choice;\n}(base_1.TwoSubpatterns));\nexports.Choice = Choice;\n/**\n * Walker for [[Choice]].\n */\nvar ChoiceWalker = (function (_super) {\n    __extends(ChoiceWalker, _super);\n    function ChoiceWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof ChoiceWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.chosen = walker.chosen;\n            _this.walkerA = walker.walkerA !== undefined ?\n                walker.walkerA._clone(memo) : undefined;\n            _this.walkerB = walker.walkerB !== undefined ?\n                walker.walkerB._clone(memo) : undefined;\n            _this.instantiatedWalkers = walker.instantiatedWalkers;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.chosen = false;\n            _this.instantiatedWalkers = false;\n        }\n        return _this;\n    }\n    ChoiceWalker.prototype._possible = function () {\n        this._instantiateWalkers();\n        if (this.possibleCached !== undefined) {\n            return this.possibleCached;\n        }\n        this.possibleCached = this.walkerA !== undefined ?\n            this.walkerA._possible() : undefined;\n        if (this.walkerB !== undefined) {\n            this.possibleCached = new base_1.EventSet(this.possibleCached);\n            var possibleB = this.walkerB._possible();\n            this.possibleCached.union(possibleB);\n        }\n        else if (this.possibleCached === undefined) {\n            this.possibleCached = new base_1.EventSet();\n        }\n        return this.possibleCached;\n    };\n    ChoiceWalker.prototype.fireEvent = function (ev) {\n        this._instantiateWalkers();\n        this.possibleCached = undefined;\n        // We purposely do not normalize this.walker_{a,b} to a boolean value\n        // because we do want `undefined` to be the result if the walkers are\n        // undefined.\n        var retA = this.walkerA !== undefined ?\n            this.walkerA.fireEvent(ev) : undefined;\n        var retB = this.walkerB !== undefined ?\n            this.walkerB.fireEvent(ev) : undefined;\n        if (retA !== undefined) {\n            this.chosen = true;\n            if (retB === undefined) {\n                this.walkerB = undefined;\n                return retA;\n            }\n            return retA;\n        }\n        if (retB !== undefined) {\n            this.chosen = true;\n            // We do not need to test if retA is undefined because we would not get\n            // here if it were not.\n            this.walkerA = undefined;\n            return retB;\n        }\n        return undefined;\n    };\n    ChoiceWalker.prototype._suppressAttributes = function () {\n        this._instantiateWalkers();\n        if (!this.suppressedAttributes) {\n            this.possibleCached = undefined; // no longer valid\n            this.suppressedAttributes = true;\n            if (this.walkerA !== undefined) {\n                this.walkerA._suppressAttributes();\n            }\n            if (this.walkerB !== undefined) {\n                this.walkerB._suppressAttributes();\n            }\n        }\n    };\n    ChoiceWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        this._instantiateWalkers();\n        var retA = false;\n        var retB = false;\n        if (attribute) {\n            retA = !this.el.patA._hasAttrs();\n            retB = !this.el.patB._hasAttrs();\n        }\n        retA = retA || (this.walkerA !== undefined &&\n            this.walkerA.canEnd(attribute));\n        retB = retB || (this.walkerB !== undefined &&\n            this.walkerB.canEnd(attribute));\n        // ChoiceWalker can end if any walker can end. The assignments earlier\n        // ensure that the logic works.\n        return retA || retB;\n    };\n    ChoiceWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        this._instantiateWalkers();\n        if (this.canEnd(attribute)) {\n            return false;\n        }\n        var retA = this.walkerA !== undefined &&\n            this.walkerA.end(attribute);\n        var retB = this.walkerB !== undefined &&\n            this.walkerB.end(attribute);\n        if (!retA && !retB) {\n            return false;\n        }\n        if (retA && !retB) {\n            return retA;\n        }\n        if (!retA && retB) {\n            return retB;\n        }\n        // If we are here both walkers exist and returned an error.\n        var namesA = [];\n        var namesB = [];\n        var notAChoiceError = false;\n        // tslint:disable-next-line:no-non-null-assertion\n        this.walkerA.possible().forEach(function (ev) {\n            if (ev.params[0] === \"enterStartTag\") {\n                namesA.push(ev.params[1]);\n            }\n            else {\n                notAChoiceError = true;\n            }\n        });\n        // The as boolean casts are necessary due to a flaw in the type inference\n        // done by TS. Without the cast, TS thinks notAChoiceError is necessarily\n        // false here and tslint issues a warning.\n        if (!notAChoiceError) {\n            // tslint:disable-next-line:no-non-null-assertion\n            this.walkerB.possible().forEach(function (ev) {\n                if (ev.params[0] === \"enterStartTag\") {\n                    namesB.push(ev.params[1]);\n                }\n                else {\n                    notAChoiceError = true;\n                }\n            });\n            if (!notAChoiceError) {\n                return [new errors_1.ChoiceError(namesA, namesB)];\n            }\n        }\n        // If we get here, we were not able to raise a ChoiceError, possibly\n        // because there was not enough information to decide among the two\n        // walkers. Return whatever error comes first.\n        return retA || retB;\n    };\n    /**\n     * Creates walkers for the patterns contained by this one. Calling this method\n     * multiple times is safe as the walkers are created once and only once.\n     */\n    ChoiceWalker.prototype._instantiateWalkers = function () {\n        if (!this.instantiatedWalkers) {\n            this.instantiatedWalkers = true;\n            this.walkerA = this.el.patA.newWalker(this.nameResolver);\n            this.walkerB = this.el.patB.newWalker(this.nameResolver);\n        }\n    };\n    return ChoiceWalker;\n}(base_1.Walker));\nbase_1.addWalker(Choice, ChoiceWalker);\n//  LocalWords:  RNG's MPL retA ChoiceWalker enterStartTag notAChoiceError\n//  LocalWords:  tslint ChoiceError\n\n//# sourceMappingURL=choice.js.map\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``data`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar datatypes_1 = __webpack_require__(10);\nvar errors_1 = __webpack_require__(1);\nvar base_1 = __webpack_require__(0);\n/**\n * Data pattern.\n */\nvar Data = (function (_super) {\n    __extends(Data, _super);\n    /**\n     *\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param type The type of value.\n     *\n     * @param datatypeLibrary The URI of the datatype library to use.\n     *\n     * @param params The parameters from the RNG file.\n     *\n     * @param except The exception pattern.\n     */\n    // tslint:disable-next-line: no-reserved-keywords\n    function Data(xmlPath, type, datatypeLibrary, params, except) {\n        if (type === void 0) { type = \"token\"; }\n        if (datatypeLibrary === void 0) { datatypeLibrary = \"\"; }\n        var _this = _super.call(this, xmlPath) || this;\n        _this.type = type;\n        _this.datatypeLibrary = datatypeLibrary;\n        _this.except = except;\n        _this.datatype = datatypes_1.registry.get(_this.datatypeLibrary).types[_this.type];\n        if (_this.datatype === undefined) {\n            throw new Error(\"unknown type: \" + type);\n        }\n        _this.rngParams = params !== undefined ? params : [];\n        return _this;\n    }\n    Object.defineProperty(Data.prototype, \"params\", {\n        get: function () {\n            var ret = this._params;\n            if (ret != null) {\n                return ret;\n            }\n            ret = this._params = this.datatype.parseParams(this.xmlPath, this.rngParams);\n            return ret;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Data;\n}(base_1.Pattern));\nexports.Data = Data;\n/**\n * Walker for [[Data]].\n */\nvar DataWalker = (function (_super) {\n    __extends(DataWalker, _super);\n    function DataWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof DataWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.context = walker.context !== undefined ?\n                { resolver: _this.nameResolver } : undefined;\n            _this.matched = walker.matched;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo, \"as 2nd argument\");\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            // We completely ignore the possible exception when producing the\n            // possibilities. There is no clean way to specify such an exception.\n            _this.possibleCached = new base_1.EventSet(new base_1.Event(\"text\", _this.el.datatype.regexp));\n            _this.context = el.datatype.needsContext ?\n                { resolver: _this.nameResolver } : undefined;\n            _this.matched = false;\n        }\n        return _this;\n    }\n    DataWalker.prototype._possible = function () {\n        // possibleCached is necessarily defined because of the constructor's\n        // logic.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.possibleCached;\n    };\n    DataWalker.prototype.fireEvent = function (ev) {\n        if (this.matched) {\n            return undefined;\n        }\n        if (ev.params[0] !== \"text\") {\n            return undefined;\n        }\n        if (this.el.datatype.disallows(ev.params[1], this.el.params, this.context)) {\n            return undefined;\n        }\n        if (this.el.except !== undefined) {\n            var walker = this.el.except.newWalker(this.nameResolver);\n            var exceptRet = walker.fireEvent(ev);\n            // False, so the except does match the text, and so this pattern does\n            // not match it.\n            if (exceptRet === false) {\n                return undefined;\n            }\n            // Otherwise, it is undefined, in which case it means the except does\n            // not match the text, and we are fine. Or it would be possible for the\n            // walker to have returned an error but there is nothing we can do with\n            // such errors here.\n        }\n        this.matched = true;\n        this.possibleCached = new base_1.EventSet();\n        return false;\n    };\n    DataWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        // If we matched, we are done. salve does not allow text that appears in\n        // an XML element to be passed as two \"text\" events. So there is nothing\n        // to come that could falsify the match. (If a client *does* pass\n        // multiple text events one after the other, it is using salve\n        // incorrectly.)\n        if (this.matched) {\n            return true;\n        }\n        // We have not matched anything. Therefore we have to check whether we\n        // allow the empty string.\n        if (this.el.except !== undefined) {\n            var walker = this.el.except.newWalker(this.nameResolver);\n            if (walker.canEnd()) {\n                return false;\n            }\n        }\n        return !this.el.datatype.disallows(\"\", this.el.params, this.context);\n    };\n    DataWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (this.canEnd(attribute)) {\n            return false;\n        }\n        return [new errors_1.ValidationError(\"value required\")];\n    };\n    DataWalker.prototype._suppressAttributes = function () {\n        // No child attributes.\n    };\n    return DataWalker;\n}(base_1.Walker));\nbase_1.addWalker(Data, DataWalker);\n//  LocalWords:  RNG's MPL RNG nd possibleCached\n\n//# sourceMappingURL=data.js.map\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``element`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = __webpack_require__(1);\nvar namePatterns = __webpack_require__(2);\nvar base_1 = __webpack_require__(0);\nvar not_allowed_1 = __webpack_require__(6);\n/**\n * A pattern for elements.\n */\nvar Element = (function (_super) {\n    __extends(Element, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param name The qualified name of the element.\n     *\n     * @param pat The pattern contained by this one.\n     */\n    function Element(xmlPath, name, pat) {\n        var _this = _super.call(this, xmlPath, pat) || this;\n        _this.name = name;\n        return _this;\n    }\n    Element.prototype._prepare = function (namespaces) {\n        this.name._recordNamespaces(namespaces);\n        this.pat._prepare(namespaces);\n    };\n    // addWalker(Element, ElementWalker); Nope... see below..\n    Element.prototype.newWalker = function (resolver) {\n        if (this.pat instanceof not_allowed_1.NotAllowed) {\n            return this.pat.newWalker(resolver);\n        }\n        // tslint:disable-next-line:no-use-before-declare\n        return ElementWalker.makeWalker(this, resolver);\n    };\n    Element.prototype._hasAttrs = function () {\n        return false;\n    };\n    Element.prototype._gatherElementDefinitions = function (memo) {\n        var key = this.name.toString();\n        if (memo[key] === undefined) {\n            memo[key] = [this];\n        }\n        else {\n            memo[key].push(this);\n        }\n    };\n    return Element;\n}(base_1.OneSubpattern));\nexports.Element = Element;\n/**\n *\n * Walker for [[Element]].\n */\nvar ElementWalker = (function (_super) {\n    __extends(ElementWalker, _super);\n    function ElementWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof ElementWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.seenName = walker.seenName;\n            _this.endedStartTag = walker.endedStartTag;\n            _this.closed = walker.closed;\n            _this.walker = walker.walker !== undefined ? walker.walker._clone(memo) :\n                undefined;\n            // No cloning needed since these are immutable.\n            _this.startTagEvent = walker.startTagEvent;\n            _this.endTagEvent = walker.endTagEvent;\n            _this.boundName = walker.boundName;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.seenName = false;\n            _this.endedStartTag = false;\n            _this.closed = false;\n            _this.startTagEvent = new base_1.Event(\"enterStartTag\", el.name);\n        }\n        return _this;\n    }\n    ElementWalker.makeWalker = function (el, nameResolver) {\n        return new ElementWalker(el, nameResolver);\n    };\n    ElementWalker.prototype._possible = function () {\n        if (!this.seenName) {\n            return new base_1.EventSet(this.startTagEvent);\n        }\n        else if (!this.endedStartTag) {\n            // If we have seen the name, then there is necessarily a walker.\n            // tslint:disable-next-line:no-non-null-assertion\n            var walker = this.walker;\n            var all = walker._possible();\n            var ret_1 = new base_1.EventSet();\n            // We use valueEvs to record whether an attributeValue is a\n            // possibility. If so, we must only return these possibilities and no\n            // other.\n            var valueEvs_1 = new base_1.EventSet();\n            all.forEach(function (poss) {\n                if (poss.params[0] === \"attributeValue\") {\n                    valueEvs_1.add(poss);\n                }\n                else if (poss.isAttributeEvent()) {\n                    ret_1.add(poss);\n                }\n            });\n            if (valueEvs_1.size() !== 0) {\n                ret_1 = valueEvs_1;\n            }\n            else if (walker.canEnd(true)) {\n                ret_1.add(ElementWalker._leaveStartTagEvent);\n            }\n            return ret_1;\n        }\n        else if (!this.closed) {\n            // If we have seen the name, then there is necessarily a walker.\n            // tslint:disable-next-line:no-non-null-assertion\n            var walker = this.walker;\n            var posses = new base_1.EventSet(walker._possible());\n            if (walker.canEnd()) {\n                posses.add(this.endTagEvent);\n            }\n            return posses;\n        }\n        return new base_1.EventSet();\n    };\n    // _possible always returns new sets\n    ElementWalker.prototype.possible = function () {\n        return this._possible();\n    };\n    ElementWalker.prototype.fireEvent = function (ev) {\n        if (!this.endedStartTag) {\n            if (!this.seenName) {\n                if (ev.params[0] === \"enterStartTag\" &&\n                    this.el.name.match(ev.params[1], ev.params[2])) {\n                    this.walker = this.el.pat.newWalker(this.nameResolver);\n                    this.seenName = true;\n                    this.boundName = new namePatterns.Name(\"\", ev.params[1], ev.params[2]);\n                    this.endTagEvent = new base_1.Event(\"endTag\", this.boundName);\n                    return false;\n                }\n            }\n            else if (ev.params[0] === \"leaveStartTag\") {\n                this.endedStartTag = true;\n                // If we have seen the name, then there is necessarily a walker.\n                // tslint:disable-next-line:no-non-null-assertion\n                var walker = this.walker;\n                var errs = walker.end(true);\n                var ret = [];\n                if (errs) {\n                    for (var _i = 0, errs_1 = errs; _i < errs_1.length; _i++) {\n                        var err = errs_1[_i];\n                        if (err instanceof errors_1.AttributeValueError ||\n                            err instanceof errors_1.AttributeNameError) {\n                            ret.push(err);\n                        }\n                        if (err instanceof errors_1.AttributeNameError) {\n                            // We generate an internal event designed to neutralize the\n                            // attributes that errored.\n                            walker.fireEvent(new base_1.Event([\"neutralizeAttribute\", err.name]));\n                        }\n                    }\n                }\n                // And suppress the attributes.\n                walker._suppressAttributes();\n                return ret.length !== 0 ? ret : false;\n            }\n            return this.walker !== undefined ? this.walker.fireEvent(ev) : undefined;\n        }\n        else if (!this.closed) {\n            // If we have ended the start tag, then there is necessarily a walker.\n            // tslint:disable-next-line:no-non-null-assertion\n            var walker = this.walker;\n            var ret = walker.fireEvent(ev);\n            if (ret === undefined) {\n                // Our subwalker did not handle the event, so we must do it here.\n                if (ev.params[0] === \"endTag\") {\n                    // boundName is necessarily defined by the time we get here.\n                    // tslint:disable-next-line:no-non-null-assertion\n                    if (this.boundName.match(ev.params[1], ev.params[2])) {\n                        this.closed = true;\n                        var errs = walker.end();\n                        ret = [];\n                        // Strip out the attributes errors as we've already reported\n                        // them.\n                        if (errs) {\n                            for (var _a = 0, errs_2 = errs; _a < errs_2.length; _a++) {\n                                var err = errs_2[_a];\n                                if (!(err instanceof errors_1.AttributeValueError ||\n                                    err instanceof errors_1.AttributeNameError)) {\n                                    ret.push(err);\n                                }\n                            }\n                        }\n                        return ret.length !== 0 ? ret : false;\n                    }\n                }\n                else if (ev.params[0] === \"leaveStartTag\") {\n                    return [new errors_1.ValidationError(\"unexpected leaveStartTag event; it is likely that \" +\n                            \"fireEvent is incorrectly called\")];\n                }\n            }\n            return ret;\n        }\n        return undefined;\n    };\n    ElementWalker.prototype._suppressAttributes = function () {\n        // _suppressAttributes does not cross element boundary\n        return;\n    };\n    ElementWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (attribute) {\n            return true;\n        }\n        return this.closed;\n    };\n    ElementWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (attribute) {\n            return false;\n        }\n        var ret = [];\n        if (!this.seenName) {\n            ret.push(new errors_1.ElementNameError(\"tag required\", this.el.name));\n        }\n        else if (!this.endedStartTag || !this.closed) {\n            if (this.walker !== undefined) {\n                var errs = this.walker.end();\n                if (errs) {\n                    ret = errs;\n                }\n            }\n            ret.push(this.endedStartTag ?\n                new errors_1.ElementNameError(\"tag not closed\", this.el.name) :\n                new errors_1.ElementNameError(\"start tag not terminated\", this.el.name));\n        }\n        if (ret.length > 0) {\n            return ret;\n        }\n        return false;\n    };\n    ElementWalker._leaveStartTagEvent = new base_1.Event(\"leaveStartTag\");\n    return ElementWalker;\n}(base_1.Walker));\n//  LocalWords:  RNG's MPL RNG addWalker ElementWalker leaveStartTag valueEvs\n//  LocalWords:  enterStartTag attributeValue endTag errored subwalker\n//  LocalWords:  neutralizeAttribute boundName fireEvent suppressAttributes\n\n//# sourceMappingURL=element.js.map\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_1 = __webpack_require__(0);\n/**\n * Pattern for ``<empty/>``.\n */\nvar Empty = (function (_super) {\n    __extends(Empty, _super);\n    function Empty() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Empty;\n}(base_1.Pattern));\nexports.Empty = Empty;\n/**\n * Walker for [[Empty]].\n *\n * @param el The pattern for which this walker was created.\n *\n * @param resolver Ignored by this walker.\n */\nvar EmptyWalker = (function (_super) {\n    __extends(EmptyWalker, _super);\n    function EmptyWalker(elOrWalker, memo) {\n        var _this = this;\n        if (elOrWalker instanceof EmptyWalker) {\n            memo = base_1.isHashMap(memo);\n            _this = _super.call(this, elOrWalker, memo) || this;\n        }\n        else {\n            _this = _super.call(this, elOrWalker) || this;\n            _this.possibleCached = new base_1.EventSet();\n        }\n        return _this;\n    }\n    EmptyWalker.prototype.possible = function () {\n        // Save some time by avoiding calling _possible. We always want to return a\n        // new object here.\n        return new base_1.EventSet();\n    };\n    EmptyWalker.prototype._possible = function () {\n        // possibleCached is necessarily defined because of the constructor's\n        // logic.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.possibleCached;\n    };\n    EmptyWalker.prototype.fireEvent = function (ev) {\n        if ((ev === base_1.emptyEvent) ||\n            ((ev.params[0] === \"text\") &&\n                (ev.params[1].trim() === \"\"))) {\n            return false;\n        }\n        return undefined;\n    };\n    return EmptyWalker;\n}(base_1.Walker));\nexports.EmptyWalker = EmptyWalker;\nbase_1.addWalker(Empty, EmptyWalker);\n//  LocalWords:  RNG's MPL possibleCached\n\n//# sourceMappingURL=empty.js.map\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``group`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = __webpack_require__(1);\nvar base_1 = __webpack_require__(0);\n/**\n * A pattern for ``<group>``.\n */\nvar Group = (function (_super) {\n    __extends(Group, _super);\n    function Group() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Group;\n}(base_1.TwoSubpatterns));\nexports.Group = Group;\n/**\n * Walker for [[Group]].\n */\nvar GroupWalker = (function (_super) {\n    __extends(GroupWalker, _super);\n    function GroupWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof GroupWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.hitA = walker.hitA;\n            _this.endedA = walker.endedA;\n            _this.hitB = walker.hitB;\n            _this.walkerA = walker.walkerA !== undefined ?\n                walker.walkerA._clone(memo) : undefined;\n            _this.walkerB = walker.walkerB !== undefined ?\n                walker.walkerB._clone(memo) : undefined;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.hitA = false;\n            _this.endedA = false;\n            _this.hitB = false;\n        }\n        return _this;\n    }\n    GroupWalker.prototype._possible = function () {\n        this._instantiateWalkers();\n        if (this.possibleCached !== undefined) {\n            return this.possibleCached;\n        }\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable:no-non-null-assertion\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        // tslint:enable:no-non-null-assertion\n        this.possibleCached = (!this.endedA) ? walkerA._possible() : undefined;\n        if (this.suppressedAttributes) {\n            // If we are in the midst of processing walker a and it cannot end yet,\n            // then we do not want to see anything from b.\n            if (this.endedA || walkerA.canEnd()) {\n                this.possibleCached = new base_1.EventSet(this.possibleCached);\n                this.possibleCached.union(walkerB._possible());\n            }\n        }\n        else {\n            var possibleB = walkerB._possible();\n            // Attribute events are still possible event if the first walker is not\n            // done with.\n            if ((!this.endedA || this.hitB) && !walkerA.canEnd()) {\n                // Narrow it down to attribute events...\n                possibleB = possibleB.filter(function (x) { return x.isAttributeEvent(); });\n            }\n            this.possibleCached = new base_1.EventSet(this.possibleCached);\n            this.possibleCached.union(possibleB);\n        }\n        // Necessarily defined once we get here.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.possibleCached;\n    };\n    GroupWalker.prototype.fireEvent = function (ev) {\n        this._instantiateWalkers();\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable:no-non-null-assertion\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        // tslint:enable:no-non-null-assertion\n        this.possibleCached = undefined;\n        if (!this.endedA) {\n            var retA = walkerA.fireEvent(ev);\n            if (retA !== undefined) {\n                this.hitA = true;\n                return retA;\n            }\n            // We must return right away if walkerA cannot yet end. Only attribute\n            // events are allowed to move forward.\n            if (!ev.isAttributeEvent() && !walkerA.canEnd()) {\n                return undefined;\n            }\n        }\n        var retB = walkerB.fireEvent(ev);\n        if (retB !== undefined) {\n            this.hitB = true;\n        }\n        // Non-attribute event: if walker b matched the event then we must end\n        // walkerA, if we've not already done so.\n        if (!ev.isAttributeEvent() && retB !== undefined && !this.endedA) {\n            var endRet = walkerA.end();\n            this.endedA = true;\n            // Combine the possible errors.\n            if (!retB) {\n                // retB must be false, because retB === undefined has been\n                // eliminated above; toss it.\n                retB = endRet;\n            }\n            else if (endRet) {\n                retB = retB.concat(endRet);\n            }\n        }\n        return retB;\n    };\n    GroupWalker.prototype._suppressAttributes = function () {\n        this._instantiateWalkers();\n        if (!this.suppressedAttributes) {\n            this.possibleCached = undefined; // no longer valid\n            this.suppressedAttributes = true;\n            // Both walkers are necessarily defined because of the call to\n            // _instantiateWalkers.\n            //\n            // tslint:disable:no-non-null-assertion\n            this.walkerA._suppressAttributes();\n            this.walkerB._suppressAttributes();\n            // tslint:enable:no-non-null-assertion\n        }\n    };\n    GroupWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        this._instantiateWalkers();\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable:no-non-null-assertion\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        // tslint:enable:no-non-null-assertion\n        if (attribute) {\n            var aHas = this.el.patA._hasAttrs();\n            var bHas = this.el.patB._hasAttrs();\n            if (aHas && bHas) {\n                return walkerA.canEnd(attribute) && walkerB.canEnd(attribute);\n            }\n            else if (aHas) {\n                return walkerA.canEnd(true);\n            }\n            else if (bHas) {\n                return walkerB.canEnd(true);\n            }\n            return true;\n        }\n        return walkerA.canEnd(attribute) && walkerB.canEnd(attribute);\n    };\n    GroupWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (this.canEnd(attribute)) {\n            return false;\n        }\n        var ret;\n        // Both walkers are necessarily defined because of the call to canEnd.\n        //\n        // tslint:disable:no-non-null-assertion\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        // tslint:enable:no-non-null-assertion\n        if (attribute) {\n            var aHas = this.el.patA._hasAttrs();\n            var bHas = this.el.patB._hasAttrs();\n            if (aHas) {\n                // This should not happen. this.endedA is to become true when we run\n                // into a non-attribute event that matches. This can happen only once we\n                // have deal with all attributes.\n                if (this.endedA) {\n                    throw new Error(\"invalid state: endedA is true but we are processing attributes\");\n                }\n                ret = walkerA.end(true);\n                if (bHas) {\n                    var endB = walkerB.end(true);\n                    if (endB) {\n                        ret = ret ? ret.concat(endB) : endB;\n                    }\n                }\n                return ret;\n            }\n            if (bHas) {\n                return walkerB.end(true);\n            }\n            return false;\n        }\n        var retA = false;\n        // Don't end it more than once.\n        if (!this.endedA) {\n            retA = walkerA.end(false);\n            // If we get here and the only errors we get are attribute errors,\n            // we must move on to check the second walker too.\n            if (retA) {\n                for (var _i = 0, retA_1 = retA; _i < retA_1.length; _i++) {\n                    var err = retA_1[_i];\n                    if (!(err instanceof errors_1.AttributeValueError ||\n                        err instanceof errors_1.AttributeNameError)) {\n                        // We ran into a non-attribute error. We can stop here.\n                        return retA;\n                    }\n                }\n            }\n        }\n        var retB = walkerB.end(false);\n        if (retB) {\n            if (!retA) {\n                return retB;\n            }\n            else {\n                return retA.concat(retB);\n            }\n        }\n        return retA;\n    };\n    /**\n     * Creates walkers for the patterns contained by this one. Calling this\n     * method multiple times is safe as the walkers are created once and only\n     * once.\n     */\n    GroupWalker.prototype._instantiateWalkers = function () {\n        if (this.walkerA === undefined) {\n            this.walkerA = this.el.patA.newWalker(this.nameResolver);\n            this.walkerB = this.el.patB.newWalker(this.nameResolver);\n        }\n    };\n    return GroupWalker;\n}(base_1.Walker));\nbase_1.addWalker(Group, GroupWalker);\n//  LocalWords:  RNG's MPL instantiateWalkers walkerA retB canEnd endedA\n\n//# sourceMappingURL=group.js.map\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_1 = __webpack_require__(0);\n/**\n * A pattern for ``<interleave>``.\n */\nvar Interleave = (function (_super) {\n    __extends(Interleave, _super);\n    function Interleave() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Interleave;\n}(base_1.TwoSubpatterns));\nexports.Interleave = Interleave;\n/**\n * Walker for [[Interleave]].\n */\nvar InterleaveWalker = (function (_super) {\n    __extends(InterleaveWalker, _super);\n    function InterleaveWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof InterleaveWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.inA = walker.inA;\n            _this.inB = walker.inB;\n            _this.walkerA = walker.walkerA !== undefined ?\n                walker.walkerA._clone(memo) : undefined;\n            _this.walkerB = walker.walkerB !== undefined ?\n                walker.walkerB._clone(memo) : undefined;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.inA = false;\n            _this.inB = false;\n        }\n        return _this;\n    }\n    InterleaveWalker.prototype._possible = function () {\n        this._instantiateWalkers();\n        if (this.possibleCached !== undefined) {\n            return this.possibleCached;\n        }\n        if (this.inA && this.inB) {\n            // It due to the restrictions imposed by Relax NG, it should not be\n            // possible to be both inA and inB.\n            throw new Error(\"impossible state\");\n        }\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable:no-non-null-assertion\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        // tslint:enable:no-non-null-assertion\n        if (this.inA && !walkerA.canEnd()) {\n            this.possibleCached = walkerA._possible();\n        }\n        else if (this.inB && !walkerB.canEnd()) {\n            this.possibleCached = walkerB._possible();\n        }\n        if (this.possibleCached === undefined) {\n            this.possibleCached = walkerA.possible();\n            this.possibleCached.union(walkerB._possible());\n        }\n        return this.possibleCached;\n    };\n    InterleaveWalker.prototype.fireEvent = function (ev) {\n        this._instantiateWalkers();\n        this.possibleCached = undefined;\n        if (this.inA && this.inB) {\n            // It due to the restrictions imposed by Relax NG, it should not be\n            // possible to be both inA and inB.\n            throw new Error(\"impossible state\");\n        }\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable:no-non-null-assertion\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        // tslint:enable:no-non-null-assertion\n        var retA;\n        var retB;\n        if (!this.inA && !this.inB) {\n            retA = walkerA.fireEvent(ev);\n            if (retA === false) {\n                this.inA = true;\n                return false;\n            }\n            // The constraints on interleave do not allow for two child patterns of\n            // interleave to match. So if the first walker matched, the second\n            // cannot. So we don't have to fireEvent on the second walker if the first\n            // matched.\n            retB = walkerB.fireEvent(ev);\n            if (retB === false) {\n                this.inB = true;\n                return false;\n            }\n            if (retB === undefined) {\n                return retA;\n            }\n            if (retA === undefined) {\n                return retB;\n            }\n            return retA.concat(retB);\n        }\n        else if (this.inA) {\n            retA = walkerA.fireEvent(ev);\n            if (retA instanceof Array || retA === false) {\n                return retA;\n            }\n            // If we got here, retA === undefined\n            retB = walkerB.fireEvent(ev);\n            if (retB === false) {\n                this.inA = false;\n                this.inB = true;\n                return false;\n            }\n        }\n        else {\n            retB = walkerB.fireEvent(ev);\n            if (retB instanceof Array || retB === false) {\n                return retB;\n            }\n            // If we got here, retB === undefined\n            retA = walkerA.fireEvent(ev);\n            if (retA === false) {\n                this.inA = true;\n                this.inB = false;\n                return false;\n            }\n        }\n        return undefined;\n    };\n    InterleaveWalker.prototype._suppressAttributes = function () {\n        this._instantiateWalkers();\n        if (!this.suppressedAttributes) {\n            this.possibleCached = undefined; // no longer valid\n            this.suppressedAttributes = true;\n            // Both walkers are necessarily defined because of the call to\n            // _instantiateWalkers.\n            //\n            // tslint:disable:no-non-null-assertion\n            this.walkerA._suppressAttributes();\n            this.walkerB._suppressAttributes();\n            // tslint:enable:no-non-null-assertion\n        }\n    };\n    InterleaveWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        this._instantiateWalkers();\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.walkerA.canEnd(attribute) && this.walkerB.canEnd(attribute);\n    };\n    InterleaveWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        this._instantiateWalkers();\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable:no-non-null-assertion\n        var retA = this.walkerA.end(attribute);\n        var retB = this.walkerB.end(attribute);\n        // tslint:enable:no-non-null-assertion\n        if (retA && !retB) {\n            return retA;\n        }\n        if (retB && !retA) {\n            return retB;\n        }\n        if (retA && retB) {\n            return retA.concat(retB);\n        }\n        return false;\n    };\n    /**\n     * Creates walkers for the patterns contained by this one. Calling this method\n     * multiple times is safe as the walkers are created once and only once.\n     */\n    InterleaveWalker.prototype._instantiateWalkers = function () {\n        if (this.walkerA === undefined) {\n            this.walkerA = this.el.patA.newWalker(this.nameResolver);\n        }\n        if (this.walkerB === undefined) {\n            this.walkerB = this.el.patB.newWalker(this.nameResolver);\n        }\n    };\n    return InterleaveWalker;\n}(base_1.Walker));\nbase_1.addWalker(Interleave, InterleaveWalker);\n//  LocalWords:  RNG's MPL NG inA inB instantiateWalkers fireEvent retA retB\n\n//# sourceMappingURL=interleave.js.map\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``list`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = __webpack_require__(1);\nvar base_1 = __webpack_require__(0);\n/**\n * List pattern.\n */\nvar List = (function (_super) {\n    __extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return List;\n}(base_1.OneSubpattern));\nexports.List = List;\n/**\n * Walker for [[List]].\n *\n */\nvar ListWalker = (function (_super) {\n    __extends(ListWalker, _super);\n    function ListWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof ListWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo, \"as 2nd argument\");\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.subwalker = walker.subwalker._clone(memo);\n            _this.seenTokens = walker.seenTokens;\n            _this.matched = walker.matched;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo, \"as 2nd argument\");\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.subwalker = el.pat.newWalker(_this.nameResolver);\n            _this.seenTokens = false;\n            _this.matched = false;\n        }\n        return _this;\n    }\n    ListWalker.prototype.fireEvent = function (ev) {\n        // Only these two types can match.\n        if (ev.params[0] !== \"text\") {\n            return undefined;\n        }\n        var trimmed = ev.params[1].trim();\n        // The list walker cannot send empty strings to its children because it\n        // validates a list of **tokens**.\n        if (trimmed === \"\") {\n            return false;\n        }\n        this.seenTokens = true;\n        var tokens = trimmed.split(/\\s+/);\n        for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n            var token = tokens_1[_i];\n            var ret = this.subwalker.fireEvent(new base_1.Event(ev.params[0], token));\n            if (ret !== false) {\n                return ret;\n            }\n        }\n        this.matched = true;\n        return false;\n    };\n    ListWalker.prototype._suppressAttributes = function () {\n        // Lists cannot contain attributes.\n    };\n    ListWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (!this.seenTokens) {\n            return (this.subwalker.fireEvent(base_1.emptyEvent) === false);\n        }\n        return this.subwalker.canEnd(attribute);\n    };\n    ListWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        var ret = this.subwalker.end(attribute);\n        if (ret !== false) {\n            return ret;\n        }\n        if (this.canEnd(attribute)) {\n            return false;\n        }\n        return [new errors_1.ValidationError(\"unfulfilled list\")];\n    };\n    return ListWalker;\n}(base_1.SingleSubwalker));\nbase_1.addWalker(List, ListWalker);\n//  LocalWords:  RNG's MPL nd\n\n//# sourceMappingURL=list.js.map\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_1 = __webpack_require__(0);\n/**\n * A pattern for ``<oneOrMore>``.\n */\nvar OneOrMore = (function (_super) {\n    __extends(OneOrMore, _super);\n    function OneOrMore() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return OneOrMore;\n}(base_1.OneSubpattern));\nexports.OneOrMore = OneOrMore;\n/**\n * Walker for [[OneOrMore]]\n */\nvar OneOrMoreWalker = (function (_super) {\n    __extends(OneOrMoreWalker, _super);\n    function OneOrMoreWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof OneOrMoreWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.seenOnce = walker.seenOnce;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.currentIteration = walker.currentIteration !== undefined ?\n                walker.currentIteration._clone(memo) : undefined;\n            _this.nextIteration = walker.nextIteration !== undefined ?\n                walker.nextIteration._clone(memo) : undefined;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.seenOnce = false;\n        }\n        return _this;\n    }\n    OneOrMoreWalker.prototype._possible = function () {\n        if (this.possibleCached !== undefined) {\n            return this.possibleCached;\n        }\n        this._instantiateCurrentIteration();\n        // currentIteration is necessarily defined here due to the previous call.\n        // tslint:disable-next-line:no-non-null-assertion\n        this.possibleCached = this.currentIteration._possible();\n        // tslint:disable-next-line:no-non-null-assertion\n        if (this.currentIteration.canEnd()) {\n            this.possibleCached = new base_1.EventSet(this.possibleCached);\n            this._instantiateNextIteration();\n            // nextIteration is necessarily defined here due to the previous call.\n            // tslint:disable-next-line:no-non-null-assertion\n            var nextPossible = this.nextIteration._possible();\n            this.possibleCached.union(nextPossible);\n        }\n        return this.possibleCached;\n    };\n    OneOrMoreWalker.prototype.fireEvent = function (ev) {\n        this.possibleCached = undefined;\n        this._instantiateCurrentIteration();\n        // currentIteration is necessarily defined here due to the previous call.\n        // tslint:disable-next-line:no-non-null-assertion\n        var currentIteration = this.currentIteration;\n        var ret = currentIteration.fireEvent(ev);\n        if (ret === false) {\n            this.seenOnce = true;\n        }\n        if (ret !== undefined) {\n            return ret;\n        }\n        if (this.seenOnce && currentIteration.canEnd()) {\n            ret = currentIteration.end();\n            if (ret) {\n                throw new Error(\"internal error; canEnd() returns true but end() fails\");\n            }\n            this._instantiateNextIteration();\n            // nextIteration is necessarily defined here due to the previous call.\n            // tslint:disable-next-line:no-non-null-assertion\n            var nextRet = this.nextIteration.fireEvent(ev);\n            if (nextRet === false) {\n                this.currentIteration = this.nextIteration;\n                this.nextIteration = undefined;\n            }\n            return nextRet;\n        }\n        return undefined;\n    };\n    OneOrMoreWalker.prototype._suppressAttributes = function () {\n        // A oneOrMore element can happen if we have the pattern ``(attribute * {\n        // text })+`` for instance. Once converted to the simplified RNG, it\n        // becomes:\n        //\n        // ``<oneOrMore><attribute><anyName/><rng:text/></attribute></oneOrMore>``\n        //\n        // An attribute in ``oneOrMore`` cannot happen when ``anyName`` is not used\n        // because an attribute of any given name cannot be repeated.\n        //\n        this._instantiateCurrentIteration();\n        if (!this.suppressedAttributes) {\n            this.suppressedAttributes = true;\n            this.possibleCached = undefined; // No longer valid.\n            // currentIteration is necessarily defined here...\n            // tslint:disable-next-line:no-non-null-assertion\n            this.currentIteration._suppressAttributes();\n            if (this.nextIteration !== undefined) {\n                this.nextIteration._suppressAttributes();\n            }\n        }\n    };\n    OneOrMoreWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (attribute) {\n            if (!this.el.pat._hasAttrs()) {\n                return true;\n            }\n            this._instantiateCurrentIteration();\n            // currentIteration is necessarily defined here due to the previous call.\n            // tslint:disable-next-line:no-non-null-assertion\n            return this.currentIteration.canEnd(true);\n        }\n        // currentIteration is necessarily defined here.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.seenOnce && this.currentIteration.canEnd();\n    };\n    OneOrMoreWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (this.canEnd(attribute)) {\n            return false;\n        }\n        // Undefined currentIteration can happen in rare cases.\n        this._instantiateCurrentIteration();\n        // currentIteration is necessarily defined here due to the previous call.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.currentIteration.end(attribute);\n    };\n    OneOrMoreWalker.prototype._instantiateCurrentIteration = function () {\n        if (this.currentIteration === undefined) {\n            this.currentIteration = this.el.pat.newWalker(this.nameResolver);\n        }\n    };\n    OneOrMoreWalker.prototype._instantiateNextIteration = function () {\n        if (this.nextIteration === undefined) {\n            this.nextIteration = this.el.pat.newWalker(this.nameResolver);\n            // Whereas _suppressAttributes calls _instantiateCurrentIteration() so\n            // that currentIteration is always existing and its _suppressAttributes()\n            // method is called before _suppressAttributes() returns, the same is not\n            // true of nextIteration. So if we create it **after**\n            // _suppressAttributes() was called we need to call _suppressAttributes()\n            // on it.\n            if (this.suppressedAttributes) {\n                this.nextIteration._suppressAttributes();\n            }\n        }\n    };\n    return OneOrMoreWalker;\n}(base_1.Walker));\nbase_1.addWalker(OneOrMore, OneOrMoreWalker);\n//  LocalWords:  RNG's MPL currentIteration nextIteration canEnd oneOrMore rng\n//  LocalWords:  anyName suppressAttributes instantiateCurrentIteration\n\n//# sourceMappingURL=one_or_more.js.map\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern for RNG's ``param`` element.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar base_1 = __webpack_require__(0);\n/**\n * This is a defunct pattern. During the processing of the RNG file all\n * ``param`` elements are converted into parameters to [[\"patterns/data\".Data]]\n * so we never end up with a converted file that contains an instance of this\n * class.\n */\nvar Param = (function (_super) {\n    __extends(Param, _super);\n    function Param(xmlPath) {\n        var _this = _super.call(this, xmlPath) || this;\n        throw new Error(\"this pattern is a placeholder and should never actually \" +\n            \"be used\");\n        return _this;\n    }\n    return Param;\n}(base_1.Pattern));\nexports.Param = Param;\n//  LocalWords:  RNG's MPL\n\n//# sourceMappingURL=param.js.map\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_1 = __webpack_require__(0);\nvar not_allowed_1 = __webpack_require__(6);\n/**\n * Pattern for ``<text/>``.\n */\nvar Text = (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Text;\n}(base_1.Pattern));\nexports.Text = Text;\n/**\n *\n * Walker for [[Text]]\n *\n */\nvar TextWalker = (function (_super) {\n    __extends(TextWalker, _super);\n    function TextWalker(elOrWalker, memo) {\n        var _this = this;\n        if (elOrWalker instanceof not_allowed_1.NotAllowedWalker) {\n            var walker = elOrWalker;\n            memo = base_1.isHashMap(memo);\n            _this = _super.call(this, walker, memo) || this;\n        }\n        else {\n            _this = _super.call(this, elOrWalker) || this;\n            _this.possibleCached = new base_1.EventSet(TextWalker._textEvent);\n        }\n        return _this;\n    }\n    TextWalker.prototype._possible = function () {\n        // possibleCached is necessarily defined because of the constructor's\n        // logic.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.possibleCached;\n    };\n    TextWalker.prototype.fireEvent = function (ev) {\n        return (ev.params[0] === \"text\") ? false : undefined;\n    };\n    TextWalker._textEvent = new base_1.Event(\"text\", /^.*$/);\n    return TextWalker;\n}(base_1.Walker));\nbase_1.addWalker(Text, TextWalker);\n//  LocalWords:  RNG's MPL possibleCached\n\n//# sourceMappingURL=text.js.map\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``list`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar datatypes_1 = __webpack_require__(10);\nvar errors_1 = __webpack_require__(1);\nvar name_resolver_1 = __webpack_require__(3);\nvar base_1 = __webpack_require__(0);\n/**\n * Value pattern.\n */\nvar Value = (function (_super) {\n    __extends(Value, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param value The value expected in the document.\n     *\n     * @param type The type of value. ``undefined`` means\n     * ``\"token\"``.\n     *\n     * @param datatypeLibrary The URI of the datatype library to\n     * use. ``undefined`` means use the builtin library.\n     *\n     * @param ns The namespace in which to interpret the value.\n     */\n    // tslint:disable-next-line: no-reserved-keywords\n    function Value(xmlPath, value, type, datatypeLibrary, ns) {\n        if (type === void 0) { type = \"token\"; }\n        if (datatypeLibrary === void 0) { datatypeLibrary = \"\"; }\n        if (ns === void 0) { ns = \"\"; }\n        var _this = _super.call(this, xmlPath) || this;\n        _this.type = type;\n        _this.datatypeLibrary = datatypeLibrary;\n        _this.ns = ns;\n        _this.datatype = datatypes_1.registry.get(_this.datatypeLibrary).types[_this.type];\n        if (_this.datatype === undefined) {\n            throw new Error(\"unknown type: \" + type);\n        }\n        _this.rawValue = value;\n        return _this;\n    }\n    Object.defineProperty(Value.prototype, \"value\", {\n        get: function () {\n            var ret = this._value;\n            if (ret != null) {\n                return ret;\n            }\n            // We construct a pseudo-context representing the context in the schema\n            // file.\n            var context;\n            if (this.datatype.needsContext) {\n                var nr = new name_resolver_1.NameResolver();\n                nr.definePrefix(\"\", this.ns);\n                context = { resolver: nr };\n            }\n            ret = this._value = this.datatype.parseValue(this.rawValue, context);\n            return ret;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Value;\n}(base_1.Pattern));\nexports.Value = Value;\n/**\n * Walker for [[Value]].\n */\nvar ValueWalker = (function (_super) {\n    __extends(ValueWalker, _super);\n    function ValueWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof ValueWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo, \"as 2nd argument\");\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.context = walker.context !== undefined ?\n                { resolver: _this.nameResolver } : undefined;\n            _this.matched = walker.matched;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo, \"as 2nd argument\");\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.possibleCached = new base_1.EventSet(new base_1.Event(\"text\", el.rawValue));\n            _this.context = el.datatype.needsContext ?\n                { resolver: _this.nameResolver } : undefined;\n            _this.matched = false;\n        }\n        return _this;\n    }\n    ValueWalker.prototype._possible = function () {\n        // possibleCached is necessarily defined because of the constructor's\n        // logic.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.possibleCached;\n    };\n    ValueWalker.prototype.fireEvent = function (ev) {\n        if (this.matched) {\n            return undefined;\n        }\n        if (ev.params[0] !== \"text\") {\n            return undefined;\n        }\n        if (!this.el.datatype.equal(ev.params[1], this.el.value, this.context)) {\n            return undefined;\n        }\n        this.matched = true;\n        this.possibleCached = new base_1.EventSet();\n        return false;\n    };\n    ValueWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        return this.matched || this.el.rawValue === \"\";\n    };\n    ValueWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (this.canEnd(attribute)) {\n            return false;\n        }\n        return [new errors_1.ValidationError(\"value required: \" + this.el.rawValue)];\n    };\n    ValueWalker.prototype._suppressAttributes = function () {\n        // No child attributes.\n    };\n    return ValueWalker;\n}(base_1.Walker));\nbase_1.addWalker(Value, ValueWalker);\n//  LocalWords:  RNG's MPL RNG nd possibleCached\n\n//# sourceMappingURL=value.js.map\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * A mock implementation of Node's util package. This module implements only\n * what is actually used in salve.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A mock of Node's ``util.inspect``.\n */\nfunction inspect(x) {\n    if (x === undefined) {\n        return \"undefined\";\n    }\n    if (x === null) {\n        return \"null\";\n    }\n    return x.toString();\n}\nexports.inspect = inspect;\n//  LocalWords:  Mangalam MPL Dubeau util\n\n//# sourceMappingURL=util.js.map\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * RNG-based validator.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = \"4.3.0\";\nvar patterns_1 = __webpack_require__(9);\nexports.eventsToTreeString = patterns_1.eventsToTreeString;\nexports.Event = patterns_1.Event;\nexports.EventSet = patterns_1.EventSet;\nexports.Grammar = patterns_1.Grammar;\nexports.GrammarWalker = patterns_1.GrammarWalker;\nexports.BasePattern = patterns_1.BasePattern;\nexports.RefError = patterns_1.RefError;\nexports.Walker = patterns_1.Walker;\nexports.__test = patterns_1.__test;\nvar formats_1 = __webpack_require__(14);\nexports.constructTree = formats_1.constructTree;\nvar ename_1 = __webpack_require__(4);\nexports.EName = ename_1.EName;\nvar errors_1 = __webpack_require__(1);\nexports.AttributeNameError = errors_1.AttributeNameError;\nexports.AttributeValueError = errors_1.AttributeValueError;\nexports.ChoiceError = errors_1.ChoiceError;\nexports.ElementNameError = errors_1.ElementNameError;\nexports.ValidationError = errors_1.ValidationError;\nvar name_resolver_1 = __webpack_require__(3);\nexports.NameResolver = name_resolver_1.NameResolver;\nvar name_patterns_1 = __webpack_require__(2);\nexports.BaseName = name_patterns_1.Base;\nexports.Name = name_patterns_1.Name;\nexports.NameChoice = name_patterns_1.NameChoice;\nexports.NsName = name_patterns_1.NsName;\nexports.AnyName = name_patterns_1.AnyName;\n/**\n * Do not use this. This is here only for historical reasons and may be yanked\n * at any time.\n * @private\n */\nvar hashstructs_1 = __webpack_require__(8);\nexports.HashMap = hashstructs_1.HashMap;\n//  LocalWords:  rng Mangalam Dubeau MPL RNG constructTree validator\n\n//# sourceMappingURL=validate.js.map\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n/*!\n * XRegExp.build 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2012-2016 MIT License\n * Inspired by Lea Verou's RegExp.create <lea.verou.me>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    var REGEX_DATA = 'xregexp';\n    var subParts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]/g;\n    var parts = XRegExp.union([/\\({{([\\w$]+)}}\\)|{{([\\w$]+)}}/, subParts], 'g');\n\n    /**\n     * Strips a leading `^` and trailing unescaped `$`, if both are present.\n     *\n     * @param {String} pattern Pattern to process.\n     * @returns {String} Pattern with edge anchors removed.\n     */\n    function deanchor(pattern) {\n        // Allow any number of empty noncapturing groups before/after anchors, because regexes\n        // built/generated by XRegExp sometimes include them\n        var leadingAnchor = /^(?:\\(\\?:\\))*\\^/,\n            trailingAnchor = /\\$(?:\\(\\?:\\))*$/;\n\n        if (\n            leadingAnchor.test(pattern) &&\n            trailingAnchor.test(pattern) &&\n            // Ensure that the trailing `$` isn't escaped\n            trailingAnchor.test(pattern.replace(/\\\\[\\s\\S]/g, ''))\n        ) {\n            return pattern.replace(leadingAnchor, '').replace(trailingAnchor, '');\n        }\n\n        return pattern;\n    }\n\n    /**\n     * Converts the provided value to an XRegExp. Native RegExp flags are not preserved.\n     *\n     * @param {String|RegExp} value Value to convert.\n     * @returns {RegExp} XRegExp object with XRegExp syntax applied.\n     */\n    function asXRegExp(value) {\n        return XRegExp.isRegExp(value) ?\n            (value[REGEX_DATA] && value[REGEX_DATA].captureNames ?\n                // Don't recompile, to preserve capture names\n                value :\n                // Recompile as XRegExp\n                XRegExp(value.source)\n            ) :\n            // Compile string as XRegExp\n            XRegExp(value);\n    }\n\n    /**\n     * Builds regexes using named subpatterns, for readability and pattern reuse. Backreferences in\n     * the outer pattern and provided subpatterns are automatically renumbered to work correctly.\n     * Native flags used by provided subpatterns are ignored in favor of the `flags` argument.\n     *\n     * @param {String} pattern XRegExp pattern using `{{name}}` for embedded subpatterns. Allows\n     *   `({{name}})` as shorthand for `(?<name>{{name}})`. Patterns cannot be embedded within\n     *   character classes.\n     * @param {Object} subs Lookup object for named subpatterns. Values can be strings or regexes. A\n     *   leading `^` and trailing unescaped `$` are stripped from subpatterns, if both are present.\n     * @param {String} [flags] Any combination of XRegExp flags.\n     * @returns {RegExp} Regex with interpolated subpatterns.\n     * @example\n     *\n     * var time = XRegExp.build('(?x)^ {{hours}} ({{minutes}}) $', {\n     *   hours: XRegExp.build('{{h12}} : | {{h24}}', {\n     *     h12: /1[0-2]|0?[1-9]/,\n     *     h24: /2[0-3]|[01][0-9]/\n     *   }, 'x'),\n     *   minutes: /^[0-5][0-9]$/\n     * });\n     * time.test('10:59'); // -> true\n     * XRegExp.exec('10:59', time).minutes; // -> '59'\n     */\n    XRegExp.build = function(pattern, subs, flags) {\n        var inlineFlags = /^\\(\\?([\\w$]+)\\)/.exec(pattern),\n            data = {},\n            numCaps = 0, // 'Caps' is short for captures\n            numPriorCaps,\n            numOuterCaps = 0,\n            outerCapsMap = [0],\n            outerCapNames,\n            sub,\n            p;\n\n        // Add flags within a leading mode modifier to the overall pattern's flags\n        if (inlineFlags) {\n            flags = flags || '';\n            inlineFlags[1].replace(/./g, function(flag) {\n                // Don't add duplicates\n                flags += (flags.indexOf(flag) > -1 ? '' : flag);\n            });\n        }\n\n        for (p in subs) {\n            if (subs.hasOwnProperty(p)) {\n                // Passing to XRegExp enables extended syntax and ensures independent validity,\n                // lest an unescaped `(`, `)`, `[`, or trailing `\\` breaks the `(?:)` wrapper. For\n                // subpatterns provided as native regexes, it dies on octals and adds the property\n                // used to hold extended regex instance data, for simplicity\n                sub = asXRegExp(subs[p]);\n                data[p] = {\n                    // Deanchoring allows embedding independently useful anchored regexes. If you\n                    // really need to keep your anchors, double them (i.e., `^^...$$`)\n                    pattern: deanchor(sub.source),\n                    names: sub[REGEX_DATA].captureNames || []\n                };\n            }\n        }\n\n        // Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;\n        // helps keep this simple. Named captures will be put back\n        pattern = asXRegExp(pattern);\n        outerCapNames = pattern[REGEX_DATA].captureNames || [];\n        pattern = pattern.source.replace(parts, function($0, $1, $2, $3, $4) {\n            var subName = $1 || $2,\n                capName,\n                intro,\n                localCapIndex;\n            // Named subpattern\n            if (subName) {\n                if (!data.hasOwnProperty(subName)) {\n                    throw new ReferenceError('Undefined property ' + $0);\n                }\n                // Named subpattern was wrapped in a capturing group\n                if ($1) {\n                    capName = outerCapNames[numOuterCaps];\n                    outerCapsMap[++numOuterCaps] = ++numCaps;\n                    // If it's a named group, preserve the name. Otherwise, use the subpattern name\n                    // as the capture name\n                    intro = '(?<' + (capName || subName) + '>';\n                } else {\n                    intro = '(?:';\n                }\n                numPriorCaps = numCaps;\n                return intro + data[subName].pattern.replace(subParts, function(match, paren, backref) {\n                    // Capturing group\n                    if (paren) {\n                        capName = data[subName].names[numCaps - numPriorCaps];\n                        ++numCaps;\n                        // If the current capture has a name, preserve the name\n                        if (capName) {\n                            return '(?<' + capName + '>';\n                        }\n                    // Backreference\n                    } else if (backref) {\n                        localCapIndex = +backref - 1;\n                        // Rewrite the backreference\n                        return data[subName].names[localCapIndex] ?\n                            // Need to preserve the backreference name in case using flag `n`\n                            '\\\\k<' + data[subName].names[localCapIndex] + '>' :\n                            '\\\\' + (+backref + numPriorCaps);\n                    }\n                    return match;\n                }) + ')';\n            }\n            // Capturing group\n            if ($3) {\n                capName = outerCapNames[numOuterCaps];\n                outerCapsMap[++numOuterCaps] = ++numCaps;\n                // If the current capture has a name, preserve the name\n                if (capName) {\n                    return '(?<' + capName + '>';\n                }\n            // Backreference\n            } else if ($4) {\n                localCapIndex = +$4 - 1;\n                // Rewrite the backreference\n                return outerCapNames[localCapIndex] ?\n                    // Need to preserve the backreference name in case using flag `n`\n                    '\\\\k<' + outerCapNames[localCapIndex] + '>' :\n                    '\\\\' + outerCapsMap[+$4];\n            }\n            return $0;\n        });\n\n        return XRegExp(pattern, flags);\n    };\n\n};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n/*!\n * XRegExp.matchRecursive 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2009-2016 MIT License\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Returns a match detail object composed of the provided values.\n     */\n    function row(name, value, start, end) {\n        return {\n            name: name,\n            value: value,\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Returns an array of match strings between outermost left and right delimiters, or an array of\n     * objects with detailed match parts and position data. An error is thrown if delimiters are\n     * unbalanced within the data.\n     *\n     * @param {String} str String to search.\n     * @param {String} left Left delimiter as an XRegExp pattern.\n     * @param {String} right Right delimiter as an XRegExp pattern.\n     * @param {String} [flags] Any native or XRegExp flags, used for the left and right delimiters.\n     * @param {Object} [options] Lets you specify `valueNames` and `escapeChar` options.\n     * @returns {Array} Array of matches, or an empty array.\n     * @example\n     *\n     * // Basic usage\n     * var str = '(t((e))s)t()(ing)';\n     * XRegExp.matchRecursive(str, '\\\\(', '\\\\)', 'g');\n     * // -> ['t((e))s', '', 'ing']\n     *\n     * // Extended information mode with valueNames\n     * str = 'Here is <div> <div>an</div></div> example';\n     * XRegExp.matchRecursive(str, '<div\\\\s*>', '</div>', 'gi', {\n     *   valueNames: ['between', 'left', 'match', 'right']\n     * });\n     * // -> [\n     * // {name: 'between', value: 'Here is ',       start: 0,  end: 8},\n     * // {name: 'left',    value: '<div>',          start: 8,  end: 13},\n     * // {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},\n     * // {name: 'right',   value: '</div>',         start: 27, end: 33},\n     * // {name: 'between', value: ' example',       start: 33, end: 41}\n     * // ]\n     *\n     * // Omitting unneeded parts with null valueNames, and using escapeChar\n     * str = '...{1}.\\\\{{function(x,y){return {y:x}}}';\n     * XRegExp.matchRecursive(str, '{', '}', 'g', {\n     *   valueNames: ['literal', null, 'value', null],\n     *   escapeChar: '\\\\'\n     * });\n     * // -> [\n     * // {name: 'literal', value: '...',  start: 0, end: 3},\n     * // {name: 'value',   value: '1',    start: 4, end: 5},\n     * // {name: 'literal', value: '.\\\\{', start: 6, end: 9},\n     * // {name: 'value',   value: 'function(x,y){return {y:x}}', start: 10, end: 37}\n     * // ]\n     *\n     * // Sticky mode via flag y\n     * str = '<1><<<2>>><3>4<5>';\n     * XRegExp.matchRecursive(str, '<', '>', 'gy');\n     * // -> ['1', '<<2>>', '3']\n     */\n    XRegExp.matchRecursive = function(str, left, right, flags, options) {\n        flags = flags || '';\n        options = options || {};\n        var global = flags.indexOf('g') > -1,\n            sticky = flags.indexOf('y') > -1,\n            // Flag `y` is controlled internally\n            basicFlags = flags.replace(/y/g, ''),\n            escapeChar = options.escapeChar,\n            vN = options.valueNames,\n            output = [],\n            openTokens = 0,\n            delimStart = 0,\n            delimEnd = 0,\n            lastOuterEnd = 0,\n            outerStart,\n            innerStart,\n            leftMatch,\n            rightMatch,\n            esc;\n        left = XRegExp(left, basicFlags);\n        right = XRegExp(right, basicFlags);\n\n        if (escapeChar) {\n            if (escapeChar.length > 1) {\n                throw new Error('Cannot use more than one escape character');\n            }\n            escapeChar = XRegExp.escape(escapeChar);\n            // Using `XRegExp.union` safely rewrites backreferences in `left` and `right`\n            esc = new RegExp(\n                '(?:' + escapeChar + '[\\\\S\\\\s]|(?:(?!' +\n                    XRegExp.union([left, right]).source +\n                    ')[^' + escapeChar + '])+)+',\n                // Flags `gy` not needed here\n                flags.replace(/[^imu]+/g, '')\n            );\n        }\n\n        while (true) {\n            // If using an escape character, advance to the delimiter's next starting position,\n            // skipping any escaped characters in between\n            if (escapeChar) {\n                delimEnd += (XRegExp.exec(str, esc, delimEnd, 'sticky') || [''])[0].length;\n            }\n            leftMatch = XRegExp.exec(str, left, delimEnd);\n            rightMatch = XRegExp.exec(str, right, delimEnd);\n            // Keep the leftmost match only\n            if (leftMatch && rightMatch) {\n                if (leftMatch.index <= rightMatch.index) {\n                    rightMatch = null;\n                } else {\n                    leftMatch = null;\n                }\n            }\n            // Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):\n            // LM | RM | OT | Result\n            // 1  | 0  | 1  | loop\n            // 1  | 0  | 0  | loop\n            // 0  | 1  | 1  | loop\n            // 0  | 1  | 0  | throw\n            // 0  | 0  | 1  | throw\n            // 0  | 0  | 0  | break\n            // The paths above don't include the sticky mode special case. The loop ends after the\n            // first completed match if not `global`.\n            if (leftMatch || rightMatch) {\n                delimStart = (leftMatch || rightMatch).index;\n                delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\n            } else if (!openTokens) {\n                break;\n            }\n            if (sticky && !openTokens && delimStart > lastOuterEnd) {\n                break;\n            }\n            if (leftMatch) {\n                if (!openTokens) {\n                    outerStart = delimStart;\n                    innerStart = delimEnd;\n                }\n                ++openTokens;\n            } else if (rightMatch && openTokens) {\n                if (!--openTokens) {\n                    if (vN) {\n                        if (vN[0] && outerStart > lastOuterEnd) {\n                            output.push(row(vN[0], str.slice(lastOuterEnd, outerStart), lastOuterEnd, outerStart));\n                        }\n                        if (vN[1]) {\n                            output.push(row(vN[1], str.slice(outerStart, innerStart), outerStart, innerStart));\n                        }\n                        if (vN[2]) {\n                            output.push(row(vN[2], str.slice(innerStart, delimStart), innerStart, delimStart));\n                        }\n                        if (vN[3]) {\n                            output.push(row(vN[3], str.slice(delimStart, delimEnd), delimStart, delimEnd));\n                        }\n                    } else {\n                        output.push(str.slice(innerStart, delimStart));\n                    }\n                    lastOuterEnd = delimEnd;\n                    if (!global) {\n                        break;\n                    }\n                }\n            } else {\n                throw new Error('Unbalanced delimiter found in string');\n            }\n            // If the delimiter matched an empty string, avoid an infinite loop\n            if (delimStart === delimEnd) {\n                ++delimEnd;\n            }\n        }\n\n        if (global && !sticky && vN && vN[0] && str.length > lastOuterEnd) {\n            output.push(row(vN[0], str.slice(lastOuterEnd), lastOuterEnd, str.length));\n        }\n\n        return output;\n    };\n\n};\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n/*!\n * XRegExp Unicode Base 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2008-2016 MIT License\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds base support for Unicode matching:\n     * - Adds syntax `\\p{..}` for matching Unicode tokens. Tokens can be inverted using `\\P{..}` or\n     *   `\\p{^..}`. Token names ignore case, spaces, hyphens, and underscores. You can omit the\n     *   braces for token names that are a single letter (e.g. `\\pL` or `PL`).\n     * - Adds flag A (astral), which enables 21-bit Unicode support.\n     * - Adds the `XRegExp.addUnicodeData` method used by other addons to provide character data.\n     *\n     * Unicode Base relies on externally provided Unicode character data. Official addons are\n     * available to provide data for Unicode categories, scripts, blocks, and properties.\n     *\n     * @requires XRegExp\n     */\n\n    // ==--------------------------==\n    // Private stuff\n    // ==--------------------------==\n\n    // Storage for Unicode data\n    var unicode = {};\n\n    // Reuse utils\n    var dec = XRegExp._dec;\n    var hex = XRegExp._hex;\n    var pad4 = XRegExp._pad4;\n\n    // Generates a token lookup name: lowercase, with hyphens, spaces, and underscores removed\n    function normalize(name) {\n        return name.replace(/[- _]+/g, '').toLowerCase();\n    }\n\n    // Gets the decimal code of a literal code unit, \\xHH, \\uHHHH, or a backslash-escaped literal\n    function charCode(chr) {\n        var esc = /^\\\\[xu](.+)/.exec(chr);\n        return esc ?\n            dec(esc[1]) :\n            chr.charCodeAt(chr.charAt(0) === '\\\\' ? 1 : 0);\n    }\n\n    // Inverts a list of ordered BMP characters and ranges\n    function invertBmp(range) {\n        var output = '';\n        var lastEnd = -1;\n        XRegExp.forEach(\n            range,\n            /(\\\\x..|\\\\u....|\\\\?[\\s\\S])(?:-(\\\\x..|\\\\u....|\\\\?[\\s\\S]))?/,\n            function(m) {\n                var start = charCode(m[1]);\n                if (start > (lastEnd + 1)) {\n                    output += '\\\\u' + pad4(hex(lastEnd + 1));\n                    if (start > (lastEnd + 2)) {\n                        output += '-\\\\u' + pad4(hex(start - 1));\n                    }\n                }\n                lastEnd = charCode(m[2] || m[1]);\n            }\n        );\n        if (lastEnd < 0xFFFF) {\n            output += '\\\\u' + pad4(hex(lastEnd + 1));\n            if (lastEnd < 0xFFFE) {\n                output += '-\\\\uFFFF';\n            }\n        }\n        return output;\n    }\n\n    // Generates an inverted BMP range on first use\n    function cacheInvertedBmp(slug) {\n        var prop = 'b!';\n        return unicode[slug][prop] || (\n            unicode[slug][prop] = invertBmp(unicode[slug].bmp)\n        );\n    }\n\n    // Combines and optionally negates BMP and astral data\n    function buildAstral(slug, isNegated) {\n        var item = unicode[slug],\n            combined = '';\n        if (item.bmp && !item.isBmpLast) {\n            combined = '[' + item.bmp + ']' + (item.astral ? '|' : '');\n        }\n        if (item.astral) {\n            combined += item.astral;\n        }\n        if (item.isBmpLast && item.bmp) {\n            combined += (item.astral ? '|' : '') + '[' + item.bmp + ']';\n        }\n        // Astral Unicode tokens always match a code point, never a code unit\n        return isNegated ?\n            '(?:(?!' + combined + ')(?:[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\0-\\uFFFF]))' :\n            '(?:' + combined + ')';\n    }\n\n    // Builds a complete astral pattern on first use\n    function cacheAstral(slug, isNegated) {\n        var prop = isNegated ? 'a!' : 'a=';\n        return unicode[slug][prop] || (\n            unicode[slug][prop] = buildAstral(slug, isNegated)\n        );\n    }\n\n    // ==--------------------------==\n    // Core functionality\n    // ==--------------------------==\n\n    /*\n     * Add Unicode token syntax: \\p{..}, \\P{..}, \\p{^..}. Also add astral mode (flag A).\n     */\n    XRegExp.addToken(\n        // Use `*` instead of `+` to avoid capturing `^` as the token name in `\\p{^}`\n        /\\\\([pP])(?:{(\\^?)([^}]*)}|([A-Za-z]))/,\n        function(match, scope, flags) {\n            var ERR_DOUBLE_NEG = 'Invalid double negation ',\n                ERR_UNKNOWN_NAME = 'Unknown Unicode token ',\n                ERR_UNKNOWN_REF = 'Unicode token missing data ',\n                ERR_ASTRAL_ONLY = 'Astral mode required for Unicode token ',\n                ERR_ASTRAL_IN_CLASS = 'Astral mode does not support Unicode tokens within character classes',\n                // Negated via \\P{..} or \\p{^..}\n                isNegated = match[1] === 'P' || !!match[2],\n                // Switch from BMP (0-FFFF) to astral (0-10FFFF) mode via flag A\n                isAstralMode = flags.indexOf('A') > -1,\n                // Token lookup name. Check `[4]` first to avoid passing `undefined` via `\\p{}`\n                slug = normalize(match[4] || match[3]),\n                // Token data object\n                item = unicode[slug];\n\n            if (match[1] === 'P' && match[2]) {\n                throw new SyntaxError(ERR_DOUBLE_NEG + match[0]);\n            }\n            if (!unicode.hasOwnProperty(slug)) {\n                throw new SyntaxError(ERR_UNKNOWN_NAME + match[0]);\n            }\n\n            // Switch to the negated form of the referenced Unicode token\n            if (item.inverseOf) {\n                slug = normalize(item.inverseOf);\n                if (!unicode.hasOwnProperty(slug)) {\n                    throw new ReferenceError(ERR_UNKNOWN_REF + match[0] + ' -> ' + item.inverseOf);\n                }\n                item = unicode[slug];\n                isNegated = !isNegated;\n            }\n\n            if (!(item.bmp || isAstralMode)) {\n                throw new SyntaxError(ERR_ASTRAL_ONLY + match[0]);\n            }\n            if (isAstralMode) {\n                if (scope === 'class') {\n                    throw new SyntaxError(ERR_ASTRAL_IN_CLASS);\n                }\n\n                return cacheAstral(slug, isNegated);\n            }\n\n            return scope === 'class' ?\n                (isNegated ? cacheInvertedBmp(slug) : item.bmp) :\n                (isNegated ? '[^' : '[') + item.bmp + ']';\n        },\n        {\n            scope: 'all',\n            optionalFlags: 'A',\n            leadChar: '\\\\'\n        }\n    );\n\n    /**\n     * Adds to the list of Unicode tokens that XRegExp regexes can match via `\\p` or `\\P`.\n     *\n     * @param {Array} data Objects with named character ranges. Each object may have properties\n     *   `name`, `alias`, `isBmpLast`, `inverseOf`, `bmp`, and `astral`. All but `name` are\n     *   optional, although one of `bmp` or `astral` is required (unless `inverseOf` is set). If\n     *   `astral` is absent, the `bmp` data is used for BMP and astral modes. If `bmp` is absent,\n     *   the name errors in BMP mode but works in astral mode. If both `bmp` and `astral` are\n     *   provided, the `bmp` data only is used in BMP mode, and the combination of `bmp` and\n     *   `astral` data is used in astral mode. `isBmpLast` is needed when a token matches orphan\n     *   high surrogates *and* uses surrogate pairs to match astral code points. The `bmp` and\n     *   `astral` data should be a combination of literal characters and `\\xHH` or `\\uHHHH` escape\n     *   sequences, with hyphens to create ranges. Any regex metacharacters in the data should be\n     *   escaped, apart from range-creating hyphens. The `astral` data can additionally use\n     *   character classes and alternation, and should use surrogate pairs to represent astral code\n     *   points. `inverseOf` can be used to avoid duplicating character data if a Unicode token is\n     *   defined as the exact inverse of another token.\n     * @example\n     *\n     * // Basic use\n     * XRegExp.addUnicodeData([{\n     *   name: 'XDigit',\n     *   alias: 'Hexadecimal',\n     *   bmp: '0-9A-Fa-f'\n     * }]);\n     * XRegExp('\\\\p{XDigit}:\\\\p{Hexadecimal}+').test('0:3D'); // -> true\n     */\n    XRegExp.addUnicodeData = function(data) {\n        var ERR_NO_NAME = 'Unicode token requires name',\n            ERR_NO_DATA = 'Unicode token has no character data ',\n            item,\n            i;\n\n        for (i = 0; i < data.length; ++i) {\n            item = data[i];\n            if (!item.name) {\n                throw new Error(ERR_NO_NAME);\n            }\n            if (!(item.inverseOf || item.bmp || item.astral)) {\n                throw new Error(ERR_NO_DATA + item.name);\n            }\n            unicode[normalize(item.name)] = item;\n            if (item.alias) {\n                unicode[normalize(item.alias)] = item;\n            }\n        }\n\n        // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and\n        // flags might now produce different results\n        XRegExp.cache.flush('patterns');\n    };\n\n};\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n/*!\n * XRegExp Unicode Blocks 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2010-2016 MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds support for all Unicode blocks. Block names use the prefix 'In'. E.g.,\n     * `\\p{InBasicLatin}`. Token names are case insensitive, and any spaces, hyphens, and\n     * underscores are ignored.\n     *\n     * Uses Unicode 8.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Blocks');\n    }\n\n    XRegExp.addUnicodeData([\n        {\n            name: 'InAegean_Numbers',\n            astral: '\\uD800[\\uDD00-\\uDD3F]'\n        },\n        {\n            name: 'InAhom',\n            astral: '\\uD805[\\uDF00-\\uDF3F]'\n        },\n        {\n            name: 'InAlchemical_Symbols',\n            astral: '\\uD83D[\\uDF00-\\uDF7F]'\n        },\n        {\n            name: 'InAlphabetic_Presentation_Forms',\n            bmp: '\\uFB00-\\uFB4F'\n        },\n        {\n            name: 'InAnatolian_Hieroglyphs',\n            astral: '\\uD811[\\uDC00-\\uDE7F]'\n        },\n        {\n            name: 'InAncient_Greek_Musical_Notation',\n            astral: '\\uD834[\\uDE00-\\uDE4F]'\n        },\n        {\n            name: 'InAncient_Greek_Numbers',\n            astral: '\\uD800[\\uDD40-\\uDD8F]'\n        },\n        {\n            name: 'InAncient_Symbols',\n            astral: '\\uD800[\\uDD90-\\uDDCF]'\n        },\n        {\n            name: 'InArabic',\n            bmp: '\\u0600-\\u06FF'\n        },\n        {\n            name: 'InArabic_Extended_A',\n            bmp: '\\u08A0-\\u08FF'\n        },\n        {\n            name: 'InArabic_Mathematical_Alphabetic_Symbols',\n            astral: '\\uD83B[\\uDE00-\\uDEFF]'\n        },\n        {\n            name: 'InArabic_Presentation_Forms_A',\n            bmp: '\\uFB50-\\uFDFF'\n        },\n        {\n            name: 'InArabic_Presentation_Forms_B',\n            bmp: '\\uFE70-\\uFEFF'\n        },\n        {\n            name: 'InArabic_Supplement',\n            bmp: '\\u0750-\\u077F'\n        },\n        {\n            name: 'InArmenian',\n            bmp: '\\u0530-\\u058F'\n        },\n        {\n            name: 'InArrows',\n            bmp: '\\u2190-\\u21FF'\n        },\n        {\n            name: 'InAvestan',\n            astral: '\\uD802[\\uDF00-\\uDF3F]'\n        },\n        {\n            name: 'InBalinese',\n            bmp: '\\u1B00-\\u1B7F'\n        },\n        {\n            name: 'InBamum',\n            bmp: '\\uA6A0-\\uA6FF'\n        },\n        {\n            name: 'InBamum_Supplement',\n            astral: '\\uD81A[\\uDC00-\\uDE3F]'\n        },\n        {\n            name: 'InBasic_Latin',\n            bmp: '\\0-\\x7F'\n        },\n        {\n            name: 'InBassa_Vah',\n            astral: '\\uD81A[\\uDED0-\\uDEFF]'\n        },\n        {\n            name: 'InBatak',\n            bmp: '\\u1BC0-\\u1BFF'\n        },\n        {\n            name: 'InBengali',\n            bmp: '\\u0980-\\u09FF'\n        },\n        {\n            name: 'InBlock_Elements',\n            bmp: '\\u2580-\\u259F'\n        },\n        {\n            name: 'InBopomofo',\n            bmp: '\\u3100-\\u312F'\n        },\n        {\n            name: 'InBopomofo_Extended',\n            bmp: '\\u31A0-\\u31BF'\n        },\n        {\n            name: 'InBox_Drawing',\n            bmp: '\\u2500-\\u257F'\n        },\n        {\n            name: 'InBrahmi',\n            astral: '\\uD804[\\uDC00-\\uDC7F]'\n        },\n        {\n            name: 'InBraille_Patterns',\n            bmp: '\\u2800-\\u28FF'\n        },\n        {\n            name: 'InBuginese',\n            bmp: '\\u1A00-\\u1A1F'\n        },\n        {\n            name: 'InBuhid',\n            bmp: '\\u1740-\\u175F'\n        },\n        {\n            name: 'InByzantine_Musical_Symbols',\n            astral: '\\uD834[\\uDC00-\\uDCFF]'\n        },\n        {\n            name: 'InCJK_Compatibility',\n            bmp: '\\u3300-\\u33FF'\n        },\n        {\n            name: 'InCJK_Compatibility_Forms',\n            bmp: '\\uFE30-\\uFE4F'\n        },\n        {\n            name: 'InCJK_Compatibility_Ideographs',\n            bmp: '\\uF900-\\uFAFF'\n        },\n        {\n            name: 'InCJK_Compatibility_Ideographs_Supplement',\n            astral: '\\uD87E[\\uDC00-\\uDE1F]'\n        },\n        {\n            name: 'InCJK_Radicals_Supplement',\n            bmp: '\\u2E80-\\u2EFF'\n        },\n        {\n            name: 'InCJK_Strokes',\n            bmp: '\\u31C0-\\u31EF'\n        },\n        {\n            name: 'InCJK_Symbols_and_Punctuation',\n            bmp: '\\u3000-\\u303F'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs',\n            bmp: '\\u4E00-\\u9FFF'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_A',\n            bmp: '\\u3400-\\u4DBF'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_B',\n            astral: '[\\uD840-\\uD868][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDEDF]'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_C',\n            astral: '\\uD86D[\\uDC00-\\uDF3F]|[\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD869[\\uDF00-\\uDFFF]'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_D',\n            astral: '\\uD86D[\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1F]'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_E',\n            astral: '[\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD873[\\uDC00-\\uDEAF]|\\uD86E[\\uDC20-\\uDFFF]'\n        },\n        {\n            name: 'InCarian',\n            astral: '\\uD800[\\uDEA0-\\uDEDF]'\n        },\n        {\n            name: 'InCaucasian_Albanian',\n            astral: '\\uD801[\\uDD30-\\uDD6F]'\n        },\n        {\n            name: 'InChakma',\n            astral: '\\uD804[\\uDD00-\\uDD4F]'\n        },\n        {\n            name: 'InCham',\n            bmp: '\\uAA00-\\uAA5F'\n        },\n        {\n            name: 'InCherokee',\n            bmp: '\\u13A0-\\u13FF'\n        },\n        {\n            name: 'InCherokee_Supplement',\n            bmp: '\\uAB70-\\uABBF'\n        },\n        {\n            name: 'InCombining_Diacritical_Marks',\n            bmp: '\\u0300-\\u036F'\n        },\n        {\n            name: 'InCombining_Diacritical_Marks_Extended',\n            bmp: '\\u1AB0-\\u1AFF'\n        },\n        {\n            name: 'InCombining_Diacritical_Marks_Supplement',\n            bmp: '\\u1DC0-\\u1DFF'\n        },\n        {\n            name: 'InCombining_Diacritical_Marks_for_Symbols',\n            bmp: '\\u20D0-\\u20FF'\n        },\n        {\n            name: 'InCombining_Half_Marks',\n            bmp: '\\uFE20-\\uFE2F'\n        },\n        {\n            name: 'InCommon_Indic_Number_Forms',\n            bmp: '\\uA830-\\uA83F'\n        },\n        {\n            name: 'InControl_Pictures',\n            bmp: '\\u2400-\\u243F'\n        },\n        {\n            name: 'InCoptic',\n            bmp: '\\u2C80-\\u2CFF'\n        },\n        {\n            name: 'InCoptic_Epact_Numbers',\n            astral: '\\uD800[\\uDEE0-\\uDEFF]'\n        },\n        {\n            name: 'InCounting_Rod_Numerals',\n            astral: '\\uD834[\\uDF60-\\uDF7F]'\n        },\n        {\n            name: 'InCuneiform',\n            astral: '\\uD808[\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'InCuneiform_Numbers_and_Punctuation',\n            astral: '\\uD809[\\uDC00-\\uDC7F]'\n        },\n        {\n            name: 'InCurrency_Symbols',\n            bmp: '\\u20A0-\\u20CF'\n        },\n        {\n            name: 'InCypriot_Syllabary',\n            astral: '\\uD802[\\uDC00-\\uDC3F]'\n        },\n        {\n            name: 'InCyrillic',\n            bmp: '\\u0400-\\u04FF'\n        },\n        {\n            name: 'InCyrillic_Extended_A',\n            bmp: '\\u2DE0-\\u2DFF'\n        },\n        {\n            name: 'InCyrillic_Extended_B',\n            bmp: '\\uA640-\\uA69F'\n        },\n        {\n            name: 'InCyrillic_Supplement',\n            bmp: '\\u0500-\\u052F'\n        },\n        {\n            name: 'InDeseret',\n            astral: '\\uD801[\\uDC00-\\uDC4F]'\n        },\n        {\n            name: 'InDevanagari',\n            bmp: '\\u0900-\\u097F'\n        },\n        {\n            name: 'InDevanagari_Extended',\n            bmp: '\\uA8E0-\\uA8FF'\n        },\n        {\n            name: 'InDingbats',\n            bmp: '\\u2700-\\u27BF'\n        },\n        {\n            name: 'InDomino_Tiles',\n            astral: '\\uD83C[\\uDC30-\\uDC9F]'\n        },\n        {\n            name: 'InDuployan',\n            astral: '\\uD82F[\\uDC00-\\uDC9F]'\n        },\n        {\n            name: 'InEarly_Dynastic_Cuneiform',\n            astral: '\\uD809[\\uDC80-\\uDD4F]'\n        },\n        {\n            name: 'InEgyptian_Hieroglyphs',\n            astral: '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F]'\n        },\n        {\n            name: 'InElbasan',\n            astral: '\\uD801[\\uDD00-\\uDD2F]'\n        },\n        {\n            name: 'InEmoticons',\n            astral: '\\uD83D[\\uDE00-\\uDE4F]'\n        },\n        {\n            name: 'InEnclosed_Alphanumeric_Supplement',\n            astral: '\\uD83C[\\uDD00-\\uDDFF]'\n        },\n        {\n            name: 'InEnclosed_Alphanumerics',\n            bmp: '\\u2460-\\u24FF'\n        },\n        {\n            name: 'InEnclosed_CJK_Letters_and_Months',\n            bmp: '\\u3200-\\u32FF'\n        },\n        {\n            name: 'InEnclosed_Ideographic_Supplement',\n            astral: '\\uD83C[\\uDE00-\\uDEFF]'\n        },\n        {\n            name: 'InEthiopic',\n            bmp: '\\u1200-\\u137F'\n        },\n        {\n            name: 'InEthiopic_Extended',\n            bmp: '\\u2D80-\\u2DDF'\n        },\n        {\n            name: 'InEthiopic_Extended_A',\n            bmp: '\\uAB00-\\uAB2F'\n        },\n        {\n            name: 'InEthiopic_Supplement',\n            bmp: '\\u1380-\\u139F'\n        },\n        {\n            name: 'InGeneral_Punctuation',\n            bmp: '\\u2000-\\u206F'\n        },\n        {\n            name: 'InGeometric_Shapes',\n            bmp: '\\u25A0-\\u25FF'\n        },\n        {\n            name: 'InGeometric_Shapes_Extended',\n            astral: '\\uD83D[\\uDF80-\\uDFFF]'\n        },\n        {\n            name: 'InGeorgian',\n            bmp: '\\u10A0-\\u10FF'\n        },\n        {\n            name: 'InGeorgian_Supplement',\n            bmp: '\\u2D00-\\u2D2F'\n        },\n        {\n            name: 'InGlagolitic',\n            bmp: '\\u2C00-\\u2C5F'\n        },\n        {\n            name: 'InGothic',\n            astral: '\\uD800[\\uDF30-\\uDF4F]'\n        },\n        {\n            name: 'InGrantha',\n            astral: '\\uD804[\\uDF00-\\uDF7F]'\n        },\n        {\n            name: 'InGreek_Extended',\n            bmp: '\\u1F00-\\u1FFF'\n        },\n        {\n            name: 'InGreek_and_Coptic',\n            bmp: '\\u0370-\\u03FF'\n        },\n        {\n            name: 'InGujarati',\n            bmp: '\\u0A80-\\u0AFF'\n        },\n        {\n            name: 'InGurmukhi',\n            bmp: '\\u0A00-\\u0A7F'\n        },\n        {\n            name: 'InHalfwidth_and_Fullwidth_Forms',\n            bmp: '\\uFF00-\\uFFEF'\n        },\n        {\n            name: 'InHangul_Compatibility_Jamo',\n            bmp: '\\u3130-\\u318F'\n        },\n        {\n            name: 'InHangul_Jamo',\n            bmp: '\\u1100-\\u11FF'\n        },\n        {\n            name: 'InHangul_Jamo_Extended_A',\n            bmp: '\\uA960-\\uA97F'\n        },\n        {\n            name: 'InHangul_Jamo_Extended_B',\n            bmp: '\\uD7B0-\\uD7FF'\n        },\n        {\n            name: 'InHangul_Syllables',\n            bmp: '\\uAC00-\\uD7AF'\n        },\n        {\n            name: 'InHanunoo',\n            bmp: '\\u1720-\\u173F'\n        },\n        {\n            name: 'InHatran',\n            astral: '\\uD802[\\uDCE0-\\uDCFF]'\n        },\n        {\n            name: 'InHebrew',\n            bmp: '\\u0590-\\u05FF'\n        },\n        {\n            name: 'InHigh_Private_Use_Surrogates',\n            bmp: '\\uDB80-\\uDBFF'\n        },\n        {\n            name: 'InHigh_Surrogates',\n            bmp: '\\uD800-\\uDB7F'\n        },\n        {\n            name: 'InHiragana',\n            bmp: '\\u3040-\\u309F'\n        },\n        {\n            name: 'InIPA_Extensions',\n            bmp: '\\u0250-\\u02AF'\n        },\n        {\n            name: 'InIdeographic_Description_Characters',\n            bmp: '\\u2FF0-\\u2FFF'\n        },\n        {\n            name: 'InImperial_Aramaic',\n            astral: '\\uD802[\\uDC40-\\uDC5F]'\n        },\n        {\n            name: 'InInscriptional_Pahlavi',\n            astral: '\\uD802[\\uDF60-\\uDF7F]'\n        },\n        {\n            name: 'InInscriptional_Parthian',\n            astral: '\\uD802[\\uDF40-\\uDF5F]'\n        },\n        {\n            name: 'InJavanese',\n            bmp: '\\uA980-\\uA9DF'\n        },\n        {\n            name: 'InKaithi',\n            astral: '\\uD804[\\uDC80-\\uDCCF]'\n        },\n        {\n            name: 'InKana_Supplement',\n            astral: '\\uD82C[\\uDC00-\\uDCFF]'\n        },\n        {\n            name: 'InKanbun',\n            bmp: '\\u3190-\\u319F'\n        },\n        {\n            name: 'InKangxi_Radicals',\n            bmp: '\\u2F00-\\u2FDF'\n        },\n        {\n            name: 'InKannada',\n            bmp: '\\u0C80-\\u0CFF'\n        },\n        {\n            name: 'InKatakana',\n            bmp: '\\u30A0-\\u30FF'\n        },\n        {\n            name: 'InKatakana_Phonetic_Extensions',\n            bmp: '\\u31F0-\\u31FF'\n        },\n        {\n            name: 'InKayah_Li',\n            bmp: '\\uA900-\\uA92F'\n        },\n        {\n            name: 'InKharoshthi',\n            astral: '\\uD802[\\uDE00-\\uDE5F]'\n        },\n        {\n            name: 'InKhmer',\n            bmp: '\\u1780-\\u17FF'\n        },\n        {\n            name: 'InKhmer_Symbols',\n            bmp: '\\u19E0-\\u19FF'\n        },\n        {\n            name: 'InKhojki',\n            astral: '\\uD804[\\uDE00-\\uDE4F]'\n        },\n        {\n            name: 'InKhudawadi',\n            astral: '\\uD804[\\uDEB0-\\uDEFF]'\n        },\n        {\n            name: 'InLao',\n            bmp: '\\u0E80-\\u0EFF'\n        },\n        {\n            name: 'InLatin_Extended_Additional',\n            bmp: '\\u1E00-\\u1EFF'\n        },\n        {\n            name: 'InLatin_Extended_A',\n            bmp: '\\u0100-\\u017F'\n        },\n        {\n            name: 'InLatin_Extended_B',\n            bmp: '\\u0180-\\u024F'\n        },\n        {\n            name: 'InLatin_Extended_C',\n            bmp: '\\u2C60-\\u2C7F'\n        },\n        {\n            name: 'InLatin_Extended_D',\n            bmp: '\\uA720-\\uA7FF'\n        },\n        {\n            name: 'InLatin_Extended_E',\n            bmp: '\\uAB30-\\uAB6F'\n        },\n        {\n            name: 'InLatin_1_Supplement',\n            bmp: '\\x80-\\xFF'\n        },\n        {\n            name: 'InLepcha',\n            bmp: '\\u1C00-\\u1C4F'\n        },\n        {\n            name: 'InLetterlike_Symbols',\n            bmp: '\\u2100-\\u214F'\n        },\n        {\n            name: 'InLimbu',\n            bmp: '\\u1900-\\u194F'\n        },\n        {\n            name: 'InLinear_A',\n            astral: '\\uD801[\\uDE00-\\uDF7F]'\n        },\n        {\n            name: 'InLinear_B_Ideograms',\n            astral: '\\uD800[\\uDC80-\\uDCFF]'\n        },\n        {\n            name: 'InLinear_B_Syllabary',\n            astral: '\\uD800[\\uDC00-\\uDC7F]'\n        },\n        {\n            name: 'InLisu',\n            bmp: '\\uA4D0-\\uA4FF'\n        },\n        {\n            name: 'InLow_Surrogates',\n            bmp: '\\uDC00-\\uDFFF'\n        },\n        {\n            name: 'InLycian',\n            astral: '\\uD800[\\uDE80-\\uDE9F]'\n        },\n        {\n            name: 'InLydian',\n            astral: '\\uD802[\\uDD20-\\uDD3F]'\n        },\n        {\n            name: 'InMahajani',\n            astral: '\\uD804[\\uDD50-\\uDD7F]'\n        },\n        {\n            name: 'InMahjong_Tiles',\n            astral: '\\uD83C[\\uDC00-\\uDC2F]'\n        },\n        {\n            name: 'InMalayalam',\n            bmp: '\\u0D00-\\u0D7F'\n        },\n        {\n            name: 'InMandaic',\n            bmp: '\\u0840-\\u085F'\n        },\n        {\n            name: 'InManichaean',\n            astral: '\\uD802[\\uDEC0-\\uDEFF]'\n        },\n        {\n            name: 'InMathematical_Alphanumeric_Symbols',\n            astral: '\\uD835[\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'InMathematical_Operators',\n            bmp: '\\u2200-\\u22FF'\n        },\n        {\n            name: 'InMeetei_Mayek',\n            bmp: '\\uABC0-\\uABFF'\n        },\n        {\n            name: 'InMeetei_Mayek_Extensions',\n            bmp: '\\uAAE0-\\uAAFF'\n        },\n        {\n            name: 'InMende_Kikakui',\n            astral: '\\uD83A[\\uDC00-\\uDCDF]'\n        },\n        {\n            name: 'InMeroitic_Cursive',\n            astral: '\\uD802[\\uDDA0-\\uDDFF]'\n        },\n        {\n            name: 'InMeroitic_Hieroglyphs',\n            astral: '\\uD802[\\uDD80-\\uDD9F]'\n        },\n        {\n            name: 'InMiao',\n            astral: '\\uD81B[\\uDF00-\\uDF9F]'\n        },\n        {\n            name: 'InMiscellaneous_Mathematical_Symbols_A',\n            bmp: '\\u27C0-\\u27EF'\n        },\n        {\n            name: 'InMiscellaneous_Mathematical_Symbols_B',\n            bmp: '\\u2980-\\u29FF'\n        },\n        {\n            name: 'InMiscellaneous_Symbols',\n            bmp: '\\u2600-\\u26FF'\n        },\n        {\n            name: 'InMiscellaneous_Symbols_and_Arrows',\n            bmp: '\\u2B00-\\u2BFF'\n        },\n        {\n            name: 'InMiscellaneous_Symbols_and_Pictographs',\n            astral: '\\uD83D[\\uDC00-\\uDDFF]|\\uD83C[\\uDF00-\\uDFFF]'\n        },\n        {\n            name: 'InMiscellaneous_Technical',\n            bmp: '\\u2300-\\u23FF'\n        },\n        {\n            name: 'InModi',\n            astral: '\\uD805[\\uDE00-\\uDE5F]'\n        },\n        {\n            name: 'InModifier_Tone_Letters',\n            bmp: '\\uA700-\\uA71F'\n        },\n        {\n            name: 'InMongolian',\n            bmp: '\\u1800-\\u18AF'\n        },\n        {\n            name: 'InMro',\n            astral: '\\uD81A[\\uDE40-\\uDE6F]'\n        },\n        {\n            name: 'InMultani',\n            astral: '\\uD804[\\uDE80-\\uDEAF]'\n        },\n        {\n            name: 'InMusical_Symbols',\n            astral: '\\uD834[\\uDD00-\\uDDFF]'\n        },\n        {\n            name: 'InMyanmar',\n            bmp: '\\u1000-\\u109F'\n        },\n        {\n            name: 'InMyanmar_Extended_A',\n            bmp: '\\uAA60-\\uAA7F'\n        },\n        {\n            name: 'InMyanmar_Extended_B',\n            bmp: '\\uA9E0-\\uA9FF'\n        },\n        {\n            name: 'InNKo',\n            bmp: '\\u07C0-\\u07FF'\n        },\n        {\n            name: 'InNabataean',\n            astral: '\\uD802[\\uDC80-\\uDCAF]'\n        },\n        {\n            name: 'InNew_Tai_Lue',\n            bmp: '\\u1980-\\u19DF'\n        },\n        {\n            name: 'InNumber_Forms',\n            bmp: '\\u2150-\\u218F'\n        },\n        {\n            name: 'InOgham',\n            bmp: '\\u1680-\\u169F'\n        },\n        {\n            name: 'InOl_Chiki',\n            bmp: '\\u1C50-\\u1C7F'\n        },\n        {\n            name: 'InOld_Hungarian',\n            astral: '\\uD803[\\uDC80-\\uDCFF]'\n        },\n        {\n            name: 'InOld_Italic',\n            astral: '\\uD800[\\uDF00-\\uDF2F]'\n        },\n        {\n            name: 'InOld_North_Arabian',\n            astral: '\\uD802[\\uDE80-\\uDE9F]'\n        },\n        {\n            name: 'InOld_Permic',\n            astral: '\\uD800[\\uDF50-\\uDF7F]'\n        },\n        {\n            name: 'InOld_Persian',\n            astral: '\\uD800[\\uDFA0-\\uDFDF]'\n        },\n        {\n            name: 'InOld_South_Arabian',\n            astral: '\\uD802[\\uDE60-\\uDE7F]'\n        },\n        {\n            name: 'InOld_Turkic',\n            astral: '\\uD803[\\uDC00-\\uDC4F]'\n        },\n        {\n            name: 'InOptical_Character_Recognition',\n            bmp: '\\u2440-\\u245F'\n        },\n        {\n            name: 'InOriya',\n            bmp: '\\u0B00-\\u0B7F'\n        },\n        {\n            name: 'InOrnamental_Dingbats',\n            astral: '\\uD83D[\\uDE50-\\uDE7F]'\n        },\n        {\n            name: 'InOsmanya',\n            astral: '\\uD801[\\uDC80-\\uDCAF]'\n        },\n        {\n            name: 'InPahawh_Hmong',\n            astral: '\\uD81A[\\uDF00-\\uDF8F]'\n        },\n        {\n            name: 'InPalmyrene',\n            astral: '\\uD802[\\uDC60-\\uDC7F]'\n        },\n        {\n            name: 'InPau_Cin_Hau',\n            astral: '\\uD806[\\uDEC0-\\uDEFF]'\n        },\n        {\n            name: 'InPhags_pa',\n            bmp: '\\uA840-\\uA87F'\n        },\n        {\n            name: 'InPhaistos_Disc',\n            astral: '\\uD800[\\uDDD0-\\uDDFF]'\n        },\n        {\n            name: 'InPhoenician',\n            astral: '\\uD802[\\uDD00-\\uDD1F]'\n        },\n        {\n            name: 'InPhonetic_Extensions',\n            bmp: '\\u1D00-\\u1D7F'\n        },\n        {\n            name: 'InPhonetic_Extensions_Supplement',\n            bmp: '\\u1D80-\\u1DBF'\n        },\n        {\n            name: 'InPlaying_Cards',\n            astral: '\\uD83C[\\uDCA0-\\uDCFF]'\n        },\n        {\n            name: 'InPrivate_Use_Area',\n            bmp: '\\uE000-\\uF8FF'\n        },\n        {\n            name: 'InPsalter_Pahlavi',\n            astral: '\\uD802[\\uDF80-\\uDFAF]'\n        },\n        {\n            name: 'InRejang',\n            bmp: '\\uA930-\\uA95F'\n        },\n        {\n            name: 'InRumi_Numeral_Symbols',\n            astral: '\\uD803[\\uDE60-\\uDE7F]'\n        },\n        {\n            name: 'InRunic',\n            bmp: '\\u16A0-\\u16FF'\n        },\n        {\n            name: 'InSamaritan',\n            bmp: '\\u0800-\\u083F'\n        },\n        {\n            name: 'InSaurashtra',\n            bmp: '\\uA880-\\uA8DF'\n        },\n        {\n            name: 'InSharada',\n            astral: '\\uD804[\\uDD80-\\uDDDF]'\n        },\n        {\n            name: 'InShavian',\n            astral: '\\uD801[\\uDC50-\\uDC7F]'\n        },\n        {\n            name: 'InShorthand_Format_Controls',\n            astral: '\\uD82F[\\uDCA0-\\uDCAF]'\n        },\n        {\n            name: 'InSiddham',\n            astral: '\\uD805[\\uDD80-\\uDDFF]'\n        },\n        {\n            name: 'InSinhala',\n            bmp: '\\u0D80-\\u0DFF'\n        },\n        {\n            name: 'InSinhala_Archaic_Numbers',\n            astral: '\\uD804[\\uDDE0-\\uDDFF]'\n        },\n        {\n            name: 'InSmall_Form_Variants',\n            bmp: '\\uFE50-\\uFE6F'\n        },\n        {\n            name: 'InSora_Sompeng',\n            astral: '\\uD804[\\uDCD0-\\uDCFF]'\n        },\n        {\n            name: 'InSpacing_Modifier_Letters',\n            bmp: '\\u02B0-\\u02FF'\n        },\n        {\n            name: 'InSpecials',\n            bmp: '\\uFFF0-\\uFFFF'\n        },\n        {\n            name: 'InSundanese',\n            bmp: '\\u1B80-\\u1BBF'\n        },\n        {\n            name: 'InSundanese_Supplement',\n            bmp: '\\u1CC0-\\u1CCF'\n        },\n        {\n            name: 'InSuperscripts_and_Subscripts',\n            bmp: '\\u2070-\\u209F'\n        },\n        {\n            name: 'InSupplemental_Arrows_A',\n            bmp: '\\u27F0-\\u27FF'\n        },\n        {\n            name: 'InSupplemental_Arrows_B',\n            bmp: '\\u2900-\\u297F'\n        },\n        {\n            name: 'InSupplemental_Arrows_C',\n            astral: '\\uD83E[\\uDC00-\\uDCFF]'\n        },\n        {\n            name: 'InSupplemental_Mathematical_Operators',\n            bmp: '\\u2A00-\\u2AFF'\n        },\n        {\n            name: 'InSupplemental_Punctuation',\n            bmp: '\\u2E00-\\u2E7F'\n        },\n        {\n            name: 'InSupplemental_Symbols_and_Pictographs',\n            astral: '\\uD83E[\\uDD00-\\uDDFF]'\n        },\n        {\n            name: 'InSupplementary_Private_Use_Area_A',\n            astral: '[\\uDB80-\\uDBBF][\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'InSupplementary_Private_Use_Area_B',\n            astral: '[\\uDBC0-\\uDBFF][\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'InSutton_SignWriting',\n            astral: '\\uD836[\\uDC00-\\uDEAF]'\n        },\n        {\n            name: 'InSyloti_Nagri',\n            bmp: '\\uA800-\\uA82F'\n        },\n        {\n            name: 'InSyriac',\n            bmp: '\\u0700-\\u074F'\n        },\n        {\n            name: 'InTagalog',\n            bmp: '\\u1700-\\u171F'\n        },\n        {\n            name: 'InTagbanwa',\n            bmp: '\\u1760-\\u177F'\n        },\n        {\n            name: 'InTags',\n            astral: '\\uDB40[\\uDC00-\\uDC7F]'\n        },\n        {\n            name: 'InTai_Le',\n            bmp: '\\u1950-\\u197F'\n        },\n        {\n            name: 'InTai_Tham',\n            bmp: '\\u1A20-\\u1AAF'\n        },\n        {\n            name: 'InTai_Viet',\n            bmp: '\\uAA80-\\uAADF'\n        },\n        {\n            name: 'InTai_Xuan_Jing_Symbols',\n            astral: '\\uD834[\\uDF00-\\uDF5F]'\n        },\n        {\n            name: 'InTakri',\n            astral: '\\uD805[\\uDE80-\\uDECF]'\n        },\n        {\n            name: 'InTamil',\n            bmp: '\\u0B80-\\u0BFF'\n        },\n        {\n            name: 'InTelugu',\n            bmp: '\\u0C00-\\u0C7F'\n        },\n        {\n            name: 'InThaana',\n            bmp: '\\u0780-\\u07BF'\n        },\n        {\n            name: 'InThai',\n            bmp: '\\u0E00-\\u0E7F'\n        },\n        {\n            name: 'InTibetan',\n            bmp: '\\u0F00-\\u0FFF'\n        },\n        {\n            name: 'InTifinagh',\n            bmp: '\\u2D30-\\u2D7F'\n        },\n        {\n            name: 'InTirhuta',\n            astral: '\\uD805[\\uDC80-\\uDCDF]'\n        },\n        {\n            name: 'InTransport_and_Map_Symbols',\n            astral: '\\uD83D[\\uDE80-\\uDEFF]'\n        },\n        {\n            name: 'InUgaritic',\n            astral: '\\uD800[\\uDF80-\\uDF9F]'\n        },\n        {\n            name: 'InUnified_Canadian_Aboriginal_Syllabics',\n            bmp: '\\u1400-\\u167F'\n        },\n        {\n            name: 'InUnified_Canadian_Aboriginal_Syllabics_Extended',\n            bmp: '\\u18B0-\\u18FF'\n        },\n        {\n            name: 'InVai',\n            bmp: '\\uA500-\\uA63F'\n        },\n        {\n            name: 'InVariation_Selectors',\n            bmp: '\\uFE00-\\uFE0F'\n        },\n        {\n            name: 'InVariation_Selectors_Supplement',\n            astral: '\\uDB40[\\uDD00-\\uDDEF]'\n        },\n        {\n            name: 'InVedic_Extensions',\n            bmp: '\\u1CD0-\\u1CFF'\n        },\n        {\n            name: 'InVertical_Forms',\n            bmp: '\\uFE10-\\uFE1F'\n        },\n        {\n            name: 'InWarang_Citi',\n            astral: '\\uD806[\\uDCA0-\\uDCFF]'\n        },\n        {\n            name: 'InYi_Radicals',\n            bmp: '\\uA490-\\uA4CF'\n        },\n        {\n            name: 'InYi_Syllables',\n            bmp: '\\uA000-\\uA48F'\n        },\n        {\n            name: 'InYijing_Hexagram_Symbols',\n            bmp: '\\u4DC0-\\u4DFF'\n        }\n    ]);\n\n};\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n/*!\n * XRegExp Unicode Categories 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2010-2016 MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds support for Unicode's general categories. E.g., `\\p{Lu}` or `\\p{Uppercase Letter}`. See\n     * category descriptions in UAX #44 <http://unicode.org/reports/tr44/#GC_Values_Table>. Token\n     * names are case insensitive, and any spaces, hyphens, and underscores are ignored.\n     *\n     * Uses Unicode 8.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Categories');\n    }\n\n    XRegExp.addUnicodeData([\n        {\n            name: 'C',\n            alias: 'Other',\n            isBmpLast: true,\n            bmp: '\\0-\\x1F\\x7F-\\x9F\\xAD\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u0605\\u061C\\u061D\\u06DD\\u070E\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u089F\\u08B5-\\u08E2\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0AFA-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C80\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D00\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D4F-\\u0D56\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D76-\\u0D78\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180E\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C80-\\u1CBF\\u1CC8-\\u1CCF\\u1CF7\\u1CFA-\\u1CFF\\u1DF6-\\u1DFB\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BF-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u23FB-\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2B97\\u2BBA-\\u2BBC\\u2BC9\\u2BD2-\\u2BEB\\u2BF0-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E43-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FD6-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7AE\\uA7AF\\uA7B8-\\uA7F6\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C5-\\uA8CD\\uA8DA-\\uA8DF\\uA8FE\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB66-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD-\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFFB\\uFFFE\\uFFFF',\n            astral: '\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDD73-\\uDD7A\\uDDE9-\\uDDFF\\uDE46-\\uDEFF\\uDF57-\\uDF5F\\uDF72-\\uDFFF]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDD0D-\\uDD0F\\uDD2F\\uDD6C-\\uDD6F\\uDD9B-\\uDDE5\\uDE03-\\uDE0F\\uDE3B-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDEFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDE70-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|\\uD81B[\\uDC00-\\uDEFF\\uDF45-\\uDF4F\\uDF7F-\\uDF8E\\uDFA0-\\uDFFF]|\\uD86E[\\uDC1E\\uDC1F]|\\uD83D[\\uDD7A\\uDDA4\\uDED1-\\uDEDF\\uDEED-\\uDEEF\\uDEF4-\\uDEFF\\uDF74-\\uDF7F\\uDFD5-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD70-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8D-\\uDD8F\\uDD9C-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2F\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC70-\\uDC7E\\uDCBD\\uDCC2-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD44-\\uDD4F\\uDD77-\\uDD7F\\uDDCE\\uDDCF\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3E-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF3B\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD86D[\\uDF35-\\uDF3F]|[\\uD807\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD81C-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837-\\uD839\\uD83F\\uD874-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD806[\\uDC00-\\uDC9F\\uDCF3-\\uDCFE\\uDD00-\\uDEBF\\uDEF9-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD00-\\uDE5F\\uDE7F-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD805[\\uDC00-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB8-\\uDEBF\\uDECA-\\uDEFF\\uDF1A-\\uDF1C\\uDF2C-\\uDF2F\\uDF40-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE34-\\uDE37\\uDE3B-\\uDE3E\\uDE48-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA0-\\uDFFF]|\\uD82C[\\uDC02-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE-\\uDD0F\\uDD19-\\uDD7F\\uDD85-\\uDDBF\\uDDC1-\\uDFFF]|\\uD873[\\uDEA2-\\uDFFF]'\n        },\n        {\n            name: 'Cc',\n            alias: 'Control',\n            bmp: '\\0-\\x1F\\x7F-\\x9F'\n        },\n        {\n            name: 'Cf',\n            alias: 'Format',\n            bmp: '\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB',\n            astral: '\\uDB40[\\uDC01\\uDC20-\\uDC7F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uD804\\uDCBD'\n        },\n        {\n            name: 'Cn',\n            alias: 'Unassigned',\n            bmp: '\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u05FF\\u061D\\u070E\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u089F\\u08B5-\\u08E2\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0AFA-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C80\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D00\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D4F-\\u0D56\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D76-\\u0D78\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C80-\\u1CBF\\u1CC8-\\u1CCF\\u1CF7\\u1CFA-\\u1CFF\\u1DF6-\\u1DFB\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u2065\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BF-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u23FB-\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2B97\\u2BBA-\\u2BBC\\u2BC9\\u2BD2-\\u2BEB\\u2BF0-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E43-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FD6-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7AE\\uA7AF\\uA7B8-\\uA7F6\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C5-\\uA8CD\\uA8DA-\\uA8DF\\uA8FE\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB66-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD\\uFEFE\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFF8\\uFFFE\\uFFFF',\n            astral: '\\uDB40[\\uDC00\\uDC02-\\uDC1F\\uDC80-\\uDCFF\\uDDF0-\\uDFFF]|\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDDE9-\\uDDFF\\uDE46-\\uDEFF\\uDF57-\\uDF5F\\uDF72-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDD0D-\\uDD0F\\uDD2F\\uDD6C-\\uDD6F\\uDD9B-\\uDDE5\\uDE03-\\uDE0F\\uDE3B-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDEFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDE70-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|\\uD81B[\\uDC00-\\uDEFF\\uDF45-\\uDF4F\\uDF7F-\\uDF8E\\uDFA0-\\uDFFF]|\\uD86E[\\uDC1E\\uDC1F]|\\uD83D[\\uDD7A\\uDDA4\\uDED1-\\uDEDF\\uDEED-\\uDEEF\\uDEF4-\\uDEFF\\uDF74-\\uDF7F\\uDFD5-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD70-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8D-\\uDD8F\\uDD9C-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2F\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA4-\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD86D[\\uDF35-\\uDF3F]|[\\uD807\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD81C-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837-\\uD839\\uD83F\\uD874-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDB7F][\\uDC00-\\uDFFF]|\\uD806[\\uDC00-\\uDC9F\\uDCF3-\\uDCFE\\uDD00-\\uDEBF\\uDEF9-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD00-\\uDE5F\\uDE7F-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD805[\\uDC00-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB8-\\uDEBF\\uDECA-\\uDEFF\\uDF1A-\\uDF1C\\uDF2C-\\uDF2F\\uDF40-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE34-\\uDE37\\uDE3B-\\uDE3E\\uDE48-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC70-\\uDC7E\\uDCC2-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD44-\\uDD4F\\uDD77-\\uDD7F\\uDDCE\\uDDCF\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3E-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF3B\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD82C[\\uDC02-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE-\\uDD0F\\uDD19-\\uDD7F\\uDD85-\\uDDBF\\uDDC1-\\uDFFF]|\\uD873[\\uDEA2-\\uDFFF]'\n        },\n        {\n            name: 'Co',\n            alias: 'Private_Use',\n            bmp: '\\uE000-\\uF8FF',\n            astral: '[\\uDB80-\\uDBBE\\uDBC0-\\uDBFE][\\uDC00-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDC00-\\uDFFD]'\n        },\n        {\n            name: 'Cs',\n            alias: 'Surrogate',\n            bmp: '\\uD800-\\uDFFF'\n        },\n        {\n            name: 'L',\n            alias: 'Letter',\n            bmp: 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n            astral: '\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD83A[\\uDC00-\\uDCC4]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD87E[\\uDC00-\\uDE1D]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD809[\\uDC80-\\uDD43]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD808[\\uDC00-\\uDF99]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD811[\\uDC00-\\uDE46]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD82C[\\uDC00\\uDC01]|\\uD873[\\uDC00-\\uDEA1]'\n        },\n        {\n            name: 'Ll',\n            alias: 'Lowercase_Letter',\n            bmp: 'a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\n            astral: '\\uD803[\\uDCC0-\\uDCF2]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD801[\\uDC28-\\uDC4F]|\\uD806[\\uDCC0-\\uDCDF]'\n        },\n        {\n            name: 'Lm',\n            alias: 'Modifier_Letter',\n            bmp: '\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E\\uFF9F',\n            astral: '\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F]'\n        },\n        {\n            name: 'Lo',\n            alias: 'Other_Letter',\n            bmp: '\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n            astral: '\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD83A[\\uDC00-\\uDCC4]|\\uD803[\\uDC00-\\uDC48]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD87E[\\uDC00-\\uDE1D]|\\uD81B[\\uDF00-\\uDF44\\uDF50]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCFF\\uDEC0-\\uDEF8]|\\uD809[\\uDC80-\\uDD43]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD808[\\uDC00-\\uDF99]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD811[\\uDC00-\\uDE46]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD82C[\\uDC00\\uDC01]|\\uD873[\\uDC00-\\uDEA1]'\n        },\n        {\n            name: 'Lt',\n            alias: 'Titlecase_Letter',\n            bmp: '\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC'\n        },\n        {\n            name: 'Lu',\n            alias: 'Uppercase_Letter',\n            bmp: 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A',\n            astral: '\\uD806[\\uDCA0-\\uDCBF]|\\uD803[\\uDC80-\\uDCB2]|\\uD801[\\uDC00-\\uDC27]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]'\n        },\n        {\n            name: 'M',\n            alias: 'Mark',\n            bmp: '\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\n            astral: '\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDDDC\\uDDDD\\uDE30-\\uDE40\\uDEAB-\\uDEB7\\uDF1D-\\uDF2B]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDDCA-\\uDDCC\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF00-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD82F[\\uDC9D\\uDC9E]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]'\n        },\n        {\n            name: 'Mc',\n            alias: 'Spacing_Mark',\n            bmp: '\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u094F\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1A19\\u1A1A\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF2\\u1CF3\\u302E\\u302F\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BD-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uAA7D\\uAAEB\\uAAEE\\uAAEF\\uAAF5\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC',\n            astral: '\\uD834[\\uDD65\\uDD66\\uDD6D-\\uDD72]|\\uD804[\\uDC00\\uDC02\\uDC82\\uDCB0-\\uDCB2\\uDCB7\\uDCB8\\uDD2C\\uDD82\\uDDB3-\\uDDB5\\uDDBF\\uDDC0\\uDE2C-\\uDE2E\\uDE32\\uDE33\\uDE35\\uDEE0-\\uDEE2\\uDF02\\uDF03\\uDF3E\\uDF3F\\uDF41-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63]|\\uD805[\\uDCB0-\\uDCB2\\uDCB9\\uDCBB-\\uDCBE\\uDCC1\\uDDAF-\\uDDB1\\uDDB8-\\uDDBB\\uDDBE\\uDE30-\\uDE32\\uDE3B\\uDE3C\\uDE3E\\uDEAC\\uDEAE\\uDEAF\\uDEB6\\uDF20\\uDF21\\uDF26]|\\uD81B[\\uDF51-\\uDF7E]'\n        },\n        {\n            name: 'Me',\n            alias: 'Enclosing_Mark',\n            bmp: '\\u0488\\u0489\\u1ABE\\u20DD-\\u20E0\\u20E2-\\u20E4\\uA670-\\uA672'\n        },\n        {\n            name: 'Mn',\n            alias: 'Nonspacing_Mark',\n            bmp: '\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D01\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\n            astral: '\\uD805[\\uDCB3-\\uDCB8\\uDCBA\\uDCBF\\uDCC0\\uDCC2\\uDCC3\\uDDB2-\\uDDB5\\uDDBC\\uDDBD\\uDDBF\\uDDC0\\uDDDC\\uDDDD\\uDE33-\\uDE3A\\uDE3D\\uDE3F\\uDE40\\uDEAB\\uDEAD\\uDEB0-\\uDEB5\\uDEB7\\uDF1D-\\uDF1F\\uDF22-\\uDF25\\uDF27-\\uDF2B]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC01\\uDC38-\\uDC46\\uDC7F-\\uDC81\\uDCB3-\\uDCB6\\uDCB9\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD2B\\uDD2D-\\uDD34\\uDD73\\uDD80\\uDD81\\uDDB6-\\uDDBE\\uDDCA-\\uDDCC\\uDE2F-\\uDE31\\uDE34\\uDE36\\uDE37\\uDEDF\\uDEE3-\\uDEEA\\uDF00\\uDF01\\uDF3C\\uDF40\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]'\n        },\n        {\n            name: 'N',\n            alias: 'Number',\n            bmp: '0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\n            astral: '\\uD800[\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD801[\\uDCA0-\\uDCA9]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E]|\\uD835[\\uDFCE-\\uDFFF]|\\uD83A[\\uDCC7-\\uDCCF]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59\\uDF5B-\\uDF61]|\\uD806[\\uDCE0-\\uDCF2]|\\uD804[\\uDC52-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDDE1-\\uDDF4\\uDEF0-\\uDEF9]|\\uD834[\\uDF60-\\uDF71]|\\uD83C[\\uDD00-\\uDD0C]|\\uD809[\\uDC00-\\uDC6E]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE47\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD805[\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF3B]'\n        },\n        {\n            name: 'Nd',\n            alias: 'Decimal_Number',\n            bmp: '0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\n            astral: '\\uD801[\\uDCA0-\\uDCA9]|\\uD835[\\uDFCE-\\uDFFF]|\\uD805[\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF39]|\\uD806[\\uDCE0-\\uDCE9]|\\uD804[\\uDC66-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDEF0-\\uDEF9]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59]'\n        },\n        {\n            name: 'Nl',\n            alias: 'Letter_Number',\n            bmp: '\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF',\n            astral: '\\uD809[\\uDC00-\\uDC6E]|\\uD800[\\uDD40-\\uDD74\\uDF41\\uDF4A\\uDFD1-\\uDFD5]'\n        },\n        {\n            name: 'No',\n            alias: 'Other_Number',\n            bmp: '\\xB2\\xB3\\xB9\\xBC-\\xBE\\u09F4-\\u09F9\\u0B72-\\u0B77\\u0BF0-\\u0BF2\\u0C78-\\u0C7E\\u0D70-\\u0D75\\u0F2A-\\u0F33\\u1369-\\u137C\\u17F0-\\u17F9\\u19DA\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u215F\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA830-\\uA835',\n            astral: '\\uD804[\\uDC52-\\uDC65\\uDDE1-\\uDDF4]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E]|\\uD83C[\\uDD00-\\uDD0C]|\\uD806[\\uDCEA-\\uDCF2]|\\uD83A[\\uDCC7-\\uDCCF]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE47\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD805[\\uDF3A\\uDF3B]|\\uD81A[\\uDF5B-\\uDF61]|\\uD834[\\uDF60-\\uDF71]|\\uD800[\\uDD07-\\uDD33\\uDD75-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23]'\n        },\n        {\n            name: 'P',\n            alias: 'Punctuation',\n            bmp: '\\x21-\\x23\\x25-\\\\x2A\\x2C-\\x2F\\x3A\\x3B\\\\x3F\\x40\\\\x5B-\\\\x5D\\x5F\\\\x7B\\x7D\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65',\n            astral: '\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD809[\\uDC70-\\uDC74]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD836[\\uDE87-\\uDE8B]|\\uD801\\uDD6F|\\uD82F\\uDC9F|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]'\n        },\n        {\n            name: 'Pc',\n            alias: 'Connector_Punctuation',\n            bmp: '\\x5F\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F'\n        },\n        {\n            name: 'Pd',\n            alias: 'Dash_Punctuation',\n            bmp: '\\\\x2D\\u058A\\u05BE\\u1400\\u1806\\u2010-\\u2015\\u2E17\\u2E1A\\u2E3A\\u2E3B\\u2E40\\u301C\\u3030\\u30A0\\uFE31\\uFE32\\uFE58\\uFE63\\uFF0D'\n        },\n        {\n            name: 'Pe',\n            alias: 'Close_Punctuation',\n            bmp: '\\\\x29\\\\x5D\\x7D\\u0F3B\\u0F3D\\u169C\\u2046\\u207E\\u208E\\u2309\\u230B\\u232A\\u2769\\u276B\\u276D\\u276F\\u2771\\u2773\\u2775\\u27C6\\u27E7\\u27E9\\u27EB\\u27ED\\u27EF\\u2984\\u2986\\u2988\\u298A\\u298C\\u298E\\u2990\\u2992\\u2994\\u2996\\u2998\\u29D9\\u29DB\\u29FD\\u2E23\\u2E25\\u2E27\\u2E29\\u3009\\u300B\\u300D\\u300F\\u3011\\u3015\\u3017\\u3019\\u301B\\u301E\\u301F\\uFD3E\\uFE18\\uFE36\\uFE38\\uFE3A\\uFE3C\\uFE3E\\uFE40\\uFE42\\uFE44\\uFE48\\uFE5A\\uFE5C\\uFE5E\\uFF09\\uFF3D\\uFF5D\\uFF60\\uFF63'\n        },\n        {\n            name: 'Pf',\n            alias: 'Final_Punctuation',\n            bmp: '\\xBB\\u2019\\u201D\\u203A\\u2E03\\u2E05\\u2E0A\\u2E0D\\u2E1D\\u2E21'\n        },\n        {\n            name: 'Pi',\n            alias: 'Initial_Punctuation',\n            bmp: '\\xAB\\u2018\\u201B\\u201C\\u201F\\u2039\\u2E02\\u2E04\\u2E09\\u2E0C\\u2E1C\\u2E20'\n        },\n        {\n            name: 'Po',\n            alias: 'Other_Punctuation',\n            bmp: '\\x21-\\x23\\x25-\\x27\\\\x2A\\x2C\\\\x2E\\x2F\\x3A\\x3B\\\\x3F\\x40\\\\x5C\\xA1\\xA7\\xB6\\xB7\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u166D\\u166E\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u1805\\u1807-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2016\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203B-\\u203E\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205E\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00\\u2E01\\u2E06-\\u2E08\\u2E0B\\u2E0E-\\u2E16\\u2E18\\u2E19\\u2E1B\\u2E1E\\u2E1F\\u2E2A-\\u2E2E\\u2E30-\\u2E39\\u2E3C-\\u2E3F\\u2E41\\u3001-\\u3003\\u303D\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFE10-\\uFE16\\uFE19\\uFE30\\uFE45\\uFE46\\uFE49-\\uFE4C\\uFE50-\\uFE52\\uFE54-\\uFE57\\uFE5F-\\uFE61\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF07\\uFF0A\\uFF0C\\uFF0E\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3C\\uFF61\\uFF64\\uFF65',\n            astral: '\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD809[\\uDC70-\\uDC74]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD836[\\uDE87-\\uDE8B]|\\uD801\\uDD6F|\\uD82F\\uDC9F|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]'\n        },\n        {\n            name: 'Ps',\n            alias: 'Open_Punctuation',\n            bmp: '\\\\x28\\\\x5B\\\\x7B\\u0F3A\\u0F3C\\u169B\\u201A\\u201E\\u2045\\u207D\\u208D\\u2308\\u230A\\u2329\\u2768\\u276A\\u276C\\u276E\\u2770\\u2772\\u2774\\u27C5\\u27E6\\u27E8\\u27EA\\u27EC\\u27EE\\u2983\\u2985\\u2987\\u2989\\u298B\\u298D\\u298F\\u2991\\u2993\\u2995\\u2997\\u29D8\\u29DA\\u29FC\\u2E22\\u2E24\\u2E26\\u2E28\\u2E42\\u3008\\u300A\\u300C\\u300E\\u3010\\u3014\\u3016\\u3018\\u301A\\u301D\\uFD3F\\uFE17\\uFE35\\uFE37\\uFE39\\uFE3B\\uFE3D\\uFE3F\\uFE41\\uFE43\\uFE47\\uFE59\\uFE5B\\uFE5D\\uFF08\\uFF3B\\uFF5B\\uFF5F\\uFF62'\n        },\n        {\n            name: 'S',\n            alias: 'Symbol',\n            bmp: '\\\\x24\\\\x2B\\x3C-\\x3E\\\\x5E\\x60\\\\x7C\\x7E\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BE\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u23FA\\u2400-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u32FE\\u3300-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD',\n            astral: '\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDD9A\\uDDE6-\\uDE02\\uDE10-\\uDE3A\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDD79\\uDD7B-\\uDDA3\\uDDA5-\\uDED0\\uDEE0-\\uDEEC\\uDEF0-\\uDEF3\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD82F\\uDC9C|\\uD805\\uDF3F|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD83B[\\uDEF0\\uDEF1]'\n        },\n        {\n            name: 'Sc',\n            alias: 'Currency_Symbol',\n            bmp: '\\\\x24\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20BE\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6'\n        },\n        {\n            name: 'Sk',\n            alias: 'Modifier_Symbol',\n            bmp: '\\\\x5E\\x60\\xA8\\xAF\\xB4\\xB8\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u309B\\u309C\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uAB5B\\uFBB2-\\uFBC1\\uFF3E\\uFF40\\uFFE3',\n            astral: '\\uD83C[\\uDFFB-\\uDFFF]'\n        },\n        {\n            name: 'Sm',\n            alias: 'Math_Symbol',\n            bmp: '\\\\x2B\\x3C-\\x3E\\\\x7C\\x7E\\xAC\\xB1\\xD7\\xF7\\u03F6\\u0606-\\u0608\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u2118\\u2140-\\u2144\\u214B\\u2190-\\u2194\\u219A\\u219B\\u21A0\\u21A3\\u21A6\\u21AE\\u21CE\\u21CF\\u21D2\\u21D4\\u21F4-\\u22FF\\u2320\\u2321\\u237C\\u239B-\\u23B3\\u23DC-\\u23E1\\u25B7\\u25C1\\u25F8-\\u25FF\\u266F\\u27C0-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u27FF\\u2900-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2AFF\\u2B30-\\u2B44\\u2B47-\\u2B4C\\uFB29\\uFE62\\uFE64-\\uFE66\\uFF0B\\uFF1C-\\uFF1E\\uFF5C\\uFF5E\\uFFE2\\uFFE9-\\uFFEC',\n            astral: '\\uD83B[\\uDEF0\\uDEF1]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]'\n        },\n        {\n            name: 'So',\n            alias: 'Other_Symbol',\n            bmp: '\\xA6\\xA9\\xAE\\xB0\\u0482\\u058D\\u058E\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09FA\\u0B70\\u0BF3-\\u0BF8\\u0BFA\\u0C7F\\u0D79\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116\\u2117\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u214A\\u214C\\u214D\\u214F\\u218A\\u218B\\u2195-\\u2199\\u219C-\\u219F\\u21A1\\u21A2\\u21A4\\u21A5\\u21A7-\\u21AD\\u21AF-\\u21CD\\u21D0\\u21D1\\u21D3\\u21D5-\\u21F3\\u2300-\\u2307\\u230C-\\u231F\\u2322-\\u2328\\u232B-\\u237B\\u237D-\\u239A\\u23B4-\\u23DB\\u23E2-\\u23FA\\u2400-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u25B6\\u25B8-\\u25C0\\u25C2-\\u25F7\\u2600-\\u266E\\u2670-\\u2767\\u2794-\\u27BF\\u2800-\\u28FF\\u2B00-\\u2B2F\\u2B45\\u2B46\\u2B4D-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u32FE\\u3300-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA828-\\uA82B\\uA836\\uA837\\uA839\\uAA77-\\uAA79\\uFDFD\\uFFE4\\uFFE8\\uFFED\\uFFEE\\uFFFC\\uFFFD',\n            astral: '\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD83D[\\uDC00-\\uDD79\\uDD7B-\\uDDA3\\uDDA5-\\uDED0\\uDEE0-\\uDEEC\\uDEF0-\\uDEF3\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDD9A\\uDDE6-\\uDE02\\uDE10-\\uDE3A\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFA]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD82F\\uDC9C|\\uD805\\uDF3F|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]'\n        },\n        {\n            name: 'Z',\n            alias: 'Separator',\n            bmp: '\\x20\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\n        },\n        {\n            name: 'Zl',\n            alias: 'Line_Separator',\n            bmp: '\\u2028'\n        },\n        {\n            name: 'Zp',\n            alias: 'Paragraph_Separator',\n            bmp: '\\u2029'\n        },\n        {\n            name: 'Zs',\n            alias: 'Space_Separator',\n            bmp: '\\x20\\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000'\n        }\n    ]);\n\n};\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\n/*!\n * XRegExp Unicode Properties 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2012-2016 MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds properties to meet the UTS #18 Level 1 RL1.2 requirements for Unicode regex support. See\n     * <http://unicode.org/reports/tr18/#RL1.2>. Following are definitions of these properties from\n     * UAX #44 <http://unicode.org/reports/tr44/>:\n     *\n     * - Alphabetic\n     *   Characters with the Alphabetic property. Generated from: Lowercase + Uppercase + Lt + Lm +\n     *   Lo + Nl + Other_Alphabetic.\n     *\n     * - Default_Ignorable_Code_Point\n     *   For programmatic determination of default ignorable code points. New characters that should\n     *   be ignored in rendering (unless explicitly supported) will be assigned in these ranges,\n     *   permitting programs to correctly handle the default rendering of such characters when not\n     *   otherwise supported.\n     *\n     * - Lowercase\n     *   Characters with the Lowercase property. Generated from: Ll + Other_Lowercase.\n     *\n     * - Noncharacter_Code_Point\n     *   Code points permanently reserved for internal use.\n     *\n     * - Uppercase\n     *   Characters with the Uppercase property. Generated from: Lu + Other_Uppercase.\n     *\n     * - White_Space\n     *   Spaces, separator characters and other control characters which should be treated by\n     *   programming languages as \"white space\" for the purpose of parsing elements.\n     *\n     * The properties ASCII, Any, and Assigned are also included but are not defined in UAX #44. UTS\n     * #18 RL1.2 additionally requires support for Unicode scripts and general categories. These are\n     * included in XRegExp's Unicode Categories and Unicode Scripts addons.\n     *\n     * Token names are case insensitive, and any spaces, hyphens, and underscores are ignored.\n     *\n     * Uses Unicode 8.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Properties');\n    }\n\n    var unicodeData = [\n        {\n            name: 'ASCII',\n            bmp: '\\0-\\x7F'\n        },\n        {\n            name: 'Alphabetic',\n            bmp: 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0345\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05B0-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0657\\u0659-\\u065F\\u066E-\\u06D3\\u06D5-\\u06DC\\u06E1-\\u06E8\\u06ED-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710-\\u073F\\u074D-\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0817\\u081A-\\u082C\\u0840-\\u0858\\u08A0-\\u08B4\\u08E3-\\u08E9\\u08F0-\\u093B\\u093D-\\u094C\\u094E-\\u0950\\u0955-\\u0963\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C4\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09F0\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B\\u0A4C\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A70-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0-\\u0AE3\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D-\\u0B44\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4C\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCC\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E46\\u0E4D\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ECD\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F81\\u0F88-\\u0F97\\u0F99-\\u0FBC\\u1000-\\u1036\\u1038\\u103B-\\u103F\\u1050-\\u1062\\u1065-\\u1068\\u106E-\\u1086\\u108E\\u109C\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1713\\u1720-\\u1733\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17B3\\u17B6-\\u17C8\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u1938\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A61-\\u1A74\\u1AA7\\u1B00-\\u1B33\\u1B35-\\u1B43\\u1B45-\\u1B4B\\u1B80-\\u1BA9\\u1BAC-\\u1BAF\\u1BBA-\\u1BE5\\u1BE7-\\u1BF1\\u1C00-\\u1C35\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1DE7-\\u1DF4\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u24B6-\\u24E9\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA674-\\uA67B\\uA67F-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA827\\uA840-\\uA873\\uA880-\\uA8C3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA92A\\uA930-\\uA952\\uA960-\\uA97C\\uA980-\\uA9B2\\uA9B4-\\uA9BF\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAABE\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n            astral: '\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD804[\\uDC00-\\uDC45\\uDC82-\\uDCB8\\uDCD0-\\uDCE8\\uDD00-\\uDD32\\uDD50-\\uDD72\\uDD76\\uDD80-\\uDDBF\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE34\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEE8\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D-\\uDF44\\uDF47\\uDF48\\uDF4B\\uDF4C\\uDF50\\uDF57\\uDF5D-\\uDF63]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD83A[\\uDC00-\\uDCC4]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]|\\uD80D[\\uDC00-\\uDC2E]|\\uD87E[\\uDC00-\\uDE1D]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9E]|\\uD808[\\uDC00-\\uDF99]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD805[\\uDC80-\\uDCC1\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDB5\\uDDB8-\\uDDBE\\uDDD8-\\uDDDD\\uDE00-\\uDE3E\\uDE40\\uDE44\\uDE80-\\uDEB5\\uDF00-\\uDF19\\uDF1D-\\uDF2A]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD811[\\uDC00-\\uDE46]|\\uD82C[\\uDC00\\uDC01]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF93-\\uDF9F]|\\uD873[\\uDC00-\\uDEA1]'\n        },\n        {\n            name: 'Any',\n            isBmpLast: true,\n            bmp: '\\0-\\uFFFF',\n            astral: '[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'Default_Ignorable_Code_Point',\n            bmp: '\\xAD\\u034F\\u061C\\u115F\\u1160\\u17B4\\u17B5\\u180B-\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u3164\\uFE00-\\uFE0F\\uFEFF\\uFFA0\\uFFF0-\\uFFF8',\n            astral: '[\\uDB40-\\uDB43][\\uDC00-\\uDFFF]|\\uD834[\\uDD73-\\uDD7A]|\\uD82F[\\uDCA0-\\uDCA3]'\n        },\n        {\n            name: 'Lowercase',\n            bmp: 'a-z\\xAA\\xB5\\xBA\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02B8\\u02C0\\u02C1\\u02E0-\\u02E4\\u0345\\u0371\\u0373\\u0377\\u037A-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1DBF\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u2071\\u207F\\u2090-\\u209C\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2170-\\u217F\\u2184\\u24D0-\\u24E9\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7D\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B-\\uA69D\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7F8-\\uA7FA\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\n            astral: '\\uD803[\\uDCC0-\\uDCF2]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD801[\\uDC28-\\uDC4F]|\\uD806[\\uDCC0-\\uDCDF]'\n        },\n        {\n            name: 'Noncharacter_Code_Point',\n            bmp: '\\uFDD0-\\uFDEF\\uFFFE\\uFFFF',\n            astral: '[\\uDB3F\\uDB7F\\uDBBF\\uDBFF\\uD83F\\uD87F\\uD8BF\\uDAFF\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uD8FF\\uDABF\\uDA7F\\uD93F][\\uDFFE\\uDFFF]'\n        },\n        {\n            name: 'Uppercase',\n            bmp: 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2160-\\u216F\\u2183\\u24B6-\\u24CF\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A',\n            astral: '\\uD806[\\uDCA0-\\uDCBF]|\\uD803[\\uDC80-\\uDCB2]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD801[\\uDC00-\\uDC27]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]'\n        },\n        {\n            name: 'White_Space',\n            bmp: '\\x09-\\x0D\\x20\\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\n        }\n    ];\n\n    // Add non-generated data\n    unicodeData.push({\n        name: 'Assigned',\n        // Since this is defined as the inverse of Unicode category Cn (Unassigned), the Unicode\n        // Categories addon is required to use this property\n        inverseOf: 'Cn'\n    });\n\n    XRegExp.addUnicodeData(unicodeData);\n\n};\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n/*!\n * XRegExp Unicode Scripts 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2010-2016 MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds support for all Unicode scripts. E.g., `\\p{Latin}`. Token names are case insensitive,\n     * and any spaces, hyphens, and underscores are ignored.\n     *\n     * Uses Unicode 8.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Scripts');\n    }\n\n    XRegExp.addUnicodeData([\n        {\n            name: 'Ahom',\n            astral: '\\uD805[\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF3F]'\n        },\n        {\n            name: 'Anatolian_Hieroglyphs',\n            astral: '\\uD811[\\uDC00-\\uDE46]'\n        },\n        {\n            name: 'Arabic',\n            bmp: '\\u0600-\\u0604\\u0606-\\u060B\\u060D-\\u061A\\u061E\\u0620-\\u063F\\u0641-\\u064A\\u0656-\\u066F\\u0671-\\u06DC\\u06DE-\\u06FF\\u0750-\\u077F\\u08A0-\\u08B4\\u08E3-\\u08FF\\uFB50-\\uFBC1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFD\\uFE70-\\uFE74\\uFE76-\\uFEFC',\n            astral: '\\uD803[\\uDE60-\\uDE7E]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB\\uDEF0\\uDEF1]'\n        },\n        {\n            name: 'Armenian',\n            bmp: '\\u0531-\\u0556\\u0559-\\u055F\\u0561-\\u0587\\u058A\\u058D-\\u058F\\uFB13-\\uFB17'\n        },\n        {\n            name: 'Avestan',\n            astral: '\\uD802[\\uDF00-\\uDF35\\uDF39-\\uDF3F]'\n        },\n        {\n            name: 'Balinese',\n            bmp: '\\u1B00-\\u1B4B\\u1B50-\\u1B7C'\n        },\n        {\n            name: 'Bamum',\n            bmp: '\\uA6A0-\\uA6F7',\n            astral: '\\uD81A[\\uDC00-\\uDE38]'\n        },\n        {\n            name: 'Bassa_Vah',\n            astral: '\\uD81A[\\uDED0-\\uDEED\\uDEF0-\\uDEF5]'\n        },\n        {\n            name: 'Batak',\n            bmp: '\\u1BC0-\\u1BF3\\u1BFC-\\u1BFF'\n        },\n        {\n            name: 'Bengali',\n            bmp: '\\u0980-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FB'\n        },\n        {\n            name: 'Bopomofo',\n            bmp: '\\u02EA\\u02EB\\u3105-\\u312D\\u31A0-\\u31BA'\n        },\n        {\n            name: 'Brahmi',\n            astral: '\\uD804[\\uDC00-\\uDC4D\\uDC52-\\uDC6F\\uDC7F]'\n        },\n        {\n            name: 'Braille',\n            bmp: '\\u2800-\\u28FF'\n        },\n        {\n            name: 'Buginese',\n            bmp: '\\u1A00-\\u1A1B\\u1A1E\\u1A1F'\n        },\n        {\n            name: 'Buhid',\n            bmp: '\\u1740-\\u1753'\n        },\n        {\n            name: 'Canadian_Aboriginal',\n            bmp: '\\u1400-\\u167F\\u18B0-\\u18F5'\n        },\n        {\n            name: 'Carian',\n            astral: '\\uD800[\\uDEA0-\\uDED0]'\n        },\n        {\n            name: 'Caucasian_Albanian',\n            astral: '\\uD801[\\uDD30-\\uDD63\\uDD6F]'\n        },\n        {\n            name: 'Chakma',\n            astral: '\\uD804[\\uDD00-\\uDD34\\uDD36-\\uDD43]'\n        },\n        {\n            name: 'Cham',\n            bmp: '\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA5F'\n        },\n        {\n            name: 'Cherokee',\n            bmp: '\\u13A0-\\u13F5\\u13F8-\\u13FD\\uAB70-\\uABBF'\n        },\n        {\n            name: 'Common',\n            bmp: '\\0-\\x40\\\\x5B-\\x60\\\\x7B-\\xA9\\xAB-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9-\\u02DF\\u02E5-\\u02E9\\u02EC-\\u02FF\\u0374\\u037E\\u0385\\u0387\\u0589\\u0605\\u060C\\u061B\\u061C\\u061F\\u0640\\u06DD\\u0964\\u0965\\u0E3F\\u0FD5-\\u0FD8\\u10FB\\u16EB-\\u16ED\\u1735\\u1736\\u1802\\u1803\\u1805\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u2000-\\u200B\\u200E-\\u2064\\u2066-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20BE\\u2100-\\u2125\\u2127-\\u2129\\u212C-\\u2131\\u2133-\\u214D\\u214F-\\u215F\\u2189-\\u218B\\u2190-\\u23FA\\u2400-\\u2426\\u2440-\\u244A\\u2460-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2E00-\\u2E42\\u2FF0-\\u2FFB\\u3000-\\u3004\\u3006\\u3008-\\u3020\\u3030-\\u3037\\u303C-\\u303F\\u309B\\u309C\\u30A0\\u30FB\\u30FC\\u3190-\\u319F\\u31C0-\\u31E3\\u3220-\\u325F\\u327F-\\u32CF\\u3358-\\u33FF\\u4DC0-\\u4DFF\\uA700-\\uA721\\uA788-\\uA78A\\uA830-\\uA839\\uA92E\\uA9CF\\uAB5B\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFF70\\uFF9E\\uFF9F\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD',\n            astral: '\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDFCB\\uDFCE-\\uDFFF]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]|\\uD83D[\\uDC00-\\uDD79\\uDD7B-\\uDDA3\\uDDA5-\\uDED0\\uDEE0-\\uDEEC\\uDEF0-\\uDEF3\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD800[\\uDD00-\\uDD02\\uDD07-\\uDD33\\uDD37-\\uDD3F\\uDD90-\\uDD9B\\uDDD0-\\uDDFC\\uDEE1-\\uDEFB]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD66\\uDD6A-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDF00-\\uDF56\\uDF60-\\uDF71]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD00-\\uDD0C\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE10-\\uDE3A\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFF]'\n        },\n        {\n            name: 'Coptic',\n            bmp: '\\u03E2-\\u03EF\\u2C80-\\u2CF3\\u2CF9-\\u2CFF'\n        },\n        {\n            name: 'Cuneiform',\n            astral: '\\uD809[\\uDC00-\\uDC6E\\uDC70-\\uDC74\\uDC80-\\uDD43]|\\uD808[\\uDC00-\\uDF99]'\n        },\n        {\n            name: 'Cypriot',\n            astral: '\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F]'\n        },\n        {\n            name: 'Cyrillic',\n            bmp: '\\u0400-\\u0484\\u0487-\\u052F\\u1D2B\\u1D78\\u2DE0-\\u2DFF\\uA640-\\uA69F\\uFE2E\\uFE2F'\n        },\n        {\n            name: 'Deseret',\n            astral: '\\uD801[\\uDC00-\\uDC4F]'\n        },\n        {\n            name: 'Devanagari',\n            bmp: '\\u0900-\\u0950\\u0953-\\u0963\\u0966-\\u097F\\uA8E0-\\uA8FD'\n        },\n        {\n            name: 'Duployan',\n            astral: '\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9C-\\uDC9F]'\n        },\n        {\n            name: 'Egyptian_Hieroglyphs',\n            astral: '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]'\n        },\n        {\n            name: 'Elbasan',\n            astral: '\\uD801[\\uDD00-\\uDD27]'\n        },\n        {\n            name: 'Ethiopic',\n            bmp: '\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E'\n        },\n        {\n            name: 'Georgian',\n            bmp: '\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u10FF\\u2D00-\\u2D25\\u2D27\\u2D2D'\n        },\n        {\n            name: 'Glagolitic',\n            bmp: '\\u2C00-\\u2C2E\\u2C30-\\u2C5E'\n        },\n        {\n            name: 'Gothic',\n            astral: '\\uD800[\\uDF30-\\uDF4A]'\n        },\n        {\n            name: 'Grantha',\n            astral: '\\uD804[\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]'\n        },\n        {\n            name: 'Greek',\n            bmp: '\\u0370-\\u0373\\u0375-\\u0377\\u037A-\\u037D\\u037F\\u0384\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03E1\\u03F0-\\u03FF\\u1D26-\\u1D2A\\u1D5D-\\u1D61\\u1D66-\\u1D6A\\u1DBF\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u2126\\uAB65',\n            astral: '\\uD800[\\uDD40-\\uDD8C\\uDDA0]|\\uD834[\\uDE00-\\uDE45]'\n        },\n        {\n            name: 'Gujarati',\n            bmp: '\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9'\n        },\n        {\n            name: 'Gurmukhi',\n            bmp: '\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75'\n        },\n        {\n            name: 'Han',\n            bmp: '\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u3005\\u3007\\u3021-\\u3029\\u3038-\\u303B\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uF900-\\uFA6D\\uFA70-\\uFAD9',\n            astral: '\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]'\n        },\n        {\n            name: 'Hangul',\n            bmp: '\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\u3200-\\u321E\\u3260-\\u327E\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC'\n        },\n        {\n            name: 'Hanunoo',\n            bmp: '\\u1720-\\u1734'\n        },\n        {\n            name: 'Hatran',\n            astral: '\\uD802[\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDCFF]'\n        },\n        {\n            name: 'Hebrew',\n            bmp: '\\u0591-\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F'\n        },\n        {\n            name: 'Hiragana',\n            bmp: '\\u3041-\\u3096\\u309D-\\u309F',\n            astral: '\\uD82C\\uDC01|\\uD83C\\uDE00'\n        },\n        {\n            name: 'Imperial_Aramaic',\n            astral: '\\uD802[\\uDC40-\\uDC55\\uDC57-\\uDC5F]'\n        },\n        {\n            name: 'Inherited',\n            bmp: '\\u0300-\\u036F\\u0485\\u0486\\u064B-\\u0655\\u0670\\u0951\\u0952\\u1AB0-\\u1ABE\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u200C\\u200D\\u20D0-\\u20F0\\u302A-\\u302D\\u3099\\u309A\\uFE00-\\uFE0F\\uFE20-\\uFE2D',\n            astral: '\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD]|\\uD800[\\uDDFD\\uDEE0]|\\uDB40[\\uDD00-\\uDDEF]'\n        },\n        {\n            name: 'Inscriptional_Pahlavi',\n            astral: '\\uD802[\\uDF60-\\uDF72\\uDF78-\\uDF7F]'\n        },\n        {\n            name: 'Inscriptional_Parthian',\n            astral: '\\uD802[\\uDF40-\\uDF55\\uDF58-\\uDF5F]'\n        },\n        {\n            name: 'Javanese',\n            bmp: '\\uA980-\\uA9CD\\uA9D0-\\uA9D9\\uA9DE\\uA9DF'\n        },\n        {\n            name: 'Kaithi',\n            astral: '\\uD804[\\uDC80-\\uDCC1]'\n        },\n        {\n            name: 'Kannada',\n            bmp: '\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2'\n        },\n        {\n            name: 'Katakana',\n            bmp: '\\u30A1-\\u30FA\\u30FD-\\u30FF\\u31F0-\\u31FF\\u32D0-\\u32FE\\u3300-\\u3357\\uFF66-\\uFF6F\\uFF71-\\uFF9D',\n            astral: '\\uD82C\\uDC00'\n        },\n        {\n            name: 'Kayah_Li',\n            bmp: '\\uA900-\\uA92D\\uA92F'\n        },\n        {\n            name: 'Kharoshthi',\n            astral: '\\uD802[\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F-\\uDE47\\uDE50-\\uDE58]'\n        },\n        {\n            name: 'Khmer',\n            bmp: '\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u19E0-\\u19FF'\n        },\n        {\n            name: 'Khojki',\n            astral: '\\uD804[\\uDE00-\\uDE11\\uDE13-\\uDE3D]'\n        },\n        {\n            name: 'Khudawadi',\n            astral: '\\uD804[\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9]'\n        },\n        {\n            name: 'Lao',\n            bmp: '\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF'\n        },\n        {\n            name: 'Latin',\n            bmp: 'A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02E0-\\u02E4\\u1D00-\\u1D25\\u1D2C-\\u1D5C\\u1D62-\\u1D65\\u1D6B-\\u1D77\\u1D79-\\u1DBE\\u1E00-\\u1EFF\\u2071\\u207F\\u2090-\\u209C\\u212A\\u212B\\u2132\\u214E\\u2160-\\u2188\\u2C60-\\u2C7F\\uA722-\\uA787\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA7FF\\uAB30-\\uAB5A\\uAB5C-\\uAB64\\uFB00-\\uFB06\\uFF21-\\uFF3A\\uFF41-\\uFF5A'\n        },\n        {\n            name: 'Lepcha',\n            bmp: '\\u1C00-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C4F'\n        },\n        {\n            name: 'Limbu',\n            bmp: '\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u194F'\n        },\n        {\n            name: 'Linear_A',\n            astral: '\\uD801[\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]'\n        },\n        {\n            name: 'Linear_B',\n            astral: '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA]'\n        },\n        {\n            name: 'Lisu',\n            bmp: '\\uA4D0-\\uA4FF'\n        },\n        {\n            name: 'Lycian',\n            astral: '\\uD800[\\uDE80-\\uDE9C]'\n        },\n        {\n            name: 'Lydian',\n            astral: '\\uD802[\\uDD20-\\uDD39\\uDD3F]'\n        },\n        {\n            name: 'Mahajani',\n            astral: '\\uD804[\\uDD50-\\uDD76]'\n        },\n        {\n            name: 'Malayalam',\n            bmp: '\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D75\\u0D79-\\u0D7F'\n        },\n        {\n            name: 'Mandaic',\n            bmp: '\\u0840-\\u085B\\u085E'\n        },\n        {\n            name: 'Manichaean',\n            astral: '\\uD802[\\uDEC0-\\uDEE6\\uDEEB-\\uDEF6]'\n        },\n        {\n            name: 'Meetei_Mayek',\n            bmp: '\\uAAE0-\\uAAF6\\uABC0-\\uABED\\uABF0-\\uABF9'\n        },\n        {\n            name: 'Mende_Kikakui',\n            astral: '\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCD6]'\n        },\n        {\n            name: 'Meroitic_Cursive',\n            astral: '\\uD802[\\uDDA0-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDDFF]'\n        },\n        {\n            name: 'Meroitic_Hieroglyphs',\n            astral: '\\uD802[\\uDD80-\\uDD9F]'\n        },\n        {\n            name: 'Miao',\n            astral: '\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]'\n        },\n        {\n            name: 'Modi',\n            astral: '\\uD805[\\uDE00-\\uDE44\\uDE50-\\uDE59]'\n        },\n        {\n            name: 'Mongolian',\n            bmp: '\\u1800\\u1801\\u1804\\u1806-\\u180E\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA'\n        },\n        {\n            name: 'Mro',\n            astral: '\\uD81A[\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE6E\\uDE6F]'\n        },\n        {\n            name: 'Multani',\n            astral: '\\uD804[\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA9]'\n        },\n        {\n            name: 'Myanmar',\n            bmp: '\\u1000-\\u109F\\uA9E0-\\uA9FE\\uAA60-\\uAA7F'\n        },\n        {\n            name: 'Nabataean',\n            astral: '\\uD802[\\uDC80-\\uDC9E\\uDCA7-\\uDCAF]'\n        },\n        {\n            name: 'New_Tai_Lue',\n            bmp: '\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE\\u19DF'\n        },\n        {\n            name: 'Nko',\n            bmp: '\\u07C0-\\u07FA'\n        },\n        {\n            name: 'Ogham',\n            bmp: '\\u1680-\\u169C'\n        },\n        {\n            name: 'Ol_Chiki',\n            bmp: '\\u1C50-\\u1C7F'\n        },\n        {\n            name: 'Old_Hungarian',\n            astral: '\\uD803[\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDCFF]'\n        },\n        {\n            name: 'Old_Italic',\n            astral: '\\uD800[\\uDF00-\\uDF23]'\n        },\n        {\n            name: 'Old_North_Arabian',\n            astral: '\\uD802[\\uDE80-\\uDE9F]'\n        },\n        {\n            name: 'Old_Permic',\n            astral: '\\uD800[\\uDF50-\\uDF7A]'\n        },\n        {\n            name: 'Old_Persian',\n            astral: '\\uD800[\\uDFA0-\\uDFC3\\uDFC8-\\uDFD5]'\n        },\n        {\n            name: 'Old_South_Arabian',\n            astral: '\\uD802[\\uDE60-\\uDE7F]'\n        },\n        {\n            name: 'Old_Turkic',\n            astral: '\\uD803[\\uDC00-\\uDC48]'\n        },\n        {\n            name: 'Oriya',\n            bmp: '\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77'\n        },\n        {\n            name: 'Osmanya',\n            astral: '\\uD801[\\uDC80-\\uDC9D\\uDCA0-\\uDCA9]'\n        },\n        {\n            name: 'Pahawh_Hmong',\n            astral: '\\uD81A[\\uDF00-\\uDF45\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]'\n        },\n        {\n            name: 'Palmyrene',\n            astral: '\\uD802[\\uDC60-\\uDC7F]'\n        },\n        {\n            name: 'Pau_Cin_Hau',\n            astral: '\\uD806[\\uDEC0-\\uDEF8]'\n        },\n        {\n            name: 'Phags_Pa',\n            bmp: '\\uA840-\\uA877'\n        },\n        {\n            name: 'Phoenician',\n            astral: '\\uD802[\\uDD00-\\uDD1B\\uDD1F]'\n        },\n        {\n            name: 'Psalter_Pahlavi',\n            astral: '\\uD802[\\uDF80-\\uDF91\\uDF99-\\uDF9C\\uDFA9-\\uDFAF]'\n        },\n        {\n            name: 'Rejang',\n            bmp: '\\uA930-\\uA953\\uA95F'\n        },\n        {\n            name: 'Runic',\n            bmp: '\\u16A0-\\u16EA\\u16EE-\\u16F8'\n        },\n        {\n            name: 'Samaritan',\n            bmp: '\\u0800-\\u082D\\u0830-\\u083E'\n        },\n        {\n            name: 'Saurashtra',\n            bmp: '\\uA880-\\uA8C4\\uA8CE-\\uA8D9'\n        },\n        {\n            name: 'Sharada',\n            astral: '\\uD804[\\uDD80-\\uDDCD\\uDDD0-\\uDDDF]'\n        },\n        {\n            name: 'Shavian',\n            astral: '\\uD801[\\uDC50-\\uDC7F]'\n        },\n        {\n            name: 'Siddham',\n            astral: '\\uD805[\\uDD80-\\uDDB5\\uDDB8-\\uDDDD]'\n        },\n        {\n            name: 'SignWriting',\n            astral: '\\uD836[\\uDC00-\\uDE8B\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]'\n        },\n        {\n            name: 'Sinhala',\n            bmp: '\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4',\n            astral: '\\uD804[\\uDDE1-\\uDDF4]'\n        },\n        {\n            name: 'Sora_Sompeng',\n            astral: '\\uD804[\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9]'\n        },\n        {\n            name: 'Sundanese',\n            bmp: '\\u1B80-\\u1BBF\\u1CC0-\\u1CC7'\n        },\n        {\n            name: 'Syloti_Nagri',\n            bmp: '\\uA800-\\uA82B'\n        },\n        {\n            name: 'Syriac',\n            bmp: '\\u0700-\\u070D\\u070F-\\u074A\\u074D-\\u074F'\n        },\n        {\n            name: 'Tagalog',\n            bmp: '\\u1700-\\u170C\\u170E-\\u1714'\n        },\n        {\n            name: 'Tagbanwa',\n            bmp: '\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773'\n        },\n        {\n            name: 'Tai_Le',\n            bmp: '\\u1950-\\u196D\\u1970-\\u1974'\n        },\n        {\n            name: 'Tai_Tham',\n            bmp: '\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD'\n        },\n        {\n            name: 'Tai_Viet',\n            bmp: '\\uAA80-\\uAAC2\\uAADB-\\uAADF'\n        },\n        {\n            name: 'Takri',\n            astral: '\\uD805[\\uDE80-\\uDEB7\\uDEC0-\\uDEC9]'\n        },\n        {\n            name: 'Tamil',\n            bmp: '\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA'\n        },\n        {\n            name: 'Telugu',\n            bmp: '\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C78-\\u0C7F'\n        },\n        {\n            name: 'Thaana',\n            bmp: '\\u0780-\\u07B1'\n        },\n        {\n            name: 'Thai',\n            bmp: '\\u0E01-\\u0E3A\\u0E40-\\u0E5B'\n        },\n        {\n            name: 'Tibetan',\n            bmp: '\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FD4\\u0FD9\\u0FDA'\n        },\n        {\n            name: 'Tifinagh',\n            bmp: '\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F'\n        },\n        {\n            name: 'Tirhuta',\n            astral: '\\uD805[\\uDC80-\\uDCC7\\uDCD0-\\uDCD9]'\n        },\n        {\n            name: 'Ugaritic',\n            astral: '\\uD800[\\uDF80-\\uDF9D\\uDF9F]'\n        },\n        {\n            name: 'Vai',\n            bmp: '\\uA500-\\uA62B'\n        },\n        {\n            name: 'Warang_Citi',\n            astral: '\\uD806[\\uDCA0-\\uDCF2\\uDCFF]'\n        },\n        {\n            name: 'Yi',\n            bmp: '\\uA000-\\uA48C\\uA490-\\uA4C6'\n        }\n    ]);\n\n};\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar XRegExp = __webpack_require__(42);\n\n__webpack_require__(34)(XRegExp);\n__webpack_require__(35)(XRegExp);\n__webpack_require__(36)(XRegExp);\n__webpack_require__(37)(XRegExp);\n__webpack_require__(38)(XRegExp);\n__webpack_require__(39)(XRegExp);\n__webpack_require__(40)(XRegExp);\n\nmodule.exports = XRegExp;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * XRegExp 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2007-2016 MIT License\n */\n\n\n\n/**\n * XRegExp provides augmented, extensible regular expressions. You get additional regex syntax and\n * flags, beyond what browsers support natively. XRegExp is also a regex utility belt with tools to\n * make your client-side grepping simpler and more powerful, while freeing you from related\n * cross-browser inconsistencies.\n */\n\n// ==--------------------------==\n// Private stuff\n// ==--------------------------==\n\n// Property name used for extended regex instance data\nvar REGEX_DATA = 'xregexp';\n// Optional features that can be installed and uninstalled\nvar features = {\n    astral: false,\n    natives: false\n};\n// Native methods to use and restore ('native' is an ES3 reserved keyword)\nvar nativ = {\n    exec: RegExp.prototype.exec,\n    test: RegExp.prototype.test,\n    match: String.prototype.match,\n    replace: String.prototype.replace,\n    split: String.prototype.split\n};\n// Storage for fixed/extended native methods\nvar fixed = {};\n// Storage for regexes cached by `XRegExp.cache`\nvar regexCache = {};\n// Storage for pattern details cached by the `XRegExp` constructor\nvar patternCache = {};\n// Storage for regex syntax tokens added internally or by `XRegExp.addToken`\nvar tokens = [];\n// Token scopes\nvar defaultScope = 'default';\nvar classScope = 'class';\n// Regexes that match native regex syntax, including octals\nvar nativeTokens = {\n    // Any native multicharacter token in default scope, or any single character\n    'default': /\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|\\(\\?(?:[:=!]|<[=!])|[?*+]\\?|{\\d+(?:,\\d*)?}\\??|[\\s\\S]/,\n    // Any native multicharacter token in character class scope, or any single character\n    'class': /\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|[\\s\\S]/\n};\n// Any backreference or dollar-prefixed character in replacement strings\nvar replacementToken = /\\$(?:{([\\w$]+)}|(\\d\\d?|[\\s\\S]))/g;\n// Check for correct `exec` handling of nonparticipating capturing groups\nvar correctExecNpcg = nativ.exec.call(/()??/, '')[1] === undefined;\n// Check for ES6 `flags` prop support\nvar hasFlagsProp = /x/.flags !== undefined;\n// Shortcut to `Object.prototype.toString`\nvar toString = {}.toString;\n\nfunction hasNativeFlag(flag) {\n    // Can't check based on the presense of properties/getters since browsers might support such\n    // properties even when they don't support the corresponding flag in regex construction (tested\n    // in Chrome 48, where `'unicode' in /x/` is true but trying to construct a regex with flag `u`\n    // throws an error)\n    var isSupported = true;\n    try {\n        // Can't use regex literals for testing even in a `try` because regex literals with\n        // unsupported flags cause a compilation error in IE\n        new RegExp('', flag);\n    } catch (exception) {\n        isSupported = false;\n    }\n    if (isSupported && flag === 'y') {\n        // Work around Safari 9.1.1 bug\n        return new RegExp('aa|.', 'y').test('b');\n    }\n    return isSupported;\n}\n// Check for ES6 `u` flag support\nvar hasNativeU = hasNativeFlag('u');\n// Check for ES6 `y` flag support\nvar hasNativeY = hasNativeFlag('y');\n// Tracker for known flags, including addon flags\nvar registeredFlags = {\n    g: true,\n    i: true,\n    m: true,\n    u: hasNativeU,\n    y: hasNativeY\n};\n\n/**\n * Attaches extended data and `XRegExp.prototype` properties to a regex object.\n *\n * @param {RegExp} regex Regex to augment.\n * @param {Array} captureNames Array with capture names, or `null`.\n * @param {String} xSource XRegExp pattern used to generate `regex`, or `null` if N/A.\n * @param {String} xFlags XRegExp flags used to generate `regex`, or `null` if N/A.\n * @param {Boolean} [isInternalOnly=false] Whether the regex will be used only for internal\n *   operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *   skipping some operations like attaching `XRegExp.prototype` properties.\n * @returns {RegExp} Augmented regex.\n */\nfunction augment(regex, captureNames, xSource, xFlags, isInternalOnly) {\n    var p;\n\n    regex[REGEX_DATA] = {\n        captureNames: captureNames\n    };\n\n    if (isInternalOnly) {\n        return regex;\n    }\n\n    // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value\n    if (regex.__proto__) {\n        regex.__proto__ = XRegExp.prototype;\n    } else {\n        for (p in XRegExp.prototype) {\n            // An `XRegExp.prototype.hasOwnProperty(p)` check wouldn't be worth it here, since this\n            // is performance sensitive, and enumerable `Object.prototype` or `RegExp.prototype`\n            // extensions exist on `regex.prototype` anyway\n            regex[p] = XRegExp.prototype[p];\n        }\n    }\n\n    regex[REGEX_DATA].source = xSource;\n    // Emulate the ES6 `flags` prop by ensuring flags are in alphabetical order\n    regex[REGEX_DATA].flags = xFlags ? xFlags.split('').sort().join('') : xFlags;\n\n    return regex;\n}\n\n/**\n * Removes any duplicate characters from the provided string.\n *\n * @param {String} str String to remove duplicate characters from.\n * @returns {String} String with any duplicate characters removed.\n */\nfunction clipDuplicates(str) {\n    return nativ.replace.call(str, /([\\s\\S])(?=[\\s\\S]*\\1)/g, '');\n}\n\n/**\n * Copies a regex object while preserving extended data and augmenting with `XRegExp.prototype`\n * properties. The copy has a fresh `lastIndex` property (set to zero). Allows adding and removing\n * flags g and y while copying the regex.\n *\n * @param {RegExp} regex Regex to copy.\n * @param {Object} [options] Options object with optional properties:\n *   <li>`addG` {Boolean} Add flag g while copying the regex.\n *   <li>`addY` {Boolean} Add flag y while copying the regex.\n *   <li>`removeG` {Boolean} Remove flag g while copying the regex.\n *   <li>`removeY` {Boolean} Remove flag y while copying the regex.\n *   <li>`isInternalOnly` {Boolean} Whether the copied regex will be used only for internal\n *     operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *     skipping some operations like attaching `XRegExp.prototype` properties.\n * @returns {RegExp} Copy of the provided regex, possibly with modified flags.\n */\nfunction copyRegex(regex, options) {\n    if (!XRegExp.isRegExp(regex)) {\n        throw new TypeError('Type RegExp expected');\n    }\n\n    var xData = regex[REGEX_DATA] || {},\n        flags = getNativeFlags(regex),\n        flagsToAdd = '',\n        flagsToRemove = '',\n        xregexpSource = null,\n        xregexpFlags = null;\n\n    options = options || {};\n\n    if (options.removeG) {flagsToRemove += 'g';}\n    if (options.removeY) {flagsToRemove += 'y';}\n    if (flagsToRemove) {\n        flags = nativ.replace.call(flags, new RegExp('[' + flagsToRemove + ']+', 'g'), '');\n    }\n\n    if (options.addG) {flagsToAdd += 'g';}\n    if (options.addY) {flagsToAdd += 'y';}\n    if (flagsToAdd) {\n        flags = clipDuplicates(flags + flagsToAdd);\n    }\n\n    if (!options.isInternalOnly) {\n        if (xData.source !== undefined) {\n            xregexpSource = xData.source;\n        }\n        // null or undefined; don't want to add to `flags` if the previous value was null, since\n        // that indicates we're not tracking original precompilation flags\n        if (xData.flags != null) {\n            // Flags are only added for non-internal regexes by `XRegExp.globalize`. Flags are never\n            // removed for non-internal regexes, so don't need to handle it\n            xregexpFlags = flagsToAdd ? clipDuplicates(xData.flags + flagsToAdd) : xData.flags;\n        }\n    }\n\n    // Augment with `XRegExp.prototype` properties, but use the native `RegExp` constructor to avoid\n    // searching for special tokens. That would be wrong for regexes constructed by `RegExp`, and\n    // unnecessary for regexes constructed by `XRegExp` because the regex has already undergone the\n    // translation to native regex syntax\n    regex = augment(\n        new RegExp(regex.source, flags),\n        hasNamedCapture(regex) ? xData.captureNames.slice(0) : null,\n        xregexpSource,\n        xregexpFlags,\n        options.isInternalOnly\n    );\n\n    return regex;\n}\n\n/**\n * Converts hexadecimal to decimal.\n *\n * @param {String} hex\n * @returns {Number}\n */\nfunction dec(hex) {\n    return parseInt(hex, 16);\n}\n\n/**\n * Returns native `RegExp` flags used by a regex object.\n *\n * @param {RegExp} regex Regex to check.\n * @returns {String} Native flags in use.\n */\nfunction getNativeFlags(regex) {\n    return hasFlagsProp ?\n        regex.flags :\n        // Explicitly using `RegExp.prototype.toString` (rather than e.g. `String` or concatenation\n        // with an empty string) allows this to continue working predictably when\n        // `XRegExp.proptotype.toString` is overriden\n        nativ.exec.call(/\\/([a-z]*)$/i, RegExp.prototype.toString.call(regex))[1];\n}\n\n/**\n * Determines whether a regex has extended instance data used to track capture names.\n *\n * @param {RegExp} regex Regex to check.\n * @returns {Boolean} Whether the regex uses named capture.\n */\nfunction hasNamedCapture(regex) {\n    return !!(regex[REGEX_DATA] && regex[REGEX_DATA].captureNames);\n}\n\n/**\n * Converts decimal to hexadecimal.\n *\n * @param {Number|String} dec\n * @returns {String}\n */\nfunction hex(dec) {\n    return parseInt(dec, 10).toString(16);\n}\n\n/**\n * Returns the first index at which a given value can be found in an array.\n *\n * @param {Array} array Array to search.\n * @param {*} value Value to locate in the array.\n * @returns {Number} Zero-based index at which the item is found, or -1.\n */\nfunction indexOf(array, value) {\n    var len = array.length, i;\n\n    for (i = 0; i < len; ++i) {\n        if (array[i] === value) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n/**\n * Determines whether a value is of the specified type, by resolving its internal [[Class]].\n *\n * @param {*} value Object to check.\n * @param {String} type Type to check for, in TitleCase.\n * @returns {Boolean} Whether the object matches the type.\n */\nfunction isType(value, type) {\n    return toString.call(value) === '[object ' + type + ']';\n}\n\n/**\n * Checks whether the next nonignorable token after the specified position is a quantifier.\n *\n * @param {String} pattern Pattern to search within.\n * @param {Number} pos Index in `pattern` to search at.\n * @param {String} flags Flags used by the pattern.\n * @returns {Boolean} Whether the next token is a quantifier.\n */\nfunction isQuantifierNext(pattern, pos, flags) {\n    return nativ.test.call(\n        flags.indexOf('x') > -1 ?\n            // Ignore any leading whitespace, line comments, and inline comments\n            /^(?:\\s|#[^#\\n]*|\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})/ :\n            // Ignore any leading inline comments\n            /^(?:\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})/,\n        pattern.slice(pos)\n    );\n}\n\n/**\n * Adds leading zeros if shorter than four characters. Used for fixed-length hexadecimal values.\n *\n * @param {String} str\n * @returns {String}\n */\nfunction pad4(str) {\n    while (str.length < 4) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Checks for flag-related errors, and strips/applies flags in a leading mode modifier. Offloads\n * the flag preparation logic from the `XRegExp` constructor.\n *\n * @param {String} pattern Regex pattern, possibly with a leading mode modifier.\n * @param {String} flags Any combination of flags.\n * @returns {Object} Object with properties `pattern` and `flags`.\n */\nfunction prepareFlags(pattern, flags) {\n    var i;\n\n    // Recent browsers throw on duplicate flags, so copy this behavior for nonnative flags\n    if (clipDuplicates(flags) !== flags) {\n        throw new SyntaxError('Invalid duplicate regex flag ' + flags);\n    }\n\n    // Strip and apply a leading mode modifier with any combination of flags except g or y\n    pattern = nativ.replace.call(pattern, /^\\(\\?([\\w$]+)\\)/, function($0, $1) {\n        if (nativ.test.call(/[gy]/, $1)) {\n            throw new SyntaxError('Cannot use flag g or y in mode modifier ' + $0);\n        }\n        // Allow duplicate flags within the mode modifier\n        flags = clipDuplicates(flags + $1);\n        return '';\n    });\n\n    // Throw on unknown native or nonnative flags\n    for (i = 0; i < flags.length; ++i) {\n        if (!registeredFlags[flags.charAt(i)]) {\n            throw new SyntaxError('Unknown regex flag ' + flags.charAt(i));\n        }\n    }\n\n    return {\n        pattern: pattern,\n        flags: flags\n    };\n}\n\n/**\n * Prepares an options object from the given value.\n *\n * @param {String|Object} value Value to convert to an options object.\n * @returns {Object} Options object.\n */\nfunction prepareOptions(value) {\n    var options = {};\n\n    if (isType(value, 'String')) {\n        XRegExp.forEach(value, /[^\\s,]+/, function(match) {\n            options[match] = true;\n        });\n\n        return options;\n    }\n\n    return value;\n}\n\n/**\n * Registers a flag so it doesn't throw an 'unknown flag' error.\n *\n * @param {String} flag Single-character flag to register.\n */\nfunction registerFlag(flag) {\n    if (!/^[\\w$]$/.test(flag)) {\n        throw new Error('Flag must be a single character A-Za-z0-9_$');\n    }\n\n    registeredFlags[flag] = true;\n}\n\n/**\n * Runs built-in and custom regex syntax tokens in reverse insertion order at the specified\n * position, until a match is found.\n *\n * @param {String} pattern Original pattern from which an XRegExp object is being built.\n * @param {String} flags Flags being used to construct the regex.\n * @param {Number} pos Position to search for tokens within `pattern`.\n * @param {Number} scope Regex scope to apply: 'default' or 'class'.\n * @param {Object} context Context object to use for token handler functions.\n * @returns {Object} Object with properties `matchLength`, `output`, and `reparse`; or `null`.\n */\nfunction runTokens(pattern, flags, pos, scope, context) {\n    var i = tokens.length,\n        leadChar = pattern.charAt(pos),\n        result = null,\n        match,\n        t;\n\n    // Run in reverse insertion order\n    while (i--) {\n        t = tokens[i];\n        if (\n            (t.leadChar && t.leadChar !== leadChar) ||\n            (t.scope !== scope && t.scope !== 'all') ||\n            (t.flag && flags.indexOf(t.flag) === -1)\n        ) {\n            continue;\n        }\n\n        match = XRegExp.exec(pattern, t.regex, pos, 'sticky');\n        if (match) {\n            result = {\n                matchLength: match[0].length,\n                output: t.handler.call(context, match, scope, flags),\n                reparse: t.reparse\n            };\n            // Finished with token tests\n            break;\n        }\n    }\n\n    return result;\n}\n\n/**\n * Enables or disables implicit astral mode opt-in. When enabled, flag A is automatically added to\n * all new regexes created by XRegExp. This causes an error to be thrown when creating regexes if\n * the Unicode Base addon is not available, since flag A is registered by that addon.\n *\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\nfunction setAstral(on) {\n    features.astral = on;\n}\n\n/**\n * Enables or disables native method overrides.\n *\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\nfunction setNatives(on) {\n    RegExp.prototype.exec = (on ? fixed : nativ).exec;\n    RegExp.prototype.test = (on ? fixed : nativ).test;\n    String.prototype.match = (on ? fixed : nativ).match;\n    String.prototype.replace = (on ? fixed : nativ).replace;\n    String.prototype.split = (on ? fixed : nativ).split;\n\n    features.natives = on;\n}\n\n/**\n * Returns the object, or throws an error if it is `null` or `undefined`. This is used to follow\n * the ES5 abstract operation `ToObject`.\n *\n * @param {*} value Object to check and return.\n * @returns {*} The provided object.\n */\nfunction toObject(value) {\n    // null or undefined\n    if (value == null) {\n        throw new TypeError('Cannot convert null or undefined to object');\n    }\n\n    return value;\n}\n\n// ==--------------------------==\n// Constructor\n// ==--------------------------==\n\n/**\n * Creates an extended regular expression object for matching text with a pattern. Differs from a\n * native regular expression in that additional syntax and flags are supported. The returned object\n * is in fact a native `RegExp` and works with all native methods.\n *\n * @class XRegExp\n * @constructor\n * @param {String|RegExp} pattern Regex pattern string, or an existing regex object to copy.\n * @param {String} [flags] Any combination of flags.\n *   Native flags:\n *     <li>`g` - global\n *     <li>`i` - ignore case\n *     <li>`m` - multiline anchors\n *     <li>`u` - unicode (ES6)\n *     <li>`y` - sticky (Firefox 3+, ES6)\n *   Additional XRegExp flags:\n *     <li>`n` - explicit capture\n *     <li>`s` - dot matches all (aka singleline)\n *     <li>`x` - free-spacing and line comments (aka extended)\n *     <li>`A` - astral (requires the Unicode Base addon)\n *   Flags cannot be provided when constructing one `RegExp` from another.\n * @returns {RegExp} Extended regular expression object.\n * @example\n *\n * // With named capture and flag x\n * XRegExp('(?<year>  [0-9]{4} ) -?  # year  \\n\\\n *          (?<month> [0-9]{2} ) -?  # month \\n\\\n *          (?<day>   [0-9]{2} )     # day   ', 'x');\n *\n * // Providing a regex object copies it. Native regexes are recompiled using native (not XRegExp)\n * // syntax. Copies maintain extended data, are augmented with `XRegExp.prototype` properties, and\n * // have fresh `lastIndex` properties (set to zero).\n * XRegExp(/regex/);\n */\nfunction XRegExp(pattern, flags) {\n    if (XRegExp.isRegExp(pattern)) {\n        if (flags !== undefined) {\n            throw new TypeError('Cannot supply flags when copying a RegExp');\n        }\n        return copyRegex(pattern);\n    }\n\n    // Copy the argument behavior of `RegExp`\n    pattern = pattern === undefined ? '' : String(pattern);\n    flags = flags === undefined ? '' : String(flags);\n\n    if (XRegExp.isInstalled('astral') && flags.indexOf('A') === -1) {\n        // This causes an error to be thrown if the Unicode Base addon is not available\n        flags += 'A';\n    }\n\n    if (!patternCache[pattern]) {\n        patternCache[pattern] = {};\n    }\n\n    if (!patternCache[pattern][flags]) {\n        var context = {\n            hasNamedCapture: false,\n            captureNames: []\n        };\n        var scope = defaultScope;\n        var output = '';\n        var pos = 0;\n        var result;\n\n        // Check for flag-related errors, and strip/apply flags in a leading mode modifier\n        var applied = prepareFlags(pattern, flags);\n        var appliedPattern = applied.pattern;\n        var appliedFlags = applied.flags;\n\n        // Use XRegExp's tokens to translate the pattern to a native regex pattern.\n        // `appliedPattern.length` may change on each iteration if tokens use `reparse`\n        while (pos < appliedPattern.length) {\n            do {\n                // Check for custom tokens at the current position\n                result = runTokens(appliedPattern, appliedFlags, pos, scope, context);\n                // If the matched token used the `reparse` option, splice its output into the\n                // pattern before running tokens again at the same position\n                if (result && result.reparse) {\n                    appliedPattern = appliedPattern.slice(0, pos) +\n                        result.output +\n                        appliedPattern.slice(pos + result.matchLength);\n                }\n            } while (result && result.reparse);\n\n            if (result) {\n                output += result.output;\n                pos += (result.matchLength || 1);\n            } else {\n                // Get the native token at the current position\n                var token = XRegExp.exec(appliedPattern, nativeTokens[scope], pos, 'sticky')[0];\n                output += token;\n                pos += token.length;\n                if (token === '[' && scope === defaultScope) {\n                    scope = classScope;\n                } else if (token === ']' && scope === classScope) {\n                    scope = defaultScope;\n                }\n            }\n        }\n\n        patternCache[pattern][flags] = {\n            // Use basic cleanup to collapse repeated empty groups like `(?:)(?:)` to `(?:)`. Empty\n            // groups are sometimes inserted during regex transpilation in order to keep tokens\n            // separated. However, more than one empty group in a row is never needed.\n            pattern: nativ.replace.call(output, /(?:\\(\\?:\\))+/g, '(?:)'),\n            // Strip all but native flags\n            flags: nativ.replace.call(appliedFlags, /[^gimuy]+/g, ''),\n            // `context.captureNames` has an item for each capturing group, even if unnamed\n            captures: context.hasNamedCapture ? context.captureNames : null\n        };\n    }\n\n    var generated = patternCache[pattern][flags];\n    return augment(\n        new RegExp(generated.pattern, generated.flags),\n        generated.captures,\n        pattern,\n        flags\n    );\n}\n\n// Add `RegExp.prototype` to the prototype chain\nXRegExp.prototype = new RegExp();\n\n// ==--------------------------==\n// Public properties\n// ==--------------------------==\n\n/**\n * The XRegExp version number as a string containing three dot-separated parts. For example,\n * '2.0.0-beta-3'.\n *\n * @static\n * @type String\n */\nXRegExp.version = '3.1.1';\n\n// ==--------------------------==\n// Public methods\n// ==--------------------------==\n\n// Intentionally undocumented; used in tests and addons\nXRegExp._hasNativeFlag = hasNativeFlag;\nXRegExp._dec = dec;\nXRegExp._hex = hex;\nXRegExp._pad4 = pad4;\n\n/**\n * Extends XRegExp syntax and allows custom flags. This is used internally and can be used to\n * create XRegExp addons. If more than one token can match the same string, the last added wins.\n *\n * @param {RegExp} regex Regex object that matches the new token.\n * @param {Function} handler Function that returns a new pattern string (using native regex syntax)\n *   to replace the matched token within all future XRegExp regexes. Has access to persistent\n *   properties of the regex being built, through `this`. Invoked with three arguments:\n *   <li>The match array, with named backreference properties.\n *   <li>The regex scope where the match was found: 'default' or 'class'.\n *   <li>The flags used by the regex, including any flags in a leading mode modifier.\n *   The handler function becomes part of the XRegExp construction process, so be careful not to\n *   construct XRegExps within the function or you will trigger infinite recursion.\n * @param {Object} [options] Options object with optional properties:\n *   <li>`scope` {String} Scope where the token applies: 'default', 'class', or 'all'.\n *   <li>`flag` {String} Single-character flag that triggers the token. This also registers the\n *     flag, which prevents XRegExp from throwing an 'unknown flag' error when the flag is used.\n *   <li>`optionalFlags` {String} Any custom flags checked for within the token `handler` that are\n *     not required to trigger the token. This registers the flags, to prevent XRegExp from\n *     throwing an 'unknown flag' error when any of the flags are used.\n *   <li>`reparse` {Boolean} Whether the `handler` function's output should not be treated as\n *     final, and instead be reparseable by other tokens (including the current token). Allows\n *     token chaining or deferring.\n *   <li>`leadChar` {String} Single character that occurs at the beginning of any successful match\n *     of the token (not always applicable). This doesn't change the behavior of the token unless\n *     you provide an erroneous value. However, providing it can increase the token's performance\n *     since the token can be skipped at any positions where this character doesn't appear.\n * @example\n *\n * // Basic usage: Add \\a for the ALERT control code\n * XRegExp.addToken(\n *   /\\\\a/,\n *   function() {return '\\\\x07';},\n *   {scope: 'all'}\n * );\n * XRegExp('\\\\a[\\\\a-\\\\n]+').test('\\x07\\n\\x07'); // -> true\n *\n * // Add the U (ungreedy) flag from PCRE and RE2, which reverses greedy and lazy quantifiers.\n * // Since `scope` is not specified, it uses 'default' (i.e., transformations apply outside of\n * // character classes only)\n * XRegExp.addToken(\n *   /([?*+]|{\\d+(?:,\\d*)?})(\\??)/,\n *   function(match) {return match[1] + (match[2] ? '' : '?');},\n *   {flag: 'U'}\n * );\n * XRegExp('a+', 'U').exec('aaa')[0]; // -> 'a'\n * XRegExp('a+?', 'U').exec('aaa')[0]; // -> 'aaa'\n */\nXRegExp.addToken = function(regex, handler, options) {\n    options = options || {};\n    var optionalFlags = options.optionalFlags, i;\n\n    if (options.flag) {\n        registerFlag(options.flag);\n    }\n\n    if (optionalFlags) {\n        optionalFlags = nativ.split.call(optionalFlags, '');\n        for (i = 0; i < optionalFlags.length; ++i) {\n            registerFlag(optionalFlags[i]);\n        }\n    }\n\n    // Add to the private list of syntax tokens\n    tokens.push({\n        regex: copyRegex(regex, {\n            addG: true,\n            addY: hasNativeY,\n            isInternalOnly: true\n        }),\n        handler: handler,\n        scope: options.scope || defaultScope,\n        flag: options.flag,\n        reparse: options.reparse,\n        leadChar: options.leadChar\n    });\n\n    // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and flags\n    // might now produce different results\n    XRegExp.cache.flush('patterns');\n};\n\n/**\n * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with\n * the same pattern and flag combination, the cached copy of the regex is returned.\n *\n * @param {String} pattern Regex pattern string.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @returns {RegExp} Cached XRegExp object.\n * @example\n *\n * while (match = XRegExp.cache('.', 'gs').exec(str)) {\n *   // The regex is compiled once only\n * }\n */\nXRegExp.cache = function(pattern, flags) {\n    if (!regexCache[pattern]) {\n        regexCache[pattern] = {};\n    }\n    return regexCache[pattern][flags] || (\n        regexCache[pattern][flags] = XRegExp(pattern, flags)\n    );\n};\n\n// Intentionally undocumented; used in tests\nXRegExp.cache.flush = function(cacheName) {\n    if (cacheName === 'patterns') {\n        // Flush the pattern cache used by the `XRegExp` constructor\n        patternCache = {};\n    } else {\n        // Flush the regex cache populated by `XRegExp.cache`\n        regexCache = {};\n    }\n};\n\n/**\n * Escapes any regular expression metacharacters, for use when matching literal strings. The result\n * can safely be used at any point within a regex that uses any flags.\n *\n * @param {String} str String to escape.\n * @returns {String} String with regex metacharacters escaped.\n * @example\n *\n * XRegExp.escape('Escaped? <.>');\n * // -> 'Escaped\\?\\ <\\.>'\n */\nXRegExp.escape = function(str) {\n    return nativ.replace.call(toObject(str), /[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * Executes a regex search in a specified string. Returns a match array or `null`. If the provided\n * regex uses named capture, named backreference properties are included on the match array.\n * Optional `pos` and `sticky` arguments specify the search start position, and whether the match\n * must start at the specified position only. The `lastIndex` property of the provided regex is not\n * used, but is updated for compatibility. Also fixes browser bugs compared to the native\n * `RegExp.prototype.exec` and can be used reliably cross-browser.\n *\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {Array} Match array with named backreference properties, or `null`.\n * @example\n *\n * // Basic use, with named backreference\n * var match = XRegExp.exec('U+2620', XRegExp('U\\\\+(?<hex>[0-9A-F]{4})'));\n * match.hex; // -> '2620'\n *\n * // With pos and sticky, in a loop\n * var pos = 2, result = [], match;\n * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\\d)>/, pos, 'sticky')) {\n *   result.push(match[1]);\n *   pos = match.index + match[0].length;\n * }\n * // result -> ['2', '3', '4']\n */\nXRegExp.exec = function(str, regex, pos, sticky) {\n    var cacheKey = 'g',\n        addY = false,\n        match,\n        r2;\n\n    addY = hasNativeY && !!(sticky || (regex.sticky && sticky !== false));\n    if (addY) {\n        cacheKey += 'y';\n    }\n\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\n\n    // Shares cached copies with `XRegExp.match`/`replace`\n    r2 = regex[REGEX_DATA][cacheKey] || (\n        regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n            addG: true,\n            addY: addY,\n            removeY: sticky === false,\n            isInternalOnly: true\n        })\n    );\n\n    r2.lastIndex = pos = pos || 0;\n\n    // Fixed `exec` required for `lastIndex` fix, named backreferences, etc.\n    match = fixed.exec.call(r2, str);\n\n    if (sticky && match && match.index !== pos) {\n        match = null;\n    }\n\n    if (regex.global) {\n        regex.lastIndex = match ? r2.lastIndex : 0;\n    }\n\n    return match;\n};\n\n/**\n * Executes a provided function once per regex match. Searches always start at the beginning of the\n * string and continue until the end, regardless of the state of the regex's `global` property and\n * initial `lastIndex`.\n *\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Function} callback Function to execute for each match. Invoked with four arguments:\n *   <li>The match array, with named backreference properties.\n *   <li>The zero-based match index.\n *   <li>The string being traversed.\n *   <li>The regex object being used to traverse the string.\n * @example\n *\n * // Extracts every other digit from a string\n * var evens = [];\n * XRegExp.forEach('1a2345', /\\d/, function(match, i) {\n *   if (i % 2) evens.push(+match[0]);\n * });\n * // evens -> [2, 4]\n */\nXRegExp.forEach = function(str, regex, callback) {\n    var pos = 0,\n        i = -1,\n        match;\n\n    while ((match = XRegExp.exec(str, regex, pos))) {\n        // Because `regex` is provided to `callback`, the function could use the deprecated/\n        // nonstandard `RegExp.prototype.compile` to mutate the regex. However, since `XRegExp.exec`\n        // doesn't use `lastIndex` to set the search position, this can't lead to an infinite loop,\n        // at least. Actually, because of the way `XRegExp.exec` caches globalized versions of\n        // regexes, mutating the regex will not have any effect on the iteration or matched strings,\n        // which is a nice side effect that brings extra safety.\n        callback(match, ++i, str, regex);\n\n        pos = match.index + (match[0].length || 1);\n    }\n};\n\n/**\n * Copies a regex object and adds flag `g`. The copy maintains extended data, is augmented with\n * `XRegExp.prototype` properties, and has a fresh `lastIndex` property (set to zero). Native\n * regexes are not recompiled using XRegExp syntax.\n *\n * @param {RegExp} regex Regex to globalize.\n * @returns {RegExp} Copy of the provided regex with flag `g` added.\n * @example\n *\n * var globalCopy = XRegExp.globalize(/regex/);\n * globalCopy.global; // -> true\n */\nXRegExp.globalize = function(regex) {\n    return copyRegex(regex, {addG: true});\n};\n\n/**\n * Installs optional features according to the specified options. Can be undone using\n * `XRegExp.uninstall`.\n *\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.install({\n *   // Enables support for astral code points in Unicode addons (implicitly sets flag A)\n *   astral: true,\n *\n *   // DEPRECATED: Overrides native regex methods with fixed/extended versions\n *   natives: true\n * });\n *\n * // With an options string\n * XRegExp.install('astral natives');\n */\nXRegExp.install = function(options) {\n    options = prepareOptions(options);\n\n    if (!features.astral && options.astral) {\n        setAstral(true);\n    }\n\n    if (!features.natives && options.natives) {\n        setNatives(true);\n    }\n};\n\n/**\n * Checks whether an individual optional feature is installed.\n *\n * @param {String} feature Name of the feature to check. One of:\n *   <li>`astral`\n *   <li>`natives`\n * @returns {Boolean} Whether the feature is installed.\n * @example\n *\n * XRegExp.isInstalled('astral');\n */\nXRegExp.isInstalled = function(feature) {\n    return !!(features[feature]);\n};\n\n/**\n * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes\n * created in another frame, when `instanceof` and `constructor` checks would fail.\n *\n * @param {*} value Object to check.\n * @returns {Boolean} Whether the object is a `RegExp` object.\n * @example\n *\n * XRegExp.isRegExp('string'); // -> false\n * XRegExp.isRegExp(/regex/i); // -> true\n * XRegExp.isRegExp(RegExp('^', 'm')); // -> true\n * XRegExp.isRegExp(XRegExp('(?s).')); // -> true\n */\nXRegExp.isRegExp = function(value) {\n    return toString.call(value) === '[object RegExp]';\n    //return isType(value, 'RegExp');\n};\n\n/**\n * Returns the first matched string, or in global mode, an array containing all matched strings.\n * This is essentially a more convenient re-implementation of `String.prototype.match` that gives\n * the result types you actually want (string instead of `exec`-style array in match-first mode,\n * and an empty array instead of `null` when no matches are found in match-all mode). It also lets\n * you override flag g and ignore `lastIndex`, and fixes browser bugs.\n *\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {String} [scope='one'] Use 'one' to return the first match as a string. Use 'all' to\n *   return an array of all matched strings. If not explicitly specified and `regex` uses flag g,\n *   `scope` is 'all'.\n * @returns {String|Array} In match-first mode: First match as a string, or `null`. In match-all\n *   mode: Array of all matched strings, or an empty array.\n * @example\n *\n * // Match first\n * XRegExp.match('abc', /\\w/); // -> 'a'\n * XRegExp.match('abc', /\\w/g, 'one'); // -> 'a'\n * XRegExp.match('abc', /x/g, 'one'); // -> null\n *\n * // Match all\n * XRegExp.match('abc', /\\w/g); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /\\w/, 'all'); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /x/, 'all'); // -> []\n */\nXRegExp.match = function(str, regex, scope) {\n    var global = (regex.global && scope !== 'one') || scope === 'all',\n        cacheKey = ((global ? 'g' : '') + (regex.sticky ? 'y' : '')) || 'noGY',\n        result,\n        r2;\n\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\n\n    // Shares cached copies with `XRegExp.exec`/`replace`\n    r2 = regex[REGEX_DATA][cacheKey] || (\n        regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n            addG: !!global,\n            removeG: scope === 'one',\n            isInternalOnly: true\n        })\n    );\n\n    result = nativ.match.call(toObject(str), r2);\n\n    if (regex.global) {\n        regex.lastIndex = (\n            (scope === 'one' && result) ?\n                // Can't use `r2.lastIndex` since `r2` is nonglobal in this case\n                (result.index + result[0].length) : 0\n        );\n    }\n\n    return global ? (result || []) : (result && result[0]);\n};\n\n/**\n * Retrieves the matches from searching a string using a chain of regexes that successively search\n * within previous matches. The provided `chain` array can contain regexes and or objects with\n * `regex` and `backref` properties. When a backreference is specified, the named or numbered\n * backreference is passed forward to the next regex or returned.\n *\n * @param {String} str String to search.\n * @param {Array} chain Regexes that each search for matches within preceding results.\n * @returns {Array} Matches by the last regex in the chain, or an empty array.\n * @example\n *\n * // Basic usage; matches numbers within <b> tags\n * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [\n *   XRegExp('(?is)<b>.*?</b>'),\n *   /\\d+/\n * ]);\n * // -> ['2', '4', '56']\n *\n * // Passing forward and returning specific backreferences\n * html = '<a href=\"http://xregexp.com/api/\">XRegExp</a>\\\n *         <a href=\"http://www.google.com/\">Google</a>';\n * XRegExp.matchChain(html, [\n *   {regex: /<a href=\"([^\"]+)\">/i, backref: 1},\n *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}\n * ]);\n * // -> ['xregexp.com', 'www.google.com']\n */\nXRegExp.matchChain = function(str, chain) {\n    return (function recurseChain(values, level) {\n        var item = chain[level].regex ? chain[level] : {regex: chain[level]};\n        var matches = [];\n\n        function addMatch(match) {\n            if (item.backref) {\n                // Safari 4.0.5 (but not 5.0.5+) inappropriately uses sparse arrays to hold the\n                // `undefined`s for backreferences to nonparticipating capturing groups. In such\n                // cases, a `hasOwnProperty` or `in` check on its own would inappropriately throw\n                // the exception, so also check if the backreference is a number that is within the\n                // bounds of the array.\n                if (!(match.hasOwnProperty(item.backref) || +item.backref < match.length)) {\n                    throw new ReferenceError('Backreference to undefined group: ' + item.backref);\n                }\n\n                matches.push(match[item.backref] || '');\n            } else {\n                matches.push(match[0]);\n            }\n        }\n\n        for (var i = 0; i < values.length; ++i) {\n            XRegExp.forEach(values[i], item.regex, addMatch);\n        }\n\n        return ((level === chain.length - 1) || !matches.length) ?\n            matches :\n            recurseChain(matches, level + 1);\n    }([str], 0));\n};\n\n/**\n * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string\n * or regex, and the replacement can be a string or a function to be called for each match. To\n * perform a global search and replace, use the optional `scope` argument or include flag g if using\n * a regex. Replacement strings can use `${n}` for named and numbered backreferences. Replacement\n * functions can use named backreferences via `arguments[0].name`. Also fixes browser bugs compared\n * to the native `String.prototype.replace` and can be used reliably cross-browser.\n *\n * @param {String} str String to search.\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n *   Replacement strings can include special replacement syntax:\n *     <li>$$ - Inserts a literal $ character.\n *     <li>$&, $0 - Inserts the matched substring.\n *     <li>$` - Inserts the string that precedes the matched substring (left context).\n *     <li>$' - Inserts the string that follows the matched substring (right context).\n *     <li>$n, $nn - Where n/nn are digits referencing an existent capturing group, inserts\n *       backreference n/nn.\n *     <li>${n} - Where n is a name or any number of digits that reference an existent capturing\n *       group, inserts backreference n.\n *   Replacement functions are invoked with three or more arguments:\n *     <li>The matched substring (corresponds to $& above). Named backreferences are accessible as\n *       properties of this first argument.\n *     <li>0..n arguments, one for each backreference (corresponding to $1, $2, etc. above).\n *     <li>The zero-based index of the match within the total search string.\n *     <li>The total string being searched.\n * @param {String} [scope='one'] Use 'one' to replace the first match only, or 'all'. If not\n *   explicitly specified and using a regex with flag g, `scope` is 'all'.\n * @returns {String} New string with one or all matches replaced.\n * @example\n *\n * // Regex search, using named backreferences in replacement string\n * var name = XRegExp('(?<first>\\\\w+) (?<last>\\\\w+)');\n * XRegExp.replace('John Smith', name, '${last}, ${first}');\n * // -> 'Smith, John'\n *\n * // Regex search, using named backreferences in replacement function\n * XRegExp.replace('John Smith', name, function(match) {\n *   return match.last + ', ' + match.first;\n * });\n * // -> 'Smith, John'\n *\n * // String search, with replace-all\n * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');\n * // -> 'XRegExp builds XRegExps'\n */\nXRegExp.replace = function(str, search, replacement, scope) {\n    var isRegex = XRegExp.isRegExp(search),\n        global = (search.global && scope !== 'one') || scope === 'all',\n        cacheKey = ((global ? 'g' : '') + (search.sticky ? 'y' : '')) || 'noGY',\n        s2 = search,\n        result;\n\n    if (isRegex) {\n        search[REGEX_DATA] = search[REGEX_DATA] || {};\n\n        // Shares cached copies with `XRegExp.exec`/`match`. Since a copy is used, `search`'s\n        // `lastIndex` isn't updated *during* replacement iterations\n        s2 = search[REGEX_DATA][cacheKey] || (\n            search[REGEX_DATA][cacheKey] = copyRegex(search, {\n                addG: !!global,\n                removeG: scope === 'one',\n                isInternalOnly: true\n            })\n        );\n    } else if (global) {\n        s2 = new RegExp(XRegExp.escape(String(search)), 'g');\n    }\n\n    // Fixed `replace` required for named backreferences, etc.\n    result = fixed.replace.call(toObject(str), s2, replacement);\n\n    if (isRegex && search.global) {\n        // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n        search.lastIndex = 0;\n    }\n\n    return result;\n};\n\n/**\n * Performs batch processing of string replacements. Used like `XRegExp.replace`, but accepts an\n * array of replacement details. Later replacements operate on the output of earlier replacements.\n * Replacement details are accepted as an array with a regex or string to search for, the\n * replacement string or function, and an optional scope of 'one' or 'all'. Uses the XRegExp\n * replacement text syntax, which supports named backreference properties via `${name}`.\n *\n * @param {String} str String to search.\n * @param {Array} replacements Array of replacement detail arrays.\n * @returns {String} New string with all replacements.\n * @example\n *\n * str = XRegExp.replaceEach(str, [\n *   [XRegExp('(?<name>a)'), 'z${name}'],\n *   [/b/gi, 'y'],\n *   [/c/g, 'x', 'one'], // scope 'one' overrides /g\n *   [/d/, 'w', 'all'],  // scope 'all' overrides lack of /g\n *   ['e', 'v', 'all'],  // scope 'all' allows replace-all for strings\n *   [/f/g, function($0) {\n *     return $0.toUpperCase();\n *   }]\n * ]);\n */\nXRegExp.replaceEach = function(str, replacements) {\n    var i, r;\n\n    for (i = 0; i < replacements.length; ++i) {\n        r = replacements[i];\n        str = XRegExp.replace(str, r[0], r[1], r[2]);\n    }\n\n    return str;\n};\n\n/**\n * Splits a string into an array of strings using a regex or string separator. Matches of the\n * separator are not included in the result array. However, if `separator` is a regex that contains\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n * cross-browser.\n *\n * @param {String} str String to split.\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n * @example\n *\n * // Basic use\n * XRegExp.split('a b c', ' ');\n * // -> ['a', 'b', 'c']\n *\n * // With limit\n * XRegExp.split('a b c', ' ', 2);\n * // -> ['a', 'b']\n *\n * // Backreferences in result array\n * XRegExp.split('..word1..', /([a-z]+)(\\d+)/i);\n * // -> ['..', 'word', '1', '..']\n */\nXRegExp.split = function(str, separator, limit) {\n    return fixed.split.call(toObject(str), separator, limit);\n};\n\n/**\n * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and\n * `sticky` arguments specify the search start position, and whether the match must start at the\n * specified position only. The `lastIndex` property of the provided regex is not used, but is\n * updated for compatibility. Also fixes browser bugs compared to the native\n * `RegExp.prototype.test` and can be used reliably cross-browser.\n *\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {Boolean} Whether the regex matched the provided value.\n * @example\n *\n * // Basic use\n * XRegExp.test('abc', /c/); // -> true\n *\n * // With pos and sticky\n * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false\n * XRegExp.test('abc', /c/, 2, 'sticky'); // -> true\n */\nXRegExp.test = function(str, regex, pos, sticky) {\n    // Do this the easy way :-)\n    return !!XRegExp.exec(str, regex, pos, sticky);\n};\n\n/**\n * Uninstalls optional features according to the specified options. All optional features start out\n * uninstalled, so this is used to undo the actions of `XRegExp.install`.\n *\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.uninstall({\n *   // Disables support for astral code points in Unicode addons\n *   astral: true,\n *\n *   // DEPRECATED: Restores native regex methods\n *   natives: true\n * });\n *\n * // With an options string\n * XRegExp.uninstall('astral natives');\n */\nXRegExp.uninstall = function(options) {\n    options = prepareOptions(options);\n\n    if (features.astral && options.astral) {\n        setAstral(false);\n    }\n\n    if (features.natives && options.natives) {\n        setNatives(false);\n    }\n};\n\n/**\n * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as\n * regex objects or strings. Metacharacters are escaped in patterns provided as strings.\n * Backreferences in provided regex objects are automatically renumbered to work correctly within\n * the larger combined pattern. Native flags used by provided regexes are ignored in favor of the\n * `flags` argument.\n *\n * @param {Array} patterns Regexes and strings to combine.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @returns {RegExp} Union of the provided regexes and strings.\n * @example\n *\n * XRegExp.union(['a+b*c', /(dogs)\\1/, /(cats)\\1/], 'i');\n * // -> /a\\+b\\*c|(dogs)\\1|(cats)\\2/i\n */\nXRegExp.union = function(patterns, flags) {\n    var numCaptures = 0;\n    var numPriorCaptures;\n    var captureNames;\n\n    function rewrite(match, paren, backref) {\n        var name = captureNames[numCaptures - numPriorCaptures];\n\n        // Capturing group\n        if (paren) {\n            ++numCaptures;\n            // If the current capture has a name, preserve the name\n            if (name) {\n                return '(?<' + name + '>';\n            }\n        // Backreference\n        } else if (backref) {\n            // Rewrite the backreference\n            return '\\\\' + (+backref + numPriorCaptures);\n        }\n\n        return match;\n    }\n\n    if (!(isType(patterns, 'Array') && patterns.length)) {\n        throw new TypeError('Must provide a nonempty array of patterns to merge');\n    }\n\n    var parts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]/g;\n    var output = [];\n    var pattern;\n    for (var i = 0; i < patterns.length; ++i) {\n        pattern = patterns[i];\n\n        if (XRegExp.isRegExp(pattern)) {\n            numPriorCaptures = numCaptures;\n            captureNames = (pattern[REGEX_DATA] && pattern[REGEX_DATA].captureNames) || [];\n\n            // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns are\n            // independently valid; helps keep this simple. Named captures are put back\n            output.push(nativ.replace.call(XRegExp(pattern.source).source, parts, rewrite));\n        } else {\n            output.push(XRegExp.escape(pattern));\n        }\n    }\n\n    return XRegExp(output.join('|'), flags);\n};\n\n// ==--------------------------==\n// Fixed/extended native methods\n// ==--------------------------==\n\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `RegExp.prototype.exec`. Calling `XRegExp.install('natives')` uses this to\n * override the native method. Use via `XRegExp.exec` without overriding natives.\n *\n * @param {String} str String to search.\n * @returns {Array} Match array with named backreference properties, or `null`.\n */\nfixed.exec = function(str) {\n    var origLastIndex = this.lastIndex,\n        match = nativ.exec.apply(this, arguments),\n        name,\n        r2,\n        i;\n\n    if (match) {\n        // Fix browsers whose `exec` methods don't return `undefined` for nonparticipating capturing\n        // groups. This fixes IE 5.5-8, but not IE 9's quirks mode or emulation of older IEs. IE 9\n        // in standards mode follows the spec.\n        if (!correctExecNpcg && match.length > 1 && indexOf(match, '') > -1) {\n            r2 = copyRegex(this, {\n                removeG: true,\n                isInternalOnly: true\n            });\n            // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed\n            // matching due to characters outside the match\n            nativ.replace.call(String(str).slice(match.index), r2, function() {\n                var len = arguments.length, i;\n                // Skip index 0 and the last 2\n                for (i = 1; i < len - 2; ++i) {\n                    if (arguments[i] === undefined) {\n                        match[i] = undefined;\n                    }\n                }\n            });\n        }\n\n        // Attach named capture properties\n        if (this[REGEX_DATA] && this[REGEX_DATA].captureNames) {\n            // Skip index 0\n            for (i = 1; i < match.length; ++i) {\n                name = this[REGEX_DATA].captureNames[i - 1];\n                if (name) {\n                    match[name] = match[i];\n                }\n            }\n        }\n\n        // Fix browsers that increment `lastIndex` after zero-length matches\n        if (this.global && !match[0].length && (this.lastIndex > match.index)) {\n            this.lastIndex = match.index;\n        }\n    }\n\n    if (!this.global) {\n        // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n        this.lastIndex = origLastIndex;\n    }\n\n    return match;\n};\n\n/**\n * Fixes browser bugs in the native `RegExp.prototype.test`. Calling `XRegExp.install('natives')`\n * uses this to override the native method.\n *\n * @param {String} str String to search.\n * @returns {Boolean} Whether the regex matched the provided value.\n */\nfixed.test = function(str) {\n    // Do this the easy way :-)\n    return !!fixed.exec.call(this, str);\n};\n\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `String.prototype.match`. Calling `XRegExp.install('natives')` uses this to\n * override the native method.\n *\n * @param {RegExp|*} regex Regex to search with. If not a regex object, it is passed to `RegExp`.\n * @returns {Array} If `regex` uses flag g, an array of match strings or `null`. Without flag g,\n *   the result of calling `regex.exec(this)`.\n */\nfixed.match = function(regex) {\n    var result;\n\n    if (!XRegExp.isRegExp(regex)) {\n        // Use the native `RegExp` rather than `XRegExp`\n        regex = new RegExp(regex);\n    } else if (regex.global) {\n        result = nativ.match.apply(this, arguments);\n        // Fixes IE bug\n        regex.lastIndex = 0;\n\n        return result;\n    }\n\n    return fixed.exec.call(regex, toObject(this));\n};\n\n/**\n * Adds support for `${n}` tokens for named and numbered backreferences in replacement text, and\n * provides named backreferences to replacement functions as `arguments[0].name`. Also fixes browser\n * bugs in replacement text syntax when performing a replacement using a nonregex search value, and\n * the value of a replacement regex's `lastIndex` property during replacement iterations and upon\n * completion. Calling `XRegExp.install('natives')` uses this to override the native method. Note\n * that this doesn't support SpiderMonkey's proprietary third (`flags`) argument. Use via\n * `XRegExp.replace` without overriding natives.\n *\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n * @returns {String} New string with one or all matches replaced.\n */\nfixed.replace = function(search, replacement) {\n    var isRegex = XRegExp.isRegExp(search),\n        origLastIndex,\n        captureNames,\n        result;\n\n    if (isRegex) {\n        if (search[REGEX_DATA]) {\n            captureNames = search[REGEX_DATA].captureNames;\n        }\n        // Only needed if `search` is nonglobal\n        origLastIndex = search.lastIndex;\n    } else {\n        search += ''; // Type-convert\n    }\n\n    // Don't use `typeof`; some older browsers return 'function' for regex objects\n    if (isType(replacement, 'Function')) {\n        // Stringifying `this` fixes a bug in IE < 9 where the last argument in replacement\n        // functions isn't type-converted to a string\n        result = nativ.replace.call(String(this), search, function() {\n            var args = arguments, i;\n            if (captureNames) {\n                // Change the `arguments[0]` string primitive to a `String` object that can store\n                // properties. This really does need to use `String` as a constructor\n                args[0] = new String(args[0]);\n                // Store named backreferences on the first argument\n                for (i = 0; i < captureNames.length; ++i) {\n                    if (captureNames[i]) {\n                        args[0][captureNames[i]] = args[i + 1];\n                    }\n                }\n            }\n            // Update `lastIndex` before calling `replacement`. Fixes IE, Chrome, Firefox, Safari\n            // bug (last tested IE 9, Chrome 17, Firefox 11, Safari 5.1)\n            if (isRegex && search.global) {\n                search.lastIndex = args[args.length - 2] + args[0].length;\n            }\n            // ES6 specs the context for replacement functions as `undefined`\n            return replacement.apply(undefined, args);\n        });\n    } else {\n        // Ensure that the last value of `args` will be a string when given nonstring `this`,\n        // while still throwing on null or undefined context\n        result = nativ.replace.call(this == null ? this : String(this), search, function() {\n            // Keep this function's `arguments` available through closure\n            var args = arguments;\n            return nativ.replace.call(String(replacement), replacementToken, function($0, $1, $2) {\n                var n;\n                // Named or numbered backreference with curly braces\n                if ($1) {\n                    // XRegExp behavior for `${n}`:\n                    // 1. Backreference to numbered capture, if `n` is an integer. Use `0` for the\n                    //    entire match. Any number of leading zeros may be used.\n                    // 2. Backreference to named capture `n`, if it exists and is not an integer\n                    //    overridden by numbered capture. In practice, this does not overlap with\n                    //    numbered capture since XRegExp does not allow named capture to use a bare\n                    //    integer as the name.\n                    // 3. If the name or number does not refer to an existing capturing group, it's\n                    //    an error.\n                    n = +$1; // Type-convert; drop leading zeros\n                    if (n <= args.length - 3) {\n                        return args[n] || '';\n                    }\n                    // Groups with the same name is an error, else would need `lastIndexOf`\n                    n = captureNames ? indexOf(captureNames, $1) : -1;\n                    if (n < 0) {\n                        throw new SyntaxError('Backreference to undefined group ' + $0);\n                    }\n                    return args[n + 1] || '';\n                }\n                // Else, special variable or numbered backreference without curly braces\n                if ($2 === '$') { // $$\n                    return '$';\n                }\n                if ($2 === '&' || +$2 === 0) { // $&, $0 (not followed by 1-9), $00\n                    return args[0];\n                }\n                if ($2 === '`') { // $` (left context)\n                    return args[args.length - 1].slice(0, args[args.length - 2]);\n                }\n                if ($2 === \"'\") { // $' (right context)\n                    return args[args.length - 1].slice(args[args.length - 2] + args[0].length);\n                }\n                // Else, numbered backreference without curly braces\n                $2 = +$2; // Type-convert; drop leading zero\n                // XRegExp behavior for `$n` and `$nn`:\n                // - Backrefs end after 1 or 2 digits. Use `${..}` for more digits.\n                // - `$1` is an error if no capturing groups.\n                // - `$10` is an error if less than 10 capturing groups. Use `${1}0` instead.\n                // - `$01` is `$1` if at least one capturing group, else it's an error.\n                // - `$0` (not followed by 1-9) and `$00` are the entire match.\n                // Native behavior, for comparison:\n                // - Backrefs end after 1 or 2 digits. Cannot reference capturing group 100+.\n                // - `$1` is a literal `$1` if no capturing groups.\n                // - `$10` is `$1` followed by a literal `0` if less than 10 capturing groups.\n                // - `$01` is `$1` if at least one capturing group, else it's a literal `$01`.\n                // - `$0` is a literal `$0`.\n                if (!isNaN($2)) {\n                    if ($2 > args.length - 3) {\n                        throw new SyntaxError('Backreference to undefined group ' + $0);\n                    }\n                    return args[$2] || '';\n                }\n                // `$` followed by an unsupported char is an error, unlike native JS\n                throw new SyntaxError('Invalid token ' + $0);\n            });\n        });\n    }\n\n    if (isRegex) {\n        if (search.global) {\n            // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n            search.lastIndex = 0;\n        } else {\n            // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n            search.lastIndex = origLastIndex;\n        }\n    }\n\n    return result;\n};\n\n/**\n * Fixes browser bugs in the native `String.prototype.split`. Calling `XRegExp.install('natives')`\n * uses this to override the native method. Use via `XRegExp.split` without overriding natives.\n *\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n */\nfixed.split = function(separator, limit) {\n    if (!XRegExp.isRegExp(separator)) {\n        // Browsers handle nonregex split correctly, so use the faster native method\n        return nativ.split.apply(this, arguments);\n    }\n\n    var str = String(this),\n        output = [],\n        origLastIndex = separator.lastIndex,\n        lastLastIndex = 0,\n        lastLength;\n\n    // Values for `limit`, per the spec:\n    // If undefined: pow(2,32) - 1\n    // If 0, Infinity, or NaN: 0\n    // If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);\n    // If negative number: pow(2,32) - floor(abs(limit))\n    // If other: Type-convert, then use the above rules\n    // This line fails in very strange ways for some values of `limit` in Opera 10.5-10.63, unless\n    // Opera Dragonfly is open (go figure). It works in at least Opera 9.5-10.1 and 11+\n    limit = (limit === undefined ? -1 : limit) >>> 0;\n\n    XRegExp.forEach(str, separator, function(match) {\n        // This condition is not the same as `if (match[0].length)`\n        if ((match.index + match[0].length) > lastLastIndex) {\n            output.push(str.slice(lastLastIndex, match.index));\n            if (match.length > 1 && match.index < str.length) {\n                Array.prototype.push.apply(output, match.slice(1));\n            }\n            lastLength = match[0].length;\n            lastLastIndex = match.index + lastLength;\n        }\n    });\n\n    if (lastLastIndex === str.length) {\n        if (!nativ.test.call(separator, '') || lastLength) {\n            output.push('');\n        }\n    } else {\n        output.push(str.slice(lastLastIndex));\n    }\n\n    separator.lastIndex = origLastIndex;\n    return output.length > limit ? output.slice(0, limit) : output;\n};\n\n// ==--------------------------==\n// Built-in syntax/flag tokens\n// ==--------------------------==\n\n/*\n * Letter escapes that natively match literal characters: `\\a`, `\\A`, etc. These should be\n * SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-browser\n * consistency and to reserve their syntax, but lets them be superseded by addons.\n */\nXRegExp.addToken(\n    /\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|x(?![\\dA-Fa-f]{2}))/,\n    function(match, scope) {\n        // \\B is allowed in default scope only\n        if (match[1] === 'B' && scope === defaultScope) {\n            return match[0];\n        }\n        throw new SyntaxError('Invalid escape ' + match[0]);\n    },\n    {\n        scope: 'all',\n        leadChar: '\\\\'\n    }\n);\n\n/*\n * Unicode code point escape with curly braces: `\\u{N..}`. `N..` is any one or more digit\n * hexadecimal number from 0-10FFFF, and can include leading zeros. Requires the native ES6 `u` flag\n * to support code points greater than U+FFFF. Avoids converting code points above U+FFFF to\n * surrogate pairs (which could be done without flag `u`), since that could lead to broken behavior\n * if you follow a `\\u{N..}` token that references a code point above U+FFFF with a quantifier, or\n * if you use the same in a character class.\n */\nXRegExp.addToken(\n    /\\\\u{([\\dA-Fa-f]+)}/,\n    function(match, scope, flags) {\n        var code = dec(match[1]);\n        if (code > 0x10FFFF) {\n            throw new SyntaxError('Invalid Unicode code point ' + match[0]);\n        }\n        if (code <= 0xFFFF) {\n            // Converting to \\uNNNN avoids needing to escape the literal character and keep it\n            // separate from preceding tokens\n            return '\\\\u' + pad4(hex(code));\n        }\n        // If `code` is between 0xFFFF and 0x10FFFF, require and defer to native handling\n        if (hasNativeU && flags.indexOf('u') > -1) {\n            return match[0];\n        }\n        throw new SyntaxError('Cannot use Unicode code point above \\\\u{FFFF} without flag u');\n    },\n    {\n        scope: 'all',\n        leadChar: '\\\\'\n    }\n);\n\n/*\n * Empty character class: `[]` or `[^]`. This fixes a critical cross-browser syntax inconsistency.\n * Unless this is standardized (per the ES spec), regex syntax can't be accurately parsed because\n * character class endings can't be determined.\n */\nXRegExp.addToken(\n    /\\[(\\^?)]/,\n    function(match) {\n        // For cross-browser compatibility with ES3, convert [] to \\b\\B and [^] to [\\s\\S].\n        // (?!) should work like \\b\\B, but is unreliable in some versions of Firefox\n        return match[1] ? '[\\\\s\\\\S]' : '\\\\b\\\\B';\n    },\n    {leadChar: '['}\n);\n\n/*\n * Comment pattern: `(?# )`. Inline comments are an alternative to the line comments allowed in\n * free-spacing mode (flag x).\n */\nXRegExp.addToken(\n    /\\(\\?#[^)]*\\)/,\n    function(match, scope, flags) {\n        // Keep tokens separated unless the following token is a quantifier. This avoids e.g.\n        // inadvertedly changing `\\1(?#)1` to `\\11`.\n        return isQuantifierNext(match.input, match.index + match[0].length, flags) ?\n            '' : '(?:)';\n    },\n    {leadChar: '('}\n);\n\n/*\n * Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.\n */\nXRegExp.addToken(\n    /\\s+|#[^\\n]*\\n?/,\n    function(match, scope, flags) {\n        // Keep tokens separated unless the following token is a quantifier. This avoids e.g.\n        // inadvertedly changing `\\1 1` to `\\11`.\n        return isQuantifierNext(match.input, match.index + match[0].length, flags) ?\n            '' : '(?:)';\n    },\n    {flag: 'x'}\n);\n\n/*\n * Dot, in dotall mode (aka singleline mode, flag s) only.\n */\nXRegExp.addToken(\n    /\\./,\n    function() {\n        return '[\\\\s\\\\S]';\n    },\n    {\n        flag: 's',\n        leadChar: '.'\n    }\n);\n\n/*\n * Named backreference: `\\k<name>`. Backreference names can use the characters A-Z, a-z, 0-9, _,\n * and $ only. Also allows numbered backreferences as `\\k<n>`.\n */\nXRegExp.addToken(\n    /\\\\k<([\\w$]+)>/,\n    function(match) {\n        // Groups with the same name is an error, else would need `lastIndexOf`\n        var index = isNaN(match[1]) ? (indexOf(this.captureNames, match[1]) + 1) : +match[1],\n            endIndex = match.index + match[0].length;\n        if (!index || index > this.captureNames.length) {\n            throw new SyntaxError('Backreference to undefined group ' + match[0]);\n        }\n        // Keep backreferences separate from subsequent literal numbers. This avoids e.g.\n        // inadvertedly changing `(?<n>)\\k<n>1` to `()\\11`.\n        return '\\\\' + index + (\n            endIndex === match.input.length || isNaN(match.input.charAt(endIndex)) ?\n                '' : '(?:)'\n        );\n    },\n    {leadChar: '\\\\'}\n);\n\n/*\n * Numbered backreference or octal, plus any following digits: `\\0`, `\\11`, etc. Octals except `\\0`\n * not followed by 0-9 and backreferences to unopened capture groups throw an error. Other matches\n * are returned unaltered. IE < 9 doesn't support backreferences above `\\99` in regex syntax.\n */\nXRegExp.addToken(\n    /\\\\(\\d+)/,\n    function(match, scope) {\n        if (\n            !(\n                scope === defaultScope &&\n                /^[1-9]/.test(match[1]) &&\n                +match[1] <= this.captureNames.length\n            ) &&\n            match[1] !== '0'\n        ) {\n            throw new SyntaxError('Cannot use octal escape or backreference to undefined group ' +\n                match[0]);\n        }\n        return match[0];\n    },\n    {\n        scope: 'all',\n        leadChar: '\\\\'\n    }\n);\n\n/*\n * Named capturing group; match the opening delimiter only: `(?<name>`. Capture names can use the\n * characters A-Z, a-z, 0-9, _, and $ only. Names can't be integers. Supports Python-style\n * `(?P<name>` as an alternate syntax to avoid issues in some older versions of Opera which natively\n * supported the Python-style syntax. Otherwise, XRegExp might treat numbered backreferences to\n * Python-style named capture as octals.\n */\nXRegExp.addToken(\n    /\\(\\?P?<([\\w$]+)>/,\n    function(match) {\n        // Disallow bare integers as names because named backreferences are added to match arrays\n        // and therefore numeric properties may lead to incorrect lookups\n        if (!isNaN(match[1])) {\n            throw new SyntaxError('Cannot use integer as capture name ' + match[0]);\n        }\n        if (match[1] === 'length' || match[1] === '__proto__') {\n            throw new SyntaxError('Cannot use reserved word as capture name ' + match[0]);\n        }\n        if (indexOf(this.captureNames, match[1]) > -1) {\n            throw new SyntaxError('Cannot use same name for multiple groups ' + match[0]);\n        }\n        this.captureNames.push(match[1]);\n        this.hasNamedCapture = true;\n        return '(';\n    },\n    {leadChar: '('}\n);\n\n/*\n * Capturing group; match the opening parenthesis only. Required for support of named capturing\n * groups. Also adds explicit capture mode (flag n).\n */\nXRegExp.addToken(\n    /\\((?!\\?)/,\n    function(match, scope, flags) {\n        if (flags.indexOf('n') > -1) {\n            return '(?:';\n        }\n        this.captureNames.push(null);\n        return '(';\n    },\n    {\n        optionalFlags: 'n',\n        leadChar: '('\n    }\n);\n\nmodule.exports = XRegExp;\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// salve.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0547a20c9ec84a8ba94b","\"use strict\";\n/**\n * Classes that model RNG patterns.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hashstructs_1 = require(\"../hashstructs\");\nvar name_resolver_1 = require(\"../name_resolver\");\nvar util = require(\"../util\");\n// XML validation against a schema could work without any lookahead if it were\n// not for namespaces. However, namespace support means that the interpretation\n// of a tag or of an attribute may depend on information which appears *later*\n// than the earliest time at which a validation decision might be called for:\n//\n// Consider:\n//    <elephant a=\"a\" b=\"b\"... xmlns=\"elephant_uri\"/>\n//\n// It is not until xmlns is encountered that the validator will know that\n// elephant belongs to the elephant_uri namespace. This is not too troubling for\n// a validator that can access the whole document but for validators used in a\n// line-by-line process (which is the case if the validator is driven by a\n// CodeMirror or Ace tokenizer, and anything based on them), this can be\n// problematic because the attributes could appear on lines other than the line\n// on which the start of the tag appears:\n//\n// <elephant\n//  a=\"a\"\n//  b=\"b\"\n//  xmlns=\"elephant_uri\"/>\n//\n// The validator encounters the start of the tag and the attributes, without\n// knowing that eventually this elephant tag belongs to the elephant_uri\n// namespace. This discovery might result in things that were seen previously\n// and deemed valid becoming invalid. Or things that were invalid becoming\n// valid.\n//\n// Handling namespaces will require lookahead. Although the validator would\n// still expect all events that have tag and attribute names to have a proper\n// namespace uri, upon ``enterStartTag`` the parsing code which feeds events to\n// the validator would look ahead for these cases:\n//\n// * There is a valid ``>`` character ending the start tag. Scan the start tag\n//   for all namespace declarations.\n//\n// * The tag ends at EOF. Scan from beginning of tag to EOF for namespace\n//   declarations.\n//\n// * The tag is terminated by an invalid token. Scan from beginning of tag to\n//   error.\n//\n// Then issue the enterStartTag and attributeName events on the basis of what\n// was found in scanning.\n//\n// When the parsing code discovers a change in namespace declarations, for\n// instance because the user typed xmlns=\"...\" or removed a declaration, the\n// parsing code must *restart* validation *from* the location of the original\n// enterStartTag event.\nvar DEBUG = false;\n// This is here to shut the compiler up about unused variables.\n/* tslint:disable: no-empty no-invalid-this */\nfunction noop() {\n    var _args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        _args[_i] = arguments[_i];\n    }\n}\n// tslint:disable-next-line:strict-boolean-expressions\nif (DEBUG) {\n    //\n    // Debugging utilities\n    //\n    var trace_1 = function (msg) {\n        console.log(msg); // tslint:disable-line:no-console\n    };\n    var stackTrace = function () {\n        trace_1(new Error().stack);\n    };\n    noop(stackTrace);\n    // tslint:disable:no-var-keyword\n    var possibleTracer;\n    var fireEventTracer;\n    var plainTracer;\n    var callDump;\n    // tslint:enable:no-var-keyword\n    // tslint:disable-next-line:only-arrow-functions no-void-expression\n    (function buildTracingCode() {\n        var buf = \"\";\n        var step = \" \";\n        var nameOrPath = function (walker) {\n            var el = walker.el;\n            if (el == null) {\n                return \"\";\n            }\n            if (el.name === undefined) {\n                return \" with path \" + el.xmlPath;\n            }\n            var named = \" named \" + el.name.toString();\n            if (walker.boundName == null) {\n                return named;\n            }\n            return named + \" (bound to \" + walker.boundName.toString() + \")\";\n        };\n        callDump = function (msg, name, me) {\n            trace_1(\"\" + buf + msg + name + \" on class \" + me.constructor.name +\n                (\" id \" + me.id + nameOrPath(me)));\n        };\n        // tslint:disable-next-line:only-arrow-functions\n        possibleTracer = function _possibleTracer(oldMethod, name, args) {\n            buf += step;\n            callDump(\"calling \", name, this);\n            var ret = oldMethod.apply(this, args);\n            callDump(\"called \", name, this);\n            trace_1(buf + \"return from the call: \" + util.inspect(ret));\n            buf = buf.slice(step.length);\n            return ret;\n        };\n        // tslint:disable-next-line:only-arrow-functions\n        fireEventTracer = function _fireEventTracer(oldMethod, name, args) {\n            buf += step;\n            callDump(\"calling \", name, this);\n            trace_1(buf + util.inspect(args[0]));\n            var ret = oldMethod.apply(this, args);\n            callDump(\"called \", name, this);\n            if (ret !== false) {\n                trace_1(buf + \"return from the call: \" + util.inspect(ret));\n            }\n            buf = buf.slice(step.length);\n            return ret;\n        };\n        // tslint:disable-next-line:only-arrow-functions\n        plainTracer = function _plainTracer(oldMethod, name, args) {\n            buf += step;\n            callDump(\"calling \", name, this);\n            var ret = oldMethod.apply(this, args);\n            callDump(\"called \", name, this);\n            trace_1(buf + \"return from the call: \" + util.inspect(ret));\n            buf = buf.slice(step.length);\n            return ret;\n        };\n    }());\n    /**\n     * Utility function for debugging. Wraps ``me[name]`` in a wrapper\n     * function. ``me[name]`` must be a function.  ``me`` could be an instance or\n     * could be a prototype. This function cannot trivially wrap the same field on\n     * the same object twice.\n     *\n     * @private\n     * @param me The object to modify.\n     * @param name The field name to modify in the object.\n     * @param f The function that should serve as wrapper.\n     *\n     */\n    // tslint:disable-next-line:only-arrow-functions no-var-keyword prefer-const\n    var wrap = function (me, name, f) {\n        var mangledName = \"___\" + name;\n        me[mangledName] = me[name];\n        // tslint:disable-next-line:only-arrow-functions\n        me[name] = function wrapper() {\n            return f.call(this, me[mangledName], name, arguments);\n        };\n    };\n    noop(wrap);\n    /* tslint:enable */\n}\n/**\n * Sets up a ``newWalker`` method in a prototype.\n *\n * @private\n * @param elCls The class that will get the new method.\n * @param walkerCls The Walker class to instantiate.\n */\n/* tslint:disable: no-invalid-this */\nfunction addWalker(elCls, walkerCls) {\n    // `resolver` is a NameResolver.\n    // tslint:disable-next-line:only-arrow-functions\n    elCls.prototype.newWalker = function newWalker(resolver) {\n        return new walkerCls(this, resolver);\n    };\n}\nexports.addWalker = addWalker;\n/* tslint:enable */\n// function EventSet() {\n//     var args = Array.prototype.slice.call(arguments);\n//     args.unshift(function (x) { return x.hash() });\n//     HashSet.apply(this, args);\n// }\n// inherit(EventSet, HashSet);\n// The naive Set implementation turns out to be faster than the HashSet\n// implementation for how we are using it.\nvar set_1 = require(\"../set\");\nvar set_2 = require(\"../set\");\nexports.EventSet = set_2.NaiveSet;\n/**\n * Calls the ``hash()`` method on the object passed to it.\n *\n * @private\n * @param o An object that implements ``hash()``.\n * @returns The return value of ``hash()``.\n */\nfunction hashHelper(o) {\n    return o.hash();\n}\n/**\n *\n * This is the base class for all patterns created from the file passed to\n * [[\"validate\".constructTree]]. These patterns form a JavaScript representation\n * of the simplified RNG tree. The base class implements a leaf in the RNG\n * tree. In other words, it does not itself refer to children Patterns. (To put\n * it in other words, it has no subpatterns.)\n */\nvar BasePattern = (function () {\n    /**\n     * @param xmlPath This is a string which uniquely identifies the element from\n     * the simplified RNG tree. Used in debugging.\n     */\n    function BasePattern(xmlPath) {\n        this.id = \"P\" + this.__newID();\n        this.xmlPath = xmlPath;\n    }\n    /**\n     * This method is mainly used to be able to use these objects in a\n     * [[\"hashstructs\".HashSet]] or a [[\"hashstructs\".HashMap]].\n     *\n     * Returns a hash guaranteed to be unique to this object. There are some\n     * limitations. First, if this module is instantiated twice, the objects\n     * created by the two instances cannot mix without violating the uniqueness\n     * guarantee. Second, the hash is a monotonically increasing counter, so when\n     * it reaches beyond the maximum integer that the JavaScript vm can handle,\n     * things go kaboom. Third, this hash is meant to work within salve only.\n     *\n     * @returns A hash unique to this object.\n     */\n    BasePattern.prototype.hash = function () {\n        return this.id;\n    };\n    /**\n     * Resolve references to definitions.\n     *\n     * @param definitions The definitions that exist in this grammar.\n     *\n     * @returns The references that cannot be resolved, or ``undefined`` if no\n     * references cannot be resolved. The caller is free to modify the value\n     * returned as needed.\n     */\n    BasePattern.prototype._resolve = function (definitions) {\n        return undefined;\n    };\n    /**\n     * This method must be called after resolution has been performed.\n     * ``_prepare`` recursively calls children but does not traverse ref-define\n     * boundaries to avoid infinite regress...\n     *\n     * This function now performs two tasks: a) it prepares the attributes\n     * (Definition and Element objects maintain a pattern which contains only\n     * attribute patterns, and nothing else), b) it gathers all the namespaces\n     * seen in the schema.\n     *\n     * @param namespaces An object whose keys are the namespaces seen in\n     * the schema. This method populates the object.\n     *\n     */\n    BasePattern.prototype._prepare = function (namespaces) {\n        // nothing here\n    };\n    /**\n     * This method tests whether a pattern is an attribute pattern or contains\n     * attribute patterns. This method does not cross element boundaries. That is,\n     * if element X cannot have attributes of its own but can contain elements\n     * that can have attributes, the return value if this method is called on the\n     * pattern contained by element X's pattern will be ``false``.\n     *\n     * @returns True if the pattern is or has attributes. False if not.\n     */\n    BasePattern.prototype._hasAttrs = function () {\n        return false;\n    };\n    /**\n     * Populates a memo with a mapping of (element name, [list of patterns]).  In\n     * a Relax NG schema, the same element name may appear in multiple contexts,\n     * with multiple contents. For instance an element named \"name\" could require\n     * the sequence of elements \"firstName\", \"lastName\" in a certain context and\n     * text in a different context. This method allows determining whether this\n     * happens or not within a pattern.\n     *\n     * @param memo The memo in which to store the information.\n     */\n    BasePattern.prototype._gatherElementDefinitions = function (memo) {\n        // By default we have no children.\n    };\n    /**\n     * Gets a new Pattern id.\n     *\n     * @returns The new id.\n     */\n    BasePattern.prototype.__newID = function () {\n        return BasePattern.__id++;\n    };\n    /**\n     * The next id to associate to the next Pattern object to be created. This is\n     * used so that [[hash]] can return unique values.\n     */\n    BasePattern.__id = 0; // tslint:disable-line:variable-name\n    return BasePattern;\n}());\nexports.BasePattern = BasePattern;\n/**\n * This is the common class from which patterns are derived. Most patterns\n * create a new walker by passing a name resolver. The one exception is\n * [[Grammar]], which creates the name resolver that are used by other\n * patterns. So when calling it we do not need a ``resolver`` parameter and thus\n * it inherits from [[BasePattern]] rather than [[Pattern]].\n */\nvar Pattern = (function (_super) {\n    __extends(Pattern, _super);\n    function Pattern() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates a new walker to walk this pattern.\n     *\n     * @returns A walker.\n     */\n    Pattern.prototype.newWalker = function (resolver) {\n        throw new Error(\"derived classes must override this\");\n    };\n    return Pattern;\n}(BasePattern));\nexports.Pattern = Pattern;\n/**\n * Pattern objects of this class have exactly one child pattern.\n */\nvar OneSubpattern = (function (_super) {\n    __extends(OneSubpattern, _super);\n    function OneSubpattern(xmlPath, pat) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.pat = pat;\n        return _this;\n    }\n    OneSubpattern.prototype._resolve = function (definitions) {\n        return this.pat._resolve(definitions);\n    };\n    OneSubpattern.prototype._prepare = function (namespaces) {\n        this.pat._prepare(namespaces);\n    };\n    OneSubpattern.prototype._hasAttrs = function () {\n        return this.pat._hasAttrs();\n    };\n    OneSubpattern.prototype._gatherElementDefinitions = function (memo) {\n        this.pat._gatherElementDefinitions(memo);\n    };\n    return OneSubpattern;\n}(Pattern));\nexports.OneSubpattern = OneSubpattern;\n/**\n * Pattern objects of this class have exactly two child patterns.\n *\n */\nvar TwoSubpatterns = (function (_super) {\n    __extends(TwoSubpatterns, _super);\n    function TwoSubpatterns(xmlPath, patA, patB) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.patA = patA;\n        _this.patB = patB;\n        return _this;\n    }\n    TwoSubpatterns.prototype._resolve = function (definitions) {\n        var a = this.patA._resolve(definitions);\n        var b = this.patB._resolve(definitions);\n        if (a !== undefined && b !== undefined) {\n            return a.concat(b);\n        }\n        if (a !== undefined) {\n            return a;\n        }\n        return b;\n    };\n    TwoSubpatterns.prototype._prepare = function (namespaces) {\n        this.patA._prepare(namespaces);\n        this.patB._prepare(namespaces);\n    };\n    TwoSubpatterns.prototype._hasAttrs = function () {\n        return this.patA._hasAttrs() || this.patB._hasAttrs();\n    };\n    TwoSubpatterns.prototype._gatherElementDefinitions = function (memo) {\n        this.patA._gatherElementDefinitions(memo);\n        this.patB._gatherElementDefinitions(memo);\n    };\n    return TwoSubpatterns;\n}(Pattern));\nexports.TwoSubpatterns = TwoSubpatterns;\n/**\n * This class models events occurring during parsing. Upon encountering the\n * start of a start tag, an \"enterStartTag\" event is generated, etc. Event\n * objects are held to be immutable. No precautions have been made to enforce\n * this. Users of these objects simply must not modify them. Moreover, there is\n * one and only one of each event created.\n *\n * An event is made of a list of event parameters, with the first one being the\n * type of the event and the rest of the list varying depending on this type.\n *\n */\nvar Event = (function () {\n    /**\n     * @param args... The event parameters may be passed directly in the call\n     * ``(new Event(a, b, ...))`` or the first call parameter may be a list\n     * containing all the event parameters ``(new Event([a, b, ])``. All of the\n     * event parameters must be strings.\n     */\n    function Event() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var params = (args.length === 1 && args[0] instanceof Array) ? args[0] : args;\n        var key = params.join();\n        // Ensure we have only one of each event created.\n        var cached = Event.__cache[key];\n        if (cached !== undefined) {\n            return cached;\n        }\n        this.id = \"E\" + this.__newID();\n        this.params = params;\n        this.key = key;\n        Event.__cache[key] = this;\n        return this;\n    }\n    /**\n     * This method is mainly used to be able to use these objects in a\n     * [[\"hashstructs\".HashSet]] or a [[\"hashstructs\".HashMap]].\n     *\n     * Returns a hash guaranteed to be unique to this object. There are some\n     * limitations. First, if this module is instantiated twice, the objects\n     * created by the two instances cannot mix without violating the uniqueness\n     * guarantee. Second, the hash is a monotonically increasing counter, so when\n     * it reaches beyond the maximum integer that the JavaScript vm can handle,\n     * things go kaboom. Third, this hash is meant to work within salve only.\n     *\n     * @returns A hash unique to this object.\n     */\n    Event.prototype.hash = function () {\n        return this.id;\n    };\n    /**\n     * Is this Event an attribute event?\n     *\n     * @returns ``true`` if the event is an attribute event, ``false``\n     * otherwise.\n     */\n    Event.prototype.isAttributeEvent = function () {\n        return (this.params[0] === \"attributeName\" ||\n            this.params[0] === \"attributeValue\");\n    };\n    /**\n     * @returns A string representation of the event.\n     */\n    Event.prototype.toString = function () {\n        return \"Event: \" + this.params.join(\", \");\n    };\n    /**\n     * Gets a new Event id.\n     *\n     * @returns The new id.\n     */\n    Event.prototype.__newID = function () {\n        return Event.__id++;\n    };\n    /**\n     * The cache of Event objects. So that we create one and only one Event object\n     * per run.\n     */\n    // tslint:disable-next-line:variable-name\n    Event.__cache = Object.create(null);\n    /**\n     * The next id to associate to the next Event object to be created. This is\n     * used so that [[Event.hash]] can return unique values.\n     */\n    // tslint:disable-next-line:variable-name\n    Event.__id = 0;\n    return Event;\n}());\nexports.Event = Event;\n/**\n * Utility function used mainly in testing to transform a [[\"set\".NaiveSet]] of\n * events into a string containing a tree structure.  The principle is to\n * combine events of a same type together and among events of a same type\n * combine those which are in the same namespace. So for instance if there is a\n * set of events that are all attributeName events plus one ``leaveStartTag``\n * event, the output could be:\n *\n * <pre>``\n * attributeName:\n * ..uri A:\n * ....name 1\n * ....name 2\n * ..uri B:\n * ....name 3\n * ....name 4\n * leaveStartTag\n * ``</pre>\n *\n * The dots above are to represent more visually the indentation. Actual output\n * does not contain leading dots.  In this list there are two attributeName\n * events in the \"uri A\" namespace and two in the \"uri B\" namespace.\n *\n * @param evs Events to turn into a string.\n * @returns A string which contains the tree described above.\n */\nfunction eventsToTreeString(evs) {\n    function hashF(x) {\n        return x;\n    }\n    if (evs instanceof set_1.NaiveSet) {\n        evs = evs.toArray();\n    }\n    var hash = new hashstructs_1.HashMap(hashF);\n    evs.forEach(function (ev) {\n        var params = ev.params;\n        var node = hash;\n        for (var i = 0; i < params.length; ++i) {\n            if (i === params.length - 1) {\n                // Our HashSet/Map cannot deal with undefined values. So we mark\n                // leaf elements with the value false.\n                node.add(params[i], false);\n            }\n            else {\n                var nextNode = node.has(params[i]);\n                if (nextNode === undefined) {\n                    nextNode = new hashstructs_1.HashMap(hashF);\n                    node.add(params[i], nextNode);\n                }\n                node = nextNode;\n            }\n        }\n    });\n    // We don't set dumpTree to const because the compiler has a fit when dumpTree\n    // is accessed recursively.\n    // tslint:disable-next-line:prefer-const\n    var dumpTree = \n    // tslint:disable-next-line:only-arrow-functions\n    (function makeDumpTree() {\n        var dumpTreeBuf = \"\";\n        var dumpTreeIndent = \"    \";\n        // tslint:disable-next-line:no-shadowed-variable\n        return function (hash) {\n            var ret = \"\";\n            var keys = hash.keys();\n            keys.sort();\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                var sub = hash.has(key);\n                if (sub !== false) {\n                    ret += \"\" + dumpTreeBuf + key + \":\\n\";\n                    dumpTreeBuf += dumpTreeIndent;\n                    ret += dumpTree(hash.has(key));\n                    dumpTreeBuf = dumpTreeBuf.slice(dumpTreeIndent.length);\n                }\n                else {\n                    ret += \"\" + dumpTreeBuf + key + \"\\n\";\n                }\n            }\n            return ret;\n        };\n    }());\n    return dumpTree(hash);\n    /* tslint:enable */\n}\nexports.eventsToTreeString = eventsToTreeString;\n/**\n * Special event to which only the [[\"empty\".EmptyWalker]] responds\n * positively. This object is meant to be used internally by salve.\n */\nexports.emptyEvent = new Event(\"<empty>\");\n/**\n * Roughly speaking each [[Pattern]] object has a corresponding ``Walker`` class\n * that models an object which is able to walk the pattern to which it\n * belongs. So an ``Element`` has an ``ElementWalker`` and an ``Attribute`` has\n * an ``AttributeWalker``. A ``Walker`` object responds to parsing events and\n * reports whether the structure represented by these events is valid.\n *\n * This base class records only a minimal number of properties so that child\n * classes can avoid keeping useless properties. A prime example is the walker\n * for ``<empty>`` which is a terminal walker (it has no subwalker) so does not\n * need to record the name resolver.\n *\n * Note that users of this API do not instantiate Walker objects themselves.\n */\nvar Walker = (function () {\n    function Walker(elOrWalker) {\n        this.id = \"W\" + this.__newID();\n        this.suppressedAttributes = false;\n        if (elOrWalker instanceof Walker) {\n            this.el = elOrWalker.el;\n            this.possibleCached = elOrWalker.possibleCached;\n            this.suppressedAttributes = elOrWalker.suppressedAttributes;\n        }\n        else {\n            this.el = elOrWalker;\n        }\n        if (DEBUG) {\n            wrap(this, \"_possible\", possibleTracer);\n            wrap(this, \"fireEvent\", fireEventTracer);\n            wrap(this, \"end\", plainTracer);\n            wrap(this, \"_suppressAttributes\", plainTracer);\n            wrap(this, \"_clone\", plainTracer);\n        }\n    }\n    /**\n     * This method is mainly used to be able to use these objects in a\n     * [[\"hashstructs\".HashSet]] or a [[\"hashstructs\".HashMap]].\n     *\n     * Returns a hash guaranteed to be unique to this object. There are some\n     * limitations. First, if this module is instantiated twice, the objects\n     * created by the two instances cannot mix without violating the uniqueness\n     * guarantee. Second, the hash is a monotonically increasing counter, so when\n     * it reaches beyond the maximum integer that the JavaScript vm can handle,\n     * things go kaboom. Third, this hash is meant to work within salve only.\n     *\n     * @returns A hash unique to this object.\n     */\n    Walker.prototype.hash = function () {\n        return this.id;\n    };\n    /**\n     * Fetch the set of possible events at the current stage of parsing.\n     *\n     * @returns The set of events that can be fired without resulting in an error.\n     */\n    Walker.prototype.possible = function () {\n        return new set_1.NaiveSet(this._possible());\n    };\n    /**\n     * Can this Walker validly end after the previous event fired?\n     *\n     * @param attribute ``true`` if calling this method while processing\n     * attributes, ``false`` otherwise.\n     *\n     * @return ``true`` if the walker can validly end here.  ``false`` otherwise.\n     */\n    Walker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        return true;\n    };\n    /**\n     * Obtain the errors that would occur if the walker were to end here. Note the\n     * conditional phrasing. It **must** be idempotent. Therefore it **must not**\n     * change the state of the walker. The internal code of salve will sometimes\n     * call end more than once on the same walker.\n     *\n     * @param attribute ``true`` if calling this method while processing\n     * attributes, ``false`` otherwise.\n     *\n     * @returns ``false`` if the walker ended without error. Otherwise, the\n     * errors.\n     */\n    Walker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        return false;\n    };\n    /**\n     * Deep copy the Walker.\n     *\n     * @returns A deep copy of the Walker.\n     */\n    Walker.prototype.clone = function () {\n        return this._clone(new hashstructs_1.HashMap(hashHelper));\n    };\n    /**\n     * Helper function for clone. Code that is not part of the Pattern family would\n     * call clone() whereas Pattern and its derived classes call _clone() with the\n     * appropriate memo.\n     *\n     * @param memo A mapping of old object to copy object. As a tree of patterns\n     * is being cloned, this memo is populated.  So if A is cloned to B then a\n     * mapping from A to B is stored in the memo.  If A is seen again in the same\n     * cloning operation, then it will be substituted with B instead of creating a\n     * new object.\n     *\n     * This method is meant only to be used by classes derived from [[Walker]]. It\n     * is public due to a limitation of TypeScript. Don't call it from your own\n     * code. You've been warned.\n     *\n     * @protected\n     *\n     * @returns The clone.\n     */\n    Walker.prototype._clone = function (memo) {\n        return new this.constructor(this, memo);\n    };\n    /**\n     * Helper function used to prevent Walker objects from reporting attribute\n     * events as possible. In RelaxNG it is normal to mix attributes and elements\n     * in patterns. However, XML validation segregates attributes and\n     * elements. Once a start tag has been processed, attributes are not possible\n     * until a new start tag begins. For instance, if a Walker is processing\n     * ``<foo a=\"1\">``, as soon as the greater than symbol is encountered,\n     * attribute events are no longer possible. This function informs the Walker\n     * of this fact.\n     *\n     */\n    Walker.prototype._suppressAttributes = function () {\n        this.suppressedAttributes = true;\n    };\n    /**\n     * Helper method for cloning. This method should be called to clone objects\n     * that do not participate in the ``clone``, protocol. This typically means\n     * instance properties that are not ``Walker`` objects and not immutable.\n     *\n     * This method will call a ``clone`` method on ``obj``, when it determines\n     * that cloning must happen.\n     *\n     * @param obj The object to clone.\n     *\n     * @param memo A mapping of old object to copy object. As a tree of patterns\n     * is being cloned, this memo is populated. So if A is cloned to B then a\n     * mapping from A to B is stored in the memo. If A is seen again in the same\n     * cloning operation, then it will be substituted with B instead of creating a\n     * new object. This should be the same object as the one passed to the\n     * constructor.\n     *\n     * @returns A clone of ``obj``.\n     */\n    Walker.prototype._cloneIfNeeded = function (obj, memo) {\n        var other = memo.has(obj);\n        if (other !== undefined) {\n            return other;\n        }\n        other = obj.clone();\n        memo.add(obj, other);\n        return other;\n    };\n    /**\n     * Gets a new Walker id.\n     *\n     * @returns The new id.\n     */\n    Walker.prototype.__newID = function () {\n        return Walker.__id++;\n    };\n    /**\n     * The next id to associate to the next Walker object to be created. This is\n     * used so that [[hash]] can return unique values.\n     */\n    Walker.__id = 0; // tslint:disable-line:variable-name\n    return Walker;\n}());\nexports.Walker = Walker;\nfunction isHashMap(value, msg) {\n    if (msg === void 0) { msg = \"\"; }\n    if (value instanceof hashstructs_1.HashMap) {\n        return value;\n    }\n    throw new Error(\"did not get a HashMap \" + msg);\n}\nexports.isHashMap = isHashMap;\nfunction isNameResolver(value, msg) {\n    if (msg === void 0) { msg = \"\"; }\n    if (value instanceof name_resolver_1.NameResolver) {\n        return value;\n    }\n    throw new Error(\"did not get a HashMap \" + msg);\n}\nexports.isNameResolver = isNameResolver;\n/**\n * Walkers that have only one subwalker.\n */\nvar SingleSubwalker = (function (_super) {\n    __extends(SingleSubwalker, _super);\n    function SingleSubwalker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SingleSubwalker.prototype._possible = function () {\n        return this.subwalker.possible();\n    };\n    SingleSubwalker.prototype.fireEvent = function (ev) {\n        return this.subwalker.fireEvent(ev);\n    };\n    SingleSubwalker.prototype._suppressAttributes = function () {\n        if (!this.suppressedAttributes) {\n            this.suppressedAttributes = true;\n            this.subwalker._suppressAttributes();\n        }\n    };\n    SingleSubwalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        return this.subwalker.canEnd(attribute);\n    };\n    SingleSubwalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        return this.subwalker.end(attribute);\n    };\n    return SingleSubwalker;\n}(Walker));\nexports.SingleSubwalker = SingleSubwalker;\n/**\n * A pattern for RNG references.\n */\nvar Ref = (function (_super) {\n    __extends(Ref, _super);\n    /**\n     *\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param name The reference name.\n     */\n    function Ref(xmlPath, name) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.name = name;\n        return _this;\n    }\n    Ref.prototype._prepare = function () {\n        // We do not cross ref/define boundaries to avoid infinite loops.\n        return;\n    };\n    Ref.prototype._resolve = function (definitions) {\n        this.resolvesTo = definitions[this.name];\n        if (this.resolvesTo === undefined) {\n            return [this];\n        }\n        return undefined;\n    };\n    // addWalker(Ref, RefWalker); No, see below\n    // This completely skips the creation of RefWalker and DefineWalker. This\n    // returns the walker for whatever it is that the Define element this\n    // refers to ultimately contains.\n    Ref.prototype.newWalker = function (resolver) {\n        // _resolve must have been called before any walker can be created.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.resolvesTo.pat.newWalker(resolver);\n    };\n    return Ref;\n}(Pattern));\nexports.Ref = Ref;\n/**\n * A pattern for ``<define>``.\n */\nvar Define = (function (_super) {\n    __extends(Define, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param name The name of the definition.\n     *\n     * @param pat The pattern contained by this one.\n     */\n    function Define(xmlPath, name, pat) {\n        var _this = _super.call(this, xmlPath, pat) || this;\n        _this.name = name;\n        return _this;\n    }\n    return Define;\n}(OneSubpattern));\nexports.Define = Define;\n/**\n * Walker for [[Define]].\n */\nvar DefineWalker = (function (_super) {\n    __extends(DefineWalker, _super);\n    function DefineWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof DefineWalker) {\n            var walker = elOrWalker;\n            var memo = isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.subwalker = walker.subwalker._clone(memo);\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.subwalker = el.pat.newWalker(_this.nameResolver);\n        }\n        return _this;\n    }\n    return DefineWalker;\n}(SingleSubwalker));\naddWalker(Define, DefineWalker);\n//  LocalWords:  RNG MPL lookahead xmlns uri CodeMirror tokenizer enterStartTag\n//  LocalWords:  EOF attributeName el xmlPath buf nameOrPath util ret EventSet\n//  LocalWords:  NameResolver args unshift HashSet subpatterns newID NG vm pre\n//  LocalWords:  firstName lastName attributeValue leaveStartTag dumpTree const\n//  LocalWords:  dumpTreeBuf subwalker fireEvent suppressAttributes HashMap\n//  LocalWords:  ValidationError addWalker RefWalker DefineWalker\n\n//# sourceMappingURL=base.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/base.js\n// module id = 0\n// module chunks = 0 1","\"use strict\";\n/**\n * Validation errors.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The ``fireEvent`` methods return an array of objects of this class to\n * notify the caller of errors in the file being validated.\n *\n * Note that these error objects do not record what (element, attribute, text,\n * etc.) in the XML document was responsible for the error. It is the\n * responsibility of the code that uses salve to combine the error message with\n * an object that points into the document being validated.\n *\n * This is particularly important when considering the equality of errors. Two\n * errors are considered equal if their messages (with names) are the\n * same. *They could still be associated with two different locations in the\n * document being validated.* The code calling salve must distinguish such\n * cases.\n */\nvar ValidationError = (function () {\n    /**\n     *\n     * @param msg The error message.\n     */\n    function ValidationError(msg) {\n        this.msg = msg;\n        // May be useful for debugging:\n        // this.stack_trace = new Error().stack;\n    }\n    /**\n     * The default implementation is to return the value of calling\n     * ``this.toStringWithNames(this.getNames())``.\n     *\n     * @returns The text representation of the error.\n     */\n    ValidationError.prototype.toString = function () {\n        return this.toStringWithNames(this.getNames());\n    };\n    /**\n     * This method provides the caller with the list of all names that are used in\n     * the error message.\n     *\n     * @returns The list of names used in the error message.\n     */\n    ValidationError.prototype.getNames = function () {\n        return [];\n    };\n    /**\n     * This method transforms this object to a string but uses the names in the\n     * parameter passed to it to format the string.\n     *\n     * Since salve does not work with namespace prefixes, someone using salve\n     * would typically use this method so as to replace the name patterns passed\n     * in error messages with qualified names.\n     *\n     * @param names The array of names to use. This should be an array of the same\n     * length as that returned by [[getNames]] . Each element of the array\n     * corresponds to each name in [[getNames]] and should be something that can\n     * be converted to a meaningful string.\n     *\n     * @returns The object formatted as a string.\n     */\n    ValidationError.prototype.toStringWithNames = function (names) {\n        // We do not have names in ValidationError\n        return this.msg;\n    };\n    /**\n     * Two [[ValidationError]] objects are considered equal if the values returned\n     * by [[toString]] are equal.\n     *\n     * @param other The other validation error to compare against.\n     *\n     * @returns Whether ``this`` and ``other`` are equal.\n     */\n    ValidationError.prototype.equals = function (other) {\n        return (this === other) || (this.toString() === other.toString());\n    };\n    return ValidationError;\n}());\nexports.ValidationError = ValidationError;\n/**\n * This class serves as a base for all those errors that have only\n * one name involved.\n */\nvar SingleNameError = (function (_super) {\n    __extends(SingleNameError, _super);\n    /**\n     * @param msg The error message.\n     *\n     * @param name The name of the XML entity at stake.\n     */\n    function SingleNameError(msg, name) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = name;\n        return _this;\n    }\n    SingleNameError.prototype.getNames = function () {\n        return [this.name];\n    };\n    SingleNameError.prototype.toStringWithNames = function (names) {\n        return this.msg + \": \" + names[0].toString();\n    };\n    return SingleNameError;\n}(ValidationError));\nexports.SingleNameError = SingleNameError;\n/**\n * Error returned when an attribute name is invalid.\n */\nvar AttributeNameError = (function (_super) {\n    __extends(AttributeNameError, _super);\n    function AttributeNameError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AttributeNameError;\n}(SingleNameError));\nexports.AttributeNameError = AttributeNameError;\n/**\n * Error returned when an attribute value is invalid.\n */\nvar AttributeValueError = (function (_super) {\n    __extends(AttributeValueError, _super);\n    function AttributeValueError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AttributeValueError;\n}(SingleNameError));\nexports.AttributeValueError = AttributeValueError;\n/**\n * Error returned when an element is invalid.\n */\nvar ElementNameError = (function (_super) {\n    __extends(ElementNameError, _super);\n    function ElementNameError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ElementNameError;\n}(SingleNameError));\nexports.ElementNameError = ElementNameError;\n/**\n * Error returned when choice was not satisfied.\n */\nvar ChoiceError = (function (_super) {\n    __extends(ChoiceError, _super);\n    /**\n     * @param namesA The names of the first XML entities at stake.\n     *\n     * @param namesB The names of the second XML entities at stake.\n     */\n    function ChoiceError(namesA, namesB) {\n        var _this = _super.call(this, \"\") || this;\n        _this.namesA = namesA;\n        _this.namesB = namesB;\n        return _this;\n    }\n    ChoiceError.prototype.getNames = function () {\n        return this.namesA.concat(this.namesB);\n    };\n    ChoiceError.prototype.toStringWithNames = function (names) {\n        var first = names.slice(0, this.namesA.length);\n        var second = names.slice(this.namesA.length);\n        return \"must choose either \" + first.join(\", \") + \" or \" + second.join(\", \");\n    };\n    return ChoiceError;\n}(ValidationError));\nexports.ChoiceError = ChoiceError;\n//  LocalWords:  MPL ValidationError toStringWithNames getNames toString\n\n//# sourceMappingURL=errors.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/errors.js\n// module id = 1\n// module chunks = 0 1","\"use strict\";\n/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Base class for all name patterns.\n */\nvar Base = (function () {\n    /**\n     * @param path The XML path of the element that corresponds to this\n     * object in the Relax NG schema from which this object was constructed.\n     */\n    function Base(path) {\n        this.path = path;\n    }\n    /**\n     * Gets the list of namespaces used in the pattern. An ``::except`` entry\n     * indicates that there are exceptions in the pattern. A ``*`` entry indicates\n     * that any namespace is allowed.\n     *\n     * This method should be used by client code to help determine how to prompt\n     * the user for a namespace. If the return value is a list without\n     * ``::except`` or ``*``, the client code knows there is a finite list of\n     * namespaces expected, and what the possible values are. So it could present\n     * the user with a choice from the set. If ``::except`` or ``*`` appears in\n     * the list, then a different strategy must be used.\n     *\n     * @returns The list of namespaces.\n     */\n    Base.prototype.getNamespaces = function () {\n        var namespaces = Object.create(null);\n        this._recordNamespaces(namespaces);\n        return Object.keys(namespaces);\n    };\n    /**\n     * Alias of [[Base.toObject]].\n     *\n     * ``toJSON`` is a misnomer, as the data returned is not JSON but a JavaScript\n     * object. This method exists so that ``JSON.stringify`` can use it.\n     */\n    Base.prototype.toJSON = function () {\n        return this.toObject();\n    };\n    /**\n     * Stringify the pattern to a JSON string.\n     *\n     * @returns The stringified instance.\n     */\n    Base.prototype.toString = function () {\n        return JSON.stringify(this);\n    };\n    return Base;\n}());\nexports.Base = Base;\n/**\n * Models the Relax NG ``<name>`` element.\n *\n */\nvar Name = (function (_super) {\n    __extends(Name, _super);\n    /**\n     * @param path See parent class.\n     *\n     * @param ns The namespace URI for this name. Corresponds to the\n     * ``ns`` attribute in the simplified Relax NG syntax.\n     *\n     * @param name The name. Corresponds to the content of ``<name>``\n     * in the simplified Relax NG syntax.\n     */\n    function Name(path, ns, name) {\n        var _this = _super.call(this, path) || this;\n        _this.ns = ns;\n        _this.name = name;\n        return _this;\n    }\n    Name.prototype.match = function (ns, name) {\n        return this.ns === ns && this.name === name;\n    };\n    Name.prototype.wildcardMatch = function (ns, name) {\n        return false; // This is not a wildcard.\n    };\n    Name.prototype.toObject = function () {\n        return {\n            ns: this.ns,\n            name: this.name,\n        };\n    };\n    Name.prototype.simple = function () {\n        return true;\n    };\n    Name.prototype.toArray = function () {\n        return [this];\n    };\n    Name.prototype._recordNamespaces = function (namespaces) {\n        namespaces[this.ns] = 1;\n    };\n    return Name;\n}(Base));\nexports.Name = Name;\n/**\n * Models the Relax NG ``<choice>`` element when it appears in a name\n * class.\n */\nvar NameChoice = (function (_super) {\n    __extends(NameChoice, _super);\n    /**\n     * @param path See parent class.\n     *\n     * @param pats An array of length 2 which\n     * contains the two choices allowed by this object.\n     */\n    function NameChoice(path, pats) {\n        var _this = _super.call(this, path) || this;\n        _this.a = pats[0], _this.b = pats[1];\n        return _this;\n    }\n    NameChoice.prototype.match = function (ns, name) {\n        return this.a.match(ns, name) || this.b.match(ns, name);\n    };\n    NameChoice.prototype.wildcardMatch = function (ns, name) {\n        return this.a.wildcardMatch(ns, name) || this.b.wildcardMatch(ns, name);\n    };\n    NameChoice.prototype.toObject = function () {\n        return {\n            a: this.a.toObject(),\n            b: this.b.toObject(),\n        };\n    };\n    NameChoice.prototype.simple = function () {\n        return this.a.simple() && this.b.simple();\n    };\n    NameChoice.prototype.toArray = function () {\n        var aArr = this.a.toArray();\n        if (aArr === null) {\n            return null;\n        }\n        var bArr = this.b.toArray();\n        if (bArr === null) {\n            return null;\n        }\n        return aArr.concat(bArr);\n    };\n    NameChoice.prototype._recordNamespaces = function (namespaces) {\n        this.a._recordNamespaces(namespaces);\n        this.b._recordNamespaces(namespaces);\n    };\n    return NameChoice;\n}(Base));\nexports.NameChoice = NameChoice;\n/**\n * Models the Relax NG ``<nsName>`` element.\n */\nvar NsName = (function (_super) {\n    __extends(NsName, _super);\n    /**\n     *\n     * @param path See parent class.\n     *\n     * @param ns The namespace URI for this name. Corresponds to the ``ns``\n     * attribute in the simplified Relax NG syntax.\n     *\n     * @param except Corresponds to an ``<except>`` element appearing as a child\n     * of the ``<nsName>`` element in the Relax NG schema.\n     */\n    function NsName(path, ns, except) {\n        var _this = _super.call(this, path) || this;\n        _this.ns = ns;\n        _this.except = except;\n        return _this;\n    }\n    NsName.prototype.match = function (ns, name) {\n        return this.ns === ns && !(this.except !== undefined &&\n            this.except.match(ns, name));\n    };\n    NsName.prototype.wildcardMatch = function (ns, name) {\n        return this.match(ns, name);\n    };\n    NsName.prototype.toObject = function () {\n        var ret = {\n            ns: this.ns,\n        };\n        if (this.except !== undefined) {\n            ret.except = this.except.toObject();\n        }\n        return ret;\n    };\n    NsName.prototype.simple = function () {\n        return false;\n    };\n    NsName.prototype.toArray = function () {\n        return null;\n    };\n    NsName.prototype._recordNamespaces = function (namespaces) {\n        namespaces[this.ns] = 1;\n        if (this.except !== undefined) {\n            namespaces[\"::except\"] = 1;\n        }\n    };\n    return NsName;\n}(Base));\nexports.NsName = NsName;\n/**\n * Models the Relax NG ``<anyName>`` element.\n */\nvar AnyName = (function (_super) {\n    __extends(AnyName, _super);\n    /**\n     * @param path See parent class.\n     *\n     * @param except Corresponds to an ``<except>`` element appearing as a child\n     * of the ``<anyName>`` element in the Relax NG schema.\n     */\n    function AnyName(path, except) {\n        var _this = _super.call(this, path) || this;\n        _this.except = except;\n        return _this;\n    }\n    AnyName.prototype.match = function (ns, name) {\n        return (this.except === undefined) || !this.except.match(ns, name);\n    };\n    AnyName.prototype.wildcardMatch = function (ns, name) {\n        return this.match(ns, name);\n    };\n    AnyName.prototype.toObject = function () {\n        var ret = {\n            pattern: \"AnyName\",\n        };\n        if (this.except !== undefined) {\n            ret.except = this.except.toObject();\n        }\n        return ret;\n    };\n    AnyName.prototype.simple = function () {\n        return false;\n    };\n    AnyName.prototype.toArray = function () {\n        return null;\n    };\n    AnyName.prototype._recordNamespaces = function (namespaces) {\n        namespaces[\"*\"] = 1;\n        if (this.except !== undefined) {\n            namespaces[\"::except\"] = 1;\n        }\n    };\n    return AnyName;\n}(Base));\nexports.AnyName = AnyName;\n//  LocalWords:  MPL NG Stringify stringified AnyName\n\n//# sourceMappingURL=name_patterns.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/name_patterns.js\n// module id = 2\n// module chunks = 0 1","\"use strict\";\n/**\n * Implements a name resolver for handling namespace changes in XML.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ename_1 = require(\"./ename\");\n//\n// Both defined at:\n// http://www.w3.org/TR/REC-xml-names/#ns-decl\n//\n/**\n * The namespace URI for the \"xml\" prefix. This is part of the [XML\n * spec](http://www.w3.org/TR/REC-xml-names/#ns-decl).\n */\n// tslint:disable-next-line: no-http-string\nexports.XML1_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n/**\n * The namespace URI for the \"xmlns\" prefix. This is part of the [XML\n * spec](http://www.w3.org/TR/REC-xml-names/#ns-decl).\n */\n// tslint:disable-next-line: no-http-string\nexports.XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\";\n/**\n * A resolution context.\n *\n * @private\n */\nvar Context = (function () {\n    function Context() {\n        /**\n         * A mapping from namespace prefix to namespace uri.\n         */\n        this.forward = Object.create(null);\n        /**\n         * A mapping from namespace uri to namespace prefixes. It is \"prefixes\" in the\n         * plural because multiple prefixes may exist for the same uri.\n         */\n        this.backwards = Object.create(null);\n    }\n    return Context;\n}());\n/**\n * A name resolver for handling namespace changes in XML. This name\n * resolver maintains mappings from namespace prefix to namespace URI.\n */\nvar NameResolver = (function () {\n    function NameResolver(other) {\n        this.id = \"N\" + this.__newID();\n        if (other !== undefined) {\n            this._contextStack = other._contextStack.slice();\n        }\n        else {\n            this._contextStack = [];\n            // Create a default context.\n            this.enterContext();\n            // Both namespaces defined at:\n            // http://www.w3.org/TR/REC-xml-names/#ns-decl\n            // Skip definePrefix for these initial values.\n            /* tslint:disable no-string-literal */\n            this._contextStack[0].forward[\"xml\"] = exports.XML1_NAMESPACE;\n            this._contextStack[0].backwards[exports.XML1_NAMESPACE] = [\"xml\"];\n            this._contextStack[0].forward[\"xmlns\"] = exports.XMLNS_NAMESPACE;\n            this._contextStack[0].backwards[exports.XMLNS_NAMESPACE] = [\"xmlns\"];\n            /* tslint:enable no-string-literal */\n        }\n    }\n    /**\n     * This method is mainly used to be able to use [[NameResolver]] objects in a\n     * collection.\n     *\n     * Returns a hash guaranteed to be unique to this object. There are some\n     * limitations. First, if this module is instantiated twice, the objects\n     * created by the two instances cannot mix without violating the uniqueness\n     * guarantee. Second, the hash is a monotonically increasing counter, so when\n     * it reaches beyond the maximum integer that the JavaScript vm can handle,\n     * things go kaboom.\n     *\n     * @returns A number unique to this object.\n     */\n    NameResolver.prototype.hash = function () {\n        return this.id;\n    };\n    /**\n     * Makes a deep copy.\n     *\n     * @returns A deep copy of the resolver.\n     */\n    NameResolver.prototype.clone = function () {\n        return new NameResolver(this);\n    };\n    /**\n     * Defines a (prefix, URI) mapping.\n     *\n     * @param prefix The namespace prefix to associate with the URI.\n     *\n     * @param uri The namespace URI associated with the prefix.\n     */\n    NameResolver.prototype.definePrefix = function (prefix, uri) {\n        // http://www.w3.org/TR/REC-xml-names/#ns-decl\n        if (prefix === \"xmlns\") {\n            throw new Error(\"trying to define 'xmlns' but the XML Namespaces \" +\n                \"standard stipulates that 'xmlns' cannot be \" +\n                \"declared (= \\\"defined\\\")\");\n        }\n        if (prefix === \"xml\" && uri !== exports.XML1_NAMESPACE) {\n            throw new Error(\"trying to define 'xml' to an incorrect URI\");\n        }\n        this._contextStack[0].forward[prefix] = uri;\n        var prefixes = this._contextStack[0].backwards[uri];\n        if (prefixes === undefined) {\n            prefixes = this._contextStack[0].backwards[uri] = [];\n        }\n        // This ensure that the default namespace is given priority when\n        // unresolving names.\n        if (prefix === \"\") {\n            prefixes.unshift(\"\");\n        }\n        else {\n            prefixes.push(prefix);\n        }\n    };\n    /**\n     * This method is called to indicate the start of a new context.  Contexts\n     * enable this class to support namespace redeclarations. In XML, each start\n     * tag can potentially redefine a prefix that was already defined by an\n     * ancestor. When using this class, such redefinition must appear in a new\n     * context, otherwise it would merely overwrite the old definition.\n     *\n     * At creation, a [[NameResolver]] has a default context already\n     * created. There is no need to create it and it is not possible to leave it.\n     */\n    NameResolver.prototype.enterContext = function () {\n        this._contextStack.unshift(new Context());\n    };\n    /**\n     * This method is called to indicate the end of a context. Whatever context\n     * was in effect when the current context ends becomes effective.\n     *\n     * @throws {Error} If this method is called when there is no context created\n     * by [[NameResolver.enterContext]].\n     */\n    NameResolver.prototype.leaveContext = function () {\n        if (this._contextStack.length > 1) {\n            this._contextStack.shift();\n        }\n        else {\n            throw new Error(\"trying to leave the default context\");\n        }\n    };\n    /**\n     * Resolves a qualified name to an expanded name. A qualified name is an XML\n     * name optionally prefixed by a namespace prefix. For instance, in ``<html\n     * xml:lang=\"en\">``, \"html\" is a name without a prefix, and \"xml:lang\" is a\n     * name with the \"xml\" prefix. An expanded name is a (URI, name) pair.\n     *\n     * @param name The name to resolve.\n     *\n     * @param attribute Whether this name appears as an attribute.\n     *\n     * @throws {Error} If the name is malformed. For instance, a name with two\n     * colons would be malformed.\n     *\n     * @returns The expanded name, or ``undefined`` if the name cannot be\n     * resolved.\n     */\n    NameResolver.prototype.resolveName = function (name, attribute) {\n        if (attribute === void 0) { attribute = false; }\n        var parts = name.split(\":\");\n        if (parts.length === 1) {\n            if (attribute) {\n                return new ename_1.EName(\"\", name);\n            }\n            // We are searching for the default namespace currently in effect.\n            parts = [\"\", name];\n        }\n        if (parts.length > 2) {\n            throw new Error(\"invalid name passed to resolveName\");\n        }\n        // Search through the contexts\n        var uri;\n        for (var cIx = 0; (uri === undefined) && (cIx < this._contextStack.length); ++cIx) {\n            var ctx = this._contextStack[cIx];\n            uri = ctx.forward[parts[0]];\n        }\n        if (uri === undefined) {\n            return (parts[0] === \"\") ? new ename_1.EName(\"\", parts[1]) : undefined;\n        }\n        return new ename_1.EName(uri, parts[1]);\n    };\n    /**\n     * Unresolves an expanded name to a qualified name. An expanded name is a\n     * (URI, name) pair. Note that if we execute:\n     *\n     * <pre>\n     *   var nameResolver = new NameResolver();\n     *   var ename = nameResolver.resolveName(qname);\n     *   var qname2 = nameResolver.unresolveName(ename.ns, ename.name);\n     * </pre>\n     *\n     * then ``qname === qname2`` is not necessarily true. This would happen if two\n     * prefixes map to the same URI. In such case the prefix provided in the\n     * return value is arbitrarily chosen.\n     *\n     * @param uri The URI part of the expanded name. An empty string is\n     * valid, and basically means \"no namespace\". This occurs for unprefixed\n     * attributes but could also happen if the default namespace is undeclared.\n     *\n     * @param  name The name part.\n     *\n     * @returns The qualified name that corresponds to the expanded name, or\n     * ``undefined`` if it cannot be resolved.\n     */\n    NameResolver.prototype.unresolveName = function (uri, name) {\n        if (uri === \"\") {\n            return name;\n        }\n        // Search through the contexts\n        var prefixes;\n        for (var cIx = 0; (prefixes === undefined) &&\n            (cIx < this._contextStack.length); ++cIx) {\n            var ctx = this._contextStack[cIx];\n            prefixes = ctx.backwards[uri];\n        }\n        if (prefixes === undefined) {\n            return undefined;\n        }\n        var pre = prefixes[0];\n        return (pre !== \"\") ? pre + \":\" + name : name;\n    };\n    /**\n     * Returns a prefix that, in the current context, is mapped to the URI\n     * specified. Note that this function will return the first prefix that\n     * satisfies the requirement, starting from the innermost context.\n     *\n     * @param uri A URI for which to get a prefix.\n     *\n     * @returns A prefix that maps to this URI. Undefined if there is no prefix\n     * available.\n     */\n    NameResolver.prototype.prefixFromURI = function (uri) {\n        var prefixes;\n        for (var cIx = 0; (prefixes === undefined) &&\n            (cIx < this._contextStack.length); ++cIx) {\n            var ctx = this._contextStack[cIx];\n            prefixes = ctx.backwards[uri];\n        }\n        if (prefixes === undefined) {\n            return undefined;\n        }\n        return prefixes[0];\n    };\n    /**\n     * Gets a new Pattern id.\n     *\n     * @returns The new id.\n     */\n    NameResolver.prototype.__newID = function () {\n        return NameResolver.__id++;\n    };\n    /**\n     * The next id to associate to the next NameResolver object to be created.\n     * This is used so that [[NameResolver.hash]] can return unique values.\n     */\n    NameResolver.__id = 0; // tslint:disable-line: variable-name\n    return NameResolver;\n}());\nexports.NameResolver = NameResolver;\n//  LocalWords:  unprefixed nameResolver pre definePrefix Unresolves qname vm\n//  LocalWords:  redeclarations newID ename lang html NameResolver Mangalam uri\n//  LocalWords:  xmlns URI Dubeau resolveName xml MPL unresolving namespace\n\n//# sourceMappingURL=name_resolver.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/name_resolver.js\n// module id = 3\n// module chunks = 0 1","\"use strict\";\n/**\n * Class for XML Expanded Names.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Immutable objects modeling XML Expanded Names.\n */\nvar EName = (function () {\n    /**\n     * @param ns The namespace URI.\n     *\n     * @param name The local name of the entity.\n     */\n    function EName(ns, name) {\n        this.ns = ns;\n        this.name = name;\n    }\n    /**\n     * @returns A string representing the expanded name.\n     */\n    EName.prototype.toString = function () {\n        return \"{\" + this.ns + \"}\" + this.name;\n    };\n    /**\n     * Compares two expanded names.\n     *\n     * @param other The other object to compare this object with.\n     *\n     * @returns  ``true`` if this object equals the other.\n     */\n    EName.prototype.equal = function (other) {\n        return this.ns === other.ns && this.name === other.name;\n    };\n    return EName;\n}());\nexports.EName = EName;\n//  LocalWords:  MPL ns\n\n//# sourceMappingURL=ename.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/ename.js\n// module id = 4\n// module chunks = 0 1","\"use strict\";\n/**\n * Errors that can be raised during parsing of types.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tools_1 = require(\"../tools\");\n/**\n * Records an error due to an incorrect parameter (``<param>``) value. This is\n * an error in the **schema** used to validate a document. Note that these\n * errors are *returned* by salve's internal code. They are not *thrown*.\n */\nvar ParamError = (function () {\n    /**\n     *\n     * @param message The actual error description.\n     */\n    function ParamError(message) {\n        this.message = message;\n    }\n    ParamError.prototype.toString = function () {\n        return this.message;\n    };\n    return ParamError;\n}());\nexports.ParamError = ParamError;\n/**\n * Records an error due to an incorrect value (``<value>``).  This is an error\n * in the **schema** used to validate a document. Note that these errors are\n * *returned* by salve's internal code. They are not *thrown*.\n */\nvar ValueError = (function () {\n    /**\n     * @param message The actual error description.\n     */\n    function ValueError(message) {\n        this.message = message;\n    }\n    ValueError.prototype.toString = function () {\n        return this.message;\n    };\n    return ValueError;\n}());\nexports.ValueError = ValueError;\n/**\n * Records the failure of parsing a parameter (``<param>``) value. Whereas\n * [[ParamError]] records each individual issue with a parameter's parsing, this\n * object is used to throw a single failure that collects all the individual\n * issues that were encountered.\n */\nvar ParameterParsingError = (function (_super) {\n    __extends(ParameterParsingError, _super);\n    /**\n     *\n     * @param location The location of the ``<param>`` in the schema.\n     *\n     * @param errors The errors encountered.\n     */\n    function ParameterParsingError(location, errors) {\n        var _this = _super.call(this) || this;\n        _this.errors = errors;\n        // This is crap to work around the fact that Error is a terribly badly\n        // designed class or prototype or whatever. Unfortunately the stack trace is\n        // off...\n        var msg = location + \": \" + errors.map(function (x) { return x.toString(); }).join(\"\\n\");\n        var err = new Error(msg);\n        _this.name = \"ParameterParsingError\";\n        _this.stack = err.stack;\n        _this.message = err.message;\n        tools_1.fixPrototype(_this, ParameterParsingError);\n        return _this;\n    }\n    return ParameterParsingError;\n}(Error));\nexports.ParameterParsingError = ParameterParsingError;\n/**\n * Records the failure of parsing a value (``<value>``). Whereas [[ValueError]]\n * records each individual issue with a value's parsing, this object is used to\n * throw a single failure that collects all the individual issues that were\n * encountered.\n */\nvar ValueValidationError = (function (_super) {\n    __extends(ValueValidationError, _super);\n    /**\n     * @param errors The errors encountered.\n     */\n    function ValueValidationError(errors) {\n        var _this = _super.call(this) || this;\n        _this.errors = errors;\n        // This is crap to work around the fact that Error is a terribly badly\n        // designed class or prototype or whatever. Unfortunately the stack trace is\n        // off...\n        var msg = errors.map(function (x) { return x.toString(); }).join(\"\\n\");\n        var err = new Error(msg);\n        _this.name = \"ValueValidationError\";\n        _this.stack = err.stack;\n        _this.message = err.message;\n        tools_1.fixPrototype(_this, ValueValidationError);\n        return _this;\n    }\n    return ValueValidationError;\n}(Error));\nexports.ValueValidationError = ValueValidationError;\n//  LocalWords:  MPL ParamError ParameterParsingError ValueValidationError\n\n//# sourceMappingURL=errors.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/datatypes/errors.js\n// module id = 5\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_1 = require(\"./base\");\n/**\n * Pattern for ``<notAllowed/>``.\n */\nvar NotAllowed = (function (_super) {\n    __extends(NotAllowed, _super);\n    function NotAllowed() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NotAllowed;\n}(base_1.Pattern));\nexports.NotAllowed = NotAllowed;\n/**\n * Walker for [[NotAllowed]];\n */\nvar NotAllowedWalker = (function (_super) {\n    __extends(NotAllowedWalker, _super);\n    function NotAllowedWalker(elOrWalker, memo) {\n        var _this = this;\n        if (elOrWalker instanceof NotAllowedWalker) {\n            var walker = elOrWalker;\n            memo = base_1.isHashMap(memo); // Makes sure it is not undefined.\n            _this = _super.call(this, walker, memo) || this;\n        }\n        else {\n            var el = elOrWalker;\n            _this = _super.call(this, el) || this;\n            _this.possibleCached = new base_1.EventSet();\n        }\n        return _this;\n    }\n    NotAllowedWalker.prototype.possible = function () {\n        // Save some time by avoiding calling _possible\n        return new base_1.EventSet();\n    };\n    NotAllowedWalker.prototype._possible = function () {\n        // possibleCached is necessarily defined because of the constructor's\n        // logic.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.possibleCached;\n    };\n    NotAllowedWalker.prototype.fireEvent = function (ev) {\n        return undefined; // we never match!\n    };\n    return NotAllowedWalker;\n}(base_1.Walker));\nexports.NotAllowedWalker = NotAllowedWalker;\nbase_1.addWalker(NotAllowed, NotAllowedWalker);\n//  LocalWords:  RNG's MPL possibleCached\n\n//# sourceMappingURL=not_allowed.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/not_allowed.js\n// module id = 6\n// module chunks = 0 1","\"use strict\";\n/**\n * Common tools for salve.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @private\n */\nfunction copy(target, source) {\n    for (var i in source) {\n        target[i] = source[i];\n    }\n}\n/**\n * Modify ``target`` by copying the sources into it. This function is designed\n * to fit the internal needs of salve and is not meant as a general purpose\n * \"extend\" function like provided by jQuery or Lodash (for instance).\n *\n * @param target The target to copy into.\n *\n * @param sources The sources from which to copy. These sources are\n * processed in order.\n *\n * @returns The target, modified.\n */\nfunction extend(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {\n        var source = sources_1[_a];\n        copy(target, source);\n    }\n    return target;\n}\nexports.extend = extend;\n/**\n * This is required to work around a problem when extending built-in classes\n * like ``Error``. Some of the constructors for these classes return a value\n * from the constructor, which is then picked up by the constructors generated\n * by TypeScript (same with ES6 code transpiled through Babel), and this messes\n * up the inheritance chain.\n *\n * See https://github.com/Microsoft/TypeScript/issues/12123.\n */\nfunction fixPrototype(obj, parent) {\n    var oldProto = Object.getPrototypeOf !== undefined ?\n        Object.getPrototypeOf(obj) : obj.__proto__;\n    if (oldProto !== parent) {\n        if (Object.setPrototypeOf !== undefined) {\n            Object.setPrototypeOf(obj, parent.prototype);\n        }\n        else {\n            obj.__proto__ = parent.prototype;\n        }\n    }\n}\nexports.fixPrototype = fixPrototype;\n//  LocalWords:  MPL jQuery Lodash\n\n//# sourceMappingURL=tools.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/tools.js\n// module id = 7\n// module chunks = 0 1","\"use strict\";\n/**\n * Implementations of some simple collections. This module is meant for salve's\n * internal purposes only. It may be yanked at any time. Do not use in your own\n * code.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n * @private\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The HashBase class provides a base class for the collections in this module.\n */\nvar HashBase = (function () {\n    /**\n     * @param hashF A function which returns a uniquely identifying hash when\n     * called with an object that a ``HashBase`` instance uses.\n     *\n     * @param initial An initial value for the object being constructed.\n     */\n    function HashBase(hashF, initial) {\n        this.hashF = hashF;\n        /**\n         * The backing store that holds objects added to this collection.\n         */\n        this.backing = Object.create(null);\n        /**\n         * The cached size of the collection.\n         */\n        this._size = 0;\n        if (initial !== undefined) {\n            if (initial instanceof HashBase) {\n                var backing = this.backing;\n                var initialBacking = initial.backing;\n                var keys = Object.keys(initialBacking);\n                for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                    var key = keys_1[_i];\n                    backing[key] = initialBacking[key];\n                }\n                this._size = keys.length;\n            }\n            else if (initial instanceof Array) {\n                for (var _a = 0, initial_1 = initial; _a < initial_1.length; _a++) {\n                    var value = initial_1[_a];\n                    this.add(value);\n                }\n            }\n            else {\n                this.add(initial);\n            }\n        }\n    }\n    /**\n     * Unites this object with another object. This method modifies the object\n     * upon which it is called so as to make it a mathematical union of the two\n     * objects.\n     *\n     * @param s The object to unite with this one. Must be of the same class as\n     * this object.\n     *\n     * @throws {Error} If ``s`` is not of the same type as this object.\n     */\n    HashBase.prototype.union = function (s) {\n        if (s == null) {\n            return;\n        }\n        if (!(s instanceof this.constructor)) {\n            throw new Error(\"union invalid class object; my class \" + this.constructor.name + \" other class \" + s.constructor.name);\n        }\n        var backing = s.backing;\n        var keys = Object.keys(backing);\n        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n            var key = keys_2[_i];\n            this._store(key, backing[key]);\n        }\n    };\n    /**\n     * Applies a function on each value stored in the object.\n     *\n     * @param f A function which accepts one parameter. The function will be\n     * called on each value.\n     */\n    HashBase.prototype.forEach = function (f) {\n        var backing = this.backing;\n        var keys = Object.keys(backing);\n        for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n            var key = keys_3[_i];\n            f(backing[key]);\n        }\n    };\n    /**\n     * @returns The number of values stored.\n     */\n    HashBase.prototype.size = function () {\n        return this._size;\n    };\n    /**\n     * Selects a subset of values.\n     *\n     * @param f A function that selects values. It is called with each value. If\n     * the value happens to be an ``Array`` then the function is *applied* to this\n     * array. A return value which is truthy includes the value, otherwise the\n     * value is excluded.\n     *\n     * @returns An object of the same class as the object on which the method is\n     * called. This object contains only the value selected by the function.\n     */\n    HashBase.prototype.filter = function (f) {\n        var ret = new this.constructor();\n        if (ret.hashF === undefined) {\n            ret.hashF = this.hashF;\n        }\n        var backing = this.backing;\n        var keys = Object.keys(backing);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var key = keys_4[_i];\n            var data = backing[key];\n            var args = data instanceof Array ? data : [data];\n            if (f.apply(undefined, args)) {\n                ret._store(key, data);\n            }\n        }\n        return ret;\n    };\n    /**\n     * Tests whether a value is contained in the object on which this method is\n     * called.\n     *\n     * @param obj The value for which to test.\n     *\n     * @returns ``true`` if the value is present, ``false`` if not.\n     */\n    HashBase.prototype.has = function (obj) {\n        var hash = this.hashF(obj);\n        return this.backing[hash] !== undefined;\n    };\n    /**\n     * Converts the object on which this method is called to a string.\n     *\n     * @returns All the values, joined with \", \".\n     */\n    HashBase.prototype.toString = function () {\n        return this.toArray().join(\", \");\n    };\n    /**\n     * Converts the object on which this method is called to an array.\n     *\n     * @returns An array that corresponds to the object.\n     *\n     */\n    HashBase.prototype.toArray = function () {\n        var t = [];\n        var backing = this.backing;\n        var keys = Object.keys(backing);\n        for (var _i = 0, keys_5 = keys; _i < keys_5.length; _i++) {\n            var key = keys_5[_i];\n            t.push(backing[key]);\n        }\n        return t;\n    };\n    /**\n     * Record a hash and value pair into the backing store. Effectively associates\n     * the hash with the value. This method assumes but does not verify that the\n     * mapping from hash to value is unique. This method cannot be used to\n     * **change** such mapping.\n     *\n     * @param hash The hash with which to associate the value. Can be any type\n     * that can be used as an array index.\n     *\n     * @param val The value to associate with the hash.\n     *\n     * @throws {Error} If the hash is undefined or null.\n     */\n    HashBase.prototype._store = function (hash, val) {\n        if (hash == null) {\n            throw new Error(\"undefined or null hash\");\n        }\n        if (this.backing[hash] === undefined) {\n            this.backing[hash] = val;\n            this._size++;\n        }\n        // else noop\n    };\n    return HashBase;\n}());\nexports.HashBase = HashBase;\n/**\n * A set of objects. The objects are distinguished by a hash\n * function.\n */\nvar HashSet = (function (_super) {\n    __extends(HashSet, _super);\n    function HashSet() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Adds a value to the set.\n     *\n     * @param x The value to add. This value must be hashable by the hash function\n     * that was used to create the collection.\n     */\n    HashSet.prototype.add = function (x) {\n        this._store(this.hashF(x), x);\n    };\n    return HashSet;\n}(HashBase));\nexports.HashSet = HashSet;\n/**\n * A map of (key, value) pairs. The keys are distinguished by means of a hash\n * function.\n */\nvar HashMap = (function (_super) {\n    __extends(HashMap, _super);\n    function HashMap(hashF, initial) {\n        var _this = _super.call(this, hashF, initial) || this;\n        _this.hashF = hashF;\n        return _this;\n    }\n    // The arrays stored in the backing store are considered immutable.\n    /**\n     * Adds a (key, value) mapping to the map.\n     *\n     * @param key This must be a value hashable with the hash function that was\n     * used to create the collection.\n     *\n     * @param value The value to associate with the key.\n     */\n    HashMap.prototype.add = function (key, value) {\n        this._store(this.hashF(key), [key, value]);\n    };\n    HashMap.prototype.forEach = function (f) {\n        var backing = this.backing;\n        var keys = Object.keys(backing);\n        for (var _i = 0, keys_6 = keys; _i < keys_6.length; _i++) {\n            var key = keys_6[_i];\n            f(backing[key][0], backing[key][1]);\n        }\n    };\n    /**\n     * Checks whether an object is a key of the map, and returns its associated\n     * value if present.\n     *\n     * @param obj The object to check.\n     *\n     * @returns The value associated with the object if present. ``undefined`` if\n     * not.\n     */\n    HashMap.prototype.has = function (obj) {\n        var hash = this.hashF(obj);\n        var pair = this.backing[hash];\n        if (pair !== undefined) {\n            return pair[1];\n        }\n        return undefined;\n    };\n    /**\n     * Gets the keys present in this mapping.\n     */\n    HashMap.prototype.keys = function () {\n        return Object.keys(this.backing);\n    };\n    return HashMap;\n}(HashBase));\nexports.HashMap = HashMap;\n//  LocalWords:  truthy Mangalam Dubeau hashable HashMap HashSet noop HashBase\n//  LocalWords:  MPL\n\n//# sourceMappingURL=hashstructs.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/hashstructs.js\n// module id = 8\n// module chunks = 0 1","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Classes that model RNG patterns.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar ename_1 = require(\"./ename\");\nvar attribute_1 = require(\"./patterns/attribute\");\nvar base_1 = require(\"./patterns/base\");\nvar choice_1 = require(\"./patterns/choice\");\nvar data_1 = require(\"./patterns/data\");\nvar element_1 = require(\"./patterns/element\");\nvar empty_1 = require(\"./patterns/empty\");\nvar grammar_1 = require(\"./patterns/grammar\");\nvar group_1 = require(\"./patterns/group\");\nvar interleave_1 = require(\"./patterns/interleave\");\nvar list_1 = require(\"./patterns/list\");\nvar not_allowed_1 = require(\"./patterns/not_allowed\");\nvar one_or_more_1 = require(\"./patterns/one_or_more\");\nvar param_1 = require(\"./patterns/param\");\nvar text_1 = require(\"./patterns/text\");\nvar value_1 = require(\"./patterns/value\");\nvar namePatterns = require(\"./name_patterns\");\nvar base_2 = require(\"./patterns/base\");\nexports.eventsToTreeString = base_2.eventsToTreeString;\nexports.Event = base_2.Event;\nexports.EventSet = base_2.EventSet;\nexports.BasePattern = base_2.BasePattern;\nexports.Walker = base_2.Walker;\nvar grammar_2 = require(\"./patterns/grammar\");\nexports.Grammar = grammar_2.Grammar;\nexports.GrammarWalker = grammar_2.GrammarWalker;\nexports.RefError = grammar_2.RefError;\n//\n// Things used only during testing.\n//\nvar tret = {\n    GrammarWalker: grammar_1.GrammarWalker,\n    Text: text_1.Text,\n};\nfunction __test() {\n    return tret;\n}\nexports.__test = __test;\n// tslint:disable-next-line:variable-name\nexports.__protected = {\n    Empty: empty_1.Empty,\n    Data: data_1.Data,\n    List: list_1.List,\n    Param: param_1.Param,\n    Value: value_1.Value,\n    NotAllowed: not_allowed_1.NotAllowed,\n    Text: text_1.Text,\n    Ref: base_1.Ref,\n    OneOrMore: one_or_more_1.OneOrMore,\n    Choice: choice_1.Choice,\n    Group: group_1.Group,\n    Attribute: attribute_1.Attribute,\n    Element: element_1.Element,\n    Define: base_1.Define,\n    Grammar: grammar_1.Grammar,\n    EName: ename_1.EName,\n    Interleave: interleave_1.Interleave,\n    Name: namePatterns.Name,\n    NameChoice: namePatterns.NameChoice,\n    NsName: namePatterns.NsName,\n    AnyName: namePatterns.AnyName,\n};\n/*  tslint:enable */\n//  LocalWords:  EName NotAllowed oneOrMore RNG MPL Dubeau GrammarWalker rng\n//  LocalWords:  notAllowed Mangalam EventSet\n\n//# sourceMappingURL=patterns.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns.js\n// module id = 9\n// module chunks = 0 1","\"use strict\";\n/**\n * Classes that model datatypes used in RNG schemas.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar builtin_1 = require(\"./datatypes/builtin\");\nvar xmlschema_1 = require(\"./datatypes/xmlschema\");\n/**\n * The registry of types.\n */\nvar Registry = (function () {\n    function Registry() {\n        this.libraries = Object.create(null);\n    }\n    /**\n     * Adds a library to the registry.\n     *\n     * @param library The library to add to the registry.\n     *\n     * @throws {Error} If the URI is already registered.\n     */\n    Registry.prototype.add = function (library) {\n        var uri = library.uri;\n        if (uri in this.libraries) {\n            throw new Error(\"URI clash: \" + uri);\n        }\n        this.libraries[uri] = library;\n    };\n    /**\n     * Searches for a URI in the library.\n     *\n     * @param uri The URI to search for.\n     *\n     * @returns The library that corresponds to the URI or ``undefined`` if no\n     * such library exists.\n     */\n    Registry.prototype.find = function (uri) {\n        return this.libraries[uri];\n    };\n    /**\n     * Gets the library corresponding to a URI.\n     *\n     * @param uri The URI.\n     *\n     * @returns The library that corresponds to the URI.\n     *\n     * @throws {Error} If the library does not exist.\n     */\n    // tslint:disable-next-line: no-reserved-keywords\n    Registry.prototype.get = function (uri) {\n        var ret = this.find(uri);\n        if (ret === undefined) {\n            throw new Error(\"can't get library with URI: \" + uri);\n        }\n        return ret;\n    };\n    return Registry;\n}());\nexports.Registry = Registry;\nexports.registry = new Registry();\nexports.registry.add(builtin_1.builtin);\nexports.registry.add(xmlschema_1.xmlschema);\nvar errors_1 = require(\"./datatypes/errors\");\nexports.ParameterParsingError = errors_1.ParameterParsingError;\nexports.ValueValidationError = errors_1.ValueValidationError;\nexports.ValueError = errors_1.ValueError;\n//  LocalWords:  datatypes RNG MPL uri\n\n//# sourceMappingURL=datatypes.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/datatypes.js\n// module id = 10\n// module chunks = 0 1","\"use strict\";\n/**\n * Collection of constants that model the way XML refers to various\n * characters and groups of characters. This module is essentially private to\n * salve.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// The constants here are just representations in JavaScript of the character\n// classes that the XML standard uses. So we don't document them.  See the XML\n// standard and read salve's code to figure out what they are for.\n/* tslint:disable max-line-length */\nvar xmlBaseChar = \"A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF\\u0100-\\u0131\\u0134-\\u013E\\u0141-\\u0148\\u014A-\\u017E\\u0180-\\u01C3\\u01CD-\\u01F0\\u01F4-\\u01F5\\u01FA-\\u0217\\u0250-\\u02A8\\u02BB-\\u02C1\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D6\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2-\\u03F3\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E-\\u0481\\u0490-\\u04C4\\u04C7-\\u04C8\\u04CB-\\u04CC\\u04D0-\\u04EB\\u04EE-\\u04F5\\u04F8-\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0586\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0641-\\u064A\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D3\\u06D5\\u06E5-\\u06E6\\u0905-\\u0939\\u093D\\u0958-\\u0961\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AE0\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B36-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CDE\\u0CE0-\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D60-\\u0D61\\u0E01-\\u0E2E\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E45\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EAE\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0F40-\\u0F47\\u0F49-\\u0F69\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100\\u1102-\\u1103\\u1105-\\u1107\\u1109\\u110B-\\u110C\\u110E-\\u1112\\u113C\\u113E\\u1140\\u114C\\u114E\\u1150\\u1154-\\u1155\\u1159\\u115F-\\u1161\\u1163\\u1165\\u1167\\u1169\\u116D-\\u116E\\u1172-\\u1173\\u1175\\u119E\\u11A8\\u11AB\\u11AE-\\u11AF\\u11B7-\\u11B8\\u11BA\\u11BC-\\u11C2\\u11EB\\u11F0\\u11F9\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2126\\u212A-\\u212B\\u212E\\u2180-\\u2182\\u3041-\\u3094\\u30A1-\\u30FA\\u3105-\\u312C\\uAC00-\\uD7A3\";\nvar xmlIdeographic = \"\\u4E00-\\u9FA5\\u3007\\u3021-\\u3029\";\nexports.xmlLetter = xmlBaseChar + xmlIdeographic;\nvar xmlDigit = \"\\u0030-\\u0039\\u0660-\\u0669\\u06F0-\\u06F9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE7-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\";\nvar xmlCombiningChar = \"\\u0300-\\u0345\\u0360-\\u0361\\u0483-\\u0486\\u0591-\\u05A1\\u05A3-\\u05B9\\u05BB-\\u05BD\\u05BF\\u05C1-\\u05C2\\u05C4\\u064B-\\u0652\\u0670\\u06D6-\\u06DC\\u06DD-\\u06DF\\u06E0-\\u06E4\\u06E7-\\u06E8\\u06EA-\\u06ED\\u0901-\\u0903\\u093C\\u093E-\\u094C\\u094D\\u0951-\\u0954\\u0962-\\u0963\\u0981-\\u0983\\u09BC\\u09BE\\u09BF\\u09C0-\\u09C4\\u09C7-\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2-\\u09E3\\u0A02\\u0A3C\\u0A3E\\u0A3F\\u0A40-\\u0A42\\u0A47-\\u0A48\\u0A4B-\\u0A4D\\u0A70-\\u0A71\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B43\\u0B47-\\u0B48\\u0B4B-\\u0B4D\\u0B56-\\u0B57\\u0B82-\\u0B83\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C01-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55-\\u0C56\\u0C82-\\u0C83\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5-\\u0CD6\\u0D02-\\u0D03\\u0D3E-\\u0D43\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB-\\u0EBC\\u0EC8-\\u0ECD\\u0F18-\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86-\\u0F8B\\u0F90-\\u0F95\\u0F97\\u0F99-\\u0FAD\\u0FB1-\\u0FB7\\u0FB9\\u20D0-\\u20DC\\u20E1\\u302A-\\u302F\\u3099\\u309A\";\nvar xmlExtender = \"\\u00B7\\u02D0\\u02D1\\u0387\\u0640\\u0E46\\u0EC6\\u3005\\u3031-\\u3035\\u309D-\\u309E\\u30FC-\\u30FE\";\n// It is important to have the dash first to avoid issues with ranges in\n// regexps. Also, the following contain periods. However, they are doing to\n// appear inside square bracket in the regexps.\nexports.xmlNameChar = \"-\" + exports.xmlLetter + xmlDigit + \"._:\" + xmlCombiningChar + xmlExtender;\nvar xmlName = \"[\" + exports.xmlLetter + \"_:](?:[\" + exports.xmlNameChar + \"])*\";\nexports.xmlNameRe = new RegExp(\"^\" + xmlName + \"$\");\nexports.xmlNcname = \"[\" + exports.xmlLetter + \"_](?:[-\" + exports.xmlLetter + xmlDigit + \"._\" + xmlCombiningChar +\n    (xmlExtender + \"])*\");\nexports.xmlNcnameRe = new RegExp(\"^\" + exports.xmlNcname + \"$\");\n//  LocalWords:  MPL\n\n//# sourceMappingURL=xmlcharacters.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/datatypes/xmlcharacters.js\n// module id = 11\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = require(\"../errors\");\nvar namePatterns = require(\"../name_patterns\");\nvar name_resolver_1 = require(\"../name_resolver\");\nvar tools_1 = require(\"../tools\");\nvar base_1 = require(\"./base\");\n/**\n * This is an exception raised to indicate references to undefined entities in a\n * schema. If for instance element A has element B as its children but B is not\n * defined, then this exception would be raised.\n *\n * This exception is indicative of an internal error because by the time this\n * module loads a schema, the schema should have been simplified already and\n * simplification should have failed due to the unresolvable reference.\n *\n * This class used to be named ``ReferenceError`` in previous versions of salve\n * but this name clashes with the built-in ``ReferenceError`` that JavaScript\n * engines have built into their runtime. The clash did not make the code fail\n * but it had unfortunate side-effects.\n */\nvar RefError = (function (_super) {\n    __extends(RefError, _super);\n    /**\n     * @param references The set of references that could not be resolved.\n     */\n    function RefError(references) {\n        var _this = _super.call(this) || this;\n        _this.references = references;\n        tools_1.fixPrototype(_this, RefError);\n        return _this;\n    }\n    /**\n     * @returns string representation of the error.\n     */\n    RefError.prototype.toString = function () {\n        return (\"Cannot resolve the following references: \" + this.references.join(\", \"));\n    };\n    return RefError;\n}(Error));\nexports.RefError = RefError;\n/**\n * Grammar object. Users of this library normally do not create objects\n * of this class themselves but rely on [[\"validate\".constructTree]].\n */\nvar Grammar = (function (_super) {\n    __extends(Grammar, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param start The start pattern of this grammar.\n     *\n     * @param definitions An array which contain all definitions specified in this\n     * grammar.\n     *\n     * @throws {RefError} When any definition in the original\n     * schema refers to a schema entity which is not defined in the schema.\n     */\n    function Grammar(xmlPath, start, definitions) {\n        var _this = _super.call(this, xmlPath) || this;\n        _this.xmlPath = xmlPath;\n        _this.start = start;\n        _this.definitions = Object.create(null);\n        _this._namespaces = Object.create(null);\n        if (definitions !== undefined) {\n            definitions.forEach(function (x) {\n                _this.add(x);\n            });\n        }\n        var missing = _this._resolve(_this.definitions);\n        if (missing !== undefined) {\n            throw new RefError(missing);\n        }\n        _this._prepare(_this._namespaces);\n        return _this;\n    }\n    /**\n     * Adds a definition.\n     *\n     * @param d The definition to add.\n     */\n    Grammar.prototype.add = function (d) {\n        this.definitions[d.name] = d;\n        if (d.name === \"start\") {\n            this.start = d;\n        }\n    };\n    /**\n     * Populates a memo with a mapping of (element name, [list of patterns]).  In\n     * a Relax NG schema, the same element name may appear in multiple contexts,\n     * with multiple contents. For instance an element named ``name`` could\n     * require the sequence of elements ``firstName, lastName`` in a certain\n     * context and text in a different context. This method allows determining\n     * whether this happens or not within a pattern.\n     *\n     * @param memo The memo in which to store the information.\n     */\n    Grammar.prototype._gatherElementDefinitions = function (memo) {\n        // tslint:disable-next-line:forin\n        for (var d in this.definitions) {\n            this.definitions[d]._gatherElementDefinitions(memo);\n        }\n    };\n    Object.defineProperty(Grammar.prototype, \"elementDefinitions\", {\n        get: function () {\n            var ret = this._elementDefinitions;\n            if (ret !== undefined) {\n                return ret;\n            }\n            var newDef = this._elementDefinitions = Object.create(null);\n            this._gatherElementDefinitions(newDef);\n            return newDef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @returns ``true`` if the schema is wholly context independent. This means\n     * that each element in the schema can be validated purely on the basis of\n     * knowing its expanded name. ``false`` otherwise.\n     */\n    Grammar.prototype.whollyContextIndependent = function () {\n        var defs = this.elementDefinitions;\n        for (var v in defs) {\n            if (defs[v].length > 1) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @returns An array of all namespaces used in the schema.  The array may\n     * contain two special values: ``*`` indicates that there was an ``anyName``\n     * element in the schema and thus that it is probably possible to insert more\n     * than the namespaces listed in the array, ``::except`` indicates that an\n     * ``except`` element is affecting what namespaces are acceptable to the\n     * schema.\n     */\n    Grammar.prototype.getNamespaces = function () {\n        return Object.keys(this._namespaces);\n    };\n    /**\n     * This method must be called after resolution has been performed.\n     *\n     * This function now performs two tasks: a) it prepares the attributes\n     * (Definition and Element objects maintain a pattern which contains only\n     * attribute patterns, and nothing else), b) it gathers all the namespaces\n     * seen in the schema.\n     *\n     * @param namespaces An object whose keys are the namespaces seen in the\n     * schema. This method populates the object.\n     */\n    Grammar.prototype._prepare = function (namespaces) {\n        this.start._prepare(namespaces);\n        // tslint:disable-next-line:forin\n        for (var d in this.definitions) {\n            this.definitions[d]._prepare(namespaces);\n        }\n    };\n    Grammar.prototype._resolve = function (definitions) {\n        var all = [];\n        var ret;\n        // tslint:disable-next-line forin\n        for (var d in definitions) {\n            ret = definitions[d]._resolve(definitions);\n            if (ret !== undefined) {\n                all = all.concat(ret);\n            }\n        }\n        ret = this.start._resolve(definitions);\n        if (ret !== undefined) {\n            all = all.concat(ret);\n        }\n        if (all.length !== 0) {\n            return all;\n        }\n        return undefined;\n    };\n    /**\n     * Creates a new walker to walk this pattern.\n     *\n     * @returns A walker.\n     */\n    Grammar.prototype.newWalker = function () {\n        // tslint:disable-next-line:no-use-before-declare\n        return GrammarWalker.makeWalker(this);\n    };\n    return Grammar;\n}(base_1.BasePattern));\nexports.Grammar = Grammar;\n/**\n * Walker for [[Grammar]].\n */\nvar GrammarWalker = (function (_super) {\n    __extends(GrammarWalker, _super);\n    function GrammarWalker(elOrWalker, memo) {\n        var _this = this;\n        if (elOrWalker instanceof GrammarWalker) {\n            var walker = elOrWalker;\n            memo = base_1.isHashMap(memo); // Checks for undefined.\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.subwalker = walker.subwalker._clone(memo);\n            var misplacedElements = _this._misplacedElements = [];\n            for (var _i = 0, _a = walker._misplacedElements; _i < _a.length; _i++) {\n                var mpe = _a[_i];\n                misplacedElements.push(mpe instanceof base_1.Walker ?\n                    mpe._clone(memo) :\n                    mpe.concat([]));\n            }\n            _this._swallowAttributeValue = walker._swallowAttributeValue;\n            _this.suspendedWs = walker.suspendedWs;\n            _this.ignoreNextWs = walker.ignoreNextWs;\n            _this._prevEvWasText = walker._prevEvWasText;\n        }\n        else {\n            var el = elOrWalker;\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = new name_resolver_1.NameResolver();\n            _this._misplacedElements = [];\n            _this._swallowAttributeValue = false;\n            _this.ignoreNextWs = false;\n            _this._prevEvWasText = false;\n            _this.subwalker = el.start.newWalker(_this.nameResolver);\n        }\n        return _this;\n    }\n    GrammarWalker.makeWalker = function (el) {\n        return new GrammarWalker(el);\n    };\n    /**\n     * Resolves a name using the walker's own name resolver.\n     *\n     * @param name A qualified name.\n     *\n     * @param attribute Whether this qualified name refers to an attribute.\n     *\n     * @returns An expanded name, or undefined if the name cannot be resolved.\n     */\n    GrammarWalker.prototype.resolveName = function (name, attribute) {\n        return this.nameResolver.resolveName(name, attribute);\n    };\n    /**\n     * See [[\"name_resolver\".NameResolver.unresolveName]].\n     *\n     * @param uri The URI part of the expanded name.\n     *\n     * @param name The name part.\n     *\n     * @returns The qualified name that corresponds to the expanded name, or\n     * ``undefined`` if it cannot be resolved.\n     */\n    GrammarWalker.prototype.unresolveName = function (uri, name) {\n        return this.nameResolver.unresolveName(uri, name);\n    };\n    /**\n     * On a [[GrammarWalker]] this method cannot return ``undefined``. An\n     * undefined value would mean nothing matched, which is a validation error.\n     *\n     * @param ev The event to fire.\n     *\n     * @returns ``false`` if there is no error or an array errors.\n     *\n     * @throws {Error} When name resolving events (``enterContext``,\n     * ``leaveContext``, or ``definePrefix``) are passed while this walker was not\n     * instructed to create its own name resolver or when trying to process an\n     * event type unknown to salve.\n     */\n    // tslint:disable-next-line: max-func-body-length\n    GrammarWalker.prototype.fireEvent = function (ev) {\n        var wsErr = false;\n        function combineWsErrWith(x) {\n            if (wsErr === undefined) {\n                wsErr = [new errors_1.ValidationError(\"text not allowed here\")];\n            }\n            if (wsErr === false) {\n                return x;\n            }\n            if (x === false) {\n                return wsErr;\n            }\n            if (x === undefined) {\n                throw new Error(\"undefined x\");\n            }\n            return wsErr.concat(x);\n        }\n        if (ev.params[0] === \"enterContext\" ||\n            ev.params[0] === \"leaveContext\" ||\n            ev.params[0] === \"definePrefix\") {\n            switch (ev.params[0]) {\n                case \"enterContext\":\n                    this.nameResolver.enterContext();\n                    break;\n                case \"leaveContext\":\n                    this.nameResolver.leaveContext();\n                    break;\n                case \"definePrefix\":\n                    this.nameResolver.definePrefix(ev.params[1], ev.params[2]);\n                    break;\n                default:\n                    throw new Error(\"unexpected event: \" + ev.params[0]);\n            }\n            return false;\n        }\n        // Process whitespace nodes\n        if (ev.params[0] === \"text\" && ev.params[1].trim() === \"\") {\n            if (this.suspendedWs !== undefined) {\n                this.suspendedWs += ev.params[1];\n            }\n            else {\n                this.suspendedWs = ev.params[1];\n            }\n            return false;\n        }\n        // This is the walker we must fire all our events on.\n        var walker = (this._misplacedElements.length > 0 &&\n            this._misplacedElements[0] instanceof base_1.Walker) ?\n            // This happens if we ran into a misplaced element that we were\n            // able to infer.\n            this._misplacedElements[0] : this.subwalker;\n        var ignoreNextWsNow = this.ignoreNextWs;\n        this.ignoreNextWs = false;\n        switch (ev.params[0]) {\n            case \"enterStartTag\":\n                // Absorb the whitespace: poof, gone!\n                this.suspendedWs = undefined;\n                break;\n            case \"text\":\n                if (this._prevEvWasText) {\n                    throw new Error(\"fired two text events in a row: this is \" +\n                        \"disallowed by salve\");\n                }\n                if (ignoreNextWsNow) {\n                    this.suspendedWs = undefined;\n                    var trimmed = ev.params[1].replace(/^\\s+/, \"\");\n                    if (trimmed.length !== ev.params[1].length) {\n                        ev = new base_1.Event(\"text\", trimmed);\n                    }\n                }\n                else if (this.suspendedWs !== undefined && this.suspendedWs !== \"\") {\n                    wsErr = walker.fireEvent(new base_1.Event(\"text\", this.suspendedWs));\n                    this.suspendedWs = undefined;\n                }\n                break;\n            case \"endTag\":\n                this.ignoreNextWs = true;\n            /* falls through */\n            default:\n                // Process the whitespace that was suspended.\n                if (this.suspendedWs !== undefined && this.suspendedWs !== \"\" &&\n                    !ignoreNextWsNow) {\n                    wsErr = walker.fireEvent(new base_1.Event(\"text\", this.suspendedWs));\n                }\n                this.suspendedWs = undefined;\n        }\n        // We can update it here because we're done examining the value that was\n        // set from the previous call to fireEvent.\n        this._prevEvWasText = (ev.params[0] === \"text\");\n        if (this._misplacedElements.length > 0 &&\n            this._misplacedElements[0] instanceof Array) {\n            // We are in a misplaced element which is foreign to the schema (or\n            // which cannot be inferred unambiguously.\n            var mpe = this._misplacedElements[0];\n            switch (ev.params[0]) {\n                case \"enterStartTag\":\n                    mpe.unshift(ev.params.slice(1));\n                    break;\n                case \"endTag\":\n                    mpe.shift();\n                    break;\n                default:\n                    // We don't care\n                    break;\n            }\n            // We're done with this context.\n            if (mpe.length === 0) {\n                this._misplacedElements.shift();\n            }\n            return false;\n        }\n        // This would happen if the user puts an attribute on a tag that does not\n        // allow one. Instead of generating errors for both the attribute name\n        // and value, we generate an error for the name and ignore the value.\n        if (this._swallowAttributeValue) {\n            // Swallow only one event.\n            this._swallowAttributeValue = false;\n            if (ev.params[0] === \"attributeValue\") {\n                return false;\n            }\n            return [new errors_1.ValidationError(\"attribute value required\")];\n        }\n        var ret = walker.fireEvent(ev);\n        if (ret === undefined) {\n            switch (ev.params[0]) {\n                case \"enterStartTag\":\n                    var name = new namePatterns.Name(\"\", ev.params[1], ev.params[2]);\n                    ret = [new errors_1.ElementNameError(\"tag not allowed here\", name)];\n                    // Try to infer what element is meant by this errant tag. If we can't\n                    // find a candidate, then fall back to a dumb mode.\n                    var candidates = this.el.elementDefinitions[name.toString()];\n                    if (candidates !== undefined && candidates.length === 1) {\n                        var newWalker = candidates[0].newWalker(this.nameResolver);\n                        this._misplacedElements.unshift(newWalker);\n                        if (newWalker.fireEvent(ev) !== false) {\n                            throw new Error(\"internal error: the inferred element \" +\n                                \"does not accept its initial event\");\n                        }\n                    }\n                    else {\n                        // Dumb mode...\n                        this._misplacedElements.unshift([ev.params.slice(1)]);\n                    }\n                    break;\n                case \"endTag\":\n                    ret = [new errors_1.ElementNameError(\"unexpected end tag\", new namePatterns.Name(\"\", ev.params[1], ev.params[2]))];\n                    break;\n                case \"attributeName\":\n                    ret = [new errors_1.AttributeNameError(\"attribute not allowed here\", new namePatterns.Name(\"\", ev.params[1], ev.params[2]))];\n                    this._swallowAttributeValue = true;\n                    break;\n                case \"attributeValue\":\n                    ret = [new errors_1.ValidationError(\"unexpected attributeValue event; it is likely \" +\n                            \"that fireEvent is incorrectly called\")];\n                    break;\n                case \"text\":\n                    ret = [new errors_1.ValidationError(\"text not allowed here\")];\n                    break;\n                case \"leaveStartTag\":\n                // If the _misplacedElements stack did not exist then we would get here\n                // if a file being validated contains a tag which is not allowed. An\n                // ElementNameError will already have been issued. So rather than\n                // violate our contract (which says no undefined value may be returned)\n                // or require that callers do something special with 'undefined' as a\n                // return value, just treat this event as a non-error.\n                //\n                // But the stack exists, so we cannot get here. If we do end up here,\n                // then there is an internal error somewhere.\n                /* falls through */\n                default:\n                    throw new Error(\"unexpected event type in GrammarWalker's fireEvent: \" + ev.params[0].toString());\n            }\n        }\n        // Check whether the context should end\n        if (this._misplacedElements.length > 0 &&\n            this._misplacedElements[0] instanceof base_1.Walker) {\n            walker = this._misplacedElements[0];\n            if (walker.canEnd()) {\n                this._misplacedElements.shift();\n                var endRet = walker.end();\n                if (endRet) {\n                    ret = ret ? ret.concat(endRet) : endRet;\n                }\n            }\n        }\n        return combineWsErrWith(ret);\n    };\n    GrammarWalker.prototype.possible = function () {\n        if (this._misplacedElements.length !== 0) {\n            var mpe = this._misplacedElements[0];\n            // Return an empty set if the tags are unknown to us.\n            return mpe instanceof base_1.Walker ? mpe.possible() : new base_1.EventSet();\n        }\n        // There's no point in calling this._possible.\n        return this.subwalker.possible();\n    };\n    GrammarWalker.prototype._suppressAttributes = function () {\n        throw new Error(\"_suppressAttributes cannot be called on a GrammarWalker\");\n    };\n    return GrammarWalker;\n}(base_1.SingleSubwalker));\nexports.GrammarWalker = GrammarWalker;\n// Nope, we're using a custom function.\n// addWalker(Grammar, GrammarWalker);\n//  LocalWords:  RNG's MPL unresolvable runtime RNG NG firstName enterContext\n//  LocalWords:  leaveContext definePrefix whitespace enterStartTag endTag\n//  LocalWords:  fireEvent attributeValue attributeName leaveStartTag addWalker\n//  LocalWords:  misplacedElements ElementNameError GrammarWalker's\n//  LocalWords:  suppressAttributes GrammarWalker\n\n//# sourceMappingURL=grammar.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/grammar.js\n// module id = 12\n// module chunks = 0 1","\"use strict\";\n/**\n * Naive set implementation.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n * @private\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This is a naive implementation of sets. It stores all elements in an\n * array. All array manipulations are done by searching through the array from\n * start to hit. So when adding a new element to the ``NaiveSet`` for instance,\n * the add method will scan the whole array, find the element is not there and\n * then add the element at the end of the array. As naive as this implementation\n * is, it has been shown to be faster than [[\"hashstructs\".HashSet]] when used\n * in the context of this library.\n *\n * Note that ``NaiveSet`` cannot hold undefined values.\n */\n// tslint:disable: no-any no-reserved-keywords\nvar NaiveSet = (function () {\n    /**\n     * @param initial The value to initialize the set with. If a [[NaiveSet]],\n     * then the new ``NaiveSet`` will be a clone of the parameter. If an\n     * ``Array``, then the new ``NaiveSet`` will be initialized with the\n     * ``Array``. If something else, then the new ``NaiveSet`` will contain\n     * whatever value was passed.  The backing array that hold the values\n     * contained in the set.\n     */\n    function NaiveSet(initial) {\n        if (initial != null) {\n            if (initial instanceof NaiveSet) {\n                this.b = initial.b.concat([]);\n            }\n            else if (initial instanceof Array) {\n                this.b = [];\n                for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n                    var item = initial_1[_i];\n                    this.add(item);\n                }\n            }\n            else {\n                this.b = [initial];\n            }\n        }\n        else {\n            this.b = [];\n        }\n    }\n    /**\n     * Adds a value to the set.\n     *\n     * @param value The value to add.\n     */\n    NaiveSet.prototype.add = function (value) {\n        var t = this.b.indexOf(value);\n        if (t < 0) {\n            this.b.push(value);\n        }\n    };\n    /**\n     * Destructively adds the elements of another set to this set.\n     *\n     * @param s The set to add.\n     * @throws {Error} If ``s`` is not a ``NaiveSet`` object\n     */\n    NaiveSet.prototype.union = function (s) {\n        if (s == null) {\n            return;\n        }\n        if (!(s instanceof NaiveSet)) {\n            throw new Error(\"union with non-NaiveSet\");\n        }\n        var len = s.b.length;\n        for (var i = 0; i < len; ++i) {\n            this.add(s.b[i]);\n        }\n    };\n    /**\n     * Selects a subset of values.\n     *\n     * @param f A function that selects values.\n     *\n     * @returns An object of the same class as the object on which the method is\n     * called. This object contains only the value selected by the function.\n     */\n    NaiveSet.prototype.filter = function (f) {\n        var _this = this;\n        var ret = new this.constructor();\n        // The fat arrow is used to prevent a caller from accessing ``this.b``\n        // through the 3rd parameter that would be passed to ``f``.\n        ret.b = this.b.filter(function (value, index) { return f(value, index, _this); });\n        return ret;\n    };\n    /**\n     * This method works like Array.map but with a provision for eliminating\n     * elements from the resulting [[NaiveSet]].\n     *\n     * @param f This parameter plays the same role as for ``Array``'s ``map``\n     * method.  However, when it returns an undefined value, this return value is\n     * not added to the ``NaiveSet`` that will be returned.\n     *\n     * @returns The new set. This set is of the same class as the original set.\n     */\n    NaiveSet.prototype.map = function (f) {\n        var ret = new this.constructor();\n        for (var i = 0; i < this.b.length; ++i) {\n            var value = this.b[i];\n            var result = f(value, i, this);\n            // Undefined is not added.\n            if (result !== undefined) {\n                ret.add(result);\n            }\n        }\n        return ret;\n    };\n    /**\n     * Applies a function on each value stored in the set.\n     *\n     * @param f A function which accepts one parameter. The function will be\n     * called on each value.\n     */\n    NaiveSet.prototype.forEach = function (f) {\n        var _this = this;\n        this.b.forEach(function (value, index) {\n            f(value, index, _this);\n        });\n    };\n    /**\n     * Converts the set to a string.\n     *\n     * @returns All the values, joined with \", \".\n     */\n    NaiveSet.prototype.toString = function () {\n        return this.b.join(\", \");\n    };\n    /**\n     * @returns The number of values stored.\n     */\n    NaiveSet.prototype.size = function () {\n        return this.b.length;\n    };\n    /**\n     * Determines whether or not this set has the parameter passed.\n     *\n     * @param obj The object which we want to look for.\n     *\n     * @returns True if the object is present, false if not.\n     */\n    NaiveSet.prototype.has = function (obj) {\n        return this.b.indexOf(obj) >= 0;\n    };\n    /**\n     * Converts the object on which this method is called to an array.\n     *\n     * @returns An array that corresponds to the object.\n     */\n    NaiveSet.prototype.toArray = function () {\n        return this.b.slice();\n    };\n    return NaiveSet;\n}());\nexports.NaiveSet = NaiveSet;\n//  LocalWords:  param NaiveSet Mangalam MPL Dubeau HashSet hashstructs\n\n//# sourceMappingURL=set.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/set.js\n// module id = 13\n// module chunks = 0 1","\"use strict\";\n/**\n * This module contains data and utilities to work with the schema format that\n * salve uses natively.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar patterns = require(\"./patterns\");\nvar tools_1 = require(\"./tools\");\nvar pro = patterns.__protected;\n//\n// MODIFICATIONS TO THIS TABLE MUST BE REFLECTED IN nameToConstructor\n//\nvar codeToConstructor = [\n    Array,\n    pro.Empty,\n    pro.Data,\n    pro.List,\n    pro.Param,\n    pro.Value,\n    pro.NotAllowed,\n    pro.Text,\n    pro.Ref,\n    pro.OneOrMore,\n    pro.Choice,\n    pro.Group,\n    pro.Attribute,\n    pro.Element,\n    pro.Define,\n    pro.Grammar,\n    pro.EName,\n    pro.Interleave,\n    pro.Name,\n    pro.NameChoice,\n    pro.NsName,\n    pro.AnyName,\n];\n//\n// MODIFICATIONS TO THIS TABLE MUST BE REFLECTED IN codeToConstructor\n//\nvar nameToConstructor = {\n    // Array = 0 is hard-coded elsewhere in the conversion code so don't change\n    // it.\n    0: Array,\n    Empty: pro.Empty,\n    1: pro.Empty,\n    Data: pro.Data,\n    2: pro.Data,\n    List: pro.List,\n    3: pro.List,\n    Param: pro.Param,\n    4: pro.Param,\n    Value: pro.Value,\n    5: pro.Value,\n    NotAllowed: pro.NotAllowed,\n    6: pro.NotAllowed,\n    Text: pro.Text,\n    7: pro.Text,\n    Ref: pro.Ref,\n    8: pro.Ref,\n    OneOrMore: pro.OneOrMore,\n    9: pro.OneOrMore,\n    Choice: pro.Choice,\n    10: pro.Choice,\n    Group: pro.Group,\n    11: pro.Group,\n    Attribute: pro.Attribute,\n    12: pro.Attribute,\n    Element: pro.Element,\n    13: pro.Element,\n    Define: pro.Define,\n    14: pro.Define,\n    Grammar: pro.Grammar,\n    15: pro.Grammar,\n    EName: pro.EName,\n    16: pro.EName,\n    Interleave: pro.Interleave,\n    17: pro.Interleave,\n    Name: pro.Name,\n    18: pro.Name,\n    NameChoice: pro.NameChoice,\n    19: pro.NameChoice,\n    NsName: pro.NsName,\n    20: pro.NsName,\n    AnyName: pro.AnyName,\n    21: pro.AnyName,\n};\n//\n// MODIFICATIONS TO THESE VARIABLES MUST BE REFLECTED IN rng-to-js.xsl\n//\n// This is a bit field\nvar OPTION_NO_PATHS = 1;\n// var OPTION_WHATEVER = 2;\n// var OPTION_WHATEVER_PLUS_1 = 4;\n// etc...\nvar OldFormatError = (function (_super) {\n    __extends(OldFormatError, _super);\n    function OldFormatError() {\n        var _this = _super.call(this, \"your schema file must be recreated with a newer \" +\n            \"version of salve-convert\") || this;\n        tools_1.fixPrototype(_this, OldFormatError);\n        return _this;\n    }\n    return OldFormatError;\n}(Error));\n/**\n * A class for walking the JSON object representing a schema.\n */\nvar V2JSONWalker = (function () {\n    /**\n     *\n     * @param options The options object from the file that contains the\n     * schema.\n     */\n    function V2JSONWalker(options) {\n        this.options = options;\n    }\n    /**\n     * Walks a V2 representation of a JavaScript object.\n     *\n     * @param array The array representing the object.\n     *\n     * @throws {Error} If the object is malformed.\n     *\n     * @returns The return value of [[V2JSONWalker._processObject]].\n     */\n    V2JSONWalker.prototype.walkObject = function (array) {\n        var kind = array[0];\n        var ctor = codeToConstructor[kind];\n        if (ctor === undefined) {\n            if (array.length < 1) {\n                throw new Error(\"array too small to contain object\");\n            }\n            throw new Error(\"undefined type: \" + kind);\n        }\n        if (ctor === Array) {\n            throw new Error(\"trying to build array with _constructObjectV2\");\n        }\n        var addPath = \n        // tslint:disable-next-line:no-bitwise\n        ((this.options & OPTION_NO_PATHS) !== 0) && ctor !== pro.EName;\n        var args;\n        if (array.length > 1) {\n            args = array.slice(1);\n            if (addPath) {\n                args.unshift(0, \"\");\n            }\n            else {\n                args.unshift(0);\n            }\n            this._transformArray(args);\n        }\n        else if (addPath) {\n            args = [\"\"];\n        }\n        else {\n            args = [];\n        }\n        return this._processObject(ctor, args);\n    };\n    /**\n     * Processes an object. Derived classes will want to override this method to\n     * perform their work.\n     *\n     * @param ctor The object's constructor.\n     *\n     * @param args The arguments that should be passed to the constructor.\n     *\n     * @returns If the ``V2JSONWalker`` instance is meant to convert the JSON\n     * data, then this method should return an Object. If the ``V2JSONWalker``\n     * instance is meant to check the JSON data, then it should return\n     * ``undefined``.\n     */\n    V2JSONWalker.prototype._processObject = function (ctor, args) {\n        return undefined; // Do nothing\n    };\n    V2JSONWalker.prototype._transformArray = function (arr) {\n        if (arr[0] !== 0) {\n            throw new Error(\"array type not 0, but \" + arr[0] + \" for array \" + arr);\n        }\n        arr.splice(0, 1);\n        var limit = arr.length;\n        for (var elIx = 0; elIx < limit; elIx++) {\n            var el = arr[elIx];\n            if (el instanceof Array) {\n                if (el[0] !== 0) {\n                    arr[elIx] = this.walkObject(el);\n                }\n                else {\n                    this._transformArray(el);\n                }\n            }\n        }\n    };\n    return V2JSONWalker;\n}());\nexports.V2JSONWalker = V2JSONWalker;\n/**\n * A JSON walker that constructs a pattern tree as it walks the JSON object.\n *\n * @private\n */\nvar V2Constructor = (function (_super) {\n    __extends(V2Constructor, _super);\n    function V2Constructor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    V2Constructor.prototype._processObject = function (ctor, args) {\n        if (ctor === pro.Data && args.length >= 4) {\n            // Parameters are represented as an array of strings in the file.\n            // Transform this array of strings into an array of objects.\n            var params = args[3];\n            if (params.length % 2 !== 0) {\n                throw new Error(\"parameter array length not a multiple of 2\");\n            }\n            // tslint:disable-next-line: prefer-array-literal\n            var newParams = new Array(params.length / 2);\n            var limit = params.length;\n            for (var i = 0; i < limit; i += 2) {\n                newParams[i / 2] = { name: params[i], value: params[i + 1] };\n            }\n            args[3] = newParams;\n        }\n        else if (ctor === pro.OneOrMore) {\n            //\n            // In the file we have two arguments:\n            //\n            // * the XML path.\n            // * An array of length 1 that contains the one subpattern.\n            //\n            // Here we ditch the array and replace it with its lone subpattern.\n            //\n            if (args[1].length !== 1) {\n                throw new Error(\"OneOrMore with an array of patterns that \" +\n                    \"contains other than 1 pattern\");\n            }\n            args = [args[0], args[1][0]];\n        }\n        else if (ctor === pro.Attribute ||\n            ctor === pro.Element ||\n            ctor === pro.Define) {\n            // Same thing as above, but for these elements the array of patterns is at\n            // index 2 rather than index 1.\n            if (args[2].length !== 1) {\n                throw new Error(\"PatternOnePattern with an array of patterns that \" +\n                    \"contains other than 1 pattern\");\n            }\n            args = [args[0], args[1], args[2][0]];\n        }\n        else if (ctor === pro.Choice ||\n            ctor === pro.Group ||\n            ctor === pro.Interleave) {\n            if (args[1].length !== 2) {\n                throw new Error(\"PatternTwoPatterns with an array of patterns that \" +\n                    \"contains other than 2 pattern\");\n            }\n            args = [args[0], args[1][0], args[1][1]];\n        }\n        var newObj = Object.create(ctor.prototype);\n        var ctorRet = ctor.apply(newObj, args);\n        // Some constructors return a value; make sure to use it!\n        return ctorRet !== undefined ? ctorRet : newObj;\n    };\n    return V2Constructor;\n}(V2JSONWalker));\n/**\n * Constructs a tree of patterns from the data structure produced by running\n * ``salve-convert`` on an RNG file.\n *\n * @param code The JSON representation (a string) or the deserialized JSON. **If\n * you pass an object, it will be mutated while producing the result.** So you\n * cannot pass the same object twice to this function. Note that if you are\n * calling ``constructTree`` on the same input repeatedly, you are probably\n * \"doing it wrong\". You should be caching the results rather than building\n * multiple identical trees.\n *\n * @throws {Error} When the version of the data is not supported.\n *\n * @returns The tree.\n */\nfunction constructTree(code) {\n    var parsed = (typeof code === \"string\" ? JSON.parse(code) : code);\n    if (typeof parsed === \"object\" && parsed.v === undefined) {\n        throw new OldFormatError(); // version 0\n    }\n    var version = parsed.v, options = parsed.o, data = parsed.d;\n    if (version === 3) {\n        return new V2Constructor(options).walkObject(data);\n    }\n    throw new Error(\"unknown version: \" + version);\n}\nexports.constructTree = constructTree;\n//\n// Exports which are meant for other modules internal to salve.\n//\n// DO NOT USE THIS OUTSIDE SALVE! THIS EXPORT MAY CHANGE AT ANY TIME!\n// YOU'VE BEEN WARNED!\n//\n// tslint:disable-next-line:variable-name\nexports.__protected = {\n    V2JSONWalker: V2JSONWalker,\n    nameToConstructor: nameToConstructor,\n    OPTION_NO_PATHS: OPTION_NO_PATHS,\n};\n//  LocalWords:  deserialized PatternTwoPatterns PatternOnePattern OneOrMore js\n//  LocalWords:  codeToConstructor nameToConstructor RNG subpattern JSON xsl\n//  LocalWords:  rng MPL\n\n//# sourceMappingURL=formats.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/formats.js\n// module id = 14\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Implementation of the builtin Relax NG datatype library.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = require(\"./errors\");\n/**\n * Strips leading and trailing space. Normalize all internal spaces to a single\n * space.\n *\n * @private\n *\n * @param value The value whose space we want to normalize.\n *\n * @returns The normalized value.\n */\nfunction normalizeSpace(value) {\n    return value.trim().replace(/\\s{2,}/g, \" \");\n}\n//\n// TypeScript does not automatically treat unimplemented interface bits as\n// abstract. :-(\n//\n// See https://github.com/Microsoft/TypeScript/issues/4670\n//\nvar Base = (function () {\n    function Base() {\n    }\n    Base.prototype.parseParams = function (location, params) {\n        if (params !== undefined && params.length > 0) {\n            throw new errors_1.ParameterParsingError(location, [new errors_1.ParamError(\"this type does not accept parameters\")]);\n        }\n    };\n    Base.prototype.parseValue = function (value) {\n        var errors = this.disallows(value);\n        if (errors instanceof Array && errors.length !== 0) {\n            throw new errors_1.ValueValidationError(errors);\n        }\n        return { value: value };\n    };\n    return Base;\n}());\nvar StringT = (function (_super) {\n    __extends(StringT, _super);\n    function StringT() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.regexp = /.*/;\n        _this.needsContext = false;\n        return _this;\n    }\n    StringT.prototype.equal = function (value, schemaValue) {\n        if (schemaValue.value === undefined) {\n            throw Error(\"it looks like you are trying to use an unparsed value\");\n        }\n        return value === schemaValue.value;\n    };\n    StringT.prototype.disallows = function (value) {\n        return false;\n    };\n    return StringT;\n}(Base));\nvar stringT = new StringT();\nvar Token = (function (_super) {\n    __extends(Token, _super);\n    function Token() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"token\";\n        _this.needsContext = false;\n        _this.regexp = /.*/;\n        return _this;\n    }\n    Token.prototype.equal = function (value, schemaValue) {\n        if (schemaValue.value === undefined) {\n            throw Error(\"it looks like you are trying to use an unparsed value\");\n        }\n        return normalizeSpace(value) === normalizeSpace(schemaValue.value);\n    };\n    Token.prototype.disallows = function (value) {\n        // Yep, token allows anything, just like string.\n        return false;\n    };\n    return Token;\n}(Base));\nvar token = new Token();\n/**\n * The builtin datatype library.\n */\nexports.builtin = {\n    uri: \"\",\n    types: {\n        string: stringT,\n        token: token,\n    },\n};\n//  LocalWords:  NG MPL unparsed\n\n//# sourceMappingURL=builtin.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/datatypes/builtin.js\n// module id = 15\n// module chunks = 0 1","/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,8],$V1=[1,10],$V2=[1,13],$V3=[1,19],$V4=[1,20],$V5=[1,14],$V6=[1,15],$V7=[1,16],$V8=[1,17],$V9=[5,23],$Va=[5,8,20,22,23,26,30,31,42,43,44,45],$Vb=[5,8,12,13,14,15,20,22,23,26,30,31,42,43,44,45],$Vc=[5,8,12,13,14,15,20,22,23,26,29,30,31,36,38,40,41,42,43,44,45],$Vd=[1,37],$Ve=[1,39],$Vf=[1,40],$Vg=[38,40,41,42,43,44,45],$Vh=[29,36,38,40,41,42,43,44,45];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"input\":4,\"EOF\":5,\"regexp\":6,\"branch\":7,\"|\":8,\"piece\":9,\"atom\":10,\"quantifier\":11,\"?\":12,\"*\":13,\"+\":14,\"{\":15,\"quantity\":16,\"}\":17,\"NUMBER\":18,\",\":19,\"CHAR\":20,\"charClass\":21,\"(\":22,\")\":23,\"charClassEsc\":24,\"charClassExpr\":25,\"WILDCARDESC\":26,\"charClassExprStart\":27,\"charGroup\":28,\"]\":29,\"[\":30,\"[^\":31,\"posCharGroups\":32,\"charClassSub\":33,\"posCharGroup\":34,\"charRange\":35,\"CLASSSUBTRACTION\":36,\"seRange\":37,\"-\":38,\"charOrEsc\":39,\"XMLCHAR\":40,\"SingleCharEsc\":41,\"SINGLECHARESC\":42,\"MULTICHARESC\":43,\"CATESC\":44,\"COMPLESC\":45,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",8:\"|\",12:\"?\",13:\"*\",14:\"+\",15:\"{\",17:\"}\",18:\"NUMBER\",19:\",\",20:\"CHAR\",22:\"(\",23:\")\",26:\"WILDCARDESC\",29:\"]\",30:\"[\",31:\"[^\",36:\"CLASSSUBTRACTION\",38:\"-\",40:\"XMLCHAR\",41:\"SingleCharEsc\",42:\"SINGLECHARESC\",43:\"MULTICHARESC\",44:\"CATESC\",45:\"COMPLESC\"},\nproductions_: [0,[3,1],[4,1],[4,2],[6,1],[6,3],[7,1],[7,2],[9,1],[9,2],[11,1],[11,1],[11,1],[11,3],[16,1],[16,3],[16,2],[10,1],[10,1],[10,3],[21,1],[21,1],[21,1],[25,3],[27,1],[27,1],[28,1],[28,1],[32,1],[32,2],[34,1],[34,1],[33,3],[35,1],[35,1],[37,3],[37,1],[39,1],[39,1],[24,1],[24,1],[24,1],[24,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */, outputType) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n      // Overwrite the parseError method with our own. NOTE: Our own\n      // method does not allow recovering from recoverable parsing\n      // errors.\n      this.parseError = parseError;\n      outputType = outputType || \"re\";\n      switch(outputType) {\n      case \"string\":\n        return $$[$0];\n      case \"re\":\n        var constructor = (needsXRegExpRe.test($$[$0]) ? XRegExp : RegExp);\n        return new constructor($$[$0]);\n      default:\n        throw new Error(\"unsupported output type: \" + outputType);\n      }\n    \nbreak;\ncase 2:\nthis.$ = '^$';\nbreak;\ncase 3:\nthis.$ = '^' + $$[$0-1] + '$';\nbreak;\ncase 5: case 13: case 35:\nthis.$ = $$[$0-2].concat($$[$0-1], $$[$0]);\nbreak;\ncase 7: case 9: case 29:\nthis.$ = $$[$0-1] + $$[$0];\nbreak;\ncase 15:\nthis.$ = $$[$0-2].concat(',', $$[$0]);\nbreak;\ncase 16:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 19:\nthis.$ = '(?:' + $$[$0-1] + $$[$0];\nbreak;\ncase 23:\n\n      var state = groupState.shift();\n      var capturedMultiChar = state.capturedMultiChar;\n\n      var subtraction = state.subtraction ?\n            (\"(?!\" +  state.subtraction + \")\") : \"\";\n      if (capturedMultiChar.length !== 0) {\n        var out = [\"(?:\", subtraction];\n        if (state.negative) {\n          out.push(\"(?=[\");\n          for (var i = 0; i < capturedMultiChar.length; ++i) {\n            out.push(multiCharEscapesInGroup[capturedMultiChar[i]].slice(1));\n          }\n          out.push(\"])\");\n        }\n        else {\n          for (var i = 0; i < capturedMultiChar.length; ++i) {\n            out.push(\"[\", multiCharEscapesInGroup[capturedMultiChar[i]], \"]|\");\n          }\n        }\n        out.push($$[$0-2], $$[$0-1], $$[$0], \")\");\n        this.$ = out.join(\"\");\n      }\n      else {\n        this.$ = (subtraction !== \"\") ?\n          \"(?:\" + subtraction + $$[$0-2].concat($$[$0-1], $$[$0]) + \")\":\n          $$[$0-2].concat($$[$0-1], $$[$0]);\n      }\n    \nbreak;\ncase 24:\n\n      unshiftGroupState(false);\n      this.$ = $$[$0];\n    \nbreak;\ncase 25:\n\n      unshiftGroupState(true);\n      this.$ = $$[$0];\n    \nbreak;\ncase 32:\n\n      this.$ = $$[$0-2];\n      groupState[0].subtraction = $$[$0];\n    \nbreak;\ncase 40:\n\n      if (groupState.length) {\n        var repl = multiCharEscapesInGroup[$$[$0]]\n        if (repl.charAt(0) === \"^\") {\n          groupState[0].capturedMultiChar.push($$[$0]);\n          this.$ = \"\";\n        }\n        else {\n          this.$ = repl;\n        }\n      }\n      else {\n        this.$ = multiCharEscapes[$$[$0]]\n      }\n    \nbreak;\n}\n},\ntable: [{3:1,4:2,5:[1,3],6:4,7:5,9:6,10:7,20:$V0,21:9,22:$V1,24:11,25:12,26:$V2,27:18,30:$V3,31:$V4,42:$V5,43:$V6,44:$V7,45:$V8},{1:[3]},{1:[2,1]},{1:[2,2]},{5:[1,21]},o($V9,[2,4],{10:7,21:9,24:11,25:12,27:18,9:23,8:[1,22],20:$V0,22:$V1,26:$V2,30:$V3,31:$V4,42:$V5,43:$V6,44:$V7,45:$V8}),o($Va,[2,6]),o($Va,[2,8],{11:24,12:[1,25],13:[1,26],14:[1,27],15:[1,28]}),o($Vb,[2,17]),o($Vb,[2,18]),{6:29,7:5,9:6,10:7,20:$V0,21:9,22:$V1,24:11,25:12,26:$V2,27:18,30:$V3,31:$V4,42:$V5,43:$V6,44:$V7,45:$V8},o($Vb,[2,20]),o($Vb,[2,21]),o($Vb,[2,22]),o($Vc,[2,39]),o($Vc,[2,40]),o($Vc,[2,41]),o($Vc,[2,42]),{24:34,28:30,32:31,33:32,34:33,35:35,37:36,38:$Vd,39:38,40:$Ve,41:$Vf,42:$V5,43:$V6,44:$V7,45:$V8},o($Vg,[2,24]),o($Vg,[2,25]),{1:[2,3]},{6:41,7:5,9:6,10:7,20:$V0,21:9,22:$V1,24:11,25:12,26:$V2,27:18,30:$V3,31:$V4,42:$V5,43:$V6,44:$V7,45:$V8},o($Va,[2,7]),o($Va,[2,9]),o($Va,[2,10]),o($Va,[2,11]),o($Va,[2,12]),{16:42,18:[1,43]},{23:[1,44]},{29:[1,45]},{24:34,29:[2,26],34:46,35:35,36:[1,47],37:36,38:$Vd,39:38,40:$Ve,41:$Vf,42:$V5,43:$V6,44:$V7,45:$V8},{29:[2,27]},o($Vh,[2,28]),o($Vh,[2,30]),o($Vh,[2,31]),o($Vh,[2,33]),o($Vh,[2,34]),o([29,36,40,41,42,43,44,45],[2,36],{38:[1,48]}),o($Vh,[2,37]),o($Vh,[2,38]),o($V9,[2,5]),{17:[1,49]},{17:[2,14],19:[1,50]},o($Vb,[2,19]),o([5,8,12,13,14,15,20,22,23,26,29,30,31,42,43,44,45],[2,23]),o($Vh,[2,29]),{25:51,27:18,30:$V3,31:$V4},{39:52,40:$Ve,41:$Vf},o($Va,[2,13]),{17:[2,16],18:[1,53]},{29:[2,32]},o($Vh,[2,35]),{17:[2,15]}],\ndefaultActions: {2:[2,1],3:[2,2],21:[2,3],32:[2,27],51:[2,32],53:[2,15]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\nvar xmlcharacters = require(\"./xmlcharacters\");\nvar XRegExp = require(\"xregexp\");\n\n// We use the name ``Salve`` to help avoid potential\n// clashes. ``ParsingError`` seems too risky.\nfunction SalveParsingError(msg) {\n  // This is crap to work around the fact that Error is a terribly\n  // designed class or prototype or whatever. Unfortunately the\n  // stack trace contains an extra frame.\n  var err = new Error(msg);\n  this.name = \"SalveParsingError\";\n  this.stack = err.stack;\n  this.message = err.message;\n}\n\nSalveParsingError.prototype = new Error();\n\n// This will serve as a replacement for the default parseError method on\n// the parser.\nfunction parseError(str, hash) {\n  throw new SalveParsingError(str);\n}\n\n// Export this error.\nif (typeof exports !== 'undefined') {\n  exports.SalveParsingError = SalveParsingError;\n}\nelse {\n  parser.SalveParsingError = SalveParsingError;\n}\n\n\nvar xmlNameChar = xmlcharacters.xmlNameChar;\nvar xmlLetter = xmlcharacters.xmlLetter;\n\n// Maintain a group state.\nvar groupState = [];\nvar needsXRegExpRe = /\\\\p/i;\n\nfunction unshiftGroupState(negative) {\n  groupState.unshift({\n    negative: negative,\n    capturedMultiChar: [],\n  });\n}\n\nvar multiCharEscapesInGroup = {\n    \"\\\\s\": \" \\\\t\\\\n\\\\r\",\n    \"\\\\S\": \"^ \\\\t\\\\n\\\\r\",\n    \"\\\\i\": \"\" + xmlLetter + \"_:\",\n    \"\\\\I\": \"^\" + xmlLetter + \"_:\",\n    \"\\\\c\": \"\" + xmlNameChar,\n    \"\\\\C\": \"^\" + xmlNameChar,\n    \"\\\\d\": \"\\\\p{Nd}\",\n    \"\\\\D\": \"^\\\\p{Nd}\",\n    \"\\\\w\": \"^\\\\p{P}\\\\p{Z}\\\\p{C}\",\n    \"\\\\W\": \"\\\\p{P}\\\\p{Z}\\\\p{C}\"\n};\n\nvar multiCharEscapes = [];\nfor(var i in multiCharEscapesInGroup) {\n  if (!multiCharEscapesInGroup.hasOwnProperty(i)) {\n    continue;\n  }\n  multiCharEscapes[i] = \"[\" + multiCharEscapesInGroup[i] + \"]\";\n}\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 18;\nbreak;\ncase 1:return 19;\nbreak;\ncase 2:this.popState(); return 17;\nbreak;\ncase 3:this.begin('CHARCLASS'); return 31;\nbreak;\ncase 4:this.begin('CHARCLASS'); return 30;\nbreak;\ncase 5:return 42;\nbreak;\ncase 6:return 43;\nbreak;\ncase 7:return 36;\nbreak;\ncase 8:return 38;\nbreak;\ncase 9:return 40;\nbreak;\ncase 10:this.popState(); return 29;\nbreak;\ncase 11:return 22;\nbreak;\ncase 12:return 8;\nbreak;\ncase 13:return 23;\nbreak;\ncase 14:return 13;\nbreak;\ncase 15:return 14;\nbreak;\ncase 16:return 12;\nbreak;\ncase 17:this.begin('QUANTITY'); return 15;\nbreak;\ncase 18:return 17;\nbreak;\ncase 19:return 29;\nbreak;\ncase 20:return '^';\nbreak;\ncase 21:return 44;\nbreak;\ncase 22:return 45;\nbreak;\ncase 23:return 26;\nbreak;\ncase 24:return 5;\nbreak;\ncase 25:return 20;\nbreak;\n}\n},\nrules: [/^(?:[0-9])/,/^(?:,)/,/^(?:\\})/,/^(?:\\[\\^)/,/^(?:\\[)/,/^(?:\\\\[-nrt\\|.?*+(){}[\\]^])/,/^(?:\\\\[sSiIcCdDwW])/,/^(?:-(?=\\[))/,/^(?:-)/,/^(?:[^-[\\]])/,/^(?:\\])/,/^(?:\\()/,/^(?:\\|)/,/^(?:\\))/,/^(?:\\*)/,/^(?:\\+)/,/^(?:\\?)/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\])/,/^(?:\\^)/,/^(?:\\\\p\\{.*?\\})/,/^(?:\\\\P\\{.*?\\})/,/^(?:\\.)/,/^(?:$)/,/^(?:[^\\\\])/],\nconditions: {\"CHARCLASS\":{\"rules\":[3,4,5,6,7,8,9,10],\"inclusive\":false},\"QUANTITY\":{\"rules\":[0,1,2],\"inclusive\":false},\"INITIAL\":{\"rules\":[3,4,5,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function main() {\n      throw new Error(\"this module cannot be used as main\");\n    };\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/datatypes/regexp.js\n// module id = 16\n// module chunks = 0 1","\"use strict\";\n/**\n * Implementation of the XMLSchema datatypes.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = require(\"./errors\");\nvar regexp = require(\"./regexp\");\nvar xmlcharacters_1 = require(\"./xmlcharacters\");\n// tslint:disable: no-reserved-keywords\n/**\n * @private\n */\nvar WhitespaceHandling;\n(function (WhitespaceHandling) {\n    /**\n     * Preserve the whitespace\n     */\n    WhitespaceHandling[WhitespaceHandling[\"PRESERVE\"] = 1] = \"PRESERVE\";\n    /**\n     * Replace all instances of whitespace by spaces.\n     */\n    WhitespaceHandling[WhitespaceHandling[\"REPLACE\"] = 2] = \"REPLACE\";\n    /**\n     * Replace all instances of whitespace by spaces, collapse consecutive\n     * spaces, and remove leading and trailing spaces.\n     */\n    WhitespaceHandling[WhitespaceHandling[\"COLLAPSE\"] = 3] = \"COLLAPSE\";\n})(WhitespaceHandling || (WhitespaceHandling = {}));\n/**\n * Check whether a parameter is an integer.\n *\n * @param value The parameter value.\n *\n * @param name The name of the parameter.\n *\n * @return ``false`` if there is no error. Otherwise it returns a [[ParamError]]\n * that records the error.\n *\n * @private\n */\nfunction failIfNotInteger(value, name) {\n    if (value.search(/^\\d+$/) !== -1) {\n        return false;\n    }\n    return new errors_1.ParamError(name + \" must have an integer value\");\n}\n/**\n * Check whether a parameter is a non-negative integer.\n *\n * @param value The parameter value.\n *\n * @param name The name of the parameter.\n *\n * @return ``false`` if there is no error. Otherwise it returns a [[ParamError]]\n * that records the error.\n *\n * @private\n */\nfunction failIfNotNonNegativeInteger(value, name) {\n    if (!failIfNotInteger(value, name) && Number(value) >= 0) {\n        return false;\n    }\n    return new errors_1.ParamError(name + \" must have a non-negative integer value\");\n}\n/**\n * Check whether a parameter is a positive integer.\n *\n * @param value The parameter value.\n *\n * @param name The name of the parameter.\n *\n * @return ``false`` if there is no error. Otherwise it returns a [[ParamError]]\n * that records the error.\n *\n * @private\n */\nfunction failIfNotPositiveInteger(value, name) {\n    if (!failIfNotInteger(value, name) && Number(value) > 0) {\n        return false;\n    }\n    return new errors_1.ParamError(name + \" must have a positive value\");\n}\n/**\n * Convert a number to an internal representation. This takes care of the\n * differences between JavaScript and XML Schema (e.g. \"Infinity\" vs \"INF\").\n *\n * @param value The value as expressed in an XML file or schema.\n *\n * @returns The number, in its internal representation.\n */\nfunction convertToInternalNumber(value) {\n    if (value === \"INF\") {\n        return Infinity;\n    }\n    if (value === \"-INF\") {\n        return -Infinity;\n    }\n    return Number(value);\n}\n/**\n * Convert an internal representation of a number to a string. This takes care\n * of the differences between JavaScript and XML Schema. For instance, a value\n * of ``Infinity`` will be represented as the string ``\"INF\"``.\n *\n * @param number The internal representation.\n *\n * @returns The string representation.\n */\nfunction convertInternalNumberToString(value) {\n    if (value === Infinity) {\n        return \"INF\";\n    }\n    if (value === -Infinity) {\n        return \"-INF\";\n    }\n    return value.toString();\n}\n//\n// The parameters\n//\n/**\n * A parameter used for XML\n * Schema type processing.\n */\nvar Parameter = (function () {\n    function Parameter() {\n        /**\n         * Whether the parameter can appear more than once on the same type.\n         */\n        this.repeatable = false;\n    }\n    /**\n     * Combine multiple values from the schema into an internal value. This method\n     * may be called only for parameters that are repeatable.\n     *\n     * @param values The values to combine\n     *\n     * @returns An array of internal values.\n     */\n    Parameter.prototype.combine = function (values) {\n        if (!this.repeatable) {\n            throw new Error(\"this parameter is not repeatable\");\n        }\n        throw new Error(\"derived classes must implement this method \" +\n            \"if they are repeatable\");\n    };\n    return Parameter;\n}());\nvar NumericParameter = (function (_super) {\n    __extends(NumericParameter, _super);\n    function NumericParameter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumericParameter.prototype.convert = function (value) {\n        return convertToInternalNumber(value);\n    };\n    return NumericParameter;\n}(Parameter));\nvar NonNegativeIntegerParameter = (function (_super) {\n    __extends(NonNegativeIntegerParameter, _super);\n    function NonNegativeIntegerParameter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NonNegativeIntegerParameter.prototype.isInvalidParam = function (value, name) {\n        return failIfNotNonNegativeInteger(value, name);\n    };\n    return NonNegativeIntegerParameter;\n}(NumericParameter));\nvar LengthP = (function (_super) {\n    __extends(LengthP, _super);\n    function LengthP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"length\";\n        return _this;\n    }\n    LengthP.prototype.isInvalidValue = function (value, param, type) {\n        if (type.valueLength(value) === param) {\n            return false;\n        }\n        return new errors_1.ValueError(\"length of value should be \" + param);\n    };\n    return LengthP;\n}(NonNegativeIntegerParameter));\nvar lengthP = new LengthP();\nvar MinLengthP = (function (_super) {\n    __extends(MinLengthP, _super);\n    function MinLengthP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"minLength\";\n        return _this;\n    }\n    MinLengthP.prototype.isInvalidValue = function (value, param, type) {\n        if (type.valueLength(value) >= param) {\n            return false;\n        }\n        return new errors_1.ValueError(\"length of value should be greater than \" +\n            (\"or equal to \" + param));\n    };\n    return MinLengthP;\n}(NonNegativeIntegerParameter));\nvar minLengthP = new MinLengthP();\nvar MaxLengthP = (function (_super) {\n    __extends(MaxLengthP, _super);\n    function MaxLengthP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"maxLength\";\n        return _this;\n    }\n    MaxLengthP.prototype.isInvalidValue = function (value, param, type) {\n        if (type.valueLength(value) <= param) {\n            return false;\n        }\n        return new errors_1.ValueError(\"length of value should be less than \" +\n            (\"or equal to \" + param));\n    };\n    return MaxLengthP;\n}(NonNegativeIntegerParameter));\nvar maxLengthP = new MaxLengthP();\n//\n// pattern is special. It converts the param value found in the RNG file into an\n// object with two fields: ``rng`` and ``internal``. RNG is the string value\n// from the RNG file, and ``internal`` is a representation internal to salve. We\n// use ``internal`` for performing the validation but present ``rng`` to the\n// user. Note that if pattern appears multiple times as a parameter, the two\n// values are the result of the concatenation of all the instance of the pattern\n// parameter. (Why this? Because it would be confusing to show the internal\n// value in error messages to the user.)\n//\n/**\n * A mapping of raw schema values to the corresponding [[RegExp]] object.\n */\nvar reCache = Object.create(null);\nvar PatternP = (function (_super) {\n    __extends(PatternP, _super);\n    function PatternP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"pattern\";\n        _this.repeatable = true;\n        return _this;\n    }\n    PatternP.prototype.convert = function (value) {\n        var internal = reCache[value];\n        if (internal === undefined) {\n            internal = reCache[value] = regexp.parse(value);\n        }\n        return {\n            rng: value,\n            internal: internal,\n        };\n    };\n    PatternP.prototype.combine = function (values) {\n        return values.map(this.convert);\n    };\n    PatternP.prototype.isInvalidParam = function (value) {\n        try {\n            this.convert(value);\n        }\n        catch (ex) {\n            // Convert the error into something that makes sense for salve.\n            if (ex instanceof regexp.SalveParsingError) {\n                return new errors_1.ParamError(ex.message);\n            }\n            // Rethrow\n            throw ex;\n        }\n        return false;\n    };\n    PatternP.prototype.isInvalidValue = function (value, param) {\n        if (param instanceof Array) {\n            var failedOn = void 0;\n            for (var _i = 0, param_1 = param; _i < param_1.length; _i++) {\n                var p = param_1[_i];\n                if (!p.internal.test(value)) {\n                    failedOn = p;\n                    break;\n                }\n            }\n            if (failedOn === undefined) {\n                return false;\n            }\n            return new errors_1.ValueError(\"value does not match the pattern \" + failedOn.rng);\n        }\n        if (param.internal.test(value)) {\n            return false;\n        }\n        return new errors_1.ValueError(\"value does not match the pattern \" + param.rng);\n    };\n    return PatternP;\n}(Parameter));\nvar patternP = new PatternP();\nvar TotalDigitsP = (function (_super) {\n    __extends(TotalDigitsP, _super);\n    function TotalDigitsP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"totalDigits\";\n        return _this;\n    }\n    TotalDigitsP.prototype.isInvalidParam = function (value, name) {\n        return failIfNotPositiveInteger(value, name);\n    };\n    TotalDigitsP.prototype.isInvalidValue = function (value, param) {\n        var str = String(Number(value)).replace(/[-+.]/g, \"\");\n        if (str.length > param) {\n            return new errors_1.ValueError(\"value must have at most \" + param + \" digits\");\n        }\n        return false;\n    };\n    return TotalDigitsP;\n}(NumericParameter));\nvar totalDigitsP = new TotalDigitsP();\nvar FractionDigitsP = (function (_super) {\n    __extends(FractionDigitsP, _super);\n    function FractionDigitsP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"fractionDigits\";\n        return _this;\n    }\n    FractionDigitsP.prototype.isInvalidValue = function (value, param) {\n        var str = String(Number(value)).replace(/^.*\\./, \"\");\n        if (str.length > param) {\n            return new errors_1.ValueError(\"value must have at most \" + param + \" fraction digits\");\n        }\n        return false;\n    };\n    return FractionDigitsP;\n}(NonNegativeIntegerParameter));\nvar NumericTypeDependentParameter = (function (_super) {\n    __extends(NumericTypeDependentParameter, _super);\n    function NumericTypeDependentParameter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumericTypeDependentParameter.prototype.isInvalidParam = function (value, name, type) {\n        var errors = type.disallows(value);\n        if (!errors) {\n            return false;\n        }\n        // Support for multiple value errors is mainly so that we can report if a\n        // value violates multiple param specifications. When we check a param in\n        // isolation, it is unlikely that we'd get multiple errors. If we do, we\n        // narrow it to the first error and convert the ValueError to a ParamError.\n        return new errors_1.ParamError(errors[0].message);\n    };\n    return NumericTypeDependentParameter;\n}(NumericParameter));\nvar fractionDigitsP = new FractionDigitsP();\nvar MaxInclusiveP = (function (_super) {\n    __extends(MaxInclusiveP, _super);\n    function MaxInclusiveP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"maxInclusive\";\n        return _this;\n    }\n    MaxInclusiveP.prototype.isInvalidValue = function (value, param) {\n        if ((isNaN(value) !== isNaN(param)) || value > param) {\n            var repr = convertInternalNumberToString(param);\n            return new errors_1.ValueError(\"value must be less than or equal to \" + repr);\n        }\n        return false;\n    };\n    return MaxInclusiveP;\n}(NumericTypeDependentParameter));\nvar maxInclusiveP = new MaxInclusiveP();\nvar MaxExclusiveP = (function (_super) {\n    __extends(MaxExclusiveP, _super);\n    function MaxExclusiveP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"maxExclusive\";\n        return _this;\n    }\n    MaxExclusiveP.prototype.isInvalidValue = function (value, param) {\n        // The negation of a less-than test allows handling a parameter value of NaN\n        // automatically.\n        if (!(value < param)) {\n            var repr = convertInternalNumberToString(param);\n            return new errors_1.ValueError(\"value must be less than \" + repr);\n        }\n        return false;\n    };\n    return MaxExclusiveP;\n}(NumericTypeDependentParameter));\nvar maxExclusiveP = new MaxExclusiveP();\nvar MinInclusiveP = (function (_super) {\n    __extends(MinInclusiveP, _super);\n    function MinInclusiveP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"minInclusive\";\n        return _this;\n    }\n    MinInclusiveP.prototype.isInvalidValue = function (value, param) {\n        if ((isNaN(value) !== isNaN(param)) || value < param) {\n            var repr = convertInternalNumberToString(param);\n            return new errors_1.ValueError(\"value must be greater than or equal to \" + repr);\n        }\n        return false;\n    };\n    return MinInclusiveP;\n}(NumericTypeDependentParameter));\nvar minInclusiveP = new MinInclusiveP();\nvar MinExclusiveP = (function (_super) {\n    __extends(MinExclusiveP, _super);\n    function MinExclusiveP() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"minExclusive\";\n        return _this;\n    }\n    MinExclusiveP.prototype.isInvalidValue = function (value, param) {\n        // The negation of a greater-than test allows handling a parameter value of\n        // NaN automatically.\n        if (!(value > param)) {\n            var repr = convertInternalNumberToString(param);\n            return new errors_1.ValueError(\"value must be greater than \" + repr);\n        }\n        return false;\n    };\n    return MinExclusiveP;\n}(NumericTypeDependentParameter));\nvar minExclusiveP = new MinExclusiveP();\n/**\n * @private\n *\n * @param value The value to process.\n *\n * @param param How to process the whitespaces.\n *\n * @returns The white-space-processed value. That is, the ``value`` parameter\n * once its white-spaces have been processed according to the parameter\n * passed. See the XML Schema Datatype standard for the meaning.\n */\nfunction whiteSpaceProcessed(value, param) {\n    switch (param) {\n        case WhitespaceHandling.PRESERVE:\n            break;\n        case WhitespaceHandling.REPLACE:\n            value = value.replace(/\\r\\n\\t/g, \" \");\n            break;\n        case WhitespaceHandling.COLLAPSE:\n            value = value.replace(/\\r\\n\\t/g, \" \").trim().replace(/\\s{2,}/g, \" \");\n            break;\n        default:\n            throw new Error(\"unexpected value: \" + param);\n    }\n    return value;\n}\n/**\n * The structure that all datatype implementations in this module share.\n *\n * @private\n *\n */\nvar Base = (function () {\n    function Base() {\n        /**\n         * The default whitespace processing for this type.\n         */\n        this.whiteSpaceDefault = WhitespaceHandling.COLLAPSE;\n    }\n    Base.throwMissingLocation = function (errors) {\n        // The only time location is undefined is if ``parseParams`` was called\n        // without arguments. That's an internal error because we should always be\n        // able to call ``parseParams`` to \"parse\" the default parameter values.\n        throw new Error(\"internal error: undefined location\");\n    };\n    Object.defineProperty(Base.prototype, \"paramNameToObj\", {\n        /**\n         * A mapping of parameter names to parameter objects. It is constructed during\n         * initialization of the type.\n         */\n        get: function () {\n            var paramNameToObj = this._paramNameToObj;\n            var ret = paramNameToObj !== undefined ?\n                paramNameToObj : Object.create(null);\n            if (paramNameToObj === undefined) {\n                this._paramNameToObj = ret;\n                for (var _i = 0, _a = this.validParams; _i < _a.length; _i++) {\n                    var param = _a[_i];\n                    ret[param.name] = param;\n                }\n            }\n            return ret;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Base.prototype, \"defaultParams\", {\n        /**\n         * The default parameters if none are specified.\n         */\n        get: function () {\n            var defaultParams = this._defaultParams;\n            if (defaultParams !== undefined) {\n                return defaultParams;\n            }\n            var ret;\n            this._defaultParams = ret = this.parseParams();\n            return ret;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Converts a value. It does the strict minimum to convert the value from a\n     * string to an internal representation. It is never interchangeable with\n     * [[parseValue]].\n     *\n     * @param value The value from the XML document.\n     *\n     * @param context The context of the value in the XML document.\n     *\n     * @returns An internal representation.\n     */\n    Base.prototype.convertValue = function (value, context) {\n        return whiteSpaceProcessed(value, this.whiteSpaceDefault);\n    };\n    /**\n     * Computes the value's length. This may differ from the value's length, as it\n     * appears in the XML document it comes from.\n     *\n     * @param value The value from the XML document.\n     *\n     * @returns The length.\n     */\n    Base.prototype.valueLength = function (value) {\n        return value.length;\n    };\n    Base.prototype.parseValue = function (value, context) {\n        var errors = this.disallows(value, {}, context);\n        if (errors) {\n            throw new errors_1.ValueValidationError(errors);\n        }\n        return { value: this.convertValue(value, context) };\n    };\n    // tslint:disable-next-line: max-func-body-length\n    Base.prototype.parseParams = function (location, params) {\n        var errors = [];\n        var names = Object.create(null);\n        params = params !== undefined ? params : [];\n        for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {\n            var x = params_1[_i];\n            var name = x.name, value = x.value;\n            var prop = this.paramNameToObj[name];\n            // Do we know this parameter?\n            if (prop === undefined) {\n                errors.push(new errors_1.ParamError(\"unexpected parameter: \" + name));\n                return;\n            }\n            // Is the value valid at all?\n            var invalid = prop.isInvalidParam(value, name, this);\n            if (invalid) {\n                errors.push(invalid);\n            }\n            // Is it repeated, and repeatable?\n            if (names[name] !== undefined && !prop.repeatable) {\n                errors.push(new errors_1.ParamError(\"cannot repeat parameter \" + name));\n            }\n            // We gather all the values in a map of name to value.\n            var values = names[name];\n            if (values === undefined) {\n                values = names[name] = [];\n            }\n            values.push(value);\n        }\n        if (errors.length !== 0) {\n            if (location !== undefined) {\n                throw new errors_1.ParameterParsingError(location, errors);\n            }\n            Base.throwMissingLocation(errors);\n        }\n        // We just modify the ``names`` object to produce a return value.\n        var ret = names;\n        for (var key in ret) {\n            var value = ret[key];\n            var prop = this.paramNameToObj[key];\n            if (value.length > 1) {\n                ret[key] = prop.combine(value);\n            }\n            else {\n                ret[key] = ((prop.convert !== undefined) ?\n                    prop.convert(value[0]) : value[0]);\n            }\n        }\n        // Inter-parameter checks. There's no point in trying to generalize\n        // this.\n        /* tslint:disable: no-string-literal */\n        if (ret[\"minLength\"] > ret[\"maxLength\"]) {\n            errors.push(new errors_1.ParamError(\"minLength must be less than or equal to maxLength\"));\n        }\n        if (ret[\"length\"] !== undefined) {\n            if (ret[\"minLength\"] !== undefined) {\n                errors.push(new errors_1.ParamError(\"length and minLength cannot appear together\"));\n            }\n            if (ret[\"maxLength\"] !== undefined) {\n                errors.push(new errors_1.ParamError(\"length and maxLength cannot appear together\"));\n            }\n        }\n        if (ret[\"maxInclusive\"] !== undefined) {\n            if (ret[\"maxExclusive\"] !== undefined) {\n                errors.push(new errors_1.ParamError(\"maxInclusive and maxExclusive cannot appear together\"));\n            }\n            // maxInclusive, minExclusive\n            if (ret[\"minExclusive\"] >= ret[\"maxInclusive\"]) {\n                errors.push(new errors_1.ParamError(\"minExclusive must be less than maxInclusive\"));\n            }\n        }\n        if (ret[\"minInclusive\"] !== undefined) {\n            if (ret[\"minExclusive\"] !== undefined) {\n                errors.push(new errors_1.ParamError(\"minInclusive and minExclusive cannot appear together\"));\n            }\n            // maxInclusive, minInclusive\n            if (ret[\"minInclusive\"] > ret[\"maxInclusive\"]) {\n                errors.push(new errors_1.ParamError(\"minInclusive must be less than or equal to maxInclusive\"));\n            }\n            // maxExclusive, minInclusive\n            if (ret[\"minInclusive\"] >= ret[\"maxExclusive\"]) {\n                errors.push(new errors_1.ParamError(\"minInclusive must be less than maxExclusive\"));\n            }\n        }\n        // maxExclusive, minExclusive\n        if (ret[\"minExclusive\"] > ret[\"maxExclusive\"]) {\n            errors.push(new errors_1.ParamError(\"minExclusive must be less than or equal to maxExclusive\"));\n        }\n        /* tslint:enable: no-string-literal */\n        if (errors.length !== 0) {\n            if (location !== undefined) {\n                throw new errors_1.ParameterParsingError(location, errors);\n            }\n            Base.throwMissingLocation(errors);\n        }\n        return ret;\n    };\n    /**\n     * Determines whether the parameters disallow a value.\n     *\n     * @param raw The value from the XML document.\n     *\n     * @param value The internal representation of the value, as returned from\n     * [[convertValue]].\n     *\n     * @param params The parameters, as returned from [[parseParams]].\n     *\n     * @param context The context, if needed.\n     *\n     * @returns ``false`` if there is no error. Otherwise, an array of errors.\n     */\n    Base.prototype.disallowedByParams = function (raw, value, params, context) {\n        if (params !== undefined) {\n            var errors = [];\n            // We use Object.keys because we don't know the precise type of params.\n            for (var _i = 0, _a = Object.keys(params); _i < _a.length; _i++) {\n                var name = _a[_i];\n                var param = this.paramNameToObj[name];\n                var err = param.isInvalidValue(value, params[name], this);\n                if (err) {\n                    errors.push(err);\n                }\n            }\n            if (errors.length !== 0) {\n                return errors;\n            }\n        }\n        return false;\n    };\n    Base.prototype.equal = function (value, schemaValue, context) {\n        if (schemaValue.value === undefined) {\n            throw Error(\"it looks like you are trying to use an unparsed value\");\n        }\n        var converted;\n        try {\n            converted = this.convertValue(value, context);\n        }\n        catch (ex) {\n            // An invalid value cannot be equal.\n            if (ex instanceof errors_1.ValueValidationError) {\n                return false;\n            }\n            throw ex;\n        }\n        // In the IEEE 754-1985 standard, which is what XMLSChema 1.0 follows, NaN\n        // is equal to NaN. In JavaScript NaN is equal to nothing, not even itself.\n        // So we need to handle this difference.\n        if (typeof converted === \"number\" && isNaN(converted)) {\n            return isNaN(schemaValue.value);\n        }\n        return converted === schemaValue.value;\n    };\n    Base.prototype.disallows = function (value, params, context) {\n        if (params instanceof Array) {\n            throw new Error(\"it looks like you are passing unparsed \" +\n                \"parameters to disallows\");\n        }\n        else if (params === undefined || Object.keys(params).length === 0) {\n            // If no params were passed, get the default params.\n            params = this.defaultParams;\n        }\n        // This must be done against the raw value because the **lexical** space of\n        // this type must match this.\n        if (whiteSpaceProcessed(value, WhitespaceHandling.COLLAPSE)\n            .match(this.regexp) === null) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        var converted;\n        try {\n            converted = this.convertValue(value, context);\n        }\n        catch (ex) {\n            // An invalid value is not allowed.\n            if (ex instanceof errors_1.ValueValidationError) {\n                return ex.errors;\n            }\n            throw ex;\n        }\n        return this.disallowedByParams(value, converted, params, context);\n    };\n    return Base;\n}());\n//\n// String family\n//\n/* tslint:disable:class-name */\nvar string_ = (function (_super) {\n    __extends(string_, _super);\n    function string_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"string\";\n        _this.typeErrorMsg = \"value is not a string\";\n        _this.whiteSpaceDefault = WhitespaceHandling.PRESERVE;\n        _this.validParams = [lengthP, minLengthP, maxLengthP,\n            patternP];\n        _this.needsContext = false;\n        _this.regexp = /^.*$/;\n        return _this;\n    }\n    return string_;\n}(Base));\nvar normalizedString = (function (_super) {\n    __extends(normalizedString, _super);\n    function normalizedString() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"normalizedString\";\n        _this.typeErrorMsg = \"string contains a tab, carriage return or newline\";\n        _this.regexp = /^[^\\r\\n\\t]+$/;\n        return _this;\n    }\n    return normalizedString;\n}(string_));\nvar token = (function (_super) {\n    __extends(token, _super);\n    function token() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"token\";\n        _this.typeErrorMsg = \"not a valid token\";\n        _this.regexp = /^(?:(?! )(?:(?! {3})[^\\r\\n\\t])*[^\\r\\n\\t ])?$/;\n        return _this;\n    }\n    return token;\n}(normalizedString));\nvar language = (function (_super) {\n    __extends(language, _super);\n    function language() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"language\";\n        _this.typeErrorMsg = \"not a valid language identifier\";\n        _this.regexp = /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;\n        return _this;\n    }\n    return language;\n}(token));\nvar Name = (function (_super) {\n    __extends(Name, _super);\n    function Name() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Name\";\n        _this.typeErrorMsg = \"not a valid Name\";\n        _this.regexp = xmlcharacters_1.xmlNameRe;\n        return _this;\n    }\n    return Name;\n}(token));\nvar NCName = (function (_super) {\n    __extends(NCName, _super);\n    function NCName() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"NCName\";\n        _this.typeErrorMsg = \"not a valid NCName\";\n        _this.regexp = xmlcharacters_1.xmlNcnameRe;\n        return _this;\n    }\n    return NCName;\n}(Name));\nvar xmlNmtokenRe = new RegExp(\"^[\" + xmlcharacters_1.xmlNameChar + \"]+$\");\nvar NMTOKEN = (function (_super) {\n    __extends(NMTOKEN, _super);\n    function NMTOKEN() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"NMTOKEN\";\n        _this.typeErrorMsg = \"not a valid NMTOKEN\";\n        _this.regexp = xmlNmtokenRe;\n        return _this;\n    }\n    return NMTOKEN;\n}(token));\nvar xmlNmtokensRe = new RegExp(\"^[\" + xmlcharacters_1.xmlNameChar + \"]+(?: [\" + xmlcharacters_1.xmlNameChar + \"]+)*$\");\nvar NMTOKENS = (function (_super) {\n    __extends(NMTOKENS, _super);\n    function NMTOKENS() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"NMTOKENS\";\n        _this.typeErrorMsg = \"not a valid NMTOKENS\";\n        _this.regexp = xmlNmtokensRe;\n        _this.whiteSpaceDefault = WhitespaceHandling.COLLAPSE;\n        return _this;\n    }\n    return NMTOKENS;\n}(NMTOKEN));\nvar ID = (function (_super) {\n    __extends(ID, _super);\n    function ID() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"ID\";\n        _this.typeErrorMsg = \"not a valid ID\";\n        return _this;\n    }\n    return ID;\n}(NCName));\nvar IDREF = (function (_super) {\n    __extends(IDREF, _super);\n    function IDREF() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"IDREF\";\n        _this.typeErrorMsg = \"not a valid IDREF\";\n        return _this;\n    }\n    return IDREF;\n}(NCName));\nvar IDREFS_RE = new RegExp(\"^\" + xmlcharacters_1.xmlNcname + \"(?: \" + xmlcharacters_1.xmlNcname + \")*$\");\nvar IDREFS = (function (_super) {\n    __extends(IDREFS, _super);\n    function IDREFS() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"IDREFS\";\n        _this.typeErrorMsg = \"not a valid IDREFS\";\n        _this.regexp = IDREFS_RE;\n        _this.whiteSpaceDefault = WhitespaceHandling.COLLAPSE;\n        return _this;\n    }\n    return IDREFS;\n}(IDREF));\nvar ENTITY = (function (_super) {\n    __extends(ENTITY, _super);\n    function ENTITY() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"ENTITY\";\n        _this.typeErrorMsg = \"not a valid ENTITY\";\n        return _this;\n    }\n    return ENTITY;\n}(string_));\nvar ENTITIES = (function (_super) {\n    __extends(ENTITIES, _super);\n    function ENTITIES() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"ENTITIES\";\n        _this.typeErrorMsg = \"not a valid ENTITIES\";\n        return _this;\n    }\n    return ENTITIES;\n}(string_));\n//\n// Decimal family\n//\nvar decimalPattern = \"[-+]?(?!$)\\\\d*(\\\\.\\\\d*)?\";\nvar decimal = (function (_super) {\n    __extends(decimal, _super);\n    function decimal() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"decimal\";\n        _this.typeErrorMsg = \"value not a decimal number\";\n        _this.regexp = new RegExp(\"^\" + decimalPattern + \"$\");\n        _this.whiteSpaceDefault = WhitespaceHandling.COLLAPSE;\n        _this.needsContext = false;\n        _this.validParams = [\n            totalDigitsP, fractionDigitsP, patternP, minExclusiveP, minInclusiveP,\n            maxExclusiveP, maxInclusiveP,\n        ];\n        return _this;\n    }\n    decimal.prototype.convertValue = function (value) {\n        return Number(_super.prototype.convertValue.call(this, value));\n    };\n    return decimal;\n}(Base));\nvar integerPattern = \"[-+]?\\\\d+\";\nvar integer = (function (_super) {\n    __extends(integer, _super);\n    function integer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"integer\";\n        _this.typeErrorMsg = \"value is not an integer\";\n        _this.regexp = new RegExp(\"^\" + integerPattern + \"$\");\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    integer.prototype.parseParams = function (location, params) {\n        var me;\n        var mi;\n        var ret = _super.prototype.parseParams.call(this, location, params);\n        function fail(message) {\n            var errors = [new errors_1.ParamError(message)];\n            if (location !== undefined) {\n                throw new errors_1.ParameterParsingError(location, errors);\n            }\n            return Base.throwMissingLocation(errors);\n        }\n        var highestVal = this.highestVal;\n        if (highestVal !== undefined) {\n            /* tslint:disable:no-string-literal */\n            if (ret[\"maxExclusive\"] !== undefined) {\n                me = ret[\"maxExclusive\"];\n                if (me > highestVal) {\n                    fail(\"maxExclusive cannot be greater than \" + highestVal);\n                }\n            }\n            else if (ret[\"maxInclusive\"] !== undefined) {\n                mi = ret[\"maxInclusive\"];\n                if (mi > highestVal) {\n                    fail(\"maxInclusive cannot be greater than \" + highestVal);\n                }\n            }\n            else {\n                ret[\"maxInclusive\"] = this.highestVal;\n            }\n        }\n        if (this.lowestVal !== undefined) {\n            if (ret[\"minExclusive\"] !== undefined) {\n                me = ret[\"minExclusive\"];\n                if (me < this.lowestVal) {\n                    fail(\"minExclusive cannot be lower than \" + this.lowestVal);\n                }\n            }\n            else if (ret[\"minInclusive\"] !== undefined) {\n                mi = ret[\"minInclusive\"];\n                if (mi < this.lowestVal) {\n                    fail(\"minInclusive cannot be lower than \" + this.lowestVal);\n                }\n            }\n            else {\n                ret[\"minInclusive\"] = this.lowestVal;\n            }\n        }\n        /* tslint:enable:no-string-literal */\n        return ret;\n    };\n    return integer;\n}(decimal));\nvar nonPositiveInteger = (function (_super) {\n    __extends(nonPositiveInteger, _super);\n    function nonPositiveInteger() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"nonPositiveInteger\";\n        _this.typeErrorMsg = \"value is not a nonPositiveInteger\";\n        _this.regexp = /^\\+?0+|-\\d+$/;\n        _this.highestVal = 0;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return nonPositiveInteger;\n}(integer));\nvar negativeInteger = (function (_super) {\n    __extends(negativeInteger, _super);\n    function negativeInteger() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"negativeInteger\";\n        _this.typeErrorMsg = \"value is not a negativeInteger\";\n        _this.regexp = /^-\\d+$/;\n        _this.highestVal = -1;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return negativeInteger;\n}(nonPositiveInteger));\nvar nonNegativeInteger = (function (_super) {\n    __extends(nonNegativeInteger, _super);\n    function nonNegativeInteger() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"nonNegativeInteger\";\n        _this.typeErrorMsg = \"value is not a nonNegativeInteger\";\n        _this.regexp = /^(\\+?\\d+|-0)$/;\n        _this.lowestVal = 0;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return nonNegativeInteger;\n}(integer));\nvar positiveInteger = (function (_super) {\n    __extends(positiveInteger, _super);\n    function positiveInteger() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"positiveInteger\";\n        _this.typeErrorMsg = \"value is not a positiveInteger\";\n        _this.regexp = /^\\+?\\d+$/;\n        _this.lowestVal = 1;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return positiveInteger;\n}(nonNegativeInteger));\nvar long_ = (function (_super) {\n    __extends(long_, _super);\n    function long_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"long\";\n        _this.typeErrorMsg = \"value is not a long\";\n        _this.highestVal = 9223372036854775807;\n        _this.lowestVal = -9223372036854775808;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return long_;\n}(integer));\nvar int_ = (function (_super) {\n    __extends(int_, _super);\n    function int_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"int\";\n        _this.typeErrorMsg = \"value is not an int\";\n        _this.highestVal = 2147483647;\n        _this.lowestVal = -2147483648;\n        return _this;\n    }\n    return int_;\n}(long_));\nvar short_ = (function (_super) {\n    __extends(short_, _super);\n    function short_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"short\";\n        _this.typeErrorMsg = \"value is not a short\";\n        _this.highestVal = 32767;\n        _this.lowestVal = -32768;\n        return _this;\n    }\n    return short_;\n}(int_));\nvar byte_ = (function (_super) {\n    __extends(byte_, _super);\n    function byte_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"byte\";\n        _this.typeErrorMsg = \"value is not a byte\";\n        _this.highestVal = 127;\n        _this.lowestVal = -128;\n        return _this;\n    }\n    return byte_;\n}(short_));\nvar unsignedLong = (function (_super) {\n    __extends(unsignedLong, _super);\n    function unsignedLong() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"unsignedLong\";\n        _this.typeErrorMsg = \"value is not an unsignedLong\";\n        _this.highestVal = 18446744073709551615;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return unsignedLong;\n}(nonNegativeInteger));\nvar unsignedInt = (function (_super) {\n    __extends(unsignedInt, _super);\n    function unsignedInt() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"unsignedInt\";\n        _this.typeErrorMsg = \"value is not an unsignedInt\";\n        _this.highestVal = 4294967295;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return unsignedInt;\n}(unsignedLong));\nvar unsignedShort = (function (_super) {\n    __extends(unsignedShort, _super);\n    function unsignedShort() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"unsignedShort\";\n        _this.typeErrorMsg = \"value is not an unsignedShort\";\n        _this.highestVal = 65535;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return unsignedShort;\n}(unsignedInt));\nvar unsignedByte = (function (_super) {\n    __extends(unsignedByte, _super);\n    function unsignedByte() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"unsignedByte\";\n        _this.typeErrorMsg = \"value is not an unsignedByte\";\n        _this.highestVal = 255;\n        _this.validParams = [\n            totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n            maxInclusiveP,\n        ];\n        return _this;\n    }\n    return unsignedByte;\n}(unsignedShort));\nvar boolean_ = (function (_super) {\n    __extends(boolean_, _super);\n    function boolean_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"boolean\";\n        _this.typeErrorMsg = \"not a valid boolean\";\n        _this.regexp = /^(1|0|true|false)$/;\n        _this.validParams = [patternP];\n        _this.needsContext = false;\n        return _this;\n    }\n    boolean_.prototype.convertValue = function (value) {\n        return (value === \"1\" || value === \"true\");\n    };\n    return boolean_;\n}(Base));\nvar B04 = \"[AQgw]\";\nvar B16 = \"[AEIMQUYcgkosw048]\";\nvar B64 = \"[A-Za-z0-9+/]\";\nvar B64S = \"(?:\" + B64 + \" ?)\";\nvar B16S = \"(?:\" + B16 + \" ?)\";\nvar B04S = \"(?:\" + B04 + \" ?)\";\nvar base64BinaryRe = new RegExp(\"^(?:(?:\" + B64S + \"{4})*(?:(?:\" + B64S + \"{3}\" + B64 + \")|(?:\" + B64S + \"{2}\" + B16S + \"=)|(?:\" +\n    (\"\" + B64S + B04S + \"= ?=)))?$\"));\nvar base64Binary = (function (_super) {\n    __extends(base64Binary, _super);\n    function base64Binary() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"base64Binary\";\n        _this.typeErrorMsg = \"not a valid base64Binary\";\n        _this.regexp = base64BinaryRe;\n        _this.needsContext = false;\n        _this.validParams = [lengthP, minLengthP, maxLengthP, patternP];\n        return _this;\n    }\n    base64Binary.prototype.convertValue = function (value) {\n        // We don't need to actually decode it.\n        return value.replace(/\\s/g, \"\");\n    };\n    base64Binary.prototype.valueLength = function (value) {\n        // Length of the decoded value.\n        return Math.floor((value.replace(/[\\s=]/g, \"\").length * 3) / 4);\n    };\n    return base64Binary;\n}(Base));\nvar hexBinary = (function (_super) {\n    __extends(hexBinary, _super);\n    function hexBinary() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"hexBinary\";\n        _this.typeErrorMsg = \"not a valid hexBinary\";\n        _this.regexp = /^(?:[0-9a-fA-F]{2})*$/;\n        _this.needsContext = false;\n        _this.validParams = [lengthP, minLengthP, maxLengthP, patternP];\n        return _this;\n    }\n    hexBinary.prototype.convertValue = function (value) {\n        return value;\n    };\n    hexBinary.prototype.valueLength = function (value) {\n        // Length of the byte list.\n        return value.length / 2;\n    };\n    return hexBinary;\n}(Base));\nvar doubleRe = new RegExp(\"^(?:(?:[-+]?INF)|(?:NaN)|(?:\" + decimalPattern + \"(?:[Ee]\" + integerPattern + \")?))$\");\nvar float_ = (function (_super) {\n    __extends(float_, _super);\n    function float_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"float\";\n        _this.typeErrorMsg = \"not a valid float\";\n        _this.regexp = doubleRe;\n        _this.needsContext = false;\n        _this.validParams = [\n            patternP, minInclusiveP, minExclusiveP, maxInclusiveP, maxExclusiveP,\n        ];\n        return _this;\n    }\n    float_.prototype.convertValue = function (value, context) {\n        return convertToInternalNumber(value);\n    };\n    return float_;\n}(Base));\nvar double_ = (function (_super) {\n    __extends(double_, _super);\n    function double_() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"double\";\n        _this.typeErrorMsg = \"not a valid double\";\n        return _this;\n    }\n    return double_;\n}(float_));\nvar QName = (function (_super) {\n    __extends(QName, _super);\n    function QName() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"QName\";\n        _this.typeErrorMsg = \"not a valid QName\";\n        _this.regexp = new RegExp(\"^(?:\" + xmlcharacters_1.xmlNcname + \":)?\" + xmlcharacters_1.xmlNcname + \"$\");\n        _this.needsContext = true;\n        _this.validParams = [patternP, lengthP, minLengthP, maxLengthP];\n        return _this;\n    }\n    QName.prototype.convertValue = function (value, context) {\n        var ret = context.resolver.resolveName(_super.prototype.convertValue.call(this, value));\n        if (ret === undefined) {\n            throw new errors_1.ValueValidationError([new errors_1.ValueError(\"cannot resolve the name \" + value)]);\n        }\n        return \"{\" + ret.ns + \"}\" + ret.name;\n    };\n    return QName;\n}(Base));\nvar NOTATION = (function (_super) {\n    __extends(NOTATION, _super);\n    function NOTATION() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"NOTATION\";\n        _this.typeErrorMsg = \"not a valid NOTATION\";\n        _this.regexp = new RegExp(\"^(?:\" + xmlcharacters_1.xmlNcname + \":)?\" + xmlcharacters_1.xmlNcname + \"$\");\n        _this.needsContext = true;\n        _this.validParams = [patternP, lengthP, minLengthP, maxLengthP];\n        return _this;\n    }\n    NOTATION.prototype.convertValue = function (value, context) {\n        var ret = context.resolver.resolveName(_super.prototype.convertValue.call(this, value));\n        if (ret === undefined) {\n            throw new errors_1.ValueValidationError([new errors_1.ValueError(\"cannot resolve the name \" + value)]);\n        }\n        return \"{\" + ret.ns + \"}\" + ret.name;\n    };\n    return NOTATION;\n}(Base));\nvar duration = (function (_super) {\n    __extends(duration, _super);\n    function duration() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"duration\";\n        _this.typeErrorMsg = \"not a valid duration\";\n        _this.regexp = \n        // tslint:disable-next-line:max-line-length\n        /^-?P(?!$)(?:\\d+Y)?(?:\\d+M)?(?:\\d+D)?(?:T(?!$)(?:\\d+H)?(?:\\d+M)?(?:\\d+(\\.\\d+)?S)?)?$/;\n        _this.validParams = [patternP];\n        _this.needsContext = false;\n        return _this;\n    }\n    return duration;\n}(Base));\nvar yearPattern = \"-?(?:[1-9]\\\\d*)?\\\\d{4}\";\nvar monthPattern = \"[01]\\\\d\";\nvar domPattern = \"[0-3]\\\\d\";\nvar timePattern = \"[012]\\\\d:[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d+)?\";\nvar tzPattern = \"(?:[+-][01]\\\\d:[0-5]\\\\d|Z)\";\nvar tzRe = new RegExp(tzPattern + \"$\");\nfunction isLeapYear(year) {\n    return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\nvar dateGroupingRe = new RegExp(\"^(\" + yearPattern + \")-(\" + monthPattern + \")-(\" + domPattern + \")T(\" + timePattern + \")\" +\n    (\"(\" + tzPattern + \"?)$\"));\nvar maxDoms = [undefined, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction checkDate(value) {\n    // The Date.parse method of JavaScript is not reliable.\n    var match = value.match(dateGroupingRe);\n    if (match === null) {\n        return false;\n    }\n    var year = match[1];\n    var leap = isLeapYear(Number(year));\n    var month = Number(match[2]);\n    if (month === 0 || month > 12) {\n        return false;\n    }\n    var dom = Number(match[3]);\n    // We cannot have an undefined value here... so...\n    // tslint:disable-next-line:no-non-null-assertion\n    var maxDom = maxDoms[month];\n    if (month === 2 && !leap) {\n        maxDom = 28;\n    }\n    if (dom === 0 || dom > maxDom) {\n        return false;\n    }\n    var timeParts = match[4].split(\":\");\n    var minutes = Number(timeParts[1]);\n    if (minutes > 59) {\n        return false;\n    }\n    var seconds = Number(timeParts[2]);\n    if (seconds > 59) {\n        return false;\n    }\n    // 24 is valid if minutes and seconds are at 0, otherwise 23 is the\n    // limit.\n    var hoursLimit = (minutes === 0 && seconds === 0) ? 24 : 23;\n    if (Number(timeParts[0]) > hoursLimit) {\n        return false;\n    }\n    if (match[5] !== undefined && match[5] !== \"\" && match[5] !== \"Z\") {\n        // We have a TZ\n        var tzParts = match[5].split(\":\");\n        // Slice: skip the sign.\n        var tzHours = Number(tzParts[0].slice(1));\n        if (tzHours > 14) {\n            return false;\n        }\n        var tzSeconds = Number(tzParts[1]);\n        if (tzSeconds > 59) {\n            return false;\n        }\n        if (tzHours === 14 && tzSeconds !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\nvar dateTime = (function (_super) {\n    __extends(dateTime, _super);\n    function dateTime() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"dateTime\";\n        _this.typeErrorMsg = \"not a valid dateTime\";\n        _this.regexp = new RegExp(\"^\" + yearPattern + \"-\" + monthPattern + \"-\" + domPattern +\n            (\"T\" + timePattern + tzPattern + \"?$\"));\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    dateTime.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret instanceof Array) {\n            return ret;\n        }\n        if (!checkDate(value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return dateTime;\n}(Base));\nvar time = (function (_super) {\n    __extends(time, _super);\n    function time() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"time\";\n        _this.typeErrorMsg = \"not a valid time\";\n        _this.regexp = new RegExp(\"^\" + timePattern + tzPattern + \"?$\");\n        _this.validParams = [patternP];\n        _this.needsContext = false;\n        return _this;\n    }\n    time.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // Date does not validate times, so set the date to something fake.\n        if (!checkDate(\"1901-01-01T\" + value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return time;\n}(Base));\nvar date = (function (_super) {\n    __extends(date, _super);\n    function date() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"date\";\n        _this.typeErrorMsg = \"not a valid date\";\n        _this.regexp = new RegExp(\"^\" + yearPattern + \"-\" + monthPattern + \"-\" + domPattern + tzPattern + \"?$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    date.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add time for Date() to parse it.\n        var match = value.match(tzRe);\n        value = match !== null ?\n            value.slice(0, match.index) + \"T00:00:00\" + match[0] :\n            value + \"T00:00:00\";\n        if (!checkDate(value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return date;\n}(Base));\nvar gYearMonth = (function (_super) {\n    __extends(gYearMonth, _super);\n    function gYearMonth() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gYearMonth\";\n        _this.typeErrorMsg = \"not a valid gYearMonth\";\n        _this.regexp = new RegExp(\"^\" + yearPattern + \"-\" + monthPattern + tzPattern + \"?$\");\n        _this.validParams = [patternP];\n        _this.needsContext = false;\n        return _this;\n    }\n    gYearMonth.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a day and time for Date() to parse it.\n        var match = value.match(tzRe);\n        value = match !== null ?\n            value.slice(0, match.index) + \"-01T00:00:00\" + match[0] :\n            value + \"-01T00:00:00\";\n        if (!checkDate(value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gYearMonth;\n}(Base));\nvar gYear = (function (_super) {\n    __extends(gYear, _super);\n    function gYear() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gYear\";\n        _this.typeErrorMsg = \"not a valid gYear\";\n        _this.regexp = new RegExp(\"^\" + yearPattern + tzPattern + \"?$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    gYear.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a month, a day and a time for Date() to parse it.\n        var match = value.match(tzRe);\n        value = match !== null ?\n            value.slice(0, match.index) + \"-01-01T00:00:00\" + match[0] :\n            value + \"-01-01T00:00:00\";\n        if (!checkDate(value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gYear;\n}(Base));\nvar gMonthDay = (function (_super) {\n    __extends(gMonthDay, _super);\n    function gMonthDay() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gMonthDay\";\n        _this.typeErrorMsg = \"not a valid gMonthDay\";\n        _this.regexp = new RegExp(\"^\" + monthPattern + \"-\" + domPattern + tzPattern + \"?$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    gMonthDay.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a year and a time for Date() to parse it.\n        var match = value.match(tzRe);\n        value = match !== null ?\n            value.slice(0, match.index) + \"T00:00:00\" + match[0] :\n            value + \"T00:00:00\";\n        // We always add 2000, which is a leap year, so 01-29 won't raise an\n        // error.\n        if (!checkDate(\"2000-\" + value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gMonthDay;\n}(Base));\nvar gDay = (function (_super) {\n    __extends(gDay, _super);\n    function gDay() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gDay\";\n        _this.typeErrorMsg = \"not a valid gDay\";\n        _this.regexp = new RegExp(\"^\" + domPattern + tzPattern + \"?$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    gDay.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a year and a time for Date() to parse it.\n        var match = value.match(tzRe);\n        value = match !== null ?\n            value.slice(0, match.index) + \"T00:00:00\" + match[0] :\n            value + \"T00:00:00\";\n        // We always add 2000, which is a leap year, so 01-29 won't raise an\n        // error.\n        if (!checkDate(\"2000-01-\" + value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gDay;\n}(Base));\nvar gMonth = (function (_super) {\n    __extends(gMonth, _super);\n    function gMonth() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"gMonth\";\n        _this.typeErrorMsg = \"not a valid gMonth\";\n        _this.regexp = new RegExp(\"^\" + monthPattern + tzPattern + \"?$\");\n        _this.needsContext = false;\n        _this.validParams = [patternP];\n        return _this;\n    }\n    gMonth.prototype.disallows = function (value, params) {\n        var ret = _super.prototype.disallows.call(this, value, params);\n        if (ret) {\n            return ret;\n        }\n        // We have to add a year and a time for Date() to parse it.\n        var match = value.match(tzRe);\n        value = match !== null ?\n            value.slice(0, match.index) + \"-01T00:00:00\" + match[0] :\n            value + \"-01T00:00:00\";\n        // We always add 2000, which is a leap year, so 01-29 won't raise an\n        // error.\n        if (!checkDate(\"2000-\" + value)) {\n            return [new errors_1.ValueError(this.typeErrorMsg)];\n        }\n        return false;\n    };\n    return gMonth;\n}(Base));\n// Generated from http://jmrware.com/articles/2009/uri_regexp/URI_regex.html\n// tslint:disable-next-line:max-line-length\nvar reJsRfc3986UriReference = /^(?:[A-Za-z][A-Za-z0-9+\\-.]*:(?:\\/\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9A-Fa-f]{1,4}:){6}|::(?:[0-9A-Fa-f]{1,4}:){5}|(?:[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}|(?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}|(?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:|(?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)(?:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\\.[A-Za-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-Za-z0-9\\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*)(?::[0-9]*)?(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|)(?:\\?(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?(?:\\#(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?|(?:\\/\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9A-Fa-f]{1,4}:){6}|::(?:[0-9A-Fa-f]{1,4}:){5}|(?:[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}|(?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}|(?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:|(?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)(?:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\\.[A-Za-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-Za-z0-9\\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*)(?::[0-9]*)?(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|(?:[A-Za-z0-9\\-._~!$&'()*+,;=@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|)(?:\\?(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?(?:\\#(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?)$/;\nvar anyURI = (function (_super) {\n    __extends(anyURI, _super);\n    function anyURI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"anyURI\";\n        _this.typeErrorMsg = \"not a valid anyURI\";\n        _this.regexp = reJsRfc3986UriReference;\n        _this.needsContext = false;\n        _this.validParams = [patternP, lengthP, minLengthP, maxLengthP];\n        return _this;\n    }\n    return anyURI;\n}(Base));\nvar types = [\n    string_,\n    normalizedString,\n    token,\n    language,\n    Name,\n    NCName,\n    NMTOKEN,\n    NMTOKENS,\n    ID,\n    IDREF,\n    IDREFS,\n    ENTITY,\n    ENTITIES,\n    decimal,\n    integer,\n    nonPositiveInteger,\n    negativeInteger,\n    nonNegativeInteger,\n    positiveInteger,\n    long_,\n    int_,\n    short_,\n    byte_,\n    unsignedLong,\n    unsignedInt,\n    unsignedShort,\n    unsignedByte,\n    boolean_,\n    base64Binary,\n    hexBinary,\n    float_,\n    double_,\n    QName,\n    NOTATION,\n    duration,\n    dateTime,\n    time,\n    date,\n    gYearMonth,\n    gYear,\n    gMonthDay,\n    gDay,\n    gMonth,\n    anyURI,\n];\nvar library = {\n    // tslint:disable-next-line: no-http-string\n    uri: \"http://www.w3.org/2001/XMLSchema-datatypes\",\n    types: {},\n};\nfor (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n    var type = types_1[_i];\n    var instance = new type();\n    library.types[instance.name] = instance;\n}\n/**\n * The XML Schema datatype library.\n */\nexports.xmlschema = library;\n//  LocalWords:  XMLSchema datatypes MPL whitespace param minLength maxLength\n//  LocalWords:  RNG rng failedOn totalDigits fractionDigits ValueError repr zA\n//  LocalWords:  ParamError maxInclusive maxExclusive NaN minInclusive params\n//  LocalWords:  minExclusive whitespaces parseParams unparsed XMLSChema NCName\n//  LocalWords:  normalizedString xmlNameChar NMTOKEN NMTOKENS IDREF xmlNcname\n//  LocalWords:  IDREFS decimalPattern integerPattern highestVal lowestVal AQgw\n//  LocalWords:  nonPositiveInteger negativeInteger nonNegativeInteger Za fA Ee\n//  LocalWords:  positiveInteger unsignedLong unsignedInt unsignedShort QName\n//  LocalWords:  unsignedByte AEIMQUYcgkosw hexBinary tzPattern yearPattern TZ\n//  LocalWords:  monthPattern domPattern timePattern dateTime gYearMonth gYear\n//  LocalWords:  gMonthDay gDay gMonth anyURI\n\n//# sourceMappingURL=xmlschema.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/datatypes/xmlschema.js\n// module id = 17\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``attribute`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = require(\"../errors\");\nvar base_1 = require(\"./base\");\n/**\n * A pattern for attributes.\n */\nvar Attribute = (function (_super) {\n    __extends(Attribute, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param name The qualified name of the attribute.\n     *\n     * @param pat The pattern contained by this one.\n     */\n    function Attribute(xmlPath, name, pat) {\n        var _this = _super.call(this, xmlPath, pat) || this;\n        _this.name = name;\n        return _this;\n    }\n    Attribute.prototype._prepare = function (namespaces) {\n        var nss = Object.create(null);\n        this.name._recordNamespaces(nss);\n        // A lack of namespace on an attribute should not be recorded.\n        delete nss[\"\"];\n        // Copy the resulting namespaces.\n        // tslint:disable-next-line:forin\n        for (var key in nss) {\n            namespaces[key] = 1;\n        }\n    };\n    Attribute.prototype._hasAttrs = function () {\n        return true;\n    };\n    return Attribute;\n}(base_1.OneSubpattern));\nexports.Attribute = Attribute;\n/**\n * Walker for [[Attribute]].\n */\nvar AttributeWalker = (function (_super) {\n    __extends(AttributeWalker, _super);\n    function AttributeWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof AttributeWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.seenName = walker.seenName;\n            _this.seenValue = walker.seenValue;\n            _this.subwalker = walker.subwalker !== undefined ?\n                walker.subwalker._clone(memo) : undefined;\n            // No need to clone; values are immutable.\n            _this.attrNameEvent = walker.attrNameEvent;\n            _this.neutralized = walker.neutralized;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.attrNameEvent = new base_1.Event(\"attributeName\", el.name);\n            _this.seenName = false;\n            _this.seenValue = false;\n            _this.neutralized = false;\n        }\n        return _this;\n    }\n    AttributeWalker.prototype._possible = function () {\n        // We've been suppressed!\n        if (this.suppressedAttributes) {\n            return new base_1.EventSet();\n        }\n        if (!this.seenName) {\n            return new base_1.EventSet(this.attrNameEvent);\n        }\n        else if (!this.seenValue) {\n            if (this.subwalker === undefined) {\n                this.subwalker = this.el.pat.newWalker(this.nameResolver);\n            }\n            var sub = this.subwalker._possible();\n            var ret_1 = new base_1.EventSet();\n            // Convert text events to attributeValue events.\n            sub.forEach(function (ev) {\n                if (ev.params[0] !== \"text\") {\n                    throw new Error(\"unexpected event type: \" + ev.params[0]);\n                }\n                ret_1.add(new base_1.Event(\"attributeValue\", ev.params[1]));\n            });\n            return ret_1;\n        }\n        return new base_1.EventSet();\n    };\n    AttributeWalker.prototype.possible = function () {\n        // _possible always return new sets.\n        return this._possible();\n    };\n    AttributeWalker.prototype.fireEvent = function (ev) {\n        if (this.suppressedAttributes || this.neutralized) {\n            return undefined;\n        }\n        if ((ev.params[0] === \"neutralizeAttribute\") &&\n            this.el.name.toString() === ev.params[1].toString()) {\n            this.neutralized = true;\n            return false;\n        }\n        if (this.seenName) {\n            if (!this.seenValue && ev.params[0] === \"attributeValue\") {\n                this.seenValue = true;\n                if (this.subwalker === undefined) {\n                    this.subwalker = this.el.pat.newWalker(this.nameResolver);\n                }\n                // Convert the attributeValue event to a text event.\n                var textEv = new base_1.Event(\"text\", ev.params[1]);\n                var ret = this.subwalker.fireEvent(textEv);\n                if (ret === undefined) {\n                    return [new errors_1.AttributeValueError(\"invalid attribute value\", this.el.name)];\n                }\n                // Attributes end immediately.\n                if (ret === false) {\n                    ret = this.subwalker.end();\n                }\n                return ret;\n            }\n        }\n        else if (ev.params[0] === \"attributeName\" &&\n            this.el.name.match(ev.params[1], ev.params[2])) {\n            this.seenName = true;\n            return false;\n        }\n        return undefined;\n    };\n    AttributeWalker.prototype._suppressAttributes = function () {\n        this.suppressedAttributes = true;\n    };\n    AttributeWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        return this.seenValue || this.neutralized;\n    };\n    AttributeWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (this.neutralized) {\n            return false;\n        }\n        if (!this.seenName) {\n            return [new errors_1.AttributeNameError(\"attribute missing\", this.el.name)];\n        }\n        else if (!this.seenValue) {\n            return [new errors_1.AttributeValueError(\"attribute value missing\", this.el.name)];\n        }\n        return false;\n    };\n    return AttributeWalker;\n}(base_1.Walker));\nbase_1.addWalker(Attribute, AttributeWalker);\n//  LocalWords:  RNG's MPL RNG attributeName attributeValue ev params\n//  LocalWords:  neutralizeAttribute\n\n//# sourceMappingURL=attribute.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/attribute.js\n// module id = 18\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``choice`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = require(\"../errors\");\nvar base_1 = require(\"./base\");\n/**\n * A pattern for ``<choice>``.\n */\nvar Choice = (function (_super) {\n    __extends(Choice, _super);\n    function Choice() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Choice;\n}(base_1.TwoSubpatterns));\nexports.Choice = Choice;\n/**\n * Walker for [[Choice]].\n */\nvar ChoiceWalker = (function (_super) {\n    __extends(ChoiceWalker, _super);\n    function ChoiceWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof ChoiceWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.chosen = walker.chosen;\n            _this.walkerA = walker.walkerA !== undefined ?\n                walker.walkerA._clone(memo) : undefined;\n            _this.walkerB = walker.walkerB !== undefined ?\n                walker.walkerB._clone(memo) : undefined;\n            _this.instantiatedWalkers = walker.instantiatedWalkers;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.chosen = false;\n            _this.instantiatedWalkers = false;\n        }\n        return _this;\n    }\n    ChoiceWalker.prototype._possible = function () {\n        this._instantiateWalkers();\n        if (this.possibleCached !== undefined) {\n            return this.possibleCached;\n        }\n        this.possibleCached = this.walkerA !== undefined ?\n            this.walkerA._possible() : undefined;\n        if (this.walkerB !== undefined) {\n            this.possibleCached = new base_1.EventSet(this.possibleCached);\n            var possibleB = this.walkerB._possible();\n            this.possibleCached.union(possibleB);\n        }\n        else if (this.possibleCached === undefined) {\n            this.possibleCached = new base_1.EventSet();\n        }\n        return this.possibleCached;\n    };\n    ChoiceWalker.prototype.fireEvent = function (ev) {\n        this._instantiateWalkers();\n        this.possibleCached = undefined;\n        // We purposely do not normalize this.walker_{a,b} to a boolean value\n        // because we do want `undefined` to be the result if the walkers are\n        // undefined.\n        var retA = this.walkerA !== undefined ?\n            this.walkerA.fireEvent(ev) : undefined;\n        var retB = this.walkerB !== undefined ?\n            this.walkerB.fireEvent(ev) : undefined;\n        if (retA !== undefined) {\n            this.chosen = true;\n            if (retB === undefined) {\n                this.walkerB = undefined;\n                return retA;\n            }\n            return retA;\n        }\n        if (retB !== undefined) {\n            this.chosen = true;\n            // We do not need to test if retA is undefined because we would not get\n            // here if it were not.\n            this.walkerA = undefined;\n            return retB;\n        }\n        return undefined;\n    };\n    ChoiceWalker.prototype._suppressAttributes = function () {\n        this._instantiateWalkers();\n        if (!this.suppressedAttributes) {\n            this.possibleCached = undefined; // no longer valid\n            this.suppressedAttributes = true;\n            if (this.walkerA !== undefined) {\n                this.walkerA._suppressAttributes();\n            }\n            if (this.walkerB !== undefined) {\n                this.walkerB._suppressAttributes();\n            }\n        }\n    };\n    ChoiceWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        this._instantiateWalkers();\n        var retA = false;\n        var retB = false;\n        if (attribute) {\n            retA = !this.el.patA._hasAttrs();\n            retB = !this.el.patB._hasAttrs();\n        }\n        retA = retA || (this.walkerA !== undefined &&\n            this.walkerA.canEnd(attribute));\n        retB = retB || (this.walkerB !== undefined &&\n            this.walkerB.canEnd(attribute));\n        // ChoiceWalker can end if any walker can end. The assignments earlier\n        // ensure that the logic works.\n        return retA || retB;\n    };\n    ChoiceWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        this._instantiateWalkers();\n        if (this.canEnd(attribute)) {\n            return false;\n        }\n        var retA = this.walkerA !== undefined &&\n            this.walkerA.end(attribute);\n        var retB = this.walkerB !== undefined &&\n            this.walkerB.end(attribute);\n        if (!retA && !retB) {\n            return false;\n        }\n        if (retA && !retB) {\n            return retA;\n        }\n        if (!retA && retB) {\n            return retB;\n        }\n        // If we are here both walkers exist and returned an error.\n        var namesA = [];\n        var namesB = [];\n        var notAChoiceError = false;\n        // tslint:disable-next-line:no-non-null-assertion\n        this.walkerA.possible().forEach(function (ev) {\n            if (ev.params[0] === \"enterStartTag\") {\n                namesA.push(ev.params[1]);\n            }\n            else {\n                notAChoiceError = true;\n            }\n        });\n        // The as boolean casts are necessary due to a flaw in the type inference\n        // done by TS. Without the cast, TS thinks notAChoiceError is necessarily\n        // false here and tslint issues a warning.\n        if (!notAChoiceError) {\n            // tslint:disable-next-line:no-non-null-assertion\n            this.walkerB.possible().forEach(function (ev) {\n                if (ev.params[0] === \"enterStartTag\") {\n                    namesB.push(ev.params[1]);\n                }\n                else {\n                    notAChoiceError = true;\n                }\n            });\n            if (!notAChoiceError) {\n                return [new errors_1.ChoiceError(namesA, namesB)];\n            }\n        }\n        // If we get here, we were not able to raise a ChoiceError, possibly\n        // because there was not enough information to decide among the two\n        // walkers. Return whatever error comes first.\n        return retA || retB;\n    };\n    /**\n     * Creates walkers for the patterns contained by this one. Calling this method\n     * multiple times is safe as the walkers are created once and only once.\n     */\n    ChoiceWalker.prototype._instantiateWalkers = function () {\n        if (!this.instantiatedWalkers) {\n            this.instantiatedWalkers = true;\n            this.walkerA = this.el.patA.newWalker(this.nameResolver);\n            this.walkerB = this.el.patB.newWalker(this.nameResolver);\n        }\n    };\n    return ChoiceWalker;\n}(base_1.Walker));\nbase_1.addWalker(Choice, ChoiceWalker);\n//  LocalWords:  RNG's MPL retA ChoiceWalker enterStartTag notAChoiceError\n//  LocalWords:  tslint ChoiceError\n\n//# sourceMappingURL=choice.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/choice.js\n// module id = 19\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``data`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar datatypes_1 = require(\"../datatypes\");\nvar errors_1 = require(\"../errors\");\nvar base_1 = require(\"./base\");\n/**\n * Data pattern.\n */\nvar Data = (function (_super) {\n    __extends(Data, _super);\n    /**\n     *\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param type The type of value.\n     *\n     * @param datatypeLibrary The URI of the datatype library to use.\n     *\n     * @param params The parameters from the RNG file.\n     *\n     * @param except The exception pattern.\n     */\n    // tslint:disable-next-line: no-reserved-keywords\n    function Data(xmlPath, type, datatypeLibrary, params, except) {\n        if (type === void 0) { type = \"token\"; }\n        if (datatypeLibrary === void 0) { datatypeLibrary = \"\"; }\n        var _this = _super.call(this, xmlPath) || this;\n        _this.type = type;\n        _this.datatypeLibrary = datatypeLibrary;\n        _this.except = except;\n        _this.datatype = datatypes_1.registry.get(_this.datatypeLibrary).types[_this.type];\n        if (_this.datatype === undefined) {\n            throw new Error(\"unknown type: \" + type);\n        }\n        _this.rngParams = params !== undefined ? params : [];\n        return _this;\n    }\n    Object.defineProperty(Data.prototype, \"params\", {\n        get: function () {\n            var ret = this._params;\n            if (ret != null) {\n                return ret;\n            }\n            ret = this._params = this.datatype.parseParams(this.xmlPath, this.rngParams);\n            return ret;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Data;\n}(base_1.Pattern));\nexports.Data = Data;\n/**\n * Walker for [[Data]].\n */\nvar DataWalker = (function (_super) {\n    __extends(DataWalker, _super);\n    function DataWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof DataWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.context = walker.context !== undefined ?\n                { resolver: _this.nameResolver } : undefined;\n            _this.matched = walker.matched;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo, \"as 2nd argument\");\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            // We completely ignore the possible exception when producing the\n            // possibilities. There is no clean way to specify such an exception.\n            _this.possibleCached = new base_1.EventSet(new base_1.Event(\"text\", _this.el.datatype.regexp));\n            _this.context = el.datatype.needsContext ?\n                { resolver: _this.nameResolver } : undefined;\n            _this.matched = false;\n        }\n        return _this;\n    }\n    DataWalker.prototype._possible = function () {\n        // possibleCached is necessarily defined because of the constructor's\n        // logic.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.possibleCached;\n    };\n    DataWalker.prototype.fireEvent = function (ev) {\n        if (this.matched) {\n            return undefined;\n        }\n        if (ev.params[0] !== \"text\") {\n            return undefined;\n        }\n        if (this.el.datatype.disallows(ev.params[1], this.el.params, this.context)) {\n            return undefined;\n        }\n        if (this.el.except !== undefined) {\n            var walker = this.el.except.newWalker(this.nameResolver);\n            var exceptRet = walker.fireEvent(ev);\n            // False, so the except does match the text, and so this pattern does\n            // not match it.\n            if (exceptRet === false) {\n                return undefined;\n            }\n            // Otherwise, it is undefined, in which case it means the except does\n            // not match the text, and we are fine. Or it would be possible for the\n            // walker to have returned an error but there is nothing we can do with\n            // such errors here.\n        }\n        this.matched = true;\n        this.possibleCached = new base_1.EventSet();\n        return false;\n    };\n    DataWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        // If we matched, we are done. salve does not allow text that appears in\n        // an XML element to be passed as two \"text\" events. So there is nothing\n        // to come that could falsify the match. (If a client *does* pass\n        // multiple text events one after the other, it is using salve\n        // incorrectly.)\n        if (this.matched) {\n            return true;\n        }\n        // We have not matched anything. Therefore we have to check whether we\n        // allow the empty string.\n        if (this.el.except !== undefined) {\n            var walker = this.el.except.newWalker(this.nameResolver);\n            if (walker.canEnd()) {\n                return false;\n            }\n        }\n        return !this.el.datatype.disallows(\"\", this.el.params, this.context);\n    };\n    DataWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (this.canEnd(attribute)) {\n            return false;\n        }\n        return [new errors_1.ValidationError(\"value required\")];\n    };\n    DataWalker.prototype._suppressAttributes = function () {\n        // No child attributes.\n    };\n    return DataWalker;\n}(base_1.Walker));\nbase_1.addWalker(Data, DataWalker);\n//  LocalWords:  RNG's MPL RNG nd possibleCached\n\n//# sourceMappingURL=data.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/data.js\n// module id = 20\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``element`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = require(\"../errors\");\nvar namePatterns = require(\"../name_patterns\");\nvar base_1 = require(\"./base\");\nvar not_allowed_1 = require(\"./not_allowed\");\n/**\n * A pattern for elements.\n */\nvar Element = (function (_super) {\n    __extends(Element, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param name The qualified name of the element.\n     *\n     * @param pat The pattern contained by this one.\n     */\n    function Element(xmlPath, name, pat) {\n        var _this = _super.call(this, xmlPath, pat) || this;\n        _this.name = name;\n        return _this;\n    }\n    Element.prototype._prepare = function (namespaces) {\n        this.name._recordNamespaces(namespaces);\n        this.pat._prepare(namespaces);\n    };\n    // addWalker(Element, ElementWalker); Nope... see below..\n    Element.prototype.newWalker = function (resolver) {\n        if (this.pat instanceof not_allowed_1.NotAllowed) {\n            return this.pat.newWalker(resolver);\n        }\n        // tslint:disable-next-line:no-use-before-declare\n        return ElementWalker.makeWalker(this, resolver);\n    };\n    Element.prototype._hasAttrs = function () {\n        return false;\n    };\n    Element.prototype._gatherElementDefinitions = function (memo) {\n        var key = this.name.toString();\n        if (memo[key] === undefined) {\n            memo[key] = [this];\n        }\n        else {\n            memo[key].push(this);\n        }\n    };\n    return Element;\n}(base_1.OneSubpattern));\nexports.Element = Element;\n/**\n *\n * Walker for [[Element]].\n */\nvar ElementWalker = (function (_super) {\n    __extends(ElementWalker, _super);\n    function ElementWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof ElementWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.seenName = walker.seenName;\n            _this.endedStartTag = walker.endedStartTag;\n            _this.closed = walker.closed;\n            _this.walker = walker.walker !== undefined ? walker.walker._clone(memo) :\n                undefined;\n            // No cloning needed since these are immutable.\n            _this.startTagEvent = walker.startTagEvent;\n            _this.endTagEvent = walker.endTagEvent;\n            _this.boundName = walker.boundName;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.seenName = false;\n            _this.endedStartTag = false;\n            _this.closed = false;\n            _this.startTagEvent = new base_1.Event(\"enterStartTag\", el.name);\n        }\n        return _this;\n    }\n    ElementWalker.makeWalker = function (el, nameResolver) {\n        return new ElementWalker(el, nameResolver);\n    };\n    ElementWalker.prototype._possible = function () {\n        if (!this.seenName) {\n            return new base_1.EventSet(this.startTagEvent);\n        }\n        else if (!this.endedStartTag) {\n            // If we have seen the name, then there is necessarily a walker.\n            // tslint:disable-next-line:no-non-null-assertion\n            var walker = this.walker;\n            var all = walker._possible();\n            var ret_1 = new base_1.EventSet();\n            // We use valueEvs to record whether an attributeValue is a\n            // possibility. If so, we must only return these possibilities and no\n            // other.\n            var valueEvs_1 = new base_1.EventSet();\n            all.forEach(function (poss) {\n                if (poss.params[0] === \"attributeValue\") {\n                    valueEvs_1.add(poss);\n                }\n                else if (poss.isAttributeEvent()) {\n                    ret_1.add(poss);\n                }\n            });\n            if (valueEvs_1.size() !== 0) {\n                ret_1 = valueEvs_1;\n            }\n            else if (walker.canEnd(true)) {\n                ret_1.add(ElementWalker._leaveStartTagEvent);\n            }\n            return ret_1;\n        }\n        else if (!this.closed) {\n            // If we have seen the name, then there is necessarily a walker.\n            // tslint:disable-next-line:no-non-null-assertion\n            var walker = this.walker;\n            var posses = new base_1.EventSet(walker._possible());\n            if (walker.canEnd()) {\n                posses.add(this.endTagEvent);\n            }\n            return posses;\n        }\n        return new base_1.EventSet();\n    };\n    // _possible always returns new sets\n    ElementWalker.prototype.possible = function () {\n        return this._possible();\n    };\n    ElementWalker.prototype.fireEvent = function (ev) {\n        if (!this.endedStartTag) {\n            if (!this.seenName) {\n                if (ev.params[0] === \"enterStartTag\" &&\n                    this.el.name.match(ev.params[1], ev.params[2])) {\n                    this.walker = this.el.pat.newWalker(this.nameResolver);\n                    this.seenName = true;\n                    this.boundName = new namePatterns.Name(\"\", ev.params[1], ev.params[2]);\n                    this.endTagEvent = new base_1.Event(\"endTag\", this.boundName);\n                    return false;\n                }\n            }\n            else if (ev.params[0] === \"leaveStartTag\") {\n                this.endedStartTag = true;\n                // If we have seen the name, then there is necessarily a walker.\n                // tslint:disable-next-line:no-non-null-assertion\n                var walker = this.walker;\n                var errs = walker.end(true);\n                var ret = [];\n                if (errs) {\n                    for (var _i = 0, errs_1 = errs; _i < errs_1.length; _i++) {\n                        var err = errs_1[_i];\n                        if (err instanceof errors_1.AttributeValueError ||\n                            err instanceof errors_1.AttributeNameError) {\n                            ret.push(err);\n                        }\n                        if (err instanceof errors_1.AttributeNameError) {\n                            // We generate an internal event designed to neutralize the\n                            // attributes that errored.\n                            walker.fireEvent(new base_1.Event([\"neutralizeAttribute\", err.name]));\n                        }\n                    }\n                }\n                // And suppress the attributes.\n                walker._suppressAttributes();\n                return ret.length !== 0 ? ret : false;\n            }\n            return this.walker !== undefined ? this.walker.fireEvent(ev) : undefined;\n        }\n        else if (!this.closed) {\n            // If we have ended the start tag, then there is necessarily a walker.\n            // tslint:disable-next-line:no-non-null-assertion\n            var walker = this.walker;\n            var ret = walker.fireEvent(ev);\n            if (ret === undefined) {\n                // Our subwalker did not handle the event, so we must do it here.\n                if (ev.params[0] === \"endTag\") {\n                    // boundName is necessarily defined by the time we get here.\n                    // tslint:disable-next-line:no-non-null-assertion\n                    if (this.boundName.match(ev.params[1], ev.params[2])) {\n                        this.closed = true;\n                        var errs = walker.end();\n                        ret = [];\n                        // Strip out the attributes errors as we've already reported\n                        // them.\n                        if (errs) {\n                            for (var _a = 0, errs_2 = errs; _a < errs_2.length; _a++) {\n                                var err = errs_2[_a];\n                                if (!(err instanceof errors_1.AttributeValueError ||\n                                    err instanceof errors_1.AttributeNameError)) {\n                                    ret.push(err);\n                                }\n                            }\n                        }\n                        return ret.length !== 0 ? ret : false;\n                    }\n                }\n                else if (ev.params[0] === \"leaveStartTag\") {\n                    return [new errors_1.ValidationError(\"unexpected leaveStartTag event; it is likely that \" +\n                            \"fireEvent is incorrectly called\")];\n                }\n            }\n            return ret;\n        }\n        return undefined;\n    };\n    ElementWalker.prototype._suppressAttributes = function () {\n        // _suppressAttributes does not cross element boundary\n        return;\n    };\n    ElementWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (attribute) {\n            return true;\n        }\n        return this.closed;\n    };\n    ElementWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (attribute) {\n            return false;\n        }\n        var ret = [];\n        if (!this.seenName) {\n            ret.push(new errors_1.ElementNameError(\"tag required\", this.el.name));\n        }\n        else if (!this.endedStartTag || !this.closed) {\n            if (this.walker !== undefined) {\n                var errs = this.walker.end();\n                if (errs) {\n                    ret = errs;\n                }\n            }\n            ret.push(this.endedStartTag ?\n                new errors_1.ElementNameError(\"tag not closed\", this.el.name) :\n                new errors_1.ElementNameError(\"start tag not terminated\", this.el.name));\n        }\n        if (ret.length > 0) {\n            return ret;\n        }\n        return false;\n    };\n    ElementWalker._leaveStartTagEvent = new base_1.Event(\"leaveStartTag\");\n    return ElementWalker;\n}(base_1.Walker));\n//  LocalWords:  RNG's MPL RNG addWalker ElementWalker leaveStartTag valueEvs\n//  LocalWords:  enterStartTag attributeValue endTag errored subwalker\n//  LocalWords:  neutralizeAttribute boundName fireEvent suppressAttributes\n\n//# sourceMappingURL=element.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/element.js\n// module id = 21\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_1 = require(\"./base\");\n/**\n * Pattern for ``<empty/>``.\n */\nvar Empty = (function (_super) {\n    __extends(Empty, _super);\n    function Empty() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Empty;\n}(base_1.Pattern));\nexports.Empty = Empty;\n/**\n * Walker for [[Empty]].\n *\n * @param el The pattern for which this walker was created.\n *\n * @param resolver Ignored by this walker.\n */\nvar EmptyWalker = (function (_super) {\n    __extends(EmptyWalker, _super);\n    function EmptyWalker(elOrWalker, memo) {\n        var _this = this;\n        if (elOrWalker instanceof EmptyWalker) {\n            memo = base_1.isHashMap(memo);\n            _this = _super.call(this, elOrWalker, memo) || this;\n        }\n        else {\n            _this = _super.call(this, elOrWalker) || this;\n            _this.possibleCached = new base_1.EventSet();\n        }\n        return _this;\n    }\n    EmptyWalker.prototype.possible = function () {\n        // Save some time by avoiding calling _possible. We always want to return a\n        // new object here.\n        return new base_1.EventSet();\n    };\n    EmptyWalker.prototype._possible = function () {\n        // possibleCached is necessarily defined because of the constructor's\n        // logic.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.possibleCached;\n    };\n    EmptyWalker.prototype.fireEvent = function (ev) {\n        if ((ev === base_1.emptyEvent) ||\n            ((ev.params[0] === \"text\") &&\n                (ev.params[1].trim() === \"\"))) {\n            return false;\n        }\n        return undefined;\n    };\n    return EmptyWalker;\n}(base_1.Walker));\nexports.EmptyWalker = EmptyWalker;\nbase_1.addWalker(Empty, EmptyWalker);\n//  LocalWords:  RNG's MPL possibleCached\n\n//# sourceMappingURL=empty.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/empty.js\n// module id = 22\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``group`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = require(\"../errors\");\nvar base_1 = require(\"./base\");\n/**\n * A pattern for ``<group>``.\n */\nvar Group = (function (_super) {\n    __extends(Group, _super);\n    function Group() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Group;\n}(base_1.TwoSubpatterns));\nexports.Group = Group;\n/**\n * Walker for [[Group]].\n */\nvar GroupWalker = (function (_super) {\n    __extends(GroupWalker, _super);\n    function GroupWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof GroupWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.hitA = walker.hitA;\n            _this.endedA = walker.endedA;\n            _this.hitB = walker.hitB;\n            _this.walkerA = walker.walkerA !== undefined ?\n                walker.walkerA._clone(memo) : undefined;\n            _this.walkerB = walker.walkerB !== undefined ?\n                walker.walkerB._clone(memo) : undefined;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.hitA = false;\n            _this.endedA = false;\n            _this.hitB = false;\n        }\n        return _this;\n    }\n    GroupWalker.prototype._possible = function () {\n        this._instantiateWalkers();\n        if (this.possibleCached !== undefined) {\n            return this.possibleCached;\n        }\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable:no-non-null-assertion\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        // tslint:enable:no-non-null-assertion\n        this.possibleCached = (!this.endedA) ? walkerA._possible() : undefined;\n        if (this.suppressedAttributes) {\n            // If we are in the midst of processing walker a and it cannot end yet,\n            // then we do not want to see anything from b.\n            if (this.endedA || walkerA.canEnd()) {\n                this.possibleCached = new base_1.EventSet(this.possibleCached);\n                this.possibleCached.union(walkerB._possible());\n            }\n        }\n        else {\n            var possibleB = walkerB._possible();\n            // Attribute events are still possible event if the first walker is not\n            // done with.\n            if ((!this.endedA || this.hitB) && !walkerA.canEnd()) {\n                // Narrow it down to attribute events...\n                possibleB = possibleB.filter(function (x) { return x.isAttributeEvent(); });\n            }\n            this.possibleCached = new base_1.EventSet(this.possibleCached);\n            this.possibleCached.union(possibleB);\n        }\n        // Necessarily defined once we get here.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.possibleCached;\n    };\n    GroupWalker.prototype.fireEvent = function (ev) {\n        this._instantiateWalkers();\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable:no-non-null-assertion\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        // tslint:enable:no-non-null-assertion\n        this.possibleCached = undefined;\n        if (!this.endedA) {\n            var retA = walkerA.fireEvent(ev);\n            if (retA !== undefined) {\n                this.hitA = true;\n                return retA;\n            }\n            // We must return right away if walkerA cannot yet end. Only attribute\n            // events are allowed to move forward.\n            if (!ev.isAttributeEvent() && !walkerA.canEnd()) {\n                return undefined;\n            }\n        }\n        var retB = walkerB.fireEvent(ev);\n        if (retB !== undefined) {\n            this.hitB = true;\n        }\n        // Non-attribute event: if walker b matched the event then we must end\n        // walkerA, if we've not already done so.\n        if (!ev.isAttributeEvent() && retB !== undefined && !this.endedA) {\n            var endRet = walkerA.end();\n            this.endedA = true;\n            // Combine the possible errors.\n            if (!retB) {\n                // retB must be false, because retB === undefined has been\n                // eliminated above; toss it.\n                retB = endRet;\n            }\n            else if (endRet) {\n                retB = retB.concat(endRet);\n            }\n        }\n        return retB;\n    };\n    GroupWalker.prototype._suppressAttributes = function () {\n        this._instantiateWalkers();\n        if (!this.suppressedAttributes) {\n            this.possibleCached = undefined; // no longer valid\n            this.suppressedAttributes = true;\n            // Both walkers are necessarily defined because of the call to\n            // _instantiateWalkers.\n            //\n            // tslint:disable:no-non-null-assertion\n            this.walkerA._suppressAttributes();\n            this.walkerB._suppressAttributes();\n            // tslint:enable:no-non-null-assertion\n        }\n    };\n    GroupWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        this._instantiateWalkers();\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable:no-non-null-assertion\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        // tslint:enable:no-non-null-assertion\n        if (attribute) {\n            var aHas = this.el.patA._hasAttrs();\n            var bHas = this.el.patB._hasAttrs();\n            if (aHas && bHas) {\n                return walkerA.canEnd(attribute) && walkerB.canEnd(attribute);\n            }\n            else if (aHas) {\n                return walkerA.canEnd(true);\n            }\n            else if (bHas) {\n                return walkerB.canEnd(true);\n            }\n            return true;\n        }\n        return walkerA.canEnd(attribute) && walkerB.canEnd(attribute);\n    };\n    GroupWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (this.canEnd(attribute)) {\n            return false;\n        }\n        var ret;\n        // Both walkers are necessarily defined because of the call to canEnd.\n        //\n        // tslint:disable:no-non-null-assertion\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        // tslint:enable:no-non-null-assertion\n        if (attribute) {\n            var aHas = this.el.patA._hasAttrs();\n            var bHas = this.el.patB._hasAttrs();\n            if (aHas) {\n                // This should not happen. this.endedA is to become true when we run\n                // into a non-attribute event that matches. This can happen only once we\n                // have deal with all attributes.\n                if (this.endedA) {\n                    throw new Error(\"invalid state: endedA is true but we are processing attributes\");\n                }\n                ret = walkerA.end(true);\n                if (bHas) {\n                    var endB = walkerB.end(true);\n                    if (endB) {\n                        ret = ret ? ret.concat(endB) : endB;\n                    }\n                }\n                return ret;\n            }\n            if (bHas) {\n                return walkerB.end(true);\n            }\n            return false;\n        }\n        var retA = false;\n        // Don't end it more than once.\n        if (!this.endedA) {\n            retA = walkerA.end(false);\n            // If we get here and the only errors we get are attribute errors,\n            // we must move on to check the second walker too.\n            if (retA) {\n                for (var _i = 0, retA_1 = retA; _i < retA_1.length; _i++) {\n                    var err = retA_1[_i];\n                    if (!(err instanceof errors_1.AttributeValueError ||\n                        err instanceof errors_1.AttributeNameError)) {\n                        // We ran into a non-attribute error. We can stop here.\n                        return retA;\n                    }\n                }\n            }\n        }\n        var retB = walkerB.end(false);\n        if (retB) {\n            if (!retA) {\n                return retB;\n            }\n            else {\n                return retA.concat(retB);\n            }\n        }\n        return retA;\n    };\n    /**\n     * Creates walkers for the patterns contained by this one. Calling this\n     * method multiple times is safe as the walkers are created once and only\n     * once.\n     */\n    GroupWalker.prototype._instantiateWalkers = function () {\n        if (this.walkerA === undefined) {\n            this.walkerA = this.el.patA.newWalker(this.nameResolver);\n            this.walkerB = this.el.patB.newWalker(this.nameResolver);\n        }\n    };\n    return GroupWalker;\n}(base_1.Walker));\nbase_1.addWalker(Group, GroupWalker);\n//  LocalWords:  RNG's MPL instantiateWalkers walkerA retB canEnd endedA\n\n//# sourceMappingURL=group.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/group.js\n// module id = 23\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_1 = require(\"./base\");\n/**\n * A pattern for ``<interleave>``.\n */\nvar Interleave = (function (_super) {\n    __extends(Interleave, _super);\n    function Interleave() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Interleave;\n}(base_1.TwoSubpatterns));\nexports.Interleave = Interleave;\n/**\n * Walker for [[Interleave]].\n */\nvar InterleaveWalker = (function (_super) {\n    __extends(InterleaveWalker, _super);\n    function InterleaveWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof InterleaveWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.inA = walker.inA;\n            _this.inB = walker.inB;\n            _this.walkerA = walker.walkerA !== undefined ?\n                walker.walkerA._clone(memo) : undefined;\n            _this.walkerB = walker.walkerB !== undefined ?\n                walker.walkerB._clone(memo) : undefined;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.inA = false;\n            _this.inB = false;\n        }\n        return _this;\n    }\n    InterleaveWalker.prototype._possible = function () {\n        this._instantiateWalkers();\n        if (this.possibleCached !== undefined) {\n            return this.possibleCached;\n        }\n        if (this.inA && this.inB) {\n            // It due to the restrictions imposed by Relax NG, it should not be\n            // possible to be both inA and inB.\n            throw new Error(\"impossible state\");\n        }\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable:no-non-null-assertion\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        // tslint:enable:no-non-null-assertion\n        if (this.inA && !walkerA.canEnd()) {\n            this.possibleCached = walkerA._possible();\n        }\n        else if (this.inB && !walkerB.canEnd()) {\n            this.possibleCached = walkerB._possible();\n        }\n        if (this.possibleCached === undefined) {\n            this.possibleCached = walkerA.possible();\n            this.possibleCached.union(walkerB._possible());\n        }\n        return this.possibleCached;\n    };\n    InterleaveWalker.prototype.fireEvent = function (ev) {\n        this._instantiateWalkers();\n        this.possibleCached = undefined;\n        if (this.inA && this.inB) {\n            // It due to the restrictions imposed by Relax NG, it should not be\n            // possible to be both inA and inB.\n            throw new Error(\"impossible state\");\n        }\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable:no-non-null-assertion\n        var walkerA = this.walkerA;\n        var walkerB = this.walkerB;\n        // tslint:enable:no-non-null-assertion\n        var retA;\n        var retB;\n        if (!this.inA && !this.inB) {\n            retA = walkerA.fireEvent(ev);\n            if (retA === false) {\n                this.inA = true;\n                return false;\n            }\n            // The constraints on interleave do not allow for two child patterns of\n            // interleave to match. So if the first walker matched, the second\n            // cannot. So we don't have to fireEvent on the second walker if the first\n            // matched.\n            retB = walkerB.fireEvent(ev);\n            if (retB === false) {\n                this.inB = true;\n                return false;\n            }\n            if (retB === undefined) {\n                return retA;\n            }\n            if (retA === undefined) {\n                return retB;\n            }\n            return retA.concat(retB);\n        }\n        else if (this.inA) {\n            retA = walkerA.fireEvent(ev);\n            if (retA instanceof Array || retA === false) {\n                return retA;\n            }\n            // If we got here, retA === undefined\n            retB = walkerB.fireEvent(ev);\n            if (retB === false) {\n                this.inA = false;\n                this.inB = true;\n                return false;\n            }\n        }\n        else {\n            retB = walkerB.fireEvent(ev);\n            if (retB instanceof Array || retB === false) {\n                return retB;\n            }\n            // If we got here, retB === undefined\n            retA = walkerA.fireEvent(ev);\n            if (retA === false) {\n                this.inA = true;\n                this.inB = false;\n                return false;\n            }\n        }\n        return undefined;\n    };\n    InterleaveWalker.prototype._suppressAttributes = function () {\n        this._instantiateWalkers();\n        if (!this.suppressedAttributes) {\n            this.possibleCached = undefined; // no longer valid\n            this.suppressedAttributes = true;\n            // Both walkers are necessarily defined because of the call to\n            // _instantiateWalkers.\n            //\n            // tslint:disable:no-non-null-assertion\n            this.walkerA._suppressAttributes();\n            this.walkerB._suppressAttributes();\n            // tslint:enable:no-non-null-assertion\n        }\n    };\n    InterleaveWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        this._instantiateWalkers();\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.walkerA.canEnd(attribute) && this.walkerB.canEnd(attribute);\n    };\n    InterleaveWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        this._instantiateWalkers();\n        // Both walkers are necessarily defined because of the call to\n        // _instantiateWalkers.\n        //\n        // tslint:disable:no-non-null-assertion\n        var retA = this.walkerA.end(attribute);\n        var retB = this.walkerB.end(attribute);\n        // tslint:enable:no-non-null-assertion\n        if (retA && !retB) {\n            return retA;\n        }\n        if (retB && !retA) {\n            return retB;\n        }\n        if (retA && retB) {\n            return retA.concat(retB);\n        }\n        return false;\n    };\n    /**\n     * Creates walkers for the patterns contained by this one. Calling this method\n     * multiple times is safe as the walkers are created once and only once.\n     */\n    InterleaveWalker.prototype._instantiateWalkers = function () {\n        if (this.walkerA === undefined) {\n            this.walkerA = this.el.patA.newWalker(this.nameResolver);\n        }\n        if (this.walkerB === undefined) {\n            this.walkerB = this.el.patB.newWalker(this.nameResolver);\n        }\n    };\n    return InterleaveWalker;\n}(base_1.Walker));\nbase_1.addWalker(Interleave, InterleaveWalker);\n//  LocalWords:  RNG's MPL NG inA inB instantiateWalkers fireEvent retA retB\n\n//# sourceMappingURL=interleave.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/interleave.js\n// module id = 24\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``list`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar errors_1 = require(\"../errors\");\nvar base_1 = require(\"./base\");\n/**\n * List pattern.\n */\nvar List = (function (_super) {\n    __extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return List;\n}(base_1.OneSubpattern));\nexports.List = List;\n/**\n * Walker for [[List]].\n *\n */\nvar ListWalker = (function (_super) {\n    __extends(ListWalker, _super);\n    function ListWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof ListWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo, \"as 2nd argument\");\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.subwalker = walker.subwalker._clone(memo);\n            _this.seenTokens = walker.seenTokens;\n            _this.matched = walker.matched;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo, \"as 2nd argument\");\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.subwalker = el.pat.newWalker(_this.nameResolver);\n            _this.seenTokens = false;\n            _this.matched = false;\n        }\n        return _this;\n    }\n    ListWalker.prototype.fireEvent = function (ev) {\n        // Only these two types can match.\n        if (ev.params[0] !== \"text\") {\n            return undefined;\n        }\n        var trimmed = ev.params[1].trim();\n        // The list walker cannot send empty strings to its children because it\n        // validates a list of **tokens**.\n        if (trimmed === \"\") {\n            return false;\n        }\n        this.seenTokens = true;\n        var tokens = trimmed.split(/\\s+/);\n        for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n            var token = tokens_1[_i];\n            var ret = this.subwalker.fireEvent(new base_1.Event(ev.params[0], token));\n            if (ret !== false) {\n                return ret;\n            }\n        }\n        this.matched = true;\n        return false;\n    };\n    ListWalker.prototype._suppressAttributes = function () {\n        // Lists cannot contain attributes.\n    };\n    ListWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (!this.seenTokens) {\n            return (this.subwalker.fireEvent(base_1.emptyEvent) === false);\n        }\n        return this.subwalker.canEnd(attribute);\n    };\n    ListWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        var ret = this.subwalker.end(attribute);\n        if (ret !== false) {\n            return ret;\n        }\n        if (this.canEnd(attribute)) {\n            return false;\n        }\n        return [new errors_1.ValidationError(\"unfulfilled list\")];\n    };\n    return ListWalker;\n}(base_1.SingleSubwalker));\nbase_1.addWalker(List, ListWalker);\n//  LocalWords:  RNG's MPL nd\n\n//# sourceMappingURL=list.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/list.js\n// module id = 25\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_1 = require(\"./base\");\n/**\n * A pattern for ``<oneOrMore>``.\n */\nvar OneOrMore = (function (_super) {\n    __extends(OneOrMore, _super);\n    function OneOrMore() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return OneOrMore;\n}(base_1.OneSubpattern));\nexports.OneOrMore = OneOrMore;\n/**\n * Walker for [[OneOrMore]]\n */\nvar OneOrMoreWalker = (function (_super) {\n    __extends(OneOrMoreWalker, _super);\n    function OneOrMoreWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof OneOrMoreWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo);\n            _this = _super.call(this, walker, memo) || this;\n            _this.seenOnce = walker.seenOnce;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.currentIteration = walker.currentIteration !== undefined ?\n                walker.currentIteration._clone(memo) : undefined;\n            _this.nextIteration = walker.nextIteration !== undefined ?\n                walker.nextIteration._clone(memo) : undefined;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo);\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.seenOnce = false;\n        }\n        return _this;\n    }\n    OneOrMoreWalker.prototype._possible = function () {\n        if (this.possibleCached !== undefined) {\n            return this.possibleCached;\n        }\n        this._instantiateCurrentIteration();\n        // currentIteration is necessarily defined here due to the previous call.\n        // tslint:disable-next-line:no-non-null-assertion\n        this.possibleCached = this.currentIteration._possible();\n        // tslint:disable-next-line:no-non-null-assertion\n        if (this.currentIteration.canEnd()) {\n            this.possibleCached = new base_1.EventSet(this.possibleCached);\n            this._instantiateNextIteration();\n            // nextIteration is necessarily defined here due to the previous call.\n            // tslint:disable-next-line:no-non-null-assertion\n            var nextPossible = this.nextIteration._possible();\n            this.possibleCached.union(nextPossible);\n        }\n        return this.possibleCached;\n    };\n    OneOrMoreWalker.prototype.fireEvent = function (ev) {\n        this.possibleCached = undefined;\n        this._instantiateCurrentIteration();\n        // currentIteration is necessarily defined here due to the previous call.\n        // tslint:disable-next-line:no-non-null-assertion\n        var currentIteration = this.currentIteration;\n        var ret = currentIteration.fireEvent(ev);\n        if (ret === false) {\n            this.seenOnce = true;\n        }\n        if (ret !== undefined) {\n            return ret;\n        }\n        if (this.seenOnce && currentIteration.canEnd()) {\n            ret = currentIteration.end();\n            if (ret) {\n                throw new Error(\"internal error; canEnd() returns true but end() fails\");\n            }\n            this._instantiateNextIteration();\n            // nextIteration is necessarily defined here due to the previous call.\n            // tslint:disable-next-line:no-non-null-assertion\n            var nextRet = this.nextIteration.fireEvent(ev);\n            if (nextRet === false) {\n                this.currentIteration = this.nextIteration;\n                this.nextIteration = undefined;\n            }\n            return nextRet;\n        }\n        return undefined;\n    };\n    OneOrMoreWalker.prototype._suppressAttributes = function () {\n        // A oneOrMore element can happen if we have the pattern ``(attribute * {\n        // text })+`` for instance. Once converted to the simplified RNG, it\n        // becomes:\n        //\n        // ``<oneOrMore><attribute><anyName/><rng:text/></attribute></oneOrMore>``\n        //\n        // An attribute in ``oneOrMore`` cannot happen when ``anyName`` is not used\n        // because an attribute of any given name cannot be repeated.\n        //\n        this._instantiateCurrentIteration();\n        if (!this.suppressedAttributes) {\n            this.suppressedAttributes = true;\n            this.possibleCached = undefined; // No longer valid.\n            // currentIteration is necessarily defined here...\n            // tslint:disable-next-line:no-non-null-assertion\n            this.currentIteration._suppressAttributes();\n            if (this.nextIteration !== undefined) {\n                this.nextIteration._suppressAttributes();\n            }\n        }\n    };\n    OneOrMoreWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (attribute) {\n            if (!this.el.pat._hasAttrs()) {\n                return true;\n            }\n            this._instantiateCurrentIteration();\n            // currentIteration is necessarily defined here due to the previous call.\n            // tslint:disable-next-line:no-non-null-assertion\n            return this.currentIteration.canEnd(true);\n        }\n        // currentIteration is necessarily defined here.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.seenOnce && this.currentIteration.canEnd();\n    };\n    OneOrMoreWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (this.canEnd(attribute)) {\n            return false;\n        }\n        // Undefined currentIteration can happen in rare cases.\n        this._instantiateCurrentIteration();\n        // currentIteration is necessarily defined here due to the previous call.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.currentIteration.end(attribute);\n    };\n    OneOrMoreWalker.prototype._instantiateCurrentIteration = function () {\n        if (this.currentIteration === undefined) {\n            this.currentIteration = this.el.pat.newWalker(this.nameResolver);\n        }\n    };\n    OneOrMoreWalker.prototype._instantiateNextIteration = function () {\n        if (this.nextIteration === undefined) {\n            this.nextIteration = this.el.pat.newWalker(this.nameResolver);\n            // Whereas _suppressAttributes calls _instantiateCurrentIteration() so\n            // that currentIteration is always existing and its _suppressAttributes()\n            // method is called before _suppressAttributes() returns, the same is not\n            // true of nextIteration. So if we create it **after**\n            // _suppressAttributes() was called we need to call _suppressAttributes()\n            // on it.\n            if (this.suppressedAttributes) {\n                this.nextIteration._suppressAttributes();\n            }\n        }\n    };\n    return OneOrMoreWalker;\n}(base_1.Walker));\nbase_1.addWalker(OneOrMore, OneOrMoreWalker);\n//  LocalWords:  RNG's MPL currentIteration nextIteration canEnd oneOrMore rng\n//  LocalWords:  anyName suppressAttributes instantiateCurrentIteration\n\n//# sourceMappingURL=one_or_more.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/one_or_more.js\n// module id = 26\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern for RNG's ``param`` element.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar base_1 = require(\"./base\");\n/**\n * This is a defunct pattern. During the processing of the RNG file all\n * ``param`` elements are converted into parameters to [[\"patterns/data\".Data]]\n * so we never end up with a converted file that contains an instance of this\n * class.\n */\nvar Param = (function (_super) {\n    __extends(Param, _super);\n    function Param(xmlPath) {\n        var _this = _super.call(this, xmlPath) || this;\n        throw new Error(\"this pattern is a placeholder and should never actually \" +\n            \"be used\");\n        return _this;\n    }\n    return Param;\n}(base_1.Pattern));\nexports.Param = Param;\n//  LocalWords:  RNG's MPL\n\n//# sourceMappingURL=param.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/param.js\n// module id = 27\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_1 = require(\"./base\");\nvar not_allowed_1 = require(\"./not_allowed\");\n/**\n * Pattern for ``<text/>``.\n */\nvar Text = (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Text;\n}(base_1.Pattern));\nexports.Text = Text;\n/**\n *\n * Walker for [[Text]]\n *\n */\nvar TextWalker = (function (_super) {\n    __extends(TextWalker, _super);\n    function TextWalker(elOrWalker, memo) {\n        var _this = this;\n        if (elOrWalker instanceof not_allowed_1.NotAllowedWalker) {\n            var walker = elOrWalker;\n            memo = base_1.isHashMap(memo);\n            _this = _super.call(this, walker, memo) || this;\n        }\n        else {\n            _this = _super.call(this, elOrWalker) || this;\n            _this.possibleCached = new base_1.EventSet(TextWalker._textEvent);\n        }\n        return _this;\n    }\n    TextWalker.prototype._possible = function () {\n        // possibleCached is necessarily defined because of the constructor's\n        // logic.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.possibleCached;\n    };\n    TextWalker.prototype.fireEvent = function (ev) {\n        return (ev.params[0] === \"text\") ? false : undefined;\n    };\n    TextWalker._textEvent = new base_1.Event(\"text\", /^.*$/);\n    return TextWalker;\n}(base_1.Walker));\nbase_1.addWalker(Text, TextWalker);\n//  LocalWords:  RNG's MPL possibleCached\n\n//# sourceMappingURL=text.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/text.js\n// module id = 28\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Pattern and walker for RNG's ``list`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nvar datatypes_1 = require(\"../datatypes\");\nvar errors_1 = require(\"../errors\");\nvar name_resolver_1 = require(\"../name_resolver\");\nvar base_1 = require(\"./base\");\n/**\n * Value pattern.\n */\nvar Value = (function (_super) {\n    __extends(Value, _super);\n    /**\n     * @param xmlPath This is a string which uniquely identifies the\n     * element from the simplified RNG tree. Used in debugging.\n     *\n     * @param value The value expected in the document.\n     *\n     * @param type The type of value. ``undefined`` means\n     * ``\"token\"``.\n     *\n     * @param datatypeLibrary The URI of the datatype library to\n     * use. ``undefined`` means use the builtin library.\n     *\n     * @param ns The namespace in which to interpret the value.\n     */\n    // tslint:disable-next-line: no-reserved-keywords\n    function Value(xmlPath, value, type, datatypeLibrary, ns) {\n        if (type === void 0) { type = \"token\"; }\n        if (datatypeLibrary === void 0) { datatypeLibrary = \"\"; }\n        if (ns === void 0) { ns = \"\"; }\n        var _this = _super.call(this, xmlPath) || this;\n        _this.type = type;\n        _this.datatypeLibrary = datatypeLibrary;\n        _this.ns = ns;\n        _this.datatype = datatypes_1.registry.get(_this.datatypeLibrary).types[_this.type];\n        if (_this.datatype === undefined) {\n            throw new Error(\"unknown type: \" + type);\n        }\n        _this.rawValue = value;\n        return _this;\n    }\n    Object.defineProperty(Value.prototype, \"value\", {\n        get: function () {\n            var ret = this._value;\n            if (ret != null) {\n                return ret;\n            }\n            // We construct a pseudo-context representing the context in the schema\n            // file.\n            var context;\n            if (this.datatype.needsContext) {\n                var nr = new name_resolver_1.NameResolver();\n                nr.definePrefix(\"\", this.ns);\n                context = { resolver: nr };\n            }\n            ret = this._value = this.datatype.parseValue(this.rawValue, context);\n            return ret;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Value;\n}(base_1.Pattern));\nexports.Value = Value;\n/**\n * Walker for [[Value]].\n */\nvar ValueWalker = (function (_super) {\n    __extends(ValueWalker, _super);\n    function ValueWalker(elOrWalker, nameResolverOrMemo) {\n        var _this = this;\n        if (elOrWalker instanceof ValueWalker) {\n            var walker = elOrWalker;\n            var memo = base_1.isHashMap(nameResolverOrMemo, \"as 2nd argument\");\n            _this = _super.call(this, walker, memo) || this;\n            _this.nameResolver = _this._cloneIfNeeded(walker.nameResolver, memo);\n            _this.context = walker.context !== undefined ?\n                { resolver: _this.nameResolver } : undefined;\n            _this.matched = walker.matched;\n        }\n        else {\n            var el = elOrWalker;\n            var nameResolver = base_1.isNameResolver(nameResolverOrMemo, \"as 2nd argument\");\n            _this = _super.call(this, el) || this;\n            _this.nameResolver = nameResolver;\n            _this.possibleCached = new base_1.EventSet(new base_1.Event(\"text\", el.rawValue));\n            _this.context = el.datatype.needsContext ?\n                { resolver: _this.nameResolver } : undefined;\n            _this.matched = false;\n        }\n        return _this;\n    }\n    ValueWalker.prototype._possible = function () {\n        // possibleCached is necessarily defined because of the constructor's\n        // logic.\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.possibleCached;\n    };\n    ValueWalker.prototype.fireEvent = function (ev) {\n        if (this.matched) {\n            return undefined;\n        }\n        if (ev.params[0] !== \"text\") {\n            return undefined;\n        }\n        if (!this.el.datatype.equal(ev.params[1], this.el.value, this.context)) {\n            return undefined;\n        }\n        this.matched = true;\n        this.possibleCached = new base_1.EventSet();\n        return false;\n    };\n    ValueWalker.prototype.canEnd = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        return this.matched || this.el.rawValue === \"\";\n    };\n    ValueWalker.prototype.end = function (attribute) {\n        if (attribute === void 0) { attribute = false; }\n        if (this.canEnd(attribute)) {\n            return false;\n        }\n        return [new errors_1.ValidationError(\"value required: \" + this.el.rawValue)];\n    };\n    ValueWalker.prototype._suppressAttributes = function () {\n        // No child attributes.\n    };\n    return ValueWalker;\n}(base_1.Walker));\nbase_1.addWalker(Value, ValueWalker);\n//  LocalWords:  RNG's MPL RNG nd possibleCached\n\n//# sourceMappingURL=value.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns/value.js\n// module id = 29\n// module chunks = 0 1","\"use strict\";\n/**\n * A mock implementation of Node's util package. This module implements only\n * what is actually used in salve.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A mock of Node's ``util.inspect``.\n */\nfunction inspect(x) {\n    if (x === undefined) {\n        return \"undefined\";\n    }\n    if (x === null) {\n        return \"null\";\n    }\n    return x.toString();\n}\nexports.inspect = inspect;\n//  LocalWords:  Mangalam MPL Dubeau util\n\n//# sourceMappingURL=util.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/util.js\n// module id = 30\n// module chunks = 0 1","\"use strict\";\n/**\n * RNG-based validator.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = \"4.3.0\";\nvar patterns_1 = require(\"./patterns\");\nexports.eventsToTreeString = patterns_1.eventsToTreeString;\nexports.Event = patterns_1.Event;\nexports.EventSet = patterns_1.EventSet;\nexports.Grammar = patterns_1.Grammar;\nexports.GrammarWalker = patterns_1.GrammarWalker;\nexports.BasePattern = patterns_1.BasePattern;\nexports.RefError = patterns_1.RefError;\nexports.Walker = patterns_1.Walker;\nexports.__test = patterns_1.__test;\nvar formats_1 = require(\"./formats\");\nexports.constructTree = formats_1.constructTree;\nvar ename_1 = require(\"./ename\");\nexports.EName = ename_1.EName;\nvar errors_1 = require(\"./errors\");\nexports.AttributeNameError = errors_1.AttributeNameError;\nexports.AttributeValueError = errors_1.AttributeValueError;\nexports.ChoiceError = errors_1.ChoiceError;\nexports.ElementNameError = errors_1.ElementNameError;\nexports.ValidationError = errors_1.ValidationError;\nvar name_resolver_1 = require(\"./name_resolver\");\nexports.NameResolver = name_resolver_1.NameResolver;\nvar name_patterns_1 = require(\"./name_patterns\");\nexports.BaseName = name_patterns_1.Base;\nexports.Name = name_patterns_1.Name;\nexports.NameChoice = name_patterns_1.NameChoice;\nexports.NsName = name_patterns_1.NsName;\nexports.AnyName = name_patterns_1.AnyName;\n/**\n * Do not use this. This is here only for historical reasons and may be yanked\n * at any time.\n * @private\n */\nvar hashstructs_1 = require(\"./hashstructs\");\nexports.HashMap = hashstructs_1.HashMap;\n//  LocalWords:  rng Mangalam Dubeau MPL RNG constructTree validator\n\n//# sourceMappingURL=validate.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/validate.js\n// module id = 31\n// module chunks = 0 1","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 32\n// module chunks = 0 1","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 33\n// module chunks = 0 1","/*!\n * XRegExp.build 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2012-2016 MIT License\n * Inspired by Lea Verou's RegExp.create <lea.verou.me>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    var REGEX_DATA = 'xregexp';\n    var subParts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]/g;\n    var parts = XRegExp.union([/\\({{([\\w$]+)}}\\)|{{([\\w$]+)}}/, subParts], 'g');\n\n    /**\n     * Strips a leading `^` and trailing unescaped `$`, if both are present.\n     *\n     * @param {String} pattern Pattern to process.\n     * @returns {String} Pattern with edge anchors removed.\n     */\n    function deanchor(pattern) {\n        // Allow any number of empty noncapturing groups before/after anchors, because regexes\n        // built/generated by XRegExp sometimes include them\n        var leadingAnchor = /^(?:\\(\\?:\\))*\\^/,\n            trailingAnchor = /\\$(?:\\(\\?:\\))*$/;\n\n        if (\n            leadingAnchor.test(pattern) &&\n            trailingAnchor.test(pattern) &&\n            // Ensure that the trailing `$` isn't escaped\n            trailingAnchor.test(pattern.replace(/\\\\[\\s\\S]/g, ''))\n        ) {\n            return pattern.replace(leadingAnchor, '').replace(trailingAnchor, '');\n        }\n\n        return pattern;\n    }\n\n    /**\n     * Converts the provided value to an XRegExp. Native RegExp flags are not preserved.\n     *\n     * @param {String|RegExp} value Value to convert.\n     * @returns {RegExp} XRegExp object with XRegExp syntax applied.\n     */\n    function asXRegExp(value) {\n        return XRegExp.isRegExp(value) ?\n            (value[REGEX_DATA] && value[REGEX_DATA].captureNames ?\n                // Don't recompile, to preserve capture names\n                value :\n                // Recompile as XRegExp\n                XRegExp(value.source)\n            ) :\n            // Compile string as XRegExp\n            XRegExp(value);\n    }\n\n    /**\n     * Builds regexes using named subpatterns, for readability and pattern reuse. Backreferences in\n     * the outer pattern and provided subpatterns are automatically renumbered to work correctly.\n     * Native flags used by provided subpatterns are ignored in favor of the `flags` argument.\n     *\n     * @param {String} pattern XRegExp pattern using `{{name}}` for embedded subpatterns. Allows\n     *   `({{name}})` as shorthand for `(?<name>{{name}})`. Patterns cannot be embedded within\n     *   character classes.\n     * @param {Object} subs Lookup object for named subpatterns. Values can be strings or regexes. A\n     *   leading `^` and trailing unescaped `$` are stripped from subpatterns, if both are present.\n     * @param {String} [flags] Any combination of XRegExp flags.\n     * @returns {RegExp} Regex with interpolated subpatterns.\n     * @example\n     *\n     * var time = XRegExp.build('(?x)^ {{hours}} ({{minutes}}) $', {\n     *   hours: XRegExp.build('{{h12}} : | {{h24}}', {\n     *     h12: /1[0-2]|0?[1-9]/,\n     *     h24: /2[0-3]|[01][0-9]/\n     *   }, 'x'),\n     *   minutes: /^[0-5][0-9]$/\n     * });\n     * time.test('10:59'); // -> true\n     * XRegExp.exec('10:59', time).minutes; // -> '59'\n     */\n    XRegExp.build = function(pattern, subs, flags) {\n        var inlineFlags = /^\\(\\?([\\w$]+)\\)/.exec(pattern),\n            data = {},\n            numCaps = 0, // 'Caps' is short for captures\n            numPriorCaps,\n            numOuterCaps = 0,\n            outerCapsMap = [0],\n            outerCapNames,\n            sub,\n            p;\n\n        // Add flags within a leading mode modifier to the overall pattern's flags\n        if (inlineFlags) {\n            flags = flags || '';\n            inlineFlags[1].replace(/./g, function(flag) {\n                // Don't add duplicates\n                flags += (flags.indexOf(flag) > -1 ? '' : flag);\n            });\n        }\n\n        for (p in subs) {\n            if (subs.hasOwnProperty(p)) {\n                // Passing to XRegExp enables extended syntax and ensures independent validity,\n                // lest an unescaped `(`, `)`, `[`, or trailing `\\` breaks the `(?:)` wrapper. For\n                // subpatterns provided as native regexes, it dies on octals and adds the property\n                // used to hold extended regex instance data, for simplicity\n                sub = asXRegExp(subs[p]);\n                data[p] = {\n                    // Deanchoring allows embedding independently useful anchored regexes. If you\n                    // really need to keep your anchors, double them (i.e., `^^...$$`)\n                    pattern: deanchor(sub.source),\n                    names: sub[REGEX_DATA].captureNames || []\n                };\n            }\n        }\n\n        // Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;\n        // helps keep this simple. Named captures will be put back\n        pattern = asXRegExp(pattern);\n        outerCapNames = pattern[REGEX_DATA].captureNames || [];\n        pattern = pattern.source.replace(parts, function($0, $1, $2, $3, $4) {\n            var subName = $1 || $2,\n                capName,\n                intro,\n                localCapIndex;\n            // Named subpattern\n            if (subName) {\n                if (!data.hasOwnProperty(subName)) {\n                    throw new ReferenceError('Undefined property ' + $0);\n                }\n                // Named subpattern was wrapped in a capturing group\n                if ($1) {\n                    capName = outerCapNames[numOuterCaps];\n                    outerCapsMap[++numOuterCaps] = ++numCaps;\n                    // If it's a named group, preserve the name. Otherwise, use the subpattern name\n                    // as the capture name\n                    intro = '(?<' + (capName || subName) + '>';\n                } else {\n                    intro = '(?:';\n                }\n                numPriorCaps = numCaps;\n                return intro + data[subName].pattern.replace(subParts, function(match, paren, backref) {\n                    // Capturing group\n                    if (paren) {\n                        capName = data[subName].names[numCaps - numPriorCaps];\n                        ++numCaps;\n                        // If the current capture has a name, preserve the name\n                        if (capName) {\n                            return '(?<' + capName + '>';\n                        }\n                    // Backreference\n                    } else if (backref) {\n                        localCapIndex = +backref - 1;\n                        // Rewrite the backreference\n                        return data[subName].names[localCapIndex] ?\n                            // Need to preserve the backreference name in case using flag `n`\n                            '\\\\k<' + data[subName].names[localCapIndex] + '>' :\n                            '\\\\' + (+backref + numPriorCaps);\n                    }\n                    return match;\n                }) + ')';\n            }\n            // Capturing group\n            if ($3) {\n                capName = outerCapNames[numOuterCaps];\n                outerCapsMap[++numOuterCaps] = ++numCaps;\n                // If the current capture has a name, preserve the name\n                if (capName) {\n                    return '(?<' + capName + '>';\n                }\n            // Backreference\n            } else if ($4) {\n                localCapIndex = +$4 - 1;\n                // Rewrite the backreference\n                return outerCapNames[localCapIndex] ?\n                    // Need to preserve the backreference name in case using flag `n`\n                    '\\\\k<' + outerCapNames[localCapIndex] + '>' :\n                    '\\\\' + outerCapsMap[+$4];\n            }\n            return $0;\n        });\n\n        return XRegExp(pattern, flags);\n    };\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/build.js\n// module id = 34\n// module chunks = 0 1","/*!\n * XRegExp.matchRecursive 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2009-2016 MIT License\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Returns a match detail object composed of the provided values.\n     */\n    function row(name, value, start, end) {\n        return {\n            name: name,\n            value: value,\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Returns an array of match strings between outermost left and right delimiters, or an array of\n     * objects with detailed match parts and position data. An error is thrown if delimiters are\n     * unbalanced within the data.\n     *\n     * @param {String} str String to search.\n     * @param {String} left Left delimiter as an XRegExp pattern.\n     * @param {String} right Right delimiter as an XRegExp pattern.\n     * @param {String} [flags] Any native or XRegExp flags, used for the left and right delimiters.\n     * @param {Object} [options] Lets you specify `valueNames` and `escapeChar` options.\n     * @returns {Array} Array of matches, or an empty array.\n     * @example\n     *\n     * // Basic usage\n     * var str = '(t((e))s)t()(ing)';\n     * XRegExp.matchRecursive(str, '\\\\(', '\\\\)', 'g');\n     * // -> ['t((e))s', '', 'ing']\n     *\n     * // Extended information mode with valueNames\n     * str = 'Here is <div> <div>an</div></div> example';\n     * XRegExp.matchRecursive(str, '<div\\\\s*>', '</div>', 'gi', {\n     *   valueNames: ['between', 'left', 'match', 'right']\n     * });\n     * // -> [\n     * // {name: 'between', value: 'Here is ',       start: 0,  end: 8},\n     * // {name: 'left',    value: '<div>',          start: 8,  end: 13},\n     * // {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},\n     * // {name: 'right',   value: '</div>',         start: 27, end: 33},\n     * // {name: 'between', value: ' example',       start: 33, end: 41}\n     * // ]\n     *\n     * // Omitting unneeded parts with null valueNames, and using escapeChar\n     * str = '...{1}.\\\\{{function(x,y){return {y:x}}}';\n     * XRegExp.matchRecursive(str, '{', '}', 'g', {\n     *   valueNames: ['literal', null, 'value', null],\n     *   escapeChar: '\\\\'\n     * });\n     * // -> [\n     * // {name: 'literal', value: '...',  start: 0, end: 3},\n     * // {name: 'value',   value: '1',    start: 4, end: 5},\n     * // {name: 'literal', value: '.\\\\{', start: 6, end: 9},\n     * // {name: 'value',   value: 'function(x,y){return {y:x}}', start: 10, end: 37}\n     * // ]\n     *\n     * // Sticky mode via flag y\n     * str = '<1><<<2>>><3>4<5>';\n     * XRegExp.matchRecursive(str, '<', '>', 'gy');\n     * // -> ['1', '<<2>>', '3']\n     */\n    XRegExp.matchRecursive = function(str, left, right, flags, options) {\n        flags = flags || '';\n        options = options || {};\n        var global = flags.indexOf('g') > -1,\n            sticky = flags.indexOf('y') > -1,\n            // Flag `y` is controlled internally\n            basicFlags = flags.replace(/y/g, ''),\n            escapeChar = options.escapeChar,\n            vN = options.valueNames,\n            output = [],\n            openTokens = 0,\n            delimStart = 0,\n            delimEnd = 0,\n            lastOuterEnd = 0,\n            outerStart,\n            innerStart,\n            leftMatch,\n            rightMatch,\n            esc;\n        left = XRegExp(left, basicFlags);\n        right = XRegExp(right, basicFlags);\n\n        if (escapeChar) {\n            if (escapeChar.length > 1) {\n                throw new Error('Cannot use more than one escape character');\n            }\n            escapeChar = XRegExp.escape(escapeChar);\n            // Using `XRegExp.union` safely rewrites backreferences in `left` and `right`\n            esc = new RegExp(\n                '(?:' + escapeChar + '[\\\\S\\\\s]|(?:(?!' +\n                    XRegExp.union([left, right]).source +\n                    ')[^' + escapeChar + '])+)+',\n                // Flags `gy` not needed here\n                flags.replace(/[^imu]+/g, '')\n            );\n        }\n\n        while (true) {\n            // If using an escape character, advance to the delimiter's next starting position,\n            // skipping any escaped characters in between\n            if (escapeChar) {\n                delimEnd += (XRegExp.exec(str, esc, delimEnd, 'sticky') || [''])[0].length;\n            }\n            leftMatch = XRegExp.exec(str, left, delimEnd);\n            rightMatch = XRegExp.exec(str, right, delimEnd);\n            // Keep the leftmost match only\n            if (leftMatch && rightMatch) {\n                if (leftMatch.index <= rightMatch.index) {\n                    rightMatch = null;\n                } else {\n                    leftMatch = null;\n                }\n            }\n            // Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):\n            // LM | RM | OT | Result\n            // 1  | 0  | 1  | loop\n            // 1  | 0  | 0  | loop\n            // 0  | 1  | 1  | loop\n            // 0  | 1  | 0  | throw\n            // 0  | 0  | 1  | throw\n            // 0  | 0  | 0  | break\n            // The paths above don't include the sticky mode special case. The loop ends after the\n            // first completed match if not `global`.\n            if (leftMatch || rightMatch) {\n                delimStart = (leftMatch || rightMatch).index;\n                delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\n            } else if (!openTokens) {\n                break;\n            }\n            if (sticky && !openTokens && delimStart > lastOuterEnd) {\n                break;\n            }\n            if (leftMatch) {\n                if (!openTokens) {\n                    outerStart = delimStart;\n                    innerStart = delimEnd;\n                }\n                ++openTokens;\n            } else if (rightMatch && openTokens) {\n                if (!--openTokens) {\n                    if (vN) {\n                        if (vN[0] && outerStart > lastOuterEnd) {\n                            output.push(row(vN[0], str.slice(lastOuterEnd, outerStart), lastOuterEnd, outerStart));\n                        }\n                        if (vN[1]) {\n                            output.push(row(vN[1], str.slice(outerStart, innerStart), outerStart, innerStart));\n                        }\n                        if (vN[2]) {\n                            output.push(row(vN[2], str.slice(innerStart, delimStart), innerStart, delimStart));\n                        }\n                        if (vN[3]) {\n                            output.push(row(vN[3], str.slice(delimStart, delimEnd), delimStart, delimEnd));\n                        }\n                    } else {\n                        output.push(str.slice(innerStart, delimStart));\n                    }\n                    lastOuterEnd = delimEnd;\n                    if (!global) {\n                        break;\n                    }\n                }\n            } else {\n                throw new Error('Unbalanced delimiter found in string');\n            }\n            // If the delimiter matched an empty string, avoid an infinite loop\n            if (delimStart === delimEnd) {\n                ++delimEnd;\n            }\n        }\n\n        if (global && !sticky && vN && vN[0] && str.length > lastOuterEnd) {\n            output.push(row(vN[0], str.slice(lastOuterEnd), lastOuterEnd, str.length));\n        }\n\n        return output;\n    };\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/matchrecursive.js\n// module id = 35\n// module chunks = 0 1","/*!\n * XRegExp Unicode Base 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2008-2016 MIT License\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds base support for Unicode matching:\n     * - Adds syntax `\\p{..}` for matching Unicode tokens. Tokens can be inverted using `\\P{..}` or\n     *   `\\p{^..}`. Token names ignore case, spaces, hyphens, and underscores. You can omit the\n     *   braces for token names that are a single letter (e.g. `\\pL` or `PL`).\n     * - Adds flag A (astral), which enables 21-bit Unicode support.\n     * - Adds the `XRegExp.addUnicodeData` method used by other addons to provide character data.\n     *\n     * Unicode Base relies on externally provided Unicode character data. Official addons are\n     * available to provide data for Unicode categories, scripts, blocks, and properties.\n     *\n     * @requires XRegExp\n     */\n\n    // ==--------------------------==\n    // Private stuff\n    // ==--------------------------==\n\n    // Storage for Unicode data\n    var unicode = {};\n\n    // Reuse utils\n    var dec = XRegExp._dec;\n    var hex = XRegExp._hex;\n    var pad4 = XRegExp._pad4;\n\n    // Generates a token lookup name: lowercase, with hyphens, spaces, and underscores removed\n    function normalize(name) {\n        return name.replace(/[- _]+/g, '').toLowerCase();\n    }\n\n    // Gets the decimal code of a literal code unit, \\xHH, \\uHHHH, or a backslash-escaped literal\n    function charCode(chr) {\n        var esc = /^\\\\[xu](.+)/.exec(chr);\n        return esc ?\n            dec(esc[1]) :\n            chr.charCodeAt(chr.charAt(0) === '\\\\' ? 1 : 0);\n    }\n\n    // Inverts a list of ordered BMP characters and ranges\n    function invertBmp(range) {\n        var output = '';\n        var lastEnd = -1;\n        XRegExp.forEach(\n            range,\n            /(\\\\x..|\\\\u....|\\\\?[\\s\\S])(?:-(\\\\x..|\\\\u....|\\\\?[\\s\\S]))?/,\n            function(m) {\n                var start = charCode(m[1]);\n                if (start > (lastEnd + 1)) {\n                    output += '\\\\u' + pad4(hex(lastEnd + 1));\n                    if (start > (lastEnd + 2)) {\n                        output += '-\\\\u' + pad4(hex(start - 1));\n                    }\n                }\n                lastEnd = charCode(m[2] || m[1]);\n            }\n        );\n        if (lastEnd < 0xFFFF) {\n            output += '\\\\u' + pad4(hex(lastEnd + 1));\n            if (lastEnd < 0xFFFE) {\n                output += '-\\\\uFFFF';\n            }\n        }\n        return output;\n    }\n\n    // Generates an inverted BMP range on first use\n    function cacheInvertedBmp(slug) {\n        var prop = 'b!';\n        return unicode[slug][prop] || (\n            unicode[slug][prop] = invertBmp(unicode[slug].bmp)\n        );\n    }\n\n    // Combines and optionally negates BMP and astral data\n    function buildAstral(slug, isNegated) {\n        var item = unicode[slug],\n            combined = '';\n        if (item.bmp && !item.isBmpLast) {\n            combined = '[' + item.bmp + ']' + (item.astral ? '|' : '');\n        }\n        if (item.astral) {\n            combined += item.astral;\n        }\n        if (item.isBmpLast && item.bmp) {\n            combined += (item.astral ? '|' : '') + '[' + item.bmp + ']';\n        }\n        // Astral Unicode tokens always match a code point, never a code unit\n        return isNegated ?\n            '(?:(?!' + combined + ')(?:[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\0-\\uFFFF]))' :\n            '(?:' + combined + ')';\n    }\n\n    // Builds a complete astral pattern on first use\n    function cacheAstral(slug, isNegated) {\n        var prop = isNegated ? 'a!' : 'a=';\n        return unicode[slug][prop] || (\n            unicode[slug][prop] = buildAstral(slug, isNegated)\n        );\n    }\n\n    // ==--------------------------==\n    // Core functionality\n    // ==--------------------------==\n\n    /*\n     * Add Unicode token syntax: \\p{..}, \\P{..}, \\p{^..}. Also add astral mode (flag A).\n     */\n    XRegExp.addToken(\n        // Use `*` instead of `+` to avoid capturing `^` as the token name in `\\p{^}`\n        /\\\\([pP])(?:{(\\^?)([^}]*)}|([A-Za-z]))/,\n        function(match, scope, flags) {\n            var ERR_DOUBLE_NEG = 'Invalid double negation ',\n                ERR_UNKNOWN_NAME = 'Unknown Unicode token ',\n                ERR_UNKNOWN_REF = 'Unicode token missing data ',\n                ERR_ASTRAL_ONLY = 'Astral mode required for Unicode token ',\n                ERR_ASTRAL_IN_CLASS = 'Astral mode does not support Unicode tokens within character classes',\n                // Negated via \\P{..} or \\p{^..}\n                isNegated = match[1] === 'P' || !!match[2],\n                // Switch from BMP (0-FFFF) to astral (0-10FFFF) mode via flag A\n                isAstralMode = flags.indexOf('A') > -1,\n                // Token lookup name. Check `[4]` first to avoid passing `undefined` via `\\p{}`\n                slug = normalize(match[4] || match[3]),\n                // Token data object\n                item = unicode[slug];\n\n            if (match[1] === 'P' && match[2]) {\n                throw new SyntaxError(ERR_DOUBLE_NEG + match[0]);\n            }\n            if (!unicode.hasOwnProperty(slug)) {\n                throw new SyntaxError(ERR_UNKNOWN_NAME + match[0]);\n            }\n\n            // Switch to the negated form of the referenced Unicode token\n            if (item.inverseOf) {\n                slug = normalize(item.inverseOf);\n                if (!unicode.hasOwnProperty(slug)) {\n                    throw new ReferenceError(ERR_UNKNOWN_REF + match[0] + ' -> ' + item.inverseOf);\n                }\n                item = unicode[slug];\n                isNegated = !isNegated;\n            }\n\n            if (!(item.bmp || isAstralMode)) {\n                throw new SyntaxError(ERR_ASTRAL_ONLY + match[0]);\n            }\n            if (isAstralMode) {\n                if (scope === 'class') {\n                    throw new SyntaxError(ERR_ASTRAL_IN_CLASS);\n                }\n\n                return cacheAstral(slug, isNegated);\n            }\n\n            return scope === 'class' ?\n                (isNegated ? cacheInvertedBmp(slug) : item.bmp) :\n                (isNegated ? '[^' : '[') + item.bmp + ']';\n        },\n        {\n            scope: 'all',\n            optionalFlags: 'A',\n            leadChar: '\\\\'\n        }\n    );\n\n    /**\n     * Adds to the list of Unicode tokens that XRegExp regexes can match via `\\p` or `\\P`.\n     *\n     * @param {Array} data Objects with named character ranges. Each object may have properties\n     *   `name`, `alias`, `isBmpLast`, `inverseOf`, `bmp`, and `astral`. All but `name` are\n     *   optional, although one of `bmp` or `astral` is required (unless `inverseOf` is set). If\n     *   `astral` is absent, the `bmp` data is used for BMP and astral modes. If `bmp` is absent,\n     *   the name errors in BMP mode but works in astral mode. If both `bmp` and `astral` are\n     *   provided, the `bmp` data only is used in BMP mode, and the combination of `bmp` and\n     *   `astral` data is used in astral mode. `isBmpLast` is needed when a token matches orphan\n     *   high surrogates *and* uses surrogate pairs to match astral code points. The `bmp` and\n     *   `astral` data should be a combination of literal characters and `\\xHH` or `\\uHHHH` escape\n     *   sequences, with hyphens to create ranges. Any regex metacharacters in the data should be\n     *   escaped, apart from range-creating hyphens. The `astral` data can additionally use\n     *   character classes and alternation, and should use surrogate pairs to represent astral code\n     *   points. `inverseOf` can be used to avoid duplicating character data if a Unicode token is\n     *   defined as the exact inverse of another token.\n     * @example\n     *\n     * // Basic use\n     * XRegExp.addUnicodeData([{\n     *   name: 'XDigit',\n     *   alias: 'Hexadecimal',\n     *   bmp: '0-9A-Fa-f'\n     * }]);\n     * XRegExp('\\\\p{XDigit}:\\\\p{Hexadecimal}+').test('0:3D'); // -> true\n     */\n    XRegExp.addUnicodeData = function(data) {\n        var ERR_NO_NAME = 'Unicode token requires name',\n            ERR_NO_DATA = 'Unicode token has no character data ',\n            item,\n            i;\n\n        for (i = 0; i < data.length; ++i) {\n            item = data[i];\n            if (!item.name) {\n                throw new Error(ERR_NO_NAME);\n            }\n            if (!(item.inverseOf || item.bmp || item.astral)) {\n                throw new Error(ERR_NO_DATA + item.name);\n            }\n            unicode[normalize(item.name)] = item;\n            if (item.alias) {\n                unicode[normalize(item.alias)] = item;\n            }\n        }\n\n        // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and\n        // flags might now produce different results\n        XRegExp.cache.flush('patterns');\n    };\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/unicode-base.js\n// module id = 36\n// module chunks = 0 1","/*!\n * XRegExp Unicode Blocks 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2010-2016 MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds support for all Unicode blocks. Block names use the prefix 'In'. E.g.,\n     * `\\p{InBasicLatin}`. Token names are case insensitive, and any spaces, hyphens, and\n     * underscores are ignored.\n     *\n     * Uses Unicode 8.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Blocks');\n    }\n\n    XRegExp.addUnicodeData([\n        {\n            name: 'InAegean_Numbers',\n            astral: '\\uD800[\\uDD00-\\uDD3F]'\n        },\n        {\n            name: 'InAhom',\n            astral: '\\uD805[\\uDF00-\\uDF3F]'\n        },\n        {\n            name: 'InAlchemical_Symbols',\n            astral: '\\uD83D[\\uDF00-\\uDF7F]'\n        },\n        {\n            name: 'InAlphabetic_Presentation_Forms',\n            bmp: '\\uFB00-\\uFB4F'\n        },\n        {\n            name: 'InAnatolian_Hieroglyphs',\n            astral: '\\uD811[\\uDC00-\\uDE7F]'\n        },\n        {\n            name: 'InAncient_Greek_Musical_Notation',\n            astral: '\\uD834[\\uDE00-\\uDE4F]'\n        },\n        {\n            name: 'InAncient_Greek_Numbers',\n            astral: '\\uD800[\\uDD40-\\uDD8F]'\n        },\n        {\n            name: 'InAncient_Symbols',\n            astral: '\\uD800[\\uDD90-\\uDDCF]'\n        },\n        {\n            name: 'InArabic',\n            bmp: '\\u0600-\\u06FF'\n        },\n        {\n            name: 'InArabic_Extended_A',\n            bmp: '\\u08A0-\\u08FF'\n        },\n        {\n            name: 'InArabic_Mathematical_Alphabetic_Symbols',\n            astral: '\\uD83B[\\uDE00-\\uDEFF]'\n        },\n        {\n            name: 'InArabic_Presentation_Forms_A',\n            bmp: '\\uFB50-\\uFDFF'\n        },\n        {\n            name: 'InArabic_Presentation_Forms_B',\n            bmp: '\\uFE70-\\uFEFF'\n        },\n        {\n            name: 'InArabic_Supplement',\n            bmp: '\\u0750-\\u077F'\n        },\n        {\n            name: 'InArmenian',\n            bmp: '\\u0530-\\u058F'\n        },\n        {\n            name: 'InArrows',\n            bmp: '\\u2190-\\u21FF'\n        },\n        {\n            name: 'InAvestan',\n            astral: '\\uD802[\\uDF00-\\uDF3F]'\n        },\n        {\n            name: 'InBalinese',\n            bmp: '\\u1B00-\\u1B7F'\n        },\n        {\n            name: 'InBamum',\n            bmp: '\\uA6A0-\\uA6FF'\n        },\n        {\n            name: 'InBamum_Supplement',\n            astral: '\\uD81A[\\uDC00-\\uDE3F]'\n        },\n        {\n            name: 'InBasic_Latin',\n            bmp: '\\0-\\x7F'\n        },\n        {\n            name: 'InBassa_Vah',\n            astral: '\\uD81A[\\uDED0-\\uDEFF]'\n        },\n        {\n            name: 'InBatak',\n            bmp: '\\u1BC0-\\u1BFF'\n        },\n        {\n            name: 'InBengali',\n            bmp: '\\u0980-\\u09FF'\n        },\n        {\n            name: 'InBlock_Elements',\n            bmp: '\\u2580-\\u259F'\n        },\n        {\n            name: 'InBopomofo',\n            bmp: '\\u3100-\\u312F'\n        },\n        {\n            name: 'InBopomofo_Extended',\n            bmp: '\\u31A0-\\u31BF'\n        },\n        {\n            name: 'InBox_Drawing',\n            bmp: '\\u2500-\\u257F'\n        },\n        {\n            name: 'InBrahmi',\n            astral: '\\uD804[\\uDC00-\\uDC7F]'\n        },\n        {\n            name: 'InBraille_Patterns',\n            bmp: '\\u2800-\\u28FF'\n        },\n        {\n            name: 'InBuginese',\n            bmp: '\\u1A00-\\u1A1F'\n        },\n        {\n            name: 'InBuhid',\n            bmp: '\\u1740-\\u175F'\n        },\n        {\n            name: 'InByzantine_Musical_Symbols',\n            astral: '\\uD834[\\uDC00-\\uDCFF]'\n        },\n        {\n            name: 'InCJK_Compatibility',\n            bmp: '\\u3300-\\u33FF'\n        },\n        {\n            name: 'InCJK_Compatibility_Forms',\n            bmp: '\\uFE30-\\uFE4F'\n        },\n        {\n            name: 'InCJK_Compatibility_Ideographs',\n            bmp: '\\uF900-\\uFAFF'\n        },\n        {\n            name: 'InCJK_Compatibility_Ideographs_Supplement',\n            astral: '\\uD87E[\\uDC00-\\uDE1F]'\n        },\n        {\n            name: 'InCJK_Radicals_Supplement',\n            bmp: '\\u2E80-\\u2EFF'\n        },\n        {\n            name: 'InCJK_Strokes',\n            bmp: '\\u31C0-\\u31EF'\n        },\n        {\n            name: 'InCJK_Symbols_and_Punctuation',\n            bmp: '\\u3000-\\u303F'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs',\n            bmp: '\\u4E00-\\u9FFF'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_A',\n            bmp: '\\u3400-\\u4DBF'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_B',\n            astral: '[\\uD840-\\uD868][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDEDF]'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_C',\n            astral: '\\uD86D[\\uDC00-\\uDF3F]|[\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD869[\\uDF00-\\uDFFF]'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_D',\n            astral: '\\uD86D[\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1F]'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_E',\n            astral: '[\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD873[\\uDC00-\\uDEAF]|\\uD86E[\\uDC20-\\uDFFF]'\n        },\n        {\n            name: 'InCarian',\n            astral: '\\uD800[\\uDEA0-\\uDEDF]'\n        },\n        {\n            name: 'InCaucasian_Albanian',\n            astral: '\\uD801[\\uDD30-\\uDD6F]'\n        },\n        {\n            name: 'InChakma',\n            astral: '\\uD804[\\uDD00-\\uDD4F]'\n        },\n        {\n            name: 'InCham',\n            bmp: '\\uAA00-\\uAA5F'\n        },\n        {\n            name: 'InCherokee',\n            bmp: '\\u13A0-\\u13FF'\n        },\n        {\n            name: 'InCherokee_Supplement',\n            bmp: '\\uAB70-\\uABBF'\n        },\n        {\n            name: 'InCombining_Diacritical_Marks',\n            bmp: '\\u0300-\\u036F'\n        },\n        {\n            name: 'InCombining_Diacritical_Marks_Extended',\n            bmp: '\\u1AB0-\\u1AFF'\n        },\n        {\n            name: 'InCombining_Diacritical_Marks_Supplement',\n            bmp: '\\u1DC0-\\u1DFF'\n        },\n        {\n            name: 'InCombining_Diacritical_Marks_for_Symbols',\n            bmp: '\\u20D0-\\u20FF'\n        },\n        {\n            name: 'InCombining_Half_Marks',\n            bmp: '\\uFE20-\\uFE2F'\n        },\n        {\n            name: 'InCommon_Indic_Number_Forms',\n            bmp: '\\uA830-\\uA83F'\n        },\n        {\n            name: 'InControl_Pictures',\n            bmp: '\\u2400-\\u243F'\n        },\n        {\n            name: 'InCoptic',\n            bmp: '\\u2C80-\\u2CFF'\n        },\n        {\n            name: 'InCoptic_Epact_Numbers',\n            astral: '\\uD800[\\uDEE0-\\uDEFF]'\n        },\n        {\n            name: 'InCounting_Rod_Numerals',\n            astral: '\\uD834[\\uDF60-\\uDF7F]'\n        },\n        {\n            name: 'InCuneiform',\n            astral: '\\uD808[\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'InCuneiform_Numbers_and_Punctuation',\n            astral: '\\uD809[\\uDC00-\\uDC7F]'\n        },\n        {\n            name: 'InCurrency_Symbols',\n            bmp: '\\u20A0-\\u20CF'\n        },\n        {\n            name: 'InCypriot_Syllabary',\n            astral: '\\uD802[\\uDC00-\\uDC3F]'\n        },\n        {\n            name: 'InCyrillic',\n            bmp: '\\u0400-\\u04FF'\n        },\n        {\n            name: 'InCyrillic_Extended_A',\n            bmp: '\\u2DE0-\\u2DFF'\n        },\n        {\n            name: 'InCyrillic_Extended_B',\n            bmp: '\\uA640-\\uA69F'\n        },\n        {\n            name: 'InCyrillic_Supplement',\n            bmp: '\\u0500-\\u052F'\n        },\n        {\n            name: 'InDeseret',\n            astral: '\\uD801[\\uDC00-\\uDC4F]'\n        },\n        {\n            name: 'InDevanagari',\n            bmp: '\\u0900-\\u097F'\n        },\n        {\n            name: 'InDevanagari_Extended',\n            bmp: '\\uA8E0-\\uA8FF'\n        },\n        {\n            name: 'InDingbats',\n            bmp: '\\u2700-\\u27BF'\n        },\n        {\n            name: 'InDomino_Tiles',\n            astral: '\\uD83C[\\uDC30-\\uDC9F]'\n        },\n        {\n            name: 'InDuployan',\n            astral: '\\uD82F[\\uDC00-\\uDC9F]'\n        },\n        {\n            name: 'InEarly_Dynastic_Cuneiform',\n            astral: '\\uD809[\\uDC80-\\uDD4F]'\n        },\n        {\n            name: 'InEgyptian_Hieroglyphs',\n            astral: '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F]'\n        },\n        {\n            name: 'InElbasan',\n            astral: '\\uD801[\\uDD00-\\uDD2F]'\n        },\n        {\n            name: 'InEmoticons',\n            astral: '\\uD83D[\\uDE00-\\uDE4F]'\n        },\n        {\n            name: 'InEnclosed_Alphanumeric_Supplement',\n            astral: '\\uD83C[\\uDD00-\\uDDFF]'\n        },\n        {\n            name: 'InEnclosed_Alphanumerics',\n            bmp: '\\u2460-\\u24FF'\n        },\n        {\n            name: 'InEnclosed_CJK_Letters_and_Months',\n            bmp: '\\u3200-\\u32FF'\n        },\n        {\n            name: 'InEnclosed_Ideographic_Supplement',\n            astral: '\\uD83C[\\uDE00-\\uDEFF]'\n        },\n        {\n            name: 'InEthiopic',\n            bmp: '\\u1200-\\u137F'\n        },\n        {\n            name: 'InEthiopic_Extended',\n            bmp: '\\u2D80-\\u2DDF'\n        },\n        {\n            name: 'InEthiopic_Extended_A',\n            bmp: '\\uAB00-\\uAB2F'\n        },\n        {\n            name: 'InEthiopic_Supplement',\n            bmp: '\\u1380-\\u139F'\n        },\n        {\n            name: 'InGeneral_Punctuation',\n            bmp: '\\u2000-\\u206F'\n        },\n        {\n            name: 'InGeometric_Shapes',\n            bmp: '\\u25A0-\\u25FF'\n        },\n        {\n            name: 'InGeometric_Shapes_Extended',\n            astral: '\\uD83D[\\uDF80-\\uDFFF]'\n        },\n        {\n            name: 'InGeorgian',\n            bmp: '\\u10A0-\\u10FF'\n        },\n        {\n            name: 'InGeorgian_Supplement',\n            bmp: '\\u2D00-\\u2D2F'\n        },\n        {\n            name: 'InGlagolitic',\n            bmp: '\\u2C00-\\u2C5F'\n        },\n        {\n            name: 'InGothic',\n            astral: '\\uD800[\\uDF30-\\uDF4F]'\n        },\n        {\n            name: 'InGrantha',\n            astral: '\\uD804[\\uDF00-\\uDF7F]'\n        },\n        {\n            name: 'InGreek_Extended',\n            bmp: '\\u1F00-\\u1FFF'\n        },\n        {\n            name: 'InGreek_and_Coptic',\n            bmp: '\\u0370-\\u03FF'\n        },\n        {\n            name: 'InGujarati',\n            bmp: '\\u0A80-\\u0AFF'\n        },\n        {\n            name: 'InGurmukhi',\n            bmp: '\\u0A00-\\u0A7F'\n        },\n        {\n            name: 'InHalfwidth_and_Fullwidth_Forms',\n            bmp: '\\uFF00-\\uFFEF'\n        },\n        {\n            name: 'InHangul_Compatibility_Jamo',\n            bmp: '\\u3130-\\u318F'\n        },\n        {\n            name: 'InHangul_Jamo',\n            bmp: '\\u1100-\\u11FF'\n        },\n        {\n            name: 'InHangul_Jamo_Extended_A',\n            bmp: '\\uA960-\\uA97F'\n        },\n        {\n            name: 'InHangul_Jamo_Extended_B',\n            bmp: '\\uD7B0-\\uD7FF'\n        },\n        {\n            name: 'InHangul_Syllables',\n            bmp: '\\uAC00-\\uD7AF'\n        },\n        {\n            name: 'InHanunoo',\n            bmp: '\\u1720-\\u173F'\n        },\n        {\n            name: 'InHatran',\n            astral: '\\uD802[\\uDCE0-\\uDCFF]'\n        },\n        {\n            name: 'InHebrew',\n            bmp: '\\u0590-\\u05FF'\n        },\n        {\n            name: 'InHigh_Private_Use_Surrogates',\n            bmp: '\\uDB80-\\uDBFF'\n        },\n        {\n            name: 'InHigh_Surrogates',\n            bmp: '\\uD800-\\uDB7F'\n        },\n        {\n            name: 'InHiragana',\n            bmp: '\\u3040-\\u309F'\n        },\n        {\n            name: 'InIPA_Extensions',\n            bmp: '\\u0250-\\u02AF'\n        },\n        {\n            name: 'InIdeographic_Description_Characters',\n            bmp: '\\u2FF0-\\u2FFF'\n        },\n        {\n            name: 'InImperial_Aramaic',\n            astral: '\\uD802[\\uDC40-\\uDC5F]'\n        },\n        {\n            name: 'InInscriptional_Pahlavi',\n            astral: '\\uD802[\\uDF60-\\uDF7F]'\n        },\n        {\n            name: 'InInscriptional_Parthian',\n            astral: '\\uD802[\\uDF40-\\uDF5F]'\n        },\n        {\n            name: 'InJavanese',\n            bmp: '\\uA980-\\uA9DF'\n        },\n        {\n            name: 'InKaithi',\n            astral: '\\uD804[\\uDC80-\\uDCCF]'\n        },\n        {\n            name: 'InKana_Supplement',\n            astral: '\\uD82C[\\uDC00-\\uDCFF]'\n        },\n        {\n            name: 'InKanbun',\n            bmp: '\\u3190-\\u319F'\n        },\n        {\n            name: 'InKangxi_Radicals',\n            bmp: '\\u2F00-\\u2FDF'\n        },\n        {\n            name: 'InKannada',\n            bmp: '\\u0C80-\\u0CFF'\n        },\n        {\n            name: 'InKatakana',\n            bmp: '\\u30A0-\\u30FF'\n        },\n        {\n            name: 'InKatakana_Phonetic_Extensions',\n            bmp: '\\u31F0-\\u31FF'\n        },\n        {\n            name: 'InKayah_Li',\n            bmp: '\\uA900-\\uA92F'\n        },\n        {\n            name: 'InKharoshthi',\n            astral: '\\uD802[\\uDE00-\\uDE5F]'\n        },\n        {\n            name: 'InKhmer',\n            bmp: '\\u1780-\\u17FF'\n        },\n        {\n            name: 'InKhmer_Symbols',\n            bmp: '\\u19E0-\\u19FF'\n        },\n        {\n            name: 'InKhojki',\n            astral: '\\uD804[\\uDE00-\\uDE4F]'\n        },\n        {\n            name: 'InKhudawadi',\n            astral: '\\uD804[\\uDEB0-\\uDEFF]'\n        },\n        {\n            name: 'InLao',\n            bmp: '\\u0E80-\\u0EFF'\n        },\n        {\n            name: 'InLatin_Extended_Additional',\n            bmp: '\\u1E00-\\u1EFF'\n        },\n        {\n            name: 'InLatin_Extended_A',\n            bmp: '\\u0100-\\u017F'\n        },\n        {\n            name: 'InLatin_Extended_B',\n            bmp: '\\u0180-\\u024F'\n        },\n        {\n            name: 'InLatin_Extended_C',\n            bmp: '\\u2C60-\\u2C7F'\n        },\n        {\n            name: 'InLatin_Extended_D',\n            bmp: '\\uA720-\\uA7FF'\n        },\n        {\n            name: 'InLatin_Extended_E',\n            bmp: '\\uAB30-\\uAB6F'\n        },\n        {\n            name: 'InLatin_1_Supplement',\n            bmp: '\\x80-\\xFF'\n        },\n        {\n            name: 'InLepcha',\n            bmp: '\\u1C00-\\u1C4F'\n        },\n        {\n            name: 'InLetterlike_Symbols',\n            bmp: '\\u2100-\\u214F'\n        },\n        {\n            name: 'InLimbu',\n            bmp: '\\u1900-\\u194F'\n        },\n        {\n            name: 'InLinear_A',\n            astral: '\\uD801[\\uDE00-\\uDF7F]'\n        },\n        {\n            name: 'InLinear_B_Ideograms',\n            astral: '\\uD800[\\uDC80-\\uDCFF]'\n        },\n        {\n            name: 'InLinear_B_Syllabary',\n            astral: '\\uD800[\\uDC00-\\uDC7F]'\n        },\n        {\n            name: 'InLisu',\n            bmp: '\\uA4D0-\\uA4FF'\n        },\n        {\n            name: 'InLow_Surrogates',\n            bmp: '\\uDC00-\\uDFFF'\n        },\n        {\n            name: 'InLycian',\n            astral: '\\uD800[\\uDE80-\\uDE9F]'\n        },\n        {\n            name: 'InLydian',\n            astral: '\\uD802[\\uDD20-\\uDD3F]'\n        },\n        {\n            name: 'InMahajani',\n            astral: '\\uD804[\\uDD50-\\uDD7F]'\n        },\n        {\n            name: 'InMahjong_Tiles',\n            astral: '\\uD83C[\\uDC00-\\uDC2F]'\n        },\n        {\n            name: 'InMalayalam',\n            bmp: '\\u0D00-\\u0D7F'\n        },\n        {\n            name: 'InMandaic',\n            bmp: '\\u0840-\\u085F'\n        },\n        {\n            name: 'InManichaean',\n            astral: '\\uD802[\\uDEC0-\\uDEFF]'\n        },\n        {\n            name: 'InMathematical_Alphanumeric_Symbols',\n            astral: '\\uD835[\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'InMathematical_Operators',\n            bmp: '\\u2200-\\u22FF'\n        },\n        {\n            name: 'InMeetei_Mayek',\n            bmp: '\\uABC0-\\uABFF'\n        },\n        {\n            name: 'InMeetei_Mayek_Extensions',\n            bmp: '\\uAAE0-\\uAAFF'\n        },\n        {\n            name: 'InMende_Kikakui',\n            astral: '\\uD83A[\\uDC00-\\uDCDF]'\n        },\n        {\n            name: 'InMeroitic_Cursive',\n            astral: '\\uD802[\\uDDA0-\\uDDFF]'\n        },\n        {\n            name: 'InMeroitic_Hieroglyphs',\n            astral: '\\uD802[\\uDD80-\\uDD9F]'\n        },\n        {\n            name: 'InMiao',\n            astral: '\\uD81B[\\uDF00-\\uDF9F]'\n        },\n        {\n            name: 'InMiscellaneous_Mathematical_Symbols_A',\n            bmp: '\\u27C0-\\u27EF'\n        },\n        {\n            name: 'InMiscellaneous_Mathematical_Symbols_B',\n            bmp: '\\u2980-\\u29FF'\n        },\n        {\n            name: 'InMiscellaneous_Symbols',\n            bmp: '\\u2600-\\u26FF'\n        },\n        {\n            name: 'InMiscellaneous_Symbols_and_Arrows',\n            bmp: '\\u2B00-\\u2BFF'\n        },\n        {\n            name: 'InMiscellaneous_Symbols_and_Pictographs',\n            astral: '\\uD83D[\\uDC00-\\uDDFF]|\\uD83C[\\uDF00-\\uDFFF]'\n        },\n        {\n            name: 'InMiscellaneous_Technical',\n            bmp: '\\u2300-\\u23FF'\n        },\n        {\n            name: 'InModi',\n            astral: '\\uD805[\\uDE00-\\uDE5F]'\n        },\n        {\n            name: 'InModifier_Tone_Letters',\n            bmp: '\\uA700-\\uA71F'\n        },\n        {\n            name: 'InMongolian',\n            bmp: '\\u1800-\\u18AF'\n        },\n        {\n            name: 'InMro',\n            astral: '\\uD81A[\\uDE40-\\uDE6F]'\n        },\n        {\n            name: 'InMultani',\n            astral: '\\uD804[\\uDE80-\\uDEAF]'\n        },\n        {\n            name: 'InMusical_Symbols',\n            astral: '\\uD834[\\uDD00-\\uDDFF]'\n        },\n        {\n            name: 'InMyanmar',\n            bmp: '\\u1000-\\u109F'\n        },\n        {\n            name: 'InMyanmar_Extended_A',\n            bmp: '\\uAA60-\\uAA7F'\n        },\n        {\n            name: 'InMyanmar_Extended_B',\n            bmp: '\\uA9E0-\\uA9FF'\n        },\n        {\n            name: 'InNKo',\n            bmp: '\\u07C0-\\u07FF'\n        },\n        {\n            name: 'InNabataean',\n            astral: '\\uD802[\\uDC80-\\uDCAF]'\n        },\n        {\n            name: 'InNew_Tai_Lue',\n            bmp: '\\u1980-\\u19DF'\n        },\n        {\n            name: 'InNumber_Forms',\n            bmp: '\\u2150-\\u218F'\n        },\n        {\n            name: 'InOgham',\n            bmp: '\\u1680-\\u169F'\n        },\n        {\n            name: 'InOl_Chiki',\n            bmp: '\\u1C50-\\u1C7F'\n        },\n        {\n            name: 'InOld_Hungarian',\n            astral: '\\uD803[\\uDC80-\\uDCFF]'\n        },\n        {\n            name: 'InOld_Italic',\n            astral: '\\uD800[\\uDF00-\\uDF2F]'\n        },\n        {\n            name: 'InOld_North_Arabian',\n            astral: '\\uD802[\\uDE80-\\uDE9F]'\n        },\n        {\n            name: 'InOld_Permic',\n            astral: '\\uD800[\\uDF50-\\uDF7F]'\n        },\n        {\n            name: 'InOld_Persian',\n            astral: '\\uD800[\\uDFA0-\\uDFDF]'\n        },\n        {\n            name: 'InOld_South_Arabian',\n            astral: '\\uD802[\\uDE60-\\uDE7F]'\n        },\n        {\n            name: 'InOld_Turkic',\n            astral: '\\uD803[\\uDC00-\\uDC4F]'\n        },\n        {\n            name: 'InOptical_Character_Recognition',\n            bmp: '\\u2440-\\u245F'\n        },\n        {\n            name: 'InOriya',\n            bmp: '\\u0B00-\\u0B7F'\n        },\n        {\n            name: 'InOrnamental_Dingbats',\n            astral: '\\uD83D[\\uDE50-\\uDE7F]'\n        },\n        {\n            name: 'InOsmanya',\n            astral: '\\uD801[\\uDC80-\\uDCAF]'\n        },\n        {\n            name: 'InPahawh_Hmong',\n            astral: '\\uD81A[\\uDF00-\\uDF8F]'\n        },\n        {\n            name: 'InPalmyrene',\n            astral: '\\uD802[\\uDC60-\\uDC7F]'\n        },\n        {\n            name: 'InPau_Cin_Hau',\n            astral: '\\uD806[\\uDEC0-\\uDEFF]'\n        },\n        {\n            name: 'InPhags_pa',\n            bmp: '\\uA840-\\uA87F'\n        },\n        {\n            name: 'InPhaistos_Disc',\n            astral: '\\uD800[\\uDDD0-\\uDDFF]'\n        },\n        {\n            name: 'InPhoenician',\n            astral: '\\uD802[\\uDD00-\\uDD1F]'\n        },\n        {\n            name: 'InPhonetic_Extensions',\n            bmp: '\\u1D00-\\u1D7F'\n        },\n        {\n            name: 'InPhonetic_Extensions_Supplement',\n            bmp: '\\u1D80-\\u1DBF'\n        },\n        {\n            name: 'InPlaying_Cards',\n            astral: '\\uD83C[\\uDCA0-\\uDCFF]'\n        },\n        {\n            name: 'InPrivate_Use_Area',\n            bmp: '\\uE000-\\uF8FF'\n        },\n        {\n            name: 'InPsalter_Pahlavi',\n            astral: '\\uD802[\\uDF80-\\uDFAF]'\n        },\n        {\n            name: 'InRejang',\n            bmp: '\\uA930-\\uA95F'\n        },\n        {\n            name: 'InRumi_Numeral_Symbols',\n            astral: '\\uD803[\\uDE60-\\uDE7F]'\n        },\n        {\n            name: 'InRunic',\n            bmp: '\\u16A0-\\u16FF'\n        },\n        {\n            name: 'InSamaritan',\n            bmp: '\\u0800-\\u083F'\n        },\n        {\n            name: 'InSaurashtra',\n            bmp: '\\uA880-\\uA8DF'\n        },\n        {\n            name: 'InSharada',\n            astral: '\\uD804[\\uDD80-\\uDDDF]'\n        },\n        {\n            name: 'InShavian',\n            astral: '\\uD801[\\uDC50-\\uDC7F]'\n        },\n        {\n            name: 'InShorthand_Format_Controls',\n            astral: '\\uD82F[\\uDCA0-\\uDCAF]'\n        },\n        {\n            name: 'InSiddham',\n            astral: '\\uD805[\\uDD80-\\uDDFF]'\n        },\n        {\n            name: 'InSinhala',\n            bmp: '\\u0D80-\\u0DFF'\n        },\n        {\n            name: 'InSinhala_Archaic_Numbers',\n            astral: '\\uD804[\\uDDE0-\\uDDFF]'\n        },\n        {\n            name: 'InSmall_Form_Variants',\n            bmp: '\\uFE50-\\uFE6F'\n        },\n        {\n            name: 'InSora_Sompeng',\n            astral: '\\uD804[\\uDCD0-\\uDCFF]'\n        },\n        {\n            name: 'InSpacing_Modifier_Letters',\n            bmp: '\\u02B0-\\u02FF'\n        },\n        {\n            name: 'InSpecials',\n            bmp: '\\uFFF0-\\uFFFF'\n        },\n        {\n            name: 'InSundanese',\n            bmp: '\\u1B80-\\u1BBF'\n        },\n        {\n            name: 'InSundanese_Supplement',\n            bmp: '\\u1CC0-\\u1CCF'\n        },\n        {\n            name: 'InSuperscripts_and_Subscripts',\n            bmp: '\\u2070-\\u209F'\n        },\n        {\n            name: 'InSupplemental_Arrows_A',\n            bmp: '\\u27F0-\\u27FF'\n        },\n        {\n            name: 'InSupplemental_Arrows_B',\n            bmp: '\\u2900-\\u297F'\n        },\n        {\n            name: 'InSupplemental_Arrows_C',\n            astral: '\\uD83E[\\uDC00-\\uDCFF]'\n        },\n        {\n            name: 'InSupplemental_Mathematical_Operators',\n            bmp: '\\u2A00-\\u2AFF'\n        },\n        {\n            name: 'InSupplemental_Punctuation',\n            bmp: '\\u2E00-\\u2E7F'\n        },\n        {\n            name: 'InSupplemental_Symbols_and_Pictographs',\n            astral: '\\uD83E[\\uDD00-\\uDDFF]'\n        },\n        {\n            name: 'InSupplementary_Private_Use_Area_A',\n            astral: '[\\uDB80-\\uDBBF][\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'InSupplementary_Private_Use_Area_B',\n            astral: '[\\uDBC0-\\uDBFF][\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'InSutton_SignWriting',\n            astral: '\\uD836[\\uDC00-\\uDEAF]'\n        },\n        {\n            name: 'InSyloti_Nagri',\n            bmp: '\\uA800-\\uA82F'\n        },\n        {\n            name: 'InSyriac',\n            bmp: '\\u0700-\\u074F'\n        },\n        {\n            name: 'InTagalog',\n            bmp: '\\u1700-\\u171F'\n        },\n        {\n            name: 'InTagbanwa',\n            bmp: '\\u1760-\\u177F'\n        },\n        {\n            name: 'InTags',\n            astral: '\\uDB40[\\uDC00-\\uDC7F]'\n        },\n        {\n            name: 'InTai_Le',\n            bmp: '\\u1950-\\u197F'\n        },\n        {\n            name: 'InTai_Tham',\n            bmp: '\\u1A20-\\u1AAF'\n        },\n        {\n            name: 'InTai_Viet',\n            bmp: '\\uAA80-\\uAADF'\n        },\n        {\n            name: 'InTai_Xuan_Jing_Symbols',\n            astral: '\\uD834[\\uDF00-\\uDF5F]'\n        },\n        {\n            name: 'InTakri',\n            astral: '\\uD805[\\uDE80-\\uDECF]'\n        },\n        {\n            name: 'InTamil',\n            bmp: '\\u0B80-\\u0BFF'\n        },\n        {\n            name: 'InTelugu',\n            bmp: '\\u0C00-\\u0C7F'\n        },\n        {\n            name: 'InThaana',\n            bmp: '\\u0780-\\u07BF'\n        },\n        {\n            name: 'InThai',\n            bmp: '\\u0E00-\\u0E7F'\n        },\n        {\n            name: 'InTibetan',\n            bmp: '\\u0F00-\\u0FFF'\n        },\n        {\n            name: 'InTifinagh',\n            bmp: '\\u2D30-\\u2D7F'\n        },\n        {\n            name: 'InTirhuta',\n            astral: '\\uD805[\\uDC80-\\uDCDF]'\n        },\n        {\n            name: 'InTransport_and_Map_Symbols',\n            astral: '\\uD83D[\\uDE80-\\uDEFF]'\n        },\n        {\n            name: 'InUgaritic',\n            astral: '\\uD800[\\uDF80-\\uDF9F]'\n        },\n        {\n            name: 'InUnified_Canadian_Aboriginal_Syllabics',\n            bmp: '\\u1400-\\u167F'\n        },\n        {\n            name: 'InUnified_Canadian_Aboriginal_Syllabics_Extended',\n            bmp: '\\u18B0-\\u18FF'\n        },\n        {\n            name: 'InVai',\n            bmp: '\\uA500-\\uA63F'\n        },\n        {\n            name: 'InVariation_Selectors',\n            bmp: '\\uFE00-\\uFE0F'\n        },\n        {\n            name: 'InVariation_Selectors_Supplement',\n            astral: '\\uDB40[\\uDD00-\\uDDEF]'\n        },\n        {\n            name: 'InVedic_Extensions',\n            bmp: '\\u1CD0-\\u1CFF'\n        },\n        {\n            name: 'InVertical_Forms',\n            bmp: '\\uFE10-\\uFE1F'\n        },\n        {\n            name: 'InWarang_Citi',\n            astral: '\\uD806[\\uDCA0-\\uDCFF]'\n        },\n        {\n            name: 'InYi_Radicals',\n            bmp: '\\uA490-\\uA4CF'\n        },\n        {\n            name: 'InYi_Syllables',\n            bmp: '\\uA000-\\uA48F'\n        },\n        {\n            name: 'InYijing_Hexagram_Symbols',\n            bmp: '\\u4DC0-\\u4DFF'\n        }\n    ]);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/unicode-blocks.js\n// module id = 37\n// module chunks = 0 1","/*!\n * XRegExp Unicode Categories 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2010-2016 MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds support for Unicode's general categories. E.g., `\\p{Lu}` or `\\p{Uppercase Letter}`. See\n     * category descriptions in UAX #44 <http://unicode.org/reports/tr44/#GC_Values_Table>. Token\n     * names are case insensitive, and any spaces, hyphens, and underscores are ignored.\n     *\n     * Uses Unicode 8.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Categories');\n    }\n\n    XRegExp.addUnicodeData([\n        {\n            name: 'C',\n            alias: 'Other',\n            isBmpLast: true,\n            bmp: '\\0-\\x1F\\x7F-\\x9F\\xAD\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u0605\\u061C\\u061D\\u06DD\\u070E\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u089F\\u08B5-\\u08E2\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0AFA-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C80\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D00\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D4F-\\u0D56\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D76-\\u0D78\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180E\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C80-\\u1CBF\\u1CC8-\\u1CCF\\u1CF7\\u1CFA-\\u1CFF\\u1DF6-\\u1DFB\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BF-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u23FB-\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2B97\\u2BBA-\\u2BBC\\u2BC9\\u2BD2-\\u2BEB\\u2BF0-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E43-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FD6-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7AE\\uA7AF\\uA7B8-\\uA7F6\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C5-\\uA8CD\\uA8DA-\\uA8DF\\uA8FE\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB66-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD-\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFFB\\uFFFE\\uFFFF',\n            astral: '\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDD73-\\uDD7A\\uDDE9-\\uDDFF\\uDE46-\\uDEFF\\uDF57-\\uDF5F\\uDF72-\\uDFFF]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDD0D-\\uDD0F\\uDD2F\\uDD6C-\\uDD6F\\uDD9B-\\uDDE5\\uDE03-\\uDE0F\\uDE3B-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDEFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDE70-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|\\uD81B[\\uDC00-\\uDEFF\\uDF45-\\uDF4F\\uDF7F-\\uDF8E\\uDFA0-\\uDFFF]|\\uD86E[\\uDC1E\\uDC1F]|\\uD83D[\\uDD7A\\uDDA4\\uDED1-\\uDEDF\\uDEED-\\uDEEF\\uDEF4-\\uDEFF\\uDF74-\\uDF7F\\uDFD5-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD70-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8D-\\uDD8F\\uDD9C-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2F\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC70-\\uDC7E\\uDCBD\\uDCC2-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD44-\\uDD4F\\uDD77-\\uDD7F\\uDDCE\\uDDCF\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3E-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF3B\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD86D[\\uDF35-\\uDF3F]|[\\uD807\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD81C-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837-\\uD839\\uD83F\\uD874-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD806[\\uDC00-\\uDC9F\\uDCF3-\\uDCFE\\uDD00-\\uDEBF\\uDEF9-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD00-\\uDE5F\\uDE7F-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD805[\\uDC00-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB8-\\uDEBF\\uDECA-\\uDEFF\\uDF1A-\\uDF1C\\uDF2C-\\uDF2F\\uDF40-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE34-\\uDE37\\uDE3B-\\uDE3E\\uDE48-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA0-\\uDFFF]|\\uD82C[\\uDC02-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE-\\uDD0F\\uDD19-\\uDD7F\\uDD85-\\uDDBF\\uDDC1-\\uDFFF]|\\uD873[\\uDEA2-\\uDFFF]'\n        },\n        {\n            name: 'Cc',\n            alias: 'Control',\n            bmp: '\\0-\\x1F\\x7F-\\x9F'\n        },\n        {\n            name: 'Cf',\n            alias: 'Format',\n            bmp: '\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB',\n            astral: '\\uDB40[\\uDC01\\uDC20-\\uDC7F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uD804\\uDCBD'\n        },\n        {\n            name: 'Cn',\n            alias: 'Unassigned',\n            bmp: '\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u05FF\\u061D\\u070E\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u089F\\u08B5-\\u08E2\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0AFA-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C80\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D00\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D4F-\\u0D56\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D76-\\u0D78\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C80-\\u1CBF\\u1CC8-\\u1CCF\\u1CF7\\u1CFA-\\u1CFF\\u1DF6-\\u1DFB\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u2065\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BF-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u23FB-\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2B97\\u2BBA-\\u2BBC\\u2BC9\\u2BD2-\\u2BEB\\u2BF0-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E43-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FD6-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7AE\\uA7AF\\uA7B8-\\uA7F6\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C5-\\uA8CD\\uA8DA-\\uA8DF\\uA8FE\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB66-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD\\uFEFE\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFF8\\uFFFE\\uFFFF',\n            astral: '\\uDB40[\\uDC00\\uDC02-\\uDC1F\\uDC80-\\uDCFF\\uDDF0-\\uDFFF]|\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDDE9-\\uDDFF\\uDE46-\\uDEFF\\uDF57-\\uDF5F\\uDF72-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDD0D-\\uDD0F\\uDD2F\\uDD6C-\\uDD6F\\uDD9B-\\uDDE5\\uDE03-\\uDE0F\\uDE3B-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDEFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDE70-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|\\uD81B[\\uDC00-\\uDEFF\\uDF45-\\uDF4F\\uDF7F-\\uDF8E\\uDFA0-\\uDFFF]|\\uD86E[\\uDC1E\\uDC1F]|\\uD83D[\\uDD7A\\uDDA4\\uDED1-\\uDEDF\\uDEED-\\uDEEF\\uDEF4-\\uDEFF\\uDF74-\\uDF7F\\uDFD5-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD70-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8D-\\uDD8F\\uDD9C-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2F\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA4-\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD86D[\\uDF35-\\uDF3F]|[\\uD807\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD81C-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837-\\uD839\\uD83F\\uD874-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDB7F][\\uDC00-\\uDFFF]|\\uD806[\\uDC00-\\uDC9F\\uDCF3-\\uDCFE\\uDD00-\\uDEBF\\uDEF9-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD00-\\uDE5F\\uDE7F-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD805[\\uDC00-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB8-\\uDEBF\\uDECA-\\uDEFF\\uDF1A-\\uDF1C\\uDF2C-\\uDF2F\\uDF40-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE34-\\uDE37\\uDE3B-\\uDE3E\\uDE48-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC70-\\uDC7E\\uDCC2-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD44-\\uDD4F\\uDD77-\\uDD7F\\uDDCE\\uDDCF\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3E-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF3B\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD82C[\\uDC02-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE-\\uDD0F\\uDD19-\\uDD7F\\uDD85-\\uDDBF\\uDDC1-\\uDFFF]|\\uD873[\\uDEA2-\\uDFFF]'\n        },\n        {\n            name: 'Co',\n            alias: 'Private_Use',\n            bmp: '\\uE000-\\uF8FF',\n            astral: '[\\uDB80-\\uDBBE\\uDBC0-\\uDBFE][\\uDC00-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDC00-\\uDFFD]'\n        },\n        {\n            name: 'Cs',\n            alias: 'Surrogate',\n            bmp: '\\uD800-\\uDFFF'\n        },\n        {\n            name: 'L',\n            alias: 'Letter',\n            bmp: 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n            astral: '\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD83A[\\uDC00-\\uDCC4]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD87E[\\uDC00-\\uDE1D]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD809[\\uDC80-\\uDD43]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD808[\\uDC00-\\uDF99]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD811[\\uDC00-\\uDE46]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD82C[\\uDC00\\uDC01]|\\uD873[\\uDC00-\\uDEA1]'\n        },\n        {\n            name: 'Ll',\n            alias: 'Lowercase_Letter',\n            bmp: 'a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\n            astral: '\\uD803[\\uDCC0-\\uDCF2]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD801[\\uDC28-\\uDC4F]|\\uD806[\\uDCC0-\\uDCDF]'\n        },\n        {\n            name: 'Lm',\n            alias: 'Modifier_Letter',\n            bmp: '\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E\\uFF9F',\n            astral: '\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F]'\n        },\n        {\n            name: 'Lo',\n            alias: 'Other_Letter',\n            bmp: '\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n            astral: '\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD83A[\\uDC00-\\uDCC4]|\\uD803[\\uDC00-\\uDC48]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD87E[\\uDC00-\\uDE1D]|\\uD81B[\\uDF00-\\uDF44\\uDF50]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCFF\\uDEC0-\\uDEF8]|\\uD809[\\uDC80-\\uDD43]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD808[\\uDC00-\\uDF99]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD811[\\uDC00-\\uDE46]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD82C[\\uDC00\\uDC01]|\\uD873[\\uDC00-\\uDEA1]'\n        },\n        {\n            name: 'Lt',\n            alias: 'Titlecase_Letter',\n            bmp: '\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC'\n        },\n        {\n            name: 'Lu',\n            alias: 'Uppercase_Letter',\n            bmp: 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A',\n            astral: '\\uD806[\\uDCA0-\\uDCBF]|\\uD803[\\uDC80-\\uDCB2]|\\uD801[\\uDC00-\\uDC27]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]'\n        },\n        {\n            name: 'M',\n            alias: 'Mark',\n            bmp: '\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\n            astral: '\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDDDC\\uDDDD\\uDE30-\\uDE40\\uDEAB-\\uDEB7\\uDF1D-\\uDF2B]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDDCA-\\uDDCC\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF00-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD82F[\\uDC9D\\uDC9E]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]'\n        },\n        {\n            name: 'Mc',\n            alias: 'Spacing_Mark',\n            bmp: '\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u094F\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1A19\\u1A1A\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF2\\u1CF3\\u302E\\u302F\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BD-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uAA7D\\uAAEB\\uAAEE\\uAAEF\\uAAF5\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC',\n            astral: '\\uD834[\\uDD65\\uDD66\\uDD6D-\\uDD72]|\\uD804[\\uDC00\\uDC02\\uDC82\\uDCB0-\\uDCB2\\uDCB7\\uDCB8\\uDD2C\\uDD82\\uDDB3-\\uDDB5\\uDDBF\\uDDC0\\uDE2C-\\uDE2E\\uDE32\\uDE33\\uDE35\\uDEE0-\\uDEE2\\uDF02\\uDF03\\uDF3E\\uDF3F\\uDF41-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63]|\\uD805[\\uDCB0-\\uDCB2\\uDCB9\\uDCBB-\\uDCBE\\uDCC1\\uDDAF-\\uDDB1\\uDDB8-\\uDDBB\\uDDBE\\uDE30-\\uDE32\\uDE3B\\uDE3C\\uDE3E\\uDEAC\\uDEAE\\uDEAF\\uDEB6\\uDF20\\uDF21\\uDF26]|\\uD81B[\\uDF51-\\uDF7E]'\n        },\n        {\n            name: 'Me',\n            alias: 'Enclosing_Mark',\n            bmp: '\\u0488\\u0489\\u1ABE\\u20DD-\\u20E0\\u20E2-\\u20E4\\uA670-\\uA672'\n        },\n        {\n            name: 'Mn',\n            alias: 'Nonspacing_Mark',\n            bmp: '\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D01\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\n            astral: '\\uD805[\\uDCB3-\\uDCB8\\uDCBA\\uDCBF\\uDCC0\\uDCC2\\uDCC3\\uDDB2-\\uDDB5\\uDDBC\\uDDBD\\uDDBF\\uDDC0\\uDDDC\\uDDDD\\uDE33-\\uDE3A\\uDE3D\\uDE3F\\uDE40\\uDEAB\\uDEAD\\uDEB0-\\uDEB5\\uDEB7\\uDF1D-\\uDF1F\\uDF22-\\uDF25\\uDF27-\\uDF2B]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC01\\uDC38-\\uDC46\\uDC7F-\\uDC81\\uDCB3-\\uDCB6\\uDCB9\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD2B\\uDD2D-\\uDD34\\uDD73\\uDD80\\uDD81\\uDDB6-\\uDDBE\\uDDCA-\\uDDCC\\uDE2F-\\uDE31\\uDE34\\uDE36\\uDE37\\uDEDF\\uDEE3-\\uDEEA\\uDF00\\uDF01\\uDF3C\\uDF40\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]'\n        },\n        {\n            name: 'N',\n            alias: 'Number',\n            bmp: '0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\n            astral: '\\uD800[\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD801[\\uDCA0-\\uDCA9]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E]|\\uD835[\\uDFCE-\\uDFFF]|\\uD83A[\\uDCC7-\\uDCCF]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59\\uDF5B-\\uDF61]|\\uD806[\\uDCE0-\\uDCF2]|\\uD804[\\uDC52-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDDE1-\\uDDF4\\uDEF0-\\uDEF9]|\\uD834[\\uDF60-\\uDF71]|\\uD83C[\\uDD00-\\uDD0C]|\\uD809[\\uDC00-\\uDC6E]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE47\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD805[\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF3B]'\n        },\n        {\n            name: 'Nd',\n            alias: 'Decimal_Number',\n            bmp: '0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\n            astral: '\\uD801[\\uDCA0-\\uDCA9]|\\uD835[\\uDFCE-\\uDFFF]|\\uD805[\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF39]|\\uD806[\\uDCE0-\\uDCE9]|\\uD804[\\uDC66-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDEF0-\\uDEF9]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59]'\n        },\n        {\n            name: 'Nl',\n            alias: 'Letter_Number',\n            bmp: '\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF',\n            astral: '\\uD809[\\uDC00-\\uDC6E]|\\uD800[\\uDD40-\\uDD74\\uDF41\\uDF4A\\uDFD1-\\uDFD5]'\n        },\n        {\n            name: 'No',\n            alias: 'Other_Number',\n            bmp: '\\xB2\\xB3\\xB9\\xBC-\\xBE\\u09F4-\\u09F9\\u0B72-\\u0B77\\u0BF0-\\u0BF2\\u0C78-\\u0C7E\\u0D70-\\u0D75\\u0F2A-\\u0F33\\u1369-\\u137C\\u17F0-\\u17F9\\u19DA\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u215F\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA830-\\uA835',\n            astral: '\\uD804[\\uDC52-\\uDC65\\uDDE1-\\uDDF4]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E]|\\uD83C[\\uDD00-\\uDD0C]|\\uD806[\\uDCEA-\\uDCF2]|\\uD83A[\\uDCC7-\\uDCCF]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE47\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD805[\\uDF3A\\uDF3B]|\\uD81A[\\uDF5B-\\uDF61]|\\uD834[\\uDF60-\\uDF71]|\\uD800[\\uDD07-\\uDD33\\uDD75-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23]'\n        },\n        {\n            name: 'P',\n            alias: 'Punctuation',\n            bmp: '\\x21-\\x23\\x25-\\\\x2A\\x2C-\\x2F\\x3A\\x3B\\\\x3F\\x40\\\\x5B-\\\\x5D\\x5F\\\\x7B\\x7D\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65',\n            astral: '\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD809[\\uDC70-\\uDC74]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD836[\\uDE87-\\uDE8B]|\\uD801\\uDD6F|\\uD82F\\uDC9F|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]'\n        },\n        {\n            name: 'Pc',\n            alias: 'Connector_Punctuation',\n            bmp: '\\x5F\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F'\n        },\n        {\n            name: 'Pd',\n            alias: 'Dash_Punctuation',\n            bmp: '\\\\x2D\\u058A\\u05BE\\u1400\\u1806\\u2010-\\u2015\\u2E17\\u2E1A\\u2E3A\\u2E3B\\u2E40\\u301C\\u3030\\u30A0\\uFE31\\uFE32\\uFE58\\uFE63\\uFF0D'\n        },\n        {\n            name: 'Pe',\n            alias: 'Close_Punctuation',\n            bmp: '\\\\x29\\\\x5D\\x7D\\u0F3B\\u0F3D\\u169C\\u2046\\u207E\\u208E\\u2309\\u230B\\u232A\\u2769\\u276B\\u276D\\u276F\\u2771\\u2773\\u2775\\u27C6\\u27E7\\u27E9\\u27EB\\u27ED\\u27EF\\u2984\\u2986\\u2988\\u298A\\u298C\\u298E\\u2990\\u2992\\u2994\\u2996\\u2998\\u29D9\\u29DB\\u29FD\\u2E23\\u2E25\\u2E27\\u2E29\\u3009\\u300B\\u300D\\u300F\\u3011\\u3015\\u3017\\u3019\\u301B\\u301E\\u301F\\uFD3E\\uFE18\\uFE36\\uFE38\\uFE3A\\uFE3C\\uFE3E\\uFE40\\uFE42\\uFE44\\uFE48\\uFE5A\\uFE5C\\uFE5E\\uFF09\\uFF3D\\uFF5D\\uFF60\\uFF63'\n        },\n        {\n            name: 'Pf',\n            alias: 'Final_Punctuation',\n            bmp: '\\xBB\\u2019\\u201D\\u203A\\u2E03\\u2E05\\u2E0A\\u2E0D\\u2E1D\\u2E21'\n        },\n        {\n            name: 'Pi',\n            alias: 'Initial_Punctuation',\n            bmp: '\\xAB\\u2018\\u201B\\u201C\\u201F\\u2039\\u2E02\\u2E04\\u2E09\\u2E0C\\u2E1C\\u2E20'\n        },\n        {\n            name: 'Po',\n            alias: 'Other_Punctuation',\n            bmp: '\\x21-\\x23\\x25-\\x27\\\\x2A\\x2C\\\\x2E\\x2F\\x3A\\x3B\\\\x3F\\x40\\\\x5C\\xA1\\xA7\\xB6\\xB7\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u166D\\u166E\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u1805\\u1807-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2016\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203B-\\u203E\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205E\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00\\u2E01\\u2E06-\\u2E08\\u2E0B\\u2E0E-\\u2E16\\u2E18\\u2E19\\u2E1B\\u2E1E\\u2E1F\\u2E2A-\\u2E2E\\u2E30-\\u2E39\\u2E3C-\\u2E3F\\u2E41\\u3001-\\u3003\\u303D\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFE10-\\uFE16\\uFE19\\uFE30\\uFE45\\uFE46\\uFE49-\\uFE4C\\uFE50-\\uFE52\\uFE54-\\uFE57\\uFE5F-\\uFE61\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF07\\uFF0A\\uFF0C\\uFF0E\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3C\\uFF61\\uFF64\\uFF65',\n            astral: '\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD809[\\uDC70-\\uDC74]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD836[\\uDE87-\\uDE8B]|\\uD801\\uDD6F|\\uD82F\\uDC9F|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]'\n        },\n        {\n            name: 'Ps',\n            alias: 'Open_Punctuation',\n            bmp: '\\\\x28\\\\x5B\\\\x7B\\u0F3A\\u0F3C\\u169B\\u201A\\u201E\\u2045\\u207D\\u208D\\u2308\\u230A\\u2329\\u2768\\u276A\\u276C\\u276E\\u2770\\u2772\\u2774\\u27C5\\u27E6\\u27E8\\u27EA\\u27EC\\u27EE\\u2983\\u2985\\u2987\\u2989\\u298B\\u298D\\u298F\\u2991\\u2993\\u2995\\u2997\\u29D8\\u29DA\\u29FC\\u2E22\\u2E24\\u2E26\\u2E28\\u2E42\\u3008\\u300A\\u300C\\u300E\\u3010\\u3014\\u3016\\u3018\\u301A\\u301D\\uFD3F\\uFE17\\uFE35\\uFE37\\uFE39\\uFE3B\\uFE3D\\uFE3F\\uFE41\\uFE43\\uFE47\\uFE59\\uFE5B\\uFE5D\\uFF08\\uFF3B\\uFF5B\\uFF5F\\uFF62'\n        },\n        {\n            name: 'S',\n            alias: 'Symbol',\n            bmp: '\\\\x24\\\\x2B\\x3C-\\x3E\\\\x5E\\x60\\\\x7C\\x7E\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BE\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u23FA\\u2400-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u32FE\\u3300-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD',\n            astral: '\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDD9A\\uDDE6-\\uDE02\\uDE10-\\uDE3A\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDD79\\uDD7B-\\uDDA3\\uDDA5-\\uDED0\\uDEE0-\\uDEEC\\uDEF0-\\uDEF3\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD82F\\uDC9C|\\uD805\\uDF3F|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD83B[\\uDEF0\\uDEF1]'\n        },\n        {\n            name: 'Sc',\n            alias: 'Currency_Symbol',\n            bmp: '\\\\x24\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20BE\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6'\n        },\n        {\n            name: 'Sk',\n            alias: 'Modifier_Symbol',\n            bmp: '\\\\x5E\\x60\\xA8\\xAF\\xB4\\xB8\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u309B\\u309C\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uAB5B\\uFBB2-\\uFBC1\\uFF3E\\uFF40\\uFFE3',\n            astral: '\\uD83C[\\uDFFB-\\uDFFF]'\n        },\n        {\n            name: 'Sm',\n            alias: 'Math_Symbol',\n            bmp: '\\\\x2B\\x3C-\\x3E\\\\x7C\\x7E\\xAC\\xB1\\xD7\\xF7\\u03F6\\u0606-\\u0608\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u2118\\u2140-\\u2144\\u214B\\u2190-\\u2194\\u219A\\u219B\\u21A0\\u21A3\\u21A6\\u21AE\\u21CE\\u21CF\\u21D2\\u21D4\\u21F4-\\u22FF\\u2320\\u2321\\u237C\\u239B-\\u23B3\\u23DC-\\u23E1\\u25B7\\u25C1\\u25F8-\\u25FF\\u266F\\u27C0-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u27FF\\u2900-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2AFF\\u2B30-\\u2B44\\u2B47-\\u2B4C\\uFB29\\uFE62\\uFE64-\\uFE66\\uFF0B\\uFF1C-\\uFF1E\\uFF5C\\uFF5E\\uFFE2\\uFFE9-\\uFFEC',\n            astral: '\\uD83B[\\uDEF0\\uDEF1]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]'\n        },\n        {\n            name: 'So',\n            alias: 'Other_Symbol',\n            bmp: '\\xA6\\xA9\\xAE\\xB0\\u0482\\u058D\\u058E\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09FA\\u0B70\\u0BF3-\\u0BF8\\u0BFA\\u0C7F\\u0D79\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116\\u2117\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u214A\\u214C\\u214D\\u214F\\u218A\\u218B\\u2195-\\u2199\\u219C-\\u219F\\u21A1\\u21A2\\u21A4\\u21A5\\u21A7-\\u21AD\\u21AF-\\u21CD\\u21D0\\u21D1\\u21D3\\u21D5-\\u21F3\\u2300-\\u2307\\u230C-\\u231F\\u2322-\\u2328\\u232B-\\u237B\\u237D-\\u239A\\u23B4-\\u23DB\\u23E2-\\u23FA\\u2400-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u25B6\\u25B8-\\u25C0\\u25C2-\\u25F7\\u2600-\\u266E\\u2670-\\u2767\\u2794-\\u27BF\\u2800-\\u28FF\\u2B00-\\u2B2F\\u2B45\\u2B46\\u2B4D-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u32FE\\u3300-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA828-\\uA82B\\uA836\\uA837\\uA839\\uAA77-\\uAA79\\uFDFD\\uFFE4\\uFFE8\\uFFED\\uFFEE\\uFFFC\\uFFFD',\n            astral: '\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD83D[\\uDC00-\\uDD79\\uDD7B-\\uDDA3\\uDDA5-\\uDED0\\uDEE0-\\uDEEC\\uDEF0-\\uDEF3\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDD9A\\uDDE6-\\uDE02\\uDE10-\\uDE3A\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFA]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD82F\\uDC9C|\\uD805\\uDF3F|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]'\n        },\n        {\n            name: 'Z',\n            alias: 'Separator',\n            bmp: '\\x20\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\n        },\n        {\n            name: 'Zl',\n            alias: 'Line_Separator',\n            bmp: '\\u2028'\n        },\n        {\n            name: 'Zp',\n            alias: 'Paragraph_Separator',\n            bmp: '\\u2029'\n        },\n        {\n            name: 'Zs',\n            alias: 'Space_Separator',\n            bmp: '\\x20\\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000'\n        }\n    ]);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/unicode-categories.js\n// module id = 38\n// module chunks = 0 1","/*!\n * XRegExp Unicode Properties 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2012-2016 MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds properties to meet the UTS #18 Level 1 RL1.2 requirements for Unicode regex support. See\n     * <http://unicode.org/reports/tr18/#RL1.2>. Following are definitions of these properties from\n     * UAX #44 <http://unicode.org/reports/tr44/>:\n     *\n     * - Alphabetic\n     *   Characters with the Alphabetic property. Generated from: Lowercase + Uppercase + Lt + Lm +\n     *   Lo + Nl + Other_Alphabetic.\n     *\n     * - Default_Ignorable_Code_Point\n     *   For programmatic determination of default ignorable code points. New characters that should\n     *   be ignored in rendering (unless explicitly supported) will be assigned in these ranges,\n     *   permitting programs to correctly handle the default rendering of such characters when not\n     *   otherwise supported.\n     *\n     * - Lowercase\n     *   Characters with the Lowercase property. Generated from: Ll + Other_Lowercase.\n     *\n     * - Noncharacter_Code_Point\n     *   Code points permanently reserved for internal use.\n     *\n     * - Uppercase\n     *   Characters with the Uppercase property. Generated from: Lu + Other_Uppercase.\n     *\n     * - White_Space\n     *   Spaces, separator characters and other control characters which should be treated by\n     *   programming languages as \"white space\" for the purpose of parsing elements.\n     *\n     * The properties ASCII, Any, and Assigned are also included but are not defined in UAX #44. UTS\n     * #18 RL1.2 additionally requires support for Unicode scripts and general categories. These are\n     * included in XRegExp's Unicode Categories and Unicode Scripts addons.\n     *\n     * Token names are case insensitive, and any spaces, hyphens, and underscores are ignored.\n     *\n     * Uses Unicode 8.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Properties');\n    }\n\n    var unicodeData = [\n        {\n            name: 'ASCII',\n            bmp: '\\0-\\x7F'\n        },\n        {\n            name: 'Alphabetic',\n            bmp: 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0345\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05B0-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0657\\u0659-\\u065F\\u066E-\\u06D3\\u06D5-\\u06DC\\u06E1-\\u06E8\\u06ED-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710-\\u073F\\u074D-\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0817\\u081A-\\u082C\\u0840-\\u0858\\u08A0-\\u08B4\\u08E3-\\u08E9\\u08F0-\\u093B\\u093D-\\u094C\\u094E-\\u0950\\u0955-\\u0963\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C4\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09F0\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B\\u0A4C\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A70-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0-\\u0AE3\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D-\\u0B44\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4C\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCC\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E46\\u0E4D\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ECD\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F81\\u0F88-\\u0F97\\u0F99-\\u0FBC\\u1000-\\u1036\\u1038\\u103B-\\u103F\\u1050-\\u1062\\u1065-\\u1068\\u106E-\\u1086\\u108E\\u109C\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1713\\u1720-\\u1733\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17B3\\u17B6-\\u17C8\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u1938\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A61-\\u1A74\\u1AA7\\u1B00-\\u1B33\\u1B35-\\u1B43\\u1B45-\\u1B4B\\u1B80-\\u1BA9\\u1BAC-\\u1BAF\\u1BBA-\\u1BE5\\u1BE7-\\u1BF1\\u1C00-\\u1C35\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1DE7-\\u1DF4\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u24B6-\\u24E9\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA674-\\uA67B\\uA67F-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA827\\uA840-\\uA873\\uA880-\\uA8C3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA92A\\uA930-\\uA952\\uA960-\\uA97C\\uA980-\\uA9B2\\uA9B4-\\uA9BF\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAABE\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n            astral: '\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD804[\\uDC00-\\uDC45\\uDC82-\\uDCB8\\uDCD0-\\uDCE8\\uDD00-\\uDD32\\uDD50-\\uDD72\\uDD76\\uDD80-\\uDDBF\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE34\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEE8\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D-\\uDF44\\uDF47\\uDF48\\uDF4B\\uDF4C\\uDF50\\uDF57\\uDF5D-\\uDF63]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD83A[\\uDC00-\\uDCC4]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]|\\uD80D[\\uDC00-\\uDC2E]|\\uD87E[\\uDC00-\\uDE1D]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9E]|\\uD808[\\uDC00-\\uDF99]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD805[\\uDC80-\\uDCC1\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDB5\\uDDB8-\\uDDBE\\uDDD8-\\uDDDD\\uDE00-\\uDE3E\\uDE40\\uDE44\\uDE80-\\uDEB5\\uDF00-\\uDF19\\uDF1D-\\uDF2A]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD811[\\uDC00-\\uDE46]|\\uD82C[\\uDC00\\uDC01]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF93-\\uDF9F]|\\uD873[\\uDC00-\\uDEA1]'\n        },\n        {\n            name: 'Any',\n            isBmpLast: true,\n            bmp: '\\0-\\uFFFF',\n            astral: '[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'Default_Ignorable_Code_Point',\n            bmp: '\\xAD\\u034F\\u061C\\u115F\\u1160\\u17B4\\u17B5\\u180B-\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u3164\\uFE00-\\uFE0F\\uFEFF\\uFFA0\\uFFF0-\\uFFF8',\n            astral: '[\\uDB40-\\uDB43][\\uDC00-\\uDFFF]|\\uD834[\\uDD73-\\uDD7A]|\\uD82F[\\uDCA0-\\uDCA3]'\n        },\n        {\n            name: 'Lowercase',\n            bmp: 'a-z\\xAA\\xB5\\xBA\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02B8\\u02C0\\u02C1\\u02E0-\\u02E4\\u0345\\u0371\\u0373\\u0377\\u037A-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1DBF\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u2071\\u207F\\u2090-\\u209C\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2170-\\u217F\\u2184\\u24D0-\\u24E9\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7D\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B-\\uA69D\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7F8-\\uA7FA\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\n            astral: '\\uD803[\\uDCC0-\\uDCF2]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD801[\\uDC28-\\uDC4F]|\\uD806[\\uDCC0-\\uDCDF]'\n        },\n        {\n            name: 'Noncharacter_Code_Point',\n            bmp: '\\uFDD0-\\uFDEF\\uFFFE\\uFFFF',\n            astral: '[\\uDB3F\\uDB7F\\uDBBF\\uDBFF\\uD83F\\uD87F\\uD8BF\\uDAFF\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uD8FF\\uDABF\\uDA7F\\uD93F][\\uDFFE\\uDFFF]'\n        },\n        {\n            name: 'Uppercase',\n            bmp: 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2160-\\u216F\\u2183\\u24B6-\\u24CF\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A',\n            astral: '\\uD806[\\uDCA0-\\uDCBF]|\\uD803[\\uDC80-\\uDCB2]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD801[\\uDC00-\\uDC27]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]'\n        },\n        {\n            name: 'White_Space',\n            bmp: '\\x09-\\x0D\\x20\\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\n        }\n    ];\n\n    // Add non-generated data\n    unicodeData.push({\n        name: 'Assigned',\n        // Since this is defined as the inverse of Unicode category Cn (Unassigned), the Unicode\n        // Categories addon is required to use this property\n        inverseOf: 'Cn'\n    });\n\n    XRegExp.addUnicodeData(unicodeData);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/unicode-properties.js\n// module id = 39\n// module chunks = 0 1","/*!\n * XRegExp Unicode Scripts 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2010-2016 MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds support for all Unicode scripts. E.g., `\\p{Latin}`. Token names are case insensitive,\n     * and any spaces, hyphens, and underscores are ignored.\n     *\n     * Uses Unicode 8.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Scripts');\n    }\n\n    XRegExp.addUnicodeData([\n        {\n            name: 'Ahom',\n            astral: '\\uD805[\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF3F]'\n        },\n        {\n            name: 'Anatolian_Hieroglyphs',\n            astral: '\\uD811[\\uDC00-\\uDE46]'\n        },\n        {\n            name: 'Arabic',\n            bmp: '\\u0600-\\u0604\\u0606-\\u060B\\u060D-\\u061A\\u061E\\u0620-\\u063F\\u0641-\\u064A\\u0656-\\u066F\\u0671-\\u06DC\\u06DE-\\u06FF\\u0750-\\u077F\\u08A0-\\u08B4\\u08E3-\\u08FF\\uFB50-\\uFBC1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFD\\uFE70-\\uFE74\\uFE76-\\uFEFC',\n            astral: '\\uD803[\\uDE60-\\uDE7E]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB\\uDEF0\\uDEF1]'\n        },\n        {\n            name: 'Armenian',\n            bmp: '\\u0531-\\u0556\\u0559-\\u055F\\u0561-\\u0587\\u058A\\u058D-\\u058F\\uFB13-\\uFB17'\n        },\n        {\n            name: 'Avestan',\n            astral: '\\uD802[\\uDF00-\\uDF35\\uDF39-\\uDF3F]'\n        },\n        {\n            name: 'Balinese',\n            bmp: '\\u1B00-\\u1B4B\\u1B50-\\u1B7C'\n        },\n        {\n            name: 'Bamum',\n            bmp: '\\uA6A0-\\uA6F7',\n            astral: '\\uD81A[\\uDC00-\\uDE38]'\n        },\n        {\n            name: 'Bassa_Vah',\n            astral: '\\uD81A[\\uDED0-\\uDEED\\uDEF0-\\uDEF5]'\n        },\n        {\n            name: 'Batak',\n            bmp: '\\u1BC0-\\u1BF3\\u1BFC-\\u1BFF'\n        },\n        {\n            name: 'Bengali',\n            bmp: '\\u0980-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FB'\n        },\n        {\n            name: 'Bopomofo',\n            bmp: '\\u02EA\\u02EB\\u3105-\\u312D\\u31A0-\\u31BA'\n        },\n        {\n            name: 'Brahmi',\n            astral: '\\uD804[\\uDC00-\\uDC4D\\uDC52-\\uDC6F\\uDC7F]'\n        },\n        {\n            name: 'Braille',\n            bmp: '\\u2800-\\u28FF'\n        },\n        {\n            name: 'Buginese',\n            bmp: '\\u1A00-\\u1A1B\\u1A1E\\u1A1F'\n        },\n        {\n            name: 'Buhid',\n            bmp: '\\u1740-\\u1753'\n        },\n        {\n            name: 'Canadian_Aboriginal',\n            bmp: '\\u1400-\\u167F\\u18B0-\\u18F5'\n        },\n        {\n            name: 'Carian',\n            astral: '\\uD800[\\uDEA0-\\uDED0]'\n        },\n        {\n            name: 'Caucasian_Albanian',\n            astral: '\\uD801[\\uDD30-\\uDD63\\uDD6F]'\n        },\n        {\n            name: 'Chakma',\n            astral: '\\uD804[\\uDD00-\\uDD34\\uDD36-\\uDD43]'\n        },\n        {\n            name: 'Cham',\n            bmp: '\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA5F'\n        },\n        {\n            name: 'Cherokee',\n            bmp: '\\u13A0-\\u13F5\\u13F8-\\u13FD\\uAB70-\\uABBF'\n        },\n        {\n            name: 'Common',\n            bmp: '\\0-\\x40\\\\x5B-\\x60\\\\x7B-\\xA9\\xAB-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9-\\u02DF\\u02E5-\\u02E9\\u02EC-\\u02FF\\u0374\\u037E\\u0385\\u0387\\u0589\\u0605\\u060C\\u061B\\u061C\\u061F\\u0640\\u06DD\\u0964\\u0965\\u0E3F\\u0FD5-\\u0FD8\\u10FB\\u16EB-\\u16ED\\u1735\\u1736\\u1802\\u1803\\u1805\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u2000-\\u200B\\u200E-\\u2064\\u2066-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20BE\\u2100-\\u2125\\u2127-\\u2129\\u212C-\\u2131\\u2133-\\u214D\\u214F-\\u215F\\u2189-\\u218B\\u2190-\\u23FA\\u2400-\\u2426\\u2440-\\u244A\\u2460-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2E00-\\u2E42\\u2FF0-\\u2FFB\\u3000-\\u3004\\u3006\\u3008-\\u3020\\u3030-\\u3037\\u303C-\\u303F\\u309B\\u309C\\u30A0\\u30FB\\u30FC\\u3190-\\u319F\\u31C0-\\u31E3\\u3220-\\u325F\\u327F-\\u32CF\\u3358-\\u33FF\\u4DC0-\\u4DFF\\uA700-\\uA721\\uA788-\\uA78A\\uA830-\\uA839\\uA92E\\uA9CF\\uAB5B\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFF70\\uFF9E\\uFF9F\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD',\n            astral: '\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDFCB\\uDFCE-\\uDFFF]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]|\\uD83D[\\uDC00-\\uDD79\\uDD7B-\\uDDA3\\uDDA5-\\uDED0\\uDEE0-\\uDEEC\\uDEF0-\\uDEF3\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD800[\\uDD00-\\uDD02\\uDD07-\\uDD33\\uDD37-\\uDD3F\\uDD90-\\uDD9B\\uDDD0-\\uDDFC\\uDEE1-\\uDEFB]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD66\\uDD6A-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDF00-\\uDF56\\uDF60-\\uDF71]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD00-\\uDD0C\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE10-\\uDE3A\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFF]'\n        },\n        {\n            name: 'Coptic',\n            bmp: '\\u03E2-\\u03EF\\u2C80-\\u2CF3\\u2CF9-\\u2CFF'\n        },\n        {\n            name: 'Cuneiform',\n            astral: '\\uD809[\\uDC00-\\uDC6E\\uDC70-\\uDC74\\uDC80-\\uDD43]|\\uD808[\\uDC00-\\uDF99]'\n        },\n        {\n            name: 'Cypriot',\n            astral: '\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F]'\n        },\n        {\n            name: 'Cyrillic',\n            bmp: '\\u0400-\\u0484\\u0487-\\u052F\\u1D2B\\u1D78\\u2DE0-\\u2DFF\\uA640-\\uA69F\\uFE2E\\uFE2F'\n        },\n        {\n            name: 'Deseret',\n            astral: '\\uD801[\\uDC00-\\uDC4F]'\n        },\n        {\n            name: 'Devanagari',\n            bmp: '\\u0900-\\u0950\\u0953-\\u0963\\u0966-\\u097F\\uA8E0-\\uA8FD'\n        },\n        {\n            name: 'Duployan',\n            astral: '\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9C-\\uDC9F]'\n        },\n        {\n            name: 'Egyptian_Hieroglyphs',\n            astral: '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]'\n        },\n        {\n            name: 'Elbasan',\n            astral: '\\uD801[\\uDD00-\\uDD27]'\n        },\n        {\n            name: 'Ethiopic',\n            bmp: '\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E'\n        },\n        {\n            name: 'Georgian',\n            bmp: '\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u10FF\\u2D00-\\u2D25\\u2D27\\u2D2D'\n        },\n        {\n            name: 'Glagolitic',\n            bmp: '\\u2C00-\\u2C2E\\u2C30-\\u2C5E'\n        },\n        {\n            name: 'Gothic',\n            astral: '\\uD800[\\uDF30-\\uDF4A]'\n        },\n        {\n            name: 'Grantha',\n            astral: '\\uD804[\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]'\n        },\n        {\n            name: 'Greek',\n            bmp: '\\u0370-\\u0373\\u0375-\\u0377\\u037A-\\u037D\\u037F\\u0384\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03E1\\u03F0-\\u03FF\\u1D26-\\u1D2A\\u1D5D-\\u1D61\\u1D66-\\u1D6A\\u1DBF\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u2126\\uAB65',\n            astral: '\\uD800[\\uDD40-\\uDD8C\\uDDA0]|\\uD834[\\uDE00-\\uDE45]'\n        },\n        {\n            name: 'Gujarati',\n            bmp: '\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9'\n        },\n        {\n            name: 'Gurmukhi',\n            bmp: '\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75'\n        },\n        {\n            name: 'Han',\n            bmp: '\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u3005\\u3007\\u3021-\\u3029\\u3038-\\u303B\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uF900-\\uFA6D\\uFA70-\\uFAD9',\n            astral: '\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]'\n        },\n        {\n            name: 'Hangul',\n            bmp: '\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\u3200-\\u321E\\u3260-\\u327E\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC'\n        },\n        {\n            name: 'Hanunoo',\n            bmp: '\\u1720-\\u1734'\n        },\n        {\n            name: 'Hatran',\n            astral: '\\uD802[\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDCFF]'\n        },\n        {\n            name: 'Hebrew',\n            bmp: '\\u0591-\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F'\n        },\n        {\n            name: 'Hiragana',\n            bmp: '\\u3041-\\u3096\\u309D-\\u309F',\n            astral: '\\uD82C\\uDC01|\\uD83C\\uDE00'\n        },\n        {\n            name: 'Imperial_Aramaic',\n            astral: '\\uD802[\\uDC40-\\uDC55\\uDC57-\\uDC5F]'\n        },\n        {\n            name: 'Inherited',\n            bmp: '\\u0300-\\u036F\\u0485\\u0486\\u064B-\\u0655\\u0670\\u0951\\u0952\\u1AB0-\\u1ABE\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u200C\\u200D\\u20D0-\\u20F0\\u302A-\\u302D\\u3099\\u309A\\uFE00-\\uFE0F\\uFE20-\\uFE2D',\n            astral: '\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD]|\\uD800[\\uDDFD\\uDEE0]|\\uDB40[\\uDD00-\\uDDEF]'\n        },\n        {\n            name: 'Inscriptional_Pahlavi',\n            astral: '\\uD802[\\uDF60-\\uDF72\\uDF78-\\uDF7F]'\n        },\n        {\n            name: 'Inscriptional_Parthian',\n            astral: '\\uD802[\\uDF40-\\uDF55\\uDF58-\\uDF5F]'\n        },\n        {\n            name: 'Javanese',\n            bmp: '\\uA980-\\uA9CD\\uA9D0-\\uA9D9\\uA9DE\\uA9DF'\n        },\n        {\n            name: 'Kaithi',\n            astral: '\\uD804[\\uDC80-\\uDCC1]'\n        },\n        {\n            name: 'Kannada',\n            bmp: '\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2'\n        },\n        {\n            name: 'Katakana',\n            bmp: '\\u30A1-\\u30FA\\u30FD-\\u30FF\\u31F0-\\u31FF\\u32D0-\\u32FE\\u3300-\\u3357\\uFF66-\\uFF6F\\uFF71-\\uFF9D',\n            astral: '\\uD82C\\uDC00'\n        },\n        {\n            name: 'Kayah_Li',\n            bmp: '\\uA900-\\uA92D\\uA92F'\n        },\n        {\n            name: 'Kharoshthi',\n            astral: '\\uD802[\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F-\\uDE47\\uDE50-\\uDE58]'\n        },\n        {\n            name: 'Khmer',\n            bmp: '\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u19E0-\\u19FF'\n        },\n        {\n            name: 'Khojki',\n            astral: '\\uD804[\\uDE00-\\uDE11\\uDE13-\\uDE3D]'\n        },\n        {\n            name: 'Khudawadi',\n            astral: '\\uD804[\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9]'\n        },\n        {\n            name: 'Lao',\n            bmp: '\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF'\n        },\n        {\n            name: 'Latin',\n            bmp: 'A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02E0-\\u02E4\\u1D00-\\u1D25\\u1D2C-\\u1D5C\\u1D62-\\u1D65\\u1D6B-\\u1D77\\u1D79-\\u1DBE\\u1E00-\\u1EFF\\u2071\\u207F\\u2090-\\u209C\\u212A\\u212B\\u2132\\u214E\\u2160-\\u2188\\u2C60-\\u2C7F\\uA722-\\uA787\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA7FF\\uAB30-\\uAB5A\\uAB5C-\\uAB64\\uFB00-\\uFB06\\uFF21-\\uFF3A\\uFF41-\\uFF5A'\n        },\n        {\n            name: 'Lepcha',\n            bmp: '\\u1C00-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C4F'\n        },\n        {\n            name: 'Limbu',\n            bmp: '\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u194F'\n        },\n        {\n            name: 'Linear_A',\n            astral: '\\uD801[\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]'\n        },\n        {\n            name: 'Linear_B',\n            astral: '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA]'\n        },\n        {\n            name: 'Lisu',\n            bmp: '\\uA4D0-\\uA4FF'\n        },\n        {\n            name: 'Lycian',\n            astral: '\\uD800[\\uDE80-\\uDE9C]'\n        },\n        {\n            name: 'Lydian',\n            astral: '\\uD802[\\uDD20-\\uDD39\\uDD3F]'\n        },\n        {\n            name: 'Mahajani',\n            astral: '\\uD804[\\uDD50-\\uDD76]'\n        },\n        {\n            name: 'Malayalam',\n            bmp: '\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D75\\u0D79-\\u0D7F'\n        },\n        {\n            name: 'Mandaic',\n            bmp: '\\u0840-\\u085B\\u085E'\n        },\n        {\n            name: 'Manichaean',\n            astral: '\\uD802[\\uDEC0-\\uDEE6\\uDEEB-\\uDEF6]'\n        },\n        {\n            name: 'Meetei_Mayek',\n            bmp: '\\uAAE0-\\uAAF6\\uABC0-\\uABED\\uABF0-\\uABF9'\n        },\n        {\n            name: 'Mende_Kikakui',\n            astral: '\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCD6]'\n        },\n        {\n            name: 'Meroitic_Cursive',\n            astral: '\\uD802[\\uDDA0-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDDFF]'\n        },\n        {\n            name: 'Meroitic_Hieroglyphs',\n            astral: '\\uD802[\\uDD80-\\uDD9F]'\n        },\n        {\n            name: 'Miao',\n            astral: '\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]'\n        },\n        {\n            name: 'Modi',\n            astral: '\\uD805[\\uDE00-\\uDE44\\uDE50-\\uDE59]'\n        },\n        {\n            name: 'Mongolian',\n            bmp: '\\u1800\\u1801\\u1804\\u1806-\\u180E\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA'\n        },\n        {\n            name: 'Mro',\n            astral: '\\uD81A[\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE6E\\uDE6F]'\n        },\n        {\n            name: 'Multani',\n            astral: '\\uD804[\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA9]'\n        },\n        {\n            name: 'Myanmar',\n            bmp: '\\u1000-\\u109F\\uA9E0-\\uA9FE\\uAA60-\\uAA7F'\n        },\n        {\n            name: 'Nabataean',\n            astral: '\\uD802[\\uDC80-\\uDC9E\\uDCA7-\\uDCAF]'\n        },\n        {\n            name: 'New_Tai_Lue',\n            bmp: '\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE\\u19DF'\n        },\n        {\n            name: 'Nko',\n            bmp: '\\u07C0-\\u07FA'\n        },\n        {\n            name: 'Ogham',\n            bmp: '\\u1680-\\u169C'\n        },\n        {\n            name: 'Ol_Chiki',\n            bmp: '\\u1C50-\\u1C7F'\n        },\n        {\n            name: 'Old_Hungarian',\n            astral: '\\uD803[\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDCFF]'\n        },\n        {\n            name: 'Old_Italic',\n            astral: '\\uD800[\\uDF00-\\uDF23]'\n        },\n        {\n            name: 'Old_North_Arabian',\n            astral: '\\uD802[\\uDE80-\\uDE9F]'\n        },\n        {\n            name: 'Old_Permic',\n            astral: '\\uD800[\\uDF50-\\uDF7A]'\n        },\n        {\n            name: 'Old_Persian',\n            astral: '\\uD800[\\uDFA0-\\uDFC3\\uDFC8-\\uDFD5]'\n        },\n        {\n            name: 'Old_South_Arabian',\n            astral: '\\uD802[\\uDE60-\\uDE7F]'\n        },\n        {\n            name: 'Old_Turkic',\n            astral: '\\uD803[\\uDC00-\\uDC48]'\n        },\n        {\n            name: 'Oriya',\n            bmp: '\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77'\n        },\n        {\n            name: 'Osmanya',\n            astral: '\\uD801[\\uDC80-\\uDC9D\\uDCA0-\\uDCA9]'\n        },\n        {\n            name: 'Pahawh_Hmong',\n            astral: '\\uD81A[\\uDF00-\\uDF45\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]'\n        },\n        {\n            name: 'Palmyrene',\n            astral: '\\uD802[\\uDC60-\\uDC7F]'\n        },\n        {\n            name: 'Pau_Cin_Hau',\n            astral: '\\uD806[\\uDEC0-\\uDEF8]'\n        },\n        {\n            name: 'Phags_Pa',\n            bmp: '\\uA840-\\uA877'\n        },\n        {\n            name: 'Phoenician',\n            astral: '\\uD802[\\uDD00-\\uDD1B\\uDD1F]'\n        },\n        {\n            name: 'Psalter_Pahlavi',\n            astral: '\\uD802[\\uDF80-\\uDF91\\uDF99-\\uDF9C\\uDFA9-\\uDFAF]'\n        },\n        {\n            name: 'Rejang',\n            bmp: '\\uA930-\\uA953\\uA95F'\n        },\n        {\n            name: 'Runic',\n            bmp: '\\u16A0-\\u16EA\\u16EE-\\u16F8'\n        },\n        {\n            name: 'Samaritan',\n            bmp: '\\u0800-\\u082D\\u0830-\\u083E'\n        },\n        {\n            name: 'Saurashtra',\n            bmp: '\\uA880-\\uA8C4\\uA8CE-\\uA8D9'\n        },\n        {\n            name: 'Sharada',\n            astral: '\\uD804[\\uDD80-\\uDDCD\\uDDD0-\\uDDDF]'\n        },\n        {\n            name: 'Shavian',\n            astral: '\\uD801[\\uDC50-\\uDC7F]'\n        },\n        {\n            name: 'Siddham',\n            astral: '\\uD805[\\uDD80-\\uDDB5\\uDDB8-\\uDDDD]'\n        },\n        {\n            name: 'SignWriting',\n            astral: '\\uD836[\\uDC00-\\uDE8B\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]'\n        },\n        {\n            name: 'Sinhala',\n            bmp: '\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4',\n            astral: '\\uD804[\\uDDE1-\\uDDF4]'\n        },\n        {\n            name: 'Sora_Sompeng',\n            astral: '\\uD804[\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9]'\n        },\n        {\n            name: 'Sundanese',\n            bmp: '\\u1B80-\\u1BBF\\u1CC0-\\u1CC7'\n        },\n        {\n            name: 'Syloti_Nagri',\n            bmp: '\\uA800-\\uA82B'\n        },\n        {\n            name: 'Syriac',\n            bmp: '\\u0700-\\u070D\\u070F-\\u074A\\u074D-\\u074F'\n        },\n        {\n            name: 'Tagalog',\n            bmp: '\\u1700-\\u170C\\u170E-\\u1714'\n        },\n        {\n            name: 'Tagbanwa',\n            bmp: '\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773'\n        },\n        {\n            name: 'Tai_Le',\n            bmp: '\\u1950-\\u196D\\u1970-\\u1974'\n        },\n        {\n            name: 'Tai_Tham',\n            bmp: '\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD'\n        },\n        {\n            name: 'Tai_Viet',\n            bmp: '\\uAA80-\\uAAC2\\uAADB-\\uAADF'\n        },\n        {\n            name: 'Takri',\n            astral: '\\uD805[\\uDE80-\\uDEB7\\uDEC0-\\uDEC9]'\n        },\n        {\n            name: 'Tamil',\n            bmp: '\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA'\n        },\n        {\n            name: 'Telugu',\n            bmp: '\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C78-\\u0C7F'\n        },\n        {\n            name: 'Thaana',\n            bmp: '\\u0780-\\u07B1'\n        },\n        {\n            name: 'Thai',\n            bmp: '\\u0E01-\\u0E3A\\u0E40-\\u0E5B'\n        },\n        {\n            name: 'Tibetan',\n            bmp: '\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FD4\\u0FD9\\u0FDA'\n        },\n        {\n            name: 'Tifinagh',\n            bmp: '\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F'\n        },\n        {\n            name: 'Tirhuta',\n            astral: '\\uD805[\\uDC80-\\uDCC7\\uDCD0-\\uDCD9]'\n        },\n        {\n            name: 'Ugaritic',\n            astral: '\\uD800[\\uDF80-\\uDF9D\\uDF9F]'\n        },\n        {\n            name: 'Vai',\n            bmp: '\\uA500-\\uA62B'\n        },\n        {\n            name: 'Warang_Citi',\n            astral: '\\uD806[\\uDCA0-\\uDCF2\\uDCFF]'\n        },\n        {\n            name: 'Yi',\n            bmp: '\\uA000-\\uA48C\\uA490-\\uA4C6'\n        }\n    ]);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/unicode-scripts.js\n// module id = 40\n// module chunks = 0 1","var XRegExp = require('./xregexp');\n\nrequire('./addons/build')(XRegExp);\nrequire('./addons/matchrecursive')(XRegExp);\nrequire('./addons/unicode-base')(XRegExp);\nrequire('./addons/unicode-blocks')(XRegExp);\nrequire('./addons/unicode-categories')(XRegExp);\nrequire('./addons/unicode-properties')(XRegExp);\nrequire('./addons/unicode-scripts')(XRegExp);\n\nmodule.exports = XRegExp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/index.js\n// module id = 41\n// module chunks = 0 1","/*!\n * XRegExp 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2007-2016 MIT License\n */\n\n'use strict';\n\n/**\n * XRegExp provides augmented, extensible regular expressions. You get additional regex syntax and\n * flags, beyond what browsers support natively. XRegExp is also a regex utility belt with tools to\n * make your client-side grepping simpler and more powerful, while freeing you from related\n * cross-browser inconsistencies.\n */\n\n// ==--------------------------==\n// Private stuff\n// ==--------------------------==\n\n// Property name used for extended regex instance data\nvar REGEX_DATA = 'xregexp';\n// Optional features that can be installed and uninstalled\nvar features = {\n    astral: false,\n    natives: false\n};\n// Native methods to use and restore ('native' is an ES3 reserved keyword)\nvar nativ = {\n    exec: RegExp.prototype.exec,\n    test: RegExp.prototype.test,\n    match: String.prototype.match,\n    replace: String.prototype.replace,\n    split: String.prototype.split\n};\n// Storage for fixed/extended native methods\nvar fixed = {};\n// Storage for regexes cached by `XRegExp.cache`\nvar regexCache = {};\n// Storage for pattern details cached by the `XRegExp` constructor\nvar patternCache = {};\n// Storage for regex syntax tokens added internally or by `XRegExp.addToken`\nvar tokens = [];\n// Token scopes\nvar defaultScope = 'default';\nvar classScope = 'class';\n// Regexes that match native regex syntax, including octals\nvar nativeTokens = {\n    // Any native multicharacter token in default scope, or any single character\n    'default': /\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|\\(\\?(?:[:=!]|<[=!])|[?*+]\\?|{\\d+(?:,\\d*)?}\\??|[\\s\\S]/,\n    // Any native multicharacter token in character class scope, or any single character\n    'class': /\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|[\\s\\S]/\n};\n// Any backreference or dollar-prefixed character in replacement strings\nvar replacementToken = /\\$(?:{([\\w$]+)}|(\\d\\d?|[\\s\\S]))/g;\n// Check for correct `exec` handling of nonparticipating capturing groups\nvar correctExecNpcg = nativ.exec.call(/()??/, '')[1] === undefined;\n// Check for ES6 `flags` prop support\nvar hasFlagsProp = /x/.flags !== undefined;\n// Shortcut to `Object.prototype.toString`\nvar toString = {}.toString;\n\nfunction hasNativeFlag(flag) {\n    // Can't check based on the presense of properties/getters since browsers might support such\n    // properties even when they don't support the corresponding flag in regex construction (tested\n    // in Chrome 48, where `'unicode' in /x/` is true but trying to construct a regex with flag `u`\n    // throws an error)\n    var isSupported = true;\n    try {\n        // Can't use regex literals for testing even in a `try` because regex literals with\n        // unsupported flags cause a compilation error in IE\n        new RegExp('', flag);\n    } catch (exception) {\n        isSupported = false;\n    }\n    if (isSupported && flag === 'y') {\n        // Work around Safari 9.1.1 bug\n        return new RegExp('aa|.', 'y').test('b');\n    }\n    return isSupported;\n}\n// Check for ES6 `u` flag support\nvar hasNativeU = hasNativeFlag('u');\n// Check for ES6 `y` flag support\nvar hasNativeY = hasNativeFlag('y');\n// Tracker for known flags, including addon flags\nvar registeredFlags = {\n    g: true,\n    i: true,\n    m: true,\n    u: hasNativeU,\n    y: hasNativeY\n};\n\n/**\n * Attaches extended data and `XRegExp.prototype` properties to a regex object.\n *\n * @param {RegExp} regex Regex to augment.\n * @param {Array} captureNames Array with capture names, or `null`.\n * @param {String} xSource XRegExp pattern used to generate `regex`, or `null` if N/A.\n * @param {String} xFlags XRegExp flags used to generate `regex`, or `null` if N/A.\n * @param {Boolean} [isInternalOnly=false] Whether the regex will be used only for internal\n *   operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *   skipping some operations like attaching `XRegExp.prototype` properties.\n * @returns {RegExp} Augmented regex.\n */\nfunction augment(regex, captureNames, xSource, xFlags, isInternalOnly) {\n    var p;\n\n    regex[REGEX_DATA] = {\n        captureNames: captureNames\n    };\n\n    if (isInternalOnly) {\n        return regex;\n    }\n\n    // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value\n    if (regex.__proto__) {\n        regex.__proto__ = XRegExp.prototype;\n    } else {\n        for (p in XRegExp.prototype) {\n            // An `XRegExp.prototype.hasOwnProperty(p)` check wouldn't be worth it here, since this\n            // is performance sensitive, and enumerable `Object.prototype` or `RegExp.prototype`\n            // extensions exist on `regex.prototype` anyway\n            regex[p] = XRegExp.prototype[p];\n        }\n    }\n\n    regex[REGEX_DATA].source = xSource;\n    // Emulate the ES6 `flags` prop by ensuring flags are in alphabetical order\n    regex[REGEX_DATA].flags = xFlags ? xFlags.split('').sort().join('') : xFlags;\n\n    return regex;\n}\n\n/**\n * Removes any duplicate characters from the provided string.\n *\n * @param {String} str String to remove duplicate characters from.\n * @returns {String} String with any duplicate characters removed.\n */\nfunction clipDuplicates(str) {\n    return nativ.replace.call(str, /([\\s\\S])(?=[\\s\\S]*\\1)/g, '');\n}\n\n/**\n * Copies a regex object while preserving extended data and augmenting with `XRegExp.prototype`\n * properties. The copy has a fresh `lastIndex` property (set to zero). Allows adding and removing\n * flags g and y while copying the regex.\n *\n * @param {RegExp} regex Regex to copy.\n * @param {Object} [options] Options object with optional properties:\n *   <li>`addG` {Boolean} Add flag g while copying the regex.\n *   <li>`addY` {Boolean} Add flag y while copying the regex.\n *   <li>`removeG` {Boolean} Remove flag g while copying the regex.\n *   <li>`removeY` {Boolean} Remove flag y while copying the regex.\n *   <li>`isInternalOnly` {Boolean} Whether the copied regex will be used only for internal\n *     operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *     skipping some operations like attaching `XRegExp.prototype` properties.\n * @returns {RegExp} Copy of the provided regex, possibly with modified flags.\n */\nfunction copyRegex(regex, options) {\n    if (!XRegExp.isRegExp(regex)) {\n        throw new TypeError('Type RegExp expected');\n    }\n\n    var xData = regex[REGEX_DATA] || {},\n        flags = getNativeFlags(regex),\n        flagsToAdd = '',\n        flagsToRemove = '',\n        xregexpSource = null,\n        xregexpFlags = null;\n\n    options = options || {};\n\n    if (options.removeG) {flagsToRemove += 'g';}\n    if (options.removeY) {flagsToRemove += 'y';}\n    if (flagsToRemove) {\n        flags = nativ.replace.call(flags, new RegExp('[' + flagsToRemove + ']+', 'g'), '');\n    }\n\n    if (options.addG) {flagsToAdd += 'g';}\n    if (options.addY) {flagsToAdd += 'y';}\n    if (flagsToAdd) {\n        flags = clipDuplicates(flags + flagsToAdd);\n    }\n\n    if (!options.isInternalOnly) {\n        if (xData.source !== undefined) {\n            xregexpSource = xData.source;\n        }\n        // null or undefined; don't want to add to `flags` if the previous value was null, since\n        // that indicates we're not tracking original precompilation flags\n        if (xData.flags != null) {\n            // Flags are only added for non-internal regexes by `XRegExp.globalize`. Flags are never\n            // removed for non-internal regexes, so don't need to handle it\n            xregexpFlags = flagsToAdd ? clipDuplicates(xData.flags + flagsToAdd) : xData.flags;\n        }\n    }\n\n    // Augment with `XRegExp.prototype` properties, but use the native `RegExp` constructor to avoid\n    // searching for special tokens. That would be wrong for regexes constructed by `RegExp`, and\n    // unnecessary for regexes constructed by `XRegExp` because the regex has already undergone the\n    // translation to native regex syntax\n    regex = augment(\n        new RegExp(regex.source, flags),\n        hasNamedCapture(regex) ? xData.captureNames.slice(0) : null,\n        xregexpSource,\n        xregexpFlags,\n        options.isInternalOnly\n    );\n\n    return regex;\n}\n\n/**\n * Converts hexadecimal to decimal.\n *\n * @param {String} hex\n * @returns {Number}\n */\nfunction dec(hex) {\n    return parseInt(hex, 16);\n}\n\n/**\n * Returns native `RegExp` flags used by a regex object.\n *\n * @param {RegExp} regex Regex to check.\n * @returns {String} Native flags in use.\n */\nfunction getNativeFlags(regex) {\n    return hasFlagsProp ?\n        regex.flags :\n        // Explicitly using `RegExp.prototype.toString` (rather than e.g. `String` or concatenation\n        // with an empty string) allows this to continue working predictably when\n        // `XRegExp.proptotype.toString` is overriden\n        nativ.exec.call(/\\/([a-z]*)$/i, RegExp.prototype.toString.call(regex))[1];\n}\n\n/**\n * Determines whether a regex has extended instance data used to track capture names.\n *\n * @param {RegExp} regex Regex to check.\n * @returns {Boolean} Whether the regex uses named capture.\n */\nfunction hasNamedCapture(regex) {\n    return !!(regex[REGEX_DATA] && regex[REGEX_DATA].captureNames);\n}\n\n/**\n * Converts decimal to hexadecimal.\n *\n * @param {Number|String} dec\n * @returns {String}\n */\nfunction hex(dec) {\n    return parseInt(dec, 10).toString(16);\n}\n\n/**\n * Returns the first index at which a given value can be found in an array.\n *\n * @param {Array} array Array to search.\n * @param {*} value Value to locate in the array.\n * @returns {Number} Zero-based index at which the item is found, or -1.\n */\nfunction indexOf(array, value) {\n    var len = array.length, i;\n\n    for (i = 0; i < len; ++i) {\n        if (array[i] === value) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n/**\n * Determines whether a value is of the specified type, by resolving its internal [[Class]].\n *\n * @param {*} value Object to check.\n * @param {String} type Type to check for, in TitleCase.\n * @returns {Boolean} Whether the object matches the type.\n */\nfunction isType(value, type) {\n    return toString.call(value) === '[object ' + type + ']';\n}\n\n/**\n * Checks whether the next nonignorable token after the specified position is a quantifier.\n *\n * @param {String} pattern Pattern to search within.\n * @param {Number} pos Index in `pattern` to search at.\n * @param {String} flags Flags used by the pattern.\n * @returns {Boolean} Whether the next token is a quantifier.\n */\nfunction isQuantifierNext(pattern, pos, flags) {\n    return nativ.test.call(\n        flags.indexOf('x') > -1 ?\n            // Ignore any leading whitespace, line comments, and inline comments\n            /^(?:\\s|#[^#\\n]*|\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})/ :\n            // Ignore any leading inline comments\n            /^(?:\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})/,\n        pattern.slice(pos)\n    );\n}\n\n/**\n * Adds leading zeros if shorter than four characters. Used for fixed-length hexadecimal values.\n *\n * @param {String} str\n * @returns {String}\n */\nfunction pad4(str) {\n    while (str.length < 4) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Checks for flag-related errors, and strips/applies flags in a leading mode modifier. Offloads\n * the flag preparation logic from the `XRegExp` constructor.\n *\n * @param {String} pattern Regex pattern, possibly with a leading mode modifier.\n * @param {String} flags Any combination of flags.\n * @returns {Object} Object with properties `pattern` and `flags`.\n */\nfunction prepareFlags(pattern, flags) {\n    var i;\n\n    // Recent browsers throw on duplicate flags, so copy this behavior for nonnative flags\n    if (clipDuplicates(flags) !== flags) {\n        throw new SyntaxError('Invalid duplicate regex flag ' + flags);\n    }\n\n    // Strip and apply a leading mode modifier with any combination of flags except g or y\n    pattern = nativ.replace.call(pattern, /^\\(\\?([\\w$]+)\\)/, function($0, $1) {\n        if (nativ.test.call(/[gy]/, $1)) {\n            throw new SyntaxError('Cannot use flag g or y in mode modifier ' + $0);\n        }\n        // Allow duplicate flags within the mode modifier\n        flags = clipDuplicates(flags + $1);\n        return '';\n    });\n\n    // Throw on unknown native or nonnative flags\n    for (i = 0; i < flags.length; ++i) {\n        if (!registeredFlags[flags.charAt(i)]) {\n            throw new SyntaxError('Unknown regex flag ' + flags.charAt(i));\n        }\n    }\n\n    return {\n        pattern: pattern,\n        flags: flags\n    };\n}\n\n/**\n * Prepares an options object from the given value.\n *\n * @param {String|Object} value Value to convert to an options object.\n * @returns {Object} Options object.\n */\nfunction prepareOptions(value) {\n    var options = {};\n\n    if (isType(value, 'String')) {\n        XRegExp.forEach(value, /[^\\s,]+/, function(match) {\n            options[match] = true;\n        });\n\n        return options;\n    }\n\n    return value;\n}\n\n/**\n * Registers a flag so it doesn't throw an 'unknown flag' error.\n *\n * @param {String} flag Single-character flag to register.\n */\nfunction registerFlag(flag) {\n    if (!/^[\\w$]$/.test(flag)) {\n        throw new Error('Flag must be a single character A-Za-z0-9_$');\n    }\n\n    registeredFlags[flag] = true;\n}\n\n/**\n * Runs built-in and custom regex syntax tokens in reverse insertion order at the specified\n * position, until a match is found.\n *\n * @param {String} pattern Original pattern from which an XRegExp object is being built.\n * @param {String} flags Flags being used to construct the regex.\n * @param {Number} pos Position to search for tokens within `pattern`.\n * @param {Number} scope Regex scope to apply: 'default' or 'class'.\n * @param {Object} context Context object to use for token handler functions.\n * @returns {Object} Object with properties `matchLength`, `output`, and `reparse`; or `null`.\n */\nfunction runTokens(pattern, flags, pos, scope, context) {\n    var i = tokens.length,\n        leadChar = pattern.charAt(pos),\n        result = null,\n        match,\n        t;\n\n    // Run in reverse insertion order\n    while (i--) {\n        t = tokens[i];\n        if (\n            (t.leadChar && t.leadChar !== leadChar) ||\n            (t.scope !== scope && t.scope !== 'all') ||\n            (t.flag && flags.indexOf(t.flag) === -1)\n        ) {\n            continue;\n        }\n\n        match = XRegExp.exec(pattern, t.regex, pos, 'sticky');\n        if (match) {\n            result = {\n                matchLength: match[0].length,\n                output: t.handler.call(context, match, scope, flags),\n                reparse: t.reparse\n            };\n            // Finished with token tests\n            break;\n        }\n    }\n\n    return result;\n}\n\n/**\n * Enables or disables implicit astral mode opt-in. When enabled, flag A is automatically added to\n * all new regexes created by XRegExp. This causes an error to be thrown when creating regexes if\n * the Unicode Base addon is not available, since flag A is registered by that addon.\n *\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\nfunction setAstral(on) {\n    features.astral = on;\n}\n\n/**\n * Enables or disables native method overrides.\n *\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\nfunction setNatives(on) {\n    RegExp.prototype.exec = (on ? fixed : nativ).exec;\n    RegExp.prototype.test = (on ? fixed : nativ).test;\n    String.prototype.match = (on ? fixed : nativ).match;\n    String.prototype.replace = (on ? fixed : nativ).replace;\n    String.prototype.split = (on ? fixed : nativ).split;\n\n    features.natives = on;\n}\n\n/**\n * Returns the object, or throws an error if it is `null` or `undefined`. This is used to follow\n * the ES5 abstract operation `ToObject`.\n *\n * @param {*} value Object to check and return.\n * @returns {*} The provided object.\n */\nfunction toObject(value) {\n    // null or undefined\n    if (value == null) {\n        throw new TypeError('Cannot convert null or undefined to object');\n    }\n\n    return value;\n}\n\n// ==--------------------------==\n// Constructor\n// ==--------------------------==\n\n/**\n * Creates an extended regular expression object for matching text with a pattern. Differs from a\n * native regular expression in that additional syntax and flags are supported. The returned object\n * is in fact a native `RegExp` and works with all native methods.\n *\n * @class XRegExp\n * @constructor\n * @param {String|RegExp} pattern Regex pattern string, or an existing regex object to copy.\n * @param {String} [flags] Any combination of flags.\n *   Native flags:\n *     <li>`g` - global\n *     <li>`i` - ignore case\n *     <li>`m` - multiline anchors\n *     <li>`u` - unicode (ES6)\n *     <li>`y` - sticky (Firefox 3+, ES6)\n *   Additional XRegExp flags:\n *     <li>`n` - explicit capture\n *     <li>`s` - dot matches all (aka singleline)\n *     <li>`x` - free-spacing and line comments (aka extended)\n *     <li>`A` - astral (requires the Unicode Base addon)\n *   Flags cannot be provided when constructing one `RegExp` from another.\n * @returns {RegExp} Extended regular expression object.\n * @example\n *\n * // With named capture and flag x\n * XRegExp('(?<year>  [0-9]{4} ) -?  # year  \\n\\\n *          (?<month> [0-9]{2} ) -?  # month \\n\\\n *          (?<day>   [0-9]{2} )     # day   ', 'x');\n *\n * // Providing a regex object copies it. Native regexes are recompiled using native (not XRegExp)\n * // syntax. Copies maintain extended data, are augmented with `XRegExp.prototype` properties, and\n * // have fresh `lastIndex` properties (set to zero).\n * XRegExp(/regex/);\n */\nfunction XRegExp(pattern, flags) {\n    if (XRegExp.isRegExp(pattern)) {\n        if (flags !== undefined) {\n            throw new TypeError('Cannot supply flags when copying a RegExp');\n        }\n        return copyRegex(pattern);\n    }\n\n    // Copy the argument behavior of `RegExp`\n    pattern = pattern === undefined ? '' : String(pattern);\n    flags = flags === undefined ? '' : String(flags);\n\n    if (XRegExp.isInstalled('astral') && flags.indexOf('A') === -1) {\n        // This causes an error to be thrown if the Unicode Base addon is not available\n        flags += 'A';\n    }\n\n    if (!patternCache[pattern]) {\n        patternCache[pattern] = {};\n    }\n\n    if (!patternCache[pattern][flags]) {\n        var context = {\n            hasNamedCapture: false,\n            captureNames: []\n        };\n        var scope = defaultScope;\n        var output = '';\n        var pos = 0;\n        var result;\n\n        // Check for flag-related errors, and strip/apply flags in a leading mode modifier\n        var applied = prepareFlags(pattern, flags);\n        var appliedPattern = applied.pattern;\n        var appliedFlags = applied.flags;\n\n        // Use XRegExp's tokens to translate the pattern to a native regex pattern.\n        // `appliedPattern.length` may change on each iteration if tokens use `reparse`\n        while (pos < appliedPattern.length) {\n            do {\n                // Check for custom tokens at the current position\n                result = runTokens(appliedPattern, appliedFlags, pos, scope, context);\n                // If the matched token used the `reparse` option, splice its output into the\n                // pattern before running tokens again at the same position\n                if (result && result.reparse) {\n                    appliedPattern = appliedPattern.slice(0, pos) +\n                        result.output +\n                        appliedPattern.slice(pos + result.matchLength);\n                }\n            } while (result && result.reparse);\n\n            if (result) {\n                output += result.output;\n                pos += (result.matchLength || 1);\n            } else {\n                // Get the native token at the current position\n                var token = XRegExp.exec(appliedPattern, nativeTokens[scope], pos, 'sticky')[0];\n                output += token;\n                pos += token.length;\n                if (token === '[' && scope === defaultScope) {\n                    scope = classScope;\n                } else if (token === ']' && scope === classScope) {\n                    scope = defaultScope;\n                }\n            }\n        }\n\n        patternCache[pattern][flags] = {\n            // Use basic cleanup to collapse repeated empty groups like `(?:)(?:)` to `(?:)`. Empty\n            // groups are sometimes inserted during regex transpilation in order to keep tokens\n            // separated. However, more than one empty group in a row is never needed.\n            pattern: nativ.replace.call(output, /(?:\\(\\?:\\))+/g, '(?:)'),\n            // Strip all but native flags\n            flags: nativ.replace.call(appliedFlags, /[^gimuy]+/g, ''),\n            // `context.captureNames` has an item for each capturing group, even if unnamed\n            captures: context.hasNamedCapture ? context.captureNames : null\n        };\n    }\n\n    var generated = patternCache[pattern][flags];\n    return augment(\n        new RegExp(generated.pattern, generated.flags),\n        generated.captures,\n        pattern,\n        flags\n    );\n}\n\n// Add `RegExp.prototype` to the prototype chain\nXRegExp.prototype = new RegExp();\n\n// ==--------------------------==\n// Public properties\n// ==--------------------------==\n\n/**\n * The XRegExp version number as a string containing three dot-separated parts. For example,\n * '2.0.0-beta-3'.\n *\n * @static\n * @type String\n */\nXRegExp.version = '3.1.1';\n\n// ==--------------------------==\n// Public methods\n// ==--------------------------==\n\n// Intentionally undocumented; used in tests and addons\nXRegExp._hasNativeFlag = hasNativeFlag;\nXRegExp._dec = dec;\nXRegExp._hex = hex;\nXRegExp._pad4 = pad4;\n\n/**\n * Extends XRegExp syntax and allows custom flags. This is used internally and can be used to\n * create XRegExp addons. If more than one token can match the same string, the last added wins.\n *\n * @param {RegExp} regex Regex object that matches the new token.\n * @param {Function} handler Function that returns a new pattern string (using native regex syntax)\n *   to replace the matched token within all future XRegExp regexes. Has access to persistent\n *   properties of the regex being built, through `this`. Invoked with three arguments:\n *   <li>The match array, with named backreference properties.\n *   <li>The regex scope where the match was found: 'default' or 'class'.\n *   <li>The flags used by the regex, including any flags in a leading mode modifier.\n *   The handler function becomes part of the XRegExp construction process, so be careful not to\n *   construct XRegExps within the function or you will trigger infinite recursion.\n * @param {Object} [options] Options object with optional properties:\n *   <li>`scope` {String} Scope where the token applies: 'default', 'class', or 'all'.\n *   <li>`flag` {String} Single-character flag that triggers the token. This also registers the\n *     flag, which prevents XRegExp from throwing an 'unknown flag' error when the flag is used.\n *   <li>`optionalFlags` {String} Any custom flags checked for within the token `handler` that are\n *     not required to trigger the token. This registers the flags, to prevent XRegExp from\n *     throwing an 'unknown flag' error when any of the flags are used.\n *   <li>`reparse` {Boolean} Whether the `handler` function's output should not be treated as\n *     final, and instead be reparseable by other tokens (including the current token). Allows\n *     token chaining or deferring.\n *   <li>`leadChar` {String} Single character that occurs at the beginning of any successful match\n *     of the token (not always applicable). This doesn't change the behavior of the token unless\n *     you provide an erroneous value. However, providing it can increase the token's performance\n *     since the token can be skipped at any positions where this character doesn't appear.\n * @example\n *\n * // Basic usage: Add \\a for the ALERT control code\n * XRegExp.addToken(\n *   /\\\\a/,\n *   function() {return '\\\\x07';},\n *   {scope: 'all'}\n * );\n * XRegExp('\\\\a[\\\\a-\\\\n]+').test('\\x07\\n\\x07'); // -> true\n *\n * // Add the U (ungreedy) flag from PCRE and RE2, which reverses greedy and lazy quantifiers.\n * // Since `scope` is not specified, it uses 'default' (i.e., transformations apply outside of\n * // character classes only)\n * XRegExp.addToken(\n *   /([?*+]|{\\d+(?:,\\d*)?})(\\??)/,\n *   function(match) {return match[1] + (match[2] ? '' : '?');},\n *   {flag: 'U'}\n * );\n * XRegExp('a+', 'U').exec('aaa')[0]; // -> 'a'\n * XRegExp('a+?', 'U').exec('aaa')[0]; // -> 'aaa'\n */\nXRegExp.addToken = function(regex, handler, options) {\n    options = options || {};\n    var optionalFlags = options.optionalFlags, i;\n\n    if (options.flag) {\n        registerFlag(options.flag);\n    }\n\n    if (optionalFlags) {\n        optionalFlags = nativ.split.call(optionalFlags, '');\n        for (i = 0; i < optionalFlags.length; ++i) {\n            registerFlag(optionalFlags[i]);\n        }\n    }\n\n    // Add to the private list of syntax tokens\n    tokens.push({\n        regex: copyRegex(regex, {\n            addG: true,\n            addY: hasNativeY,\n            isInternalOnly: true\n        }),\n        handler: handler,\n        scope: options.scope || defaultScope,\n        flag: options.flag,\n        reparse: options.reparse,\n        leadChar: options.leadChar\n    });\n\n    // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and flags\n    // might now produce different results\n    XRegExp.cache.flush('patterns');\n};\n\n/**\n * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with\n * the same pattern and flag combination, the cached copy of the regex is returned.\n *\n * @param {String} pattern Regex pattern string.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @returns {RegExp} Cached XRegExp object.\n * @example\n *\n * while (match = XRegExp.cache('.', 'gs').exec(str)) {\n *   // The regex is compiled once only\n * }\n */\nXRegExp.cache = function(pattern, flags) {\n    if (!regexCache[pattern]) {\n        regexCache[pattern] = {};\n    }\n    return regexCache[pattern][flags] || (\n        regexCache[pattern][flags] = XRegExp(pattern, flags)\n    );\n};\n\n// Intentionally undocumented; used in tests\nXRegExp.cache.flush = function(cacheName) {\n    if (cacheName === 'patterns') {\n        // Flush the pattern cache used by the `XRegExp` constructor\n        patternCache = {};\n    } else {\n        // Flush the regex cache populated by `XRegExp.cache`\n        regexCache = {};\n    }\n};\n\n/**\n * Escapes any regular expression metacharacters, for use when matching literal strings. The result\n * can safely be used at any point within a regex that uses any flags.\n *\n * @param {String} str String to escape.\n * @returns {String} String with regex metacharacters escaped.\n * @example\n *\n * XRegExp.escape('Escaped? <.>');\n * // -> 'Escaped\\?\\ <\\.>'\n */\nXRegExp.escape = function(str) {\n    return nativ.replace.call(toObject(str), /[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * Executes a regex search in a specified string. Returns a match array or `null`. If the provided\n * regex uses named capture, named backreference properties are included on the match array.\n * Optional `pos` and `sticky` arguments specify the search start position, and whether the match\n * must start at the specified position only. The `lastIndex` property of the provided regex is not\n * used, but is updated for compatibility. Also fixes browser bugs compared to the native\n * `RegExp.prototype.exec` and can be used reliably cross-browser.\n *\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {Array} Match array with named backreference properties, or `null`.\n * @example\n *\n * // Basic use, with named backreference\n * var match = XRegExp.exec('U+2620', XRegExp('U\\\\+(?<hex>[0-9A-F]{4})'));\n * match.hex; // -> '2620'\n *\n * // With pos and sticky, in a loop\n * var pos = 2, result = [], match;\n * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\\d)>/, pos, 'sticky')) {\n *   result.push(match[1]);\n *   pos = match.index + match[0].length;\n * }\n * // result -> ['2', '3', '4']\n */\nXRegExp.exec = function(str, regex, pos, sticky) {\n    var cacheKey = 'g',\n        addY = false,\n        match,\n        r2;\n\n    addY = hasNativeY && !!(sticky || (regex.sticky && sticky !== false));\n    if (addY) {\n        cacheKey += 'y';\n    }\n\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\n\n    // Shares cached copies with `XRegExp.match`/`replace`\n    r2 = regex[REGEX_DATA][cacheKey] || (\n        regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n            addG: true,\n            addY: addY,\n            removeY: sticky === false,\n            isInternalOnly: true\n        })\n    );\n\n    r2.lastIndex = pos = pos || 0;\n\n    // Fixed `exec` required for `lastIndex` fix, named backreferences, etc.\n    match = fixed.exec.call(r2, str);\n\n    if (sticky && match && match.index !== pos) {\n        match = null;\n    }\n\n    if (regex.global) {\n        regex.lastIndex = match ? r2.lastIndex : 0;\n    }\n\n    return match;\n};\n\n/**\n * Executes a provided function once per regex match. Searches always start at the beginning of the\n * string and continue until the end, regardless of the state of the regex's `global` property and\n * initial `lastIndex`.\n *\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Function} callback Function to execute for each match. Invoked with four arguments:\n *   <li>The match array, with named backreference properties.\n *   <li>The zero-based match index.\n *   <li>The string being traversed.\n *   <li>The regex object being used to traverse the string.\n * @example\n *\n * // Extracts every other digit from a string\n * var evens = [];\n * XRegExp.forEach('1a2345', /\\d/, function(match, i) {\n *   if (i % 2) evens.push(+match[0]);\n * });\n * // evens -> [2, 4]\n */\nXRegExp.forEach = function(str, regex, callback) {\n    var pos = 0,\n        i = -1,\n        match;\n\n    while ((match = XRegExp.exec(str, regex, pos))) {\n        // Because `regex` is provided to `callback`, the function could use the deprecated/\n        // nonstandard `RegExp.prototype.compile` to mutate the regex. However, since `XRegExp.exec`\n        // doesn't use `lastIndex` to set the search position, this can't lead to an infinite loop,\n        // at least. Actually, because of the way `XRegExp.exec` caches globalized versions of\n        // regexes, mutating the regex will not have any effect on the iteration or matched strings,\n        // which is a nice side effect that brings extra safety.\n        callback(match, ++i, str, regex);\n\n        pos = match.index + (match[0].length || 1);\n    }\n};\n\n/**\n * Copies a regex object and adds flag `g`. The copy maintains extended data, is augmented with\n * `XRegExp.prototype` properties, and has a fresh `lastIndex` property (set to zero). Native\n * regexes are not recompiled using XRegExp syntax.\n *\n * @param {RegExp} regex Regex to globalize.\n * @returns {RegExp} Copy of the provided regex with flag `g` added.\n * @example\n *\n * var globalCopy = XRegExp.globalize(/regex/);\n * globalCopy.global; // -> true\n */\nXRegExp.globalize = function(regex) {\n    return copyRegex(regex, {addG: true});\n};\n\n/**\n * Installs optional features according to the specified options. Can be undone using\n * `XRegExp.uninstall`.\n *\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.install({\n *   // Enables support for astral code points in Unicode addons (implicitly sets flag A)\n *   astral: true,\n *\n *   // DEPRECATED: Overrides native regex methods with fixed/extended versions\n *   natives: true\n * });\n *\n * // With an options string\n * XRegExp.install('astral natives');\n */\nXRegExp.install = function(options) {\n    options = prepareOptions(options);\n\n    if (!features.astral && options.astral) {\n        setAstral(true);\n    }\n\n    if (!features.natives && options.natives) {\n        setNatives(true);\n    }\n};\n\n/**\n * Checks whether an individual optional feature is installed.\n *\n * @param {String} feature Name of the feature to check. One of:\n *   <li>`astral`\n *   <li>`natives`\n * @returns {Boolean} Whether the feature is installed.\n * @example\n *\n * XRegExp.isInstalled('astral');\n */\nXRegExp.isInstalled = function(feature) {\n    return !!(features[feature]);\n};\n\n/**\n * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes\n * created in another frame, when `instanceof` and `constructor` checks would fail.\n *\n * @param {*} value Object to check.\n * @returns {Boolean} Whether the object is a `RegExp` object.\n * @example\n *\n * XRegExp.isRegExp('string'); // -> false\n * XRegExp.isRegExp(/regex/i); // -> true\n * XRegExp.isRegExp(RegExp('^', 'm')); // -> true\n * XRegExp.isRegExp(XRegExp('(?s).')); // -> true\n */\nXRegExp.isRegExp = function(value) {\n    return toString.call(value) === '[object RegExp]';\n    //return isType(value, 'RegExp');\n};\n\n/**\n * Returns the first matched string, or in global mode, an array containing all matched strings.\n * This is essentially a more convenient re-implementation of `String.prototype.match` that gives\n * the result types you actually want (string instead of `exec`-style array in match-first mode,\n * and an empty array instead of `null` when no matches are found in match-all mode). It also lets\n * you override flag g and ignore `lastIndex`, and fixes browser bugs.\n *\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {String} [scope='one'] Use 'one' to return the first match as a string. Use 'all' to\n *   return an array of all matched strings. If not explicitly specified and `regex` uses flag g,\n *   `scope` is 'all'.\n * @returns {String|Array} In match-first mode: First match as a string, or `null`. In match-all\n *   mode: Array of all matched strings, or an empty array.\n * @example\n *\n * // Match first\n * XRegExp.match('abc', /\\w/); // -> 'a'\n * XRegExp.match('abc', /\\w/g, 'one'); // -> 'a'\n * XRegExp.match('abc', /x/g, 'one'); // -> null\n *\n * // Match all\n * XRegExp.match('abc', /\\w/g); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /\\w/, 'all'); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /x/, 'all'); // -> []\n */\nXRegExp.match = function(str, regex, scope) {\n    var global = (regex.global && scope !== 'one') || scope === 'all',\n        cacheKey = ((global ? 'g' : '') + (regex.sticky ? 'y' : '')) || 'noGY',\n        result,\n        r2;\n\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\n\n    // Shares cached copies with `XRegExp.exec`/`replace`\n    r2 = regex[REGEX_DATA][cacheKey] || (\n        regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n            addG: !!global,\n            removeG: scope === 'one',\n            isInternalOnly: true\n        })\n    );\n\n    result = nativ.match.call(toObject(str), r2);\n\n    if (regex.global) {\n        regex.lastIndex = (\n            (scope === 'one' && result) ?\n                // Can't use `r2.lastIndex` since `r2` is nonglobal in this case\n                (result.index + result[0].length) : 0\n        );\n    }\n\n    return global ? (result || []) : (result && result[0]);\n};\n\n/**\n * Retrieves the matches from searching a string using a chain of regexes that successively search\n * within previous matches. The provided `chain` array can contain regexes and or objects with\n * `regex` and `backref` properties. When a backreference is specified, the named or numbered\n * backreference is passed forward to the next regex or returned.\n *\n * @param {String} str String to search.\n * @param {Array} chain Regexes that each search for matches within preceding results.\n * @returns {Array} Matches by the last regex in the chain, or an empty array.\n * @example\n *\n * // Basic usage; matches numbers within <b> tags\n * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [\n *   XRegExp('(?is)<b>.*?</b>'),\n *   /\\d+/\n * ]);\n * // -> ['2', '4', '56']\n *\n * // Passing forward and returning specific backreferences\n * html = '<a href=\"http://xregexp.com/api/\">XRegExp</a>\\\n *         <a href=\"http://www.google.com/\">Google</a>';\n * XRegExp.matchChain(html, [\n *   {regex: /<a href=\"([^\"]+)\">/i, backref: 1},\n *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}\n * ]);\n * // -> ['xregexp.com', 'www.google.com']\n */\nXRegExp.matchChain = function(str, chain) {\n    return (function recurseChain(values, level) {\n        var item = chain[level].regex ? chain[level] : {regex: chain[level]};\n        var matches = [];\n\n        function addMatch(match) {\n            if (item.backref) {\n                // Safari 4.0.5 (but not 5.0.5+) inappropriately uses sparse arrays to hold the\n                // `undefined`s for backreferences to nonparticipating capturing groups. In such\n                // cases, a `hasOwnProperty` or `in` check on its own would inappropriately throw\n                // the exception, so also check if the backreference is a number that is within the\n                // bounds of the array.\n                if (!(match.hasOwnProperty(item.backref) || +item.backref < match.length)) {\n                    throw new ReferenceError('Backreference to undefined group: ' + item.backref);\n                }\n\n                matches.push(match[item.backref] || '');\n            } else {\n                matches.push(match[0]);\n            }\n        }\n\n        for (var i = 0; i < values.length; ++i) {\n            XRegExp.forEach(values[i], item.regex, addMatch);\n        }\n\n        return ((level === chain.length - 1) || !matches.length) ?\n            matches :\n            recurseChain(matches, level + 1);\n    }([str], 0));\n};\n\n/**\n * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string\n * or regex, and the replacement can be a string or a function to be called for each match. To\n * perform a global search and replace, use the optional `scope` argument or include flag g if using\n * a regex. Replacement strings can use `${n}` for named and numbered backreferences. Replacement\n * functions can use named backreferences via `arguments[0].name`. Also fixes browser bugs compared\n * to the native `String.prototype.replace` and can be used reliably cross-browser.\n *\n * @param {String} str String to search.\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n *   Replacement strings can include special replacement syntax:\n *     <li>$$ - Inserts a literal $ character.\n *     <li>$&, $0 - Inserts the matched substring.\n *     <li>$` - Inserts the string that precedes the matched substring (left context).\n *     <li>$' - Inserts the string that follows the matched substring (right context).\n *     <li>$n, $nn - Where n/nn are digits referencing an existent capturing group, inserts\n *       backreference n/nn.\n *     <li>${n} - Where n is a name or any number of digits that reference an existent capturing\n *       group, inserts backreference n.\n *   Replacement functions are invoked with three or more arguments:\n *     <li>The matched substring (corresponds to $& above). Named backreferences are accessible as\n *       properties of this first argument.\n *     <li>0..n arguments, one for each backreference (corresponding to $1, $2, etc. above).\n *     <li>The zero-based index of the match within the total search string.\n *     <li>The total string being searched.\n * @param {String} [scope='one'] Use 'one' to replace the first match only, or 'all'. If not\n *   explicitly specified and using a regex with flag g, `scope` is 'all'.\n * @returns {String} New string with one or all matches replaced.\n * @example\n *\n * // Regex search, using named backreferences in replacement string\n * var name = XRegExp('(?<first>\\\\w+) (?<last>\\\\w+)');\n * XRegExp.replace('John Smith', name, '${last}, ${first}');\n * // -> 'Smith, John'\n *\n * // Regex search, using named backreferences in replacement function\n * XRegExp.replace('John Smith', name, function(match) {\n *   return match.last + ', ' + match.first;\n * });\n * // -> 'Smith, John'\n *\n * // String search, with replace-all\n * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');\n * // -> 'XRegExp builds XRegExps'\n */\nXRegExp.replace = function(str, search, replacement, scope) {\n    var isRegex = XRegExp.isRegExp(search),\n        global = (search.global && scope !== 'one') || scope === 'all',\n        cacheKey = ((global ? 'g' : '') + (search.sticky ? 'y' : '')) || 'noGY',\n        s2 = search,\n        result;\n\n    if (isRegex) {\n        search[REGEX_DATA] = search[REGEX_DATA] || {};\n\n        // Shares cached copies with `XRegExp.exec`/`match`. Since a copy is used, `search`'s\n        // `lastIndex` isn't updated *during* replacement iterations\n        s2 = search[REGEX_DATA][cacheKey] || (\n            search[REGEX_DATA][cacheKey] = copyRegex(search, {\n                addG: !!global,\n                removeG: scope === 'one',\n                isInternalOnly: true\n            })\n        );\n    } else if (global) {\n        s2 = new RegExp(XRegExp.escape(String(search)), 'g');\n    }\n\n    // Fixed `replace` required for named backreferences, etc.\n    result = fixed.replace.call(toObject(str), s2, replacement);\n\n    if (isRegex && search.global) {\n        // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n        search.lastIndex = 0;\n    }\n\n    return result;\n};\n\n/**\n * Performs batch processing of string replacements. Used like `XRegExp.replace`, but accepts an\n * array of replacement details. Later replacements operate on the output of earlier replacements.\n * Replacement details are accepted as an array with a regex or string to search for, the\n * replacement string or function, and an optional scope of 'one' or 'all'. Uses the XRegExp\n * replacement text syntax, which supports named backreference properties via `${name}`.\n *\n * @param {String} str String to search.\n * @param {Array} replacements Array of replacement detail arrays.\n * @returns {String} New string with all replacements.\n * @example\n *\n * str = XRegExp.replaceEach(str, [\n *   [XRegExp('(?<name>a)'), 'z${name}'],\n *   [/b/gi, 'y'],\n *   [/c/g, 'x', 'one'], // scope 'one' overrides /g\n *   [/d/, 'w', 'all'],  // scope 'all' overrides lack of /g\n *   ['e', 'v', 'all'],  // scope 'all' allows replace-all for strings\n *   [/f/g, function($0) {\n *     return $0.toUpperCase();\n *   }]\n * ]);\n */\nXRegExp.replaceEach = function(str, replacements) {\n    var i, r;\n\n    for (i = 0; i < replacements.length; ++i) {\n        r = replacements[i];\n        str = XRegExp.replace(str, r[0], r[1], r[2]);\n    }\n\n    return str;\n};\n\n/**\n * Splits a string into an array of strings using a regex or string separator. Matches of the\n * separator are not included in the result array. However, if `separator` is a regex that contains\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n * cross-browser.\n *\n * @param {String} str String to split.\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n * @example\n *\n * // Basic use\n * XRegExp.split('a b c', ' ');\n * // -> ['a', 'b', 'c']\n *\n * // With limit\n * XRegExp.split('a b c', ' ', 2);\n * // -> ['a', 'b']\n *\n * // Backreferences in result array\n * XRegExp.split('..word1..', /([a-z]+)(\\d+)/i);\n * // -> ['..', 'word', '1', '..']\n */\nXRegExp.split = function(str, separator, limit) {\n    return fixed.split.call(toObject(str), separator, limit);\n};\n\n/**\n * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and\n * `sticky` arguments specify the search start position, and whether the match must start at the\n * specified position only. The `lastIndex` property of the provided regex is not used, but is\n * updated for compatibility. Also fixes browser bugs compared to the native\n * `RegExp.prototype.test` and can be used reliably cross-browser.\n *\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {Boolean} Whether the regex matched the provided value.\n * @example\n *\n * // Basic use\n * XRegExp.test('abc', /c/); // -> true\n *\n * // With pos and sticky\n * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false\n * XRegExp.test('abc', /c/, 2, 'sticky'); // -> true\n */\nXRegExp.test = function(str, regex, pos, sticky) {\n    // Do this the easy way :-)\n    return !!XRegExp.exec(str, regex, pos, sticky);\n};\n\n/**\n * Uninstalls optional features according to the specified options. All optional features start out\n * uninstalled, so this is used to undo the actions of `XRegExp.install`.\n *\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.uninstall({\n *   // Disables support for astral code points in Unicode addons\n *   astral: true,\n *\n *   // DEPRECATED: Restores native regex methods\n *   natives: true\n * });\n *\n * // With an options string\n * XRegExp.uninstall('astral natives');\n */\nXRegExp.uninstall = function(options) {\n    options = prepareOptions(options);\n\n    if (features.astral && options.astral) {\n        setAstral(false);\n    }\n\n    if (features.natives && options.natives) {\n        setNatives(false);\n    }\n};\n\n/**\n * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as\n * regex objects or strings. Metacharacters are escaped in patterns provided as strings.\n * Backreferences in provided regex objects are automatically renumbered to work correctly within\n * the larger combined pattern. Native flags used by provided regexes are ignored in favor of the\n * `flags` argument.\n *\n * @param {Array} patterns Regexes and strings to combine.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @returns {RegExp} Union of the provided regexes and strings.\n * @example\n *\n * XRegExp.union(['a+b*c', /(dogs)\\1/, /(cats)\\1/], 'i');\n * // -> /a\\+b\\*c|(dogs)\\1|(cats)\\2/i\n */\nXRegExp.union = function(patterns, flags) {\n    var numCaptures = 0;\n    var numPriorCaptures;\n    var captureNames;\n\n    function rewrite(match, paren, backref) {\n        var name = captureNames[numCaptures - numPriorCaptures];\n\n        // Capturing group\n        if (paren) {\n            ++numCaptures;\n            // If the current capture has a name, preserve the name\n            if (name) {\n                return '(?<' + name + '>';\n            }\n        // Backreference\n        } else if (backref) {\n            // Rewrite the backreference\n            return '\\\\' + (+backref + numPriorCaptures);\n        }\n\n        return match;\n    }\n\n    if (!(isType(patterns, 'Array') && patterns.length)) {\n        throw new TypeError('Must provide a nonempty array of patterns to merge');\n    }\n\n    var parts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]/g;\n    var output = [];\n    var pattern;\n    for (var i = 0; i < patterns.length; ++i) {\n        pattern = patterns[i];\n\n        if (XRegExp.isRegExp(pattern)) {\n            numPriorCaptures = numCaptures;\n            captureNames = (pattern[REGEX_DATA] && pattern[REGEX_DATA].captureNames) || [];\n\n            // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns are\n            // independently valid; helps keep this simple. Named captures are put back\n            output.push(nativ.replace.call(XRegExp(pattern.source).source, parts, rewrite));\n        } else {\n            output.push(XRegExp.escape(pattern));\n        }\n    }\n\n    return XRegExp(output.join('|'), flags);\n};\n\n// ==--------------------------==\n// Fixed/extended native methods\n// ==--------------------------==\n\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `RegExp.prototype.exec`. Calling `XRegExp.install('natives')` uses this to\n * override the native method. Use via `XRegExp.exec` without overriding natives.\n *\n * @param {String} str String to search.\n * @returns {Array} Match array with named backreference properties, or `null`.\n */\nfixed.exec = function(str) {\n    var origLastIndex = this.lastIndex,\n        match = nativ.exec.apply(this, arguments),\n        name,\n        r2,\n        i;\n\n    if (match) {\n        // Fix browsers whose `exec` methods don't return `undefined` for nonparticipating capturing\n        // groups. This fixes IE 5.5-8, but not IE 9's quirks mode or emulation of older IEs. IE 9\n        // in standards mode follows the spec.\n        if (!correctExecNpcg && match.length > 1 && indexOf(match, '') > -1) {\n            r2 = copyRegex(this, {\n                removeG: true,\n                isInternalOnly: true\n            });\n            // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed\n            // matching due to characters outside the match\n            nativ.replace.call(String(str).slice(match.index), r2, function() {\n                var len = arguments.length, i;\n                // Skip index 0 and the last 2\n                for (i = 1; i < len - 2; ++i) {\n                    if (arguments[i] === undefined) {\n                        match[i] = undefined;\n                    }\n                }\n            });\n        }\n\n        // Attach named capture properties\n        if (this[REGEX_DATA] && this[REGEX_DATA].captureNames) {\n            // Skip index 0\n            for (i = 1; i < match.length; ++i) {\n                name = this[REGEX_DATA].captureNames[i - 1];\n                if (name) {\n                    match[name] = match[i];\n                }\n            }\n        }\n\n        // Fix browsers that increment `lastIndex` after zero-length matches\n        if (this.global && !match[0].length && (this.lastIndex > match.index)) {\n            this.lastIndex = match.index;\n        }\n    }\n\n    if (!this.global) {\n        // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n        this.lastIndex = origLastIndex;\n    }\n\n    return match;\n};\n\n/**\n * Fixes browser bugs in the native `RegExp.prototype.test`. Calling `XRegExp.install('natives')`\n * uses this to override the native method.\n *\n * @param {String} str String to search.\n * @returns {Boolean} Whether the regex matched the provided value.\n */\nfixed.test = function(str) {\n    // Do this the easy way :-)\n    return !!fixed.exec.call(this, str);\n};\n\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `String.prototype.match`. Calling `XRegExp.install('natives')` uses this to\n * override the native method.\n *\n * @param {RegExp|*} regex Regex to search with. If not a regex object, it is passed to `RegExp`.\n * @returns {Array} If `regex` uses flag g, an array of match strings or `null`. Without flag g,\n *   the result of calling `regex.exec(this)`.\n */\nfixed.match = function(regex) {\n    var result;\n\n    if (!XRegExp.isRegExp(regex)) {\n        // Use the native `RegExp` rather than `XRegExp`\n        regex = new RegExp(regex);\n    } else if (regex.global) {\n        result = nativ.match.apply(this, arguments);\n        // Fixes IE bug\n        regex.lastIndex = 0;\n\n        return result;\n    }\n\n    return fixed.exec.call(regex, toObject(this));\n};\n\n/**\n * Adds support for `${n}` tokens for named and numbered backreferences in replacement text, and\n * provides named backreferences to replacement functions as `arguments[0].name`. Also fixes browser\n * bugs in replacement text syntax when performing a replacement using a nonregex search value, and\n * the value of a replacement regex's `lastIndex` property during replacement iterations and upon\n * completion. Calling `XRegExp.install('natives')` uses this to override the native method. Note\n * that this doesn't support SpiderMonkey's proprietary third (`flags`) argument. Use via\n * `XRegExp.replace` without overriding natives.\n *\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n * @returns {String} New string with one or all matches replaced.\n */\nfixed.replace = function(search, replacement) {\n    var isRegex = XRegExp.isRegExp(search),\n        origLastIndex,\n        captureNames,\n        result;\n\n    if (isRegex) {\n        if (search[REGEX_DATA]) {\n            captureNames = search[REGEX_DATA].captureNames;\n        }\n        // Only needed if `search` is nonglobal\n        origLastIndex = search.lastIndex;\n    } else {\n        search += ''; // Type-convert\n    }\n\n    // Don't use `typeof`; some older browsers return 'function' for regex objects\n    if (isType(replacement, 'Function')) {\n        // Stringifying `this` fixes a bug in IE < 9 where the last argument in replacement\n        // functions isn't type-converted to a string\n        result = nativ.replace.call(String(this), search, function() {\n            var args = arguments, i;\n            if (captureNames) {\n                // Change the `arguments[0]` string primitive to a `String` object that can store\n                // properties. This really does need to use `String` as a constructor\n                args[0] = new String(args[0]);\n                // Store named backreferences on the first argument\n                for (i = 0; i < captureNames.length; ++i) {\n                    if (captureNames[i]) {\n                        args[0][captureNames[i]] = args[i + 1];\n                    }\n                }\n            }\n            // Update `lastIndex` before calling `replacement`. Fixes IE, Chrome, Firefox, Safari\n            // bug (last tested IE 9, Chrome 17, Firefox 11, Safari 5.1)\n            if (isRegex && search.global) {\n                search.lastIndex = args[args.length - 2] + args[0].length;\n            }\n            // ES6 specs the context for replacement functions as `undefined`\n            return replacement.apply(undefined, args);\n        });\n    } else {\n        // Ensure that the last value of `args` will be a string when given nonstring `this`,\n        // while still throwing on null or undefined context\n        result = nativ.replace.call(this == null ? this : String(this), search, function() {\n            // Keep this function's `arguments` available through closure\n            var args = arguments;\n            return nativ.replace.call(String(replacement), replacementToken, function($0, $1, $2) {\n                var n;\n                // Named or numbered backreference with curly braces\n                if ($1) {\n                    // XRegExp behavior for `${n}`:\n                    // 1. Backreference to numbered capture, if `n` is an integer. Use `0` for the\n                    //    entire match. Any number of leading zeros may be used.\n                    // 2. Backreference to named capture `n`, if it exists and is not an integer\n                    //    overridden by numbered capture. In practice, this does not overlap with\n                    //    numbered capture since XRegExp does not allow named capture to use a bare\n                    //    integer as the name.\n                    // 3. If the name or number does not refer to an existing capturing group, it's\n                    //    an error.\n                    n = +$1; // Type-convert; drop leading zeros\n                    if (n <= args.length - 3) {\n                        return args[n] || '';\n                    }\n                    // Groups with the same name is an error, else would need `lastIndexOf`\n                    n = captureNames ? indexOf(captureNames, $1) : -1;\n                    if (n < 0) {\n                        throw new SyntaxError('Backreference to undefined group ' + $0);\n                    }\n                    return args[n + 1] || '';\n                }\n                // Else, special variable or numbered backreference without curly braces\n                if ($2 === '$') { // $$\n                    return '$';\n                }\n                if ($2 === '&' || +$2 === 0) { // $&, $0 (not followed by 1-9), $00\n                    return args[0];\n                }\n                if ($2 === '`') { // $` (left context)\n                    return args[args.length - 1].slice(0, args[args.length - 2]);\n                }\n                if ($2 === \"'\") { // $' (right context)\n                    return args[args.length - 1].slice(args[args.length - 2] + args[0].length);\n                }\n                // Else, numbered backreference without curly braces\n                $2 = +$2; // Type-convert; drop leading zero\n                // XRegExp behavior for `$n` and `$nn`:\n                // - Backrefs end after 1 or 2 digits. Use `${..}` for more digits.\n                // - `$1` is an error if no capturing groups.\n                // - `$10` is an error if less than 10 capturing groups. Use `${1}0` instead.\n                // - `$01` is `$1` if at least one capturing group, else it's an error.\n                // - `$0` (not followed by 1-9) and `$00` are the entire match.\n                // Native behavior, for comparison:\n                // - Backrefs end after 1 or 2 digits. Cannot reference capturing group 100+.\n                // - `$1` is a literal `$1` if no capturing groups.\n                // - `$10` is `$1` followed by a literal `0` if less than 10 capturing groups.\n                // - `$01` is `$1` if at least one capturing group, else it's a literal `$01`.\n                // - `$0` is a literal `$0`.\n                if (!isNaN($2)) {\n                    if ($2 > args.length - 3) {\n                        throw new SyntaxError('Backreference to undefined group ' + $0);\n                    }\n                    return args[$2] || '';\n                }\n                // `$` followed by an unsupported char is an error, unlike native JS\n                throw new SyntaxError('Invalid token ' + $0);\n            });\n        });\n    }\n\n    if (isRegex) {\n        if (search.global) {\n            // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n            search.lastIndex = 0;\n        } else {\n            // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n            search.lastIndex = origLastIndex;\n        }\n    }\n\n    return result;\n};\n\n/**\n * Fixes browser bugs in the native `String.prototype.split`. Calling `XRegExp.install('natives')`\n * uses this to override the native method. Use via `XRegExp.split` without overriding natives.\n *\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n */\nfixed.split = function(separator, limit) {\n    if (!XRegExp.isRegExp(separator)) {\n        // Browsers handle nonregex split correctly, so use the faster native method\n        return nativ.split.apply(this, arguments);\n    }\n\n    var str = String(this),\n        output = [],\n        origLastIndex = separator.lastIndex,\n        lastLastIndex = 0,\n        lastLength;\n\n    // Values for `limit`, per the spec:\n    // If undefined: pow(2,32) - 1\n    // If 0, Infinity, or NaN: 0\n    // If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);\n    // If negative number: pow(2,32) - floor(abs(limit))\n    // If other: Type-convert, then use the above rules\n    // This line fails in very strange ways for some values of `limit` in Opera 10.5-10.63, unless\n    // Opera Dragonfly is open (go figure). It works in at least Opera 9.5-10.1 and 11+\n    limit = (limit === undefined ? -1 : limit) >>> 0;\n\n    XRegExp.forEach(str, separator, function(match) {\n        // This condition is not the same as `if (match[0].length)`\n        if ((match.index + match[0].length) > lastLastIndex) {\n            output.push(str.slice(lastLastIndex, match.index));\n            if (match.length > 1 && match.index < str.length) {\n                Array.prototype.push.apply(output, match.slice(1));\n            }\n            lastLength = match[0].length;\n            lastLastIndex = match.index + lastLength;\n        }\n    });\n\n    if (lastLastIndex === str.length) {\n        if (!nativ.test.call(separator, '') || lastLength) {\n            output.push('');\n        }\n    } else {\n        output.push(str.slice(lastLastIndex));\n    }\n\n    separator.lastIndex = origLastIndex;\n    return output.length > limit ? output.slice(0, limit) : output;\n};\n\n// ==--------------------------==\n// Built-in syntax/flag tokens\n// ==--------------------------==\n\n/*\n * Letter escapes that natively match literal characters: `\\a`, `\\A`, etc. These should be\n * SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-browser\n * consistency and to reserve their syntax, but lets them be superseded by addons.\n */\nXRegExp.addToken(\n    /\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|x(?![\\dA-Fa-f]{2}))/,\n    function(match, scope) {\n        // \\B is allowed in default scope only\n        if (match[1] === 'B' && scope === defaultScope) {\n            return match[0];\n        }\n        throw new SyntaxError('Invalid escape ' + match[0]);\n    },\n    {\n        scope: 'all',\n        leadChar: '\\\\'\n    }\n);\n\n/*\n * Unicode code point escape with curly braces: `\\u{N..}`. `N..` is any one or more digit\n * hexadecimal number from 0-10FFFF, and can include leading zeros. Requires the native ES6 `u` flag\n * to support code points greater than U+FFFF. Avoids converting code points above U+FFFF to\n * surrogate pairs (which could be done without flag `u`), since that could lead to broken behavior\n * if you follow a `\\u{N..}` token that references a code point above U+FFFF with a quantifier, or\n * if you use the same in a character class.\n */\nXRegExp.addToken(\n    /\\\\u{([\\dA-Fa-f]+)}/,\n    function(match, scope, flags) {\n        var code = dec(match[1]);\n        if (code > 0x10FFFF) {\n            throw new SyntaxError('Invalid Unicode code point ' + match[0]);\n        }\n        if (code <= 0xFFFF) {\n            // Converting to \\uNNNN avoids needing to escape the literal character and keep it\n            // separate from preceding tokens\n            return '\\\\u' + pad4(hex(code));\n        }\n        // If `code` is between 0xFFFF and 0x10FFFF, require and defer to native handling\n        if (hasNativeU && flags.indexOf('u') > -1) {\n            return match[0];\n        }\n        throw new SyntaxError('Cannot use Unicode code point above \\\\u{FFFF} without flag u');\n    },\n    {\n        scope: 'all',\n        leadChar: '\\\\'\n    }\n);\n\n/*\n * Empty character class: `[]` or `[^]`. This fixes a critical cross-browser syntax inconsistency.\n * Unless this is standardized (per the ES spec), regex syntax can't be accurately parsed because\n * character class endings can't be determined.\n */\nXRegExp.addToken(\n    /\\[(\\^?)]/,\n    function(match) {\n        // For cross-browser compatibility with ES3, convert [] to \\b\\B and [^] to [\\s\\S].\n        // (?!) should work like \\b\\B, but is unreliable in some versions of Firefox\n        return match[1] ? '[\\\\s\\\\S]' : '\\\\b\\\\B';\n    },\n    {leadChar: '['}\n);\n\n/*\n * Comment pattern: `(?# )`. Inline comments are an alternative to the line comments allowed in\n * free-spacing mode (flag x).\n */\nXRegExp.addToken(\n    /\\(\\?#[^)]*\\)/,\n    function(match, scope, flags) {\n        // Keep tokens separated unless the following token is a quantifier. This avoids e.g.\n        // inadvertedly changing `\\1(?#)1` to `\\11`.\n        return isQuantifierNext(match.input, match.index + match[0].length, flags) ?\n            '' : '(?:)';\n    },\n    {leadChar: '('}\n);\n\n/*\n * Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.\n */\nXRegExp.addToken(\n    /\\s+|#[^\\n]*\\n?/,\n    function(match, scope, flags) {\n        // Keep tokens separated unless the following token is a quantifier. This avoids e.g.\n        // inadvertedly changing `\\1 1` to `\\11`.\n        return isQuantifierNext(match.input, match.index + match[0].length, flags) ?\n            '' : '(?:)';\n    },\n    {flag: 'x'}\n);\n\n/*\n * Dot, in dotall mode (aka singleline mode, flag s) only.\n */\nXRegExp.addToken(\n    /\\./,\n    function() {\n        return '[\\\\s\\\\S]';\n    },\n    {\n        flag: 's',\n        leadChar: '.'\n    }\n);\n\n/*\n * Named backreference: `\\k<name>`. Backreference names can use the characters A-Z, a-z, 0-9, _,\n * and $ only. Also allows numbered backreferences as `\\k<n>`.\n */\nXRegExp.addToken(\n    /\\\\k<([\\w$]+)>/,\n    function(match) {\n        // Groups with the same name is an error, else would need `lastIndexOf`\n        var index = isNaN(match[1]) ? (indexOf(this.captureNames, match[1]) + 1) : +match[1],\n            endIndex = match.index + match[0].length;\n        if (!index || index > this.captureNames.length) {\n            throw new SyntaxError('Backreference to undefined group ' + match[0]);\n        }\n        // Keep backreferences separate from subsequent literal numbers. This avoids e.g.\n        // inadvertedly changing `(?<n>)\\k<n>1` to `()\\11`.\n        return '\\\\' + index + (\n            endIndex === match.input.length || isNaN(match.input.charAt(endIndex)) ?\n                '' : '(?:)'\n        );\n    },\n    {leadChar: '\\\\'}\n);\n\n/*\n * Numbered backreference or octal, plus any following digits: `\\0`, `\\11`, etc. Octals except `\\0`\n * not followed by 0-9 and backreferences to unopened capture groups throw an error. Other matches\n * are returned unaltered. IE < 9 doesn't support backreferences above `\\99` in regex syntax.\n */\nXRegExp.addToken(\n    /\\\\(\\d+)/,\n    function(match, scope) {\n        if (\n            !(\n                scope === defaultScope &&\n                /^[1-9]/.test(match[1]) &&\n                +match[1] <= this.captureNames.length\n            ) &&\n            match[1] !== '0'\n        ) {\n            throw new SyntaxError('Cannot use octal escape or backreference to undefined group ' +\n                match[0]);\n        }\n        return match[0];\n    },\n    {\n        scope: 'all',\n        leadChar: '\\\\'\n    }\n);\n\n/*\n * Named capturing group; match the opening delimiter only: `(?<name>`. Capture names can use the\n * characters A-Z, a-z, 0-9, _, and $ only. Names can't be integers. Supports Python-style\n * `(?P<name>` as an alternate syntax to avoid issues in some older versions of Opera which natively\n * supported the Python-style syntax. Otherwise, XRegExp might treat numbered backreferences to\n * Python-style named capture as octals.\n */\nXRegExp.addToken(\n    /\\(\\?P?<([\\w$]+)>/,\n    function(match) {\n        // Disallow bare integers as names because named backreferences are added to match arrays\n        // and therefore numeric properties may lead to incorrect lookups\n        if (!isNaN(match[1])) {\n            throw new SyntaxError('Cannot use integer as capture name ' + match[0]);\n        }\n        if (match[1] === 'length' || match[1] === '__proto__') {\n            throw new SyntaxError('Cannot use reserved word as capture name ' + match[0]);\n        }\n        if (indexOf(this.captureNames, match[1]) > -1) {\n            throw new SyntaxError('Cannot use same name for multiple groups ' + match[0]);\n        }\n        this.captureNames.push(match[1]);\n        this.hasNamedCapture = true;\n        return '(';\n    },\n    {leadChar: '('}\n);\n\n/*\n * Capturing group; match the opening parenthesis only. Required for support of named capturing\n * groups. Also adds explicit capture mode (flag n).\n */\nXRegExp.addToken(\n    /\\((?!\\?)/,\n    function(match, scope, flags) {\n        if (flags.indexOf('n') > -1) {\n            return '(?:';\n        }\n        this.captureNames.push(null);\n        return '(';\n    },\n    {\n        optionalFlags: 'n',\n        leadChar: '('\n    }\n);\n\nmodule.exports = XRegExp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/xregexp.js\n// module id = 42\n// module chunks = 0 1"],"sourceRoot":""}