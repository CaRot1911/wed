{"version":3,"sources":["../../../wed/modes/generic/metas/tei-meta.ts"],"names":[],"mappings":"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","file":"tei-meta.js","sourcesContent":["/**\n * A meta for the TEI.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { Meta as GenericMeta } from \"wed/modes/generic/generic-meta\";\nimport { Runtime } from \"wed/runtime\";\nimport * as util from \"wed/util\";\n\n/**\n * Meta-information for a generic TEI schema.\n */\nclass TeiMeta extends GenericMeta {\n  /**\n   * @param runtime The runtime in which this meta is executing.\n   * @param options The options to pass to the Meta.\n   */\n  // tslint:disable-next-line:no-any\n  constructor(runtime: Runtime, options: any) {\n    super(runtime, options);\n\n    // Provide a default mapping if there is no mapping loaded.\n    if (this.namespaceMappings == null) {\n      // tslint:disable:no-http-string\n      this.namespaceMappings = Object.create(null);\n      this.namespaceMappings.xml = \"http://www.w3.org/XML/1998/namespace\";\n      this.namespaceMappings[\"\"] = \"http://www.tei-c.org/ns/1.0\";\n      // tslint:enable:no-http-string\n    }\n  }\n\n  // tslint:disable-next-line:cyclomatic-complexity max-func-body-length\n  isInline(node: Element): boolean {\n    // We need to normalize the name to fit the names we have below.\n    const originalName = util.getOriginalName(node);\n    const parts = originalName.split(\":\");\n    // XXX this is taking a shortcut. We should instead find the namespace of\n    // the node and convert it to an appropriate prefix to use below.\n    if (parts.length === 1) {\n      parts[1] = parts[0];\n      parts[0] = \"tei\";\n    }\n    const name = parts.join(\":\");\n\n    // The implementation here is a partial implementation of the function found\n    // in common2/functions.xsl among the TEI stylesheets.\n\n    // Not implemented: <xsl:when test=\"not(self::*)\">true</xsl:when>\n    // <xsl:when test=\"contains(@rend,'inline') and not(tei:p or\n    // tei:l)\">true</xsl:when> <xsl:when\n    // test=\"self::tei:note[@place='display']\">false</xsl:when>\n    // <xsl:when\n    // test=\"self::tei:note[tei:isEndNote(.)]\">true</xsl:when>\n    // <xsl:when\n    // test=\"self::tei:note[tei:isFootNote(.)]\">true</xsl:when>\n    // <xsl:when test=\"@rend='display'\n    // or @rend='block'\">false</xsl:when> <xsl:when test=\"tei:table or\n    // tei:figure or tei:list or tei:lg or tei:q/tei:l or tei:l or\n    // tei:p or tei:biblStruct or tei:sp or\n    // tei:floatingText\">false</xsl:when> <xsl:when\n    // test=\"parent::tei:div\">false</xsl:when> <xsl:when\n    // test=\"parent::tei:titlePage\">false</xsl:when> <xsl:when\n    // test=\"self::tei:cit[not(@rend)]\">true</xsl:when> <xsl:when\n    // test=\"parent::tei:cit[@rend='display']\">false</xsl:when>\n    // <xsl:when test=\"parent::tei:cit and (tei:p or\n    // tei:l)\">false</xsl:when> <xsl:when test=\"parent::tei:cit and\n    // parent::cit/tei:bibl\">false</xsl:when> <xsl:when\n    // test=\"parent::tei:body\">false</xsl:when> <xsl:when\n    // test=\"parent::tei:titlePage\">false</xsl:when> <xsl:when\n    // test=\"self::tei:docAuthor and\n    // parent::tei:byline\">true</xsl:when> <xsl:when\n    // test=\"self::tei:note[tei:cit/tei:bibl]\">false</xsl:when>\n    // <xsl:when\n    // test=\"self::tei:note[parent::tei:biblStruct]\">true</xsl:when>\n    // <xsl:when\n    // test=\"self::tei:note[parent::tei:bibl]\">true</xsl:when> End not\n    // implemented.\n\n    // <xsl:when test=\"self::tei:note\">true</xsl:when>\n    // <xsl:when test=\"self::mml:math\">true</xsl:when>\n    // <xsl:when test=\"self::tei:abbr\">true</xsl:when>\n    // <xsl:when test=\"self::tei:affiliation\">true</xsl:when>\n    // <xsl:when test=\"self::tei:altIdentifier\">true</xsl:when>\n    // <xsl:when test=\"self::tei:analytic\">true</xsl:when>\n    // <xsl:when test=\"self::tei:add\">true</xsl:when>\n    // <xsl:when test=\"self::tei:am\">true</xsl:when>\n    // <xsl:when test=\"self::tei:att\">true</xsl:when>\n    // <xsl:when test=\"self::tei:author\">true</xsl:when>\n    switch (name) {\n    case \"tei:note\":\n    case \"mml:math\":\n    case \"tei:abbr\":\n    case \"tei:affiliation\":\n    case \"tei:altIdentifier\":\n    case \"tei:analytic\":\n    case \"tei:add\":\n    case \"tei:am\":\n    case \"tei:att\":\n    case \"tei:author\":\n      return true;\n    default:\n      break;\n    }\n\n    // Not implemented: <xsl:when test=\"self::tei:bibl and not\n    // (tei:is-inline(preceding-sibling::*[1]))\">false</xsl:when>\n    // <xsl:when test=\"self::tei:bibl and not\n    // (parent::tei:listBibl)\">true</xsl:when> End not implemented.\n\n    // <xsl:when test=\"self::tei:biblScope\">true</xsl:when>\n    // <xsl:when test=\"self::tei:br\">true</xsl:when>\n    // <xsl:when test=\"self::tei:byline\">true</xsl:when>\n    // <xsl:when test=\"self::tei:c\">true</xsl:when>\n    // <xsl:when test=\"self::tei:caesura\">true</xsl:when>\n    // <xsl:when test=\"self::tei:choice\">true</xsl:when>\n    // <xsl:when test=\"self::tei:code\">true</xsl:when>\n    // <xsl:when test=\"self::tei:collection\">true</xsl:when>\n    // <xsl:when test=\"self::tei:country\">true</xsl:when>\n    // <xsl:when test=\"self::tei:damage\">true</xsl:when>\n    // <xsl:when test=\"self::tei:date\">true</xsl:when>\n    // <xsl:when test=\"self::tei:del\">true</xsl:when>\n    // <xsl:when test=\"self::tei:depth\">true</xsl:when>\n    // <xsl:when test=\"self::tei:dim\">true</xsl:when>\n    // <xsl:when test=\"self::tei:dimensions\">true</xsl:when>\n    // <xsl:when test=\"self::tei:editor\">true</xsl:when>\n    // <xsl:when test=\"self::tei:editionStmt\">true</xsl:when>\n    // <xsl:when test=\"self::tei:emph\">true</xsl:when>\n    // <xsl:when test=\"self::tei:ex\">true</xsl:when>\n    // <xsl:when test=\"self::tei:expan\">true</xsl:when>\n    switch (name) {\n    case \"tei:biblScope\":\n    case \"tei:br\":\n    case \"tei:byline\":\n    case \"tei:c\":\n    case \"tei:caesura\":\n    case \"tei:choice\":\n    case \"tei:code\":\n    case \"tei:collection\":\n    case \"tei:country\":\n    case \"tei:damage\":\n    case \"tei:date\":\n    case \"tei:del\":\n    case \"tei:depth\":\n    case \"tei:dim\":\n    case \"tei:dimensions\":\n    case \"tei:editor\":\n    case \"tei:editionStmt\":\n    case \"tei:emph\":\n    case \"tei:ex\":\n    case \"tei:expan\":\n      return true;\n    default:\n      break;\n    }\n\n    // Not implemented:\n    // <xsl:when test=\"self::tei:figure[@place='inline']\">true</xsl:when>\n    // End Not implemented.\n\n    // <xsl:when test=\"self::tei:figure\">false</xsl:when>\n    // <xsl:when test=\"self::tei:floatingText\">false</xsl:when>\n    // <xsl:when test=\"self::tei:foreign\">true</xsl:when>\n    // <xsl:when test=\"self::tei:forename\">true</xsl:when>\n    // <xsl:when test=\"self::tei:gap\">true</xsl:when>\n    // <xsl:when test=\"self::tei:genName\">true</xsl:when>\n    // <xsl:when test=\"self::tei:geogName\">true</xsl:when>\n    // <xsl:when test=\"self::tei:gi\">true</xsl:when>\n    // <xsl:when test=\"self::tei:gloss\">true</xsl:when>\n    // <xsl:when test=\"self::tei:graphic\">true</xsl:when>\n    // <xsl:when test=\"self::tei:height\">true</xsl:when>\n    // <xsl:when test=\"self::tei:hi[not(w:*)]\">true</xsl:when>\n    // <xsl:when test=\"self::tei:ident\">true</xsl:when>\n    // <xsl:when test=\"self::tei:idno\">true</xsl:when>\n    // <xsl:when test=\"self::tei:imprint\">true</xsl:when>\n    // <xsl:when test=\"self::tei:institution\">true</xsl:when>\n    switch (name) {\n    case \"tei:figure\":\n    case \"tei:floatingText\":\n      return false;\n    case \"tei:foreign\":\n    case \"tei:forename\":\n    case \"tei:gap\":\n    case \"tei:genName\":\n    case \"tei:geogName\":\n    case \"tei:gi\":\n    case \"tei:gloss\":\n    case \"tei:graphic\":\n    case \"tei:height\":\n    case \"tei:hi\":\n      // The original test was:\n      // <xsl:when test=\"self::tei:hi[not(w:*)]\">true</xsl:when>\n      // eslint-disable-next-line no-fallthrough\n    case \"tei:ident\":\n    case \"tei:idno\":\n    case \"tei:imprint\":\n    case \"tei:institution\":\n      return true;\n    default:\n      break;\n    }\n\n    // <xsl:when test=\"self::tei:list\">false</xsl:when>\n    // <xsl:when test=\"self::tei:locus\">true</xsl:when>\n    // <xsl:when test=\"self::tei:mentioned\">true</xsl:when>\n    // <xsl:when test=\"self::tei:monogr\">true</xsl:when>\n    // <xsl:when test=\"self::tei:series\">true</xsl:when>\n    // <xsl:when test=\"self::tei:msName\">true</xsl:when>\n    // <xsl:when test=\"self::tei:name\">true</xsl:when>\n    // <xsl:when test=\"self::tei:num\">true</xsl:when>\n    // <xsl:when test=\"self::tei:orgName\">true</xsl:when>\n    // <xsl:when test=\"self::tei:orig\">true</xsl:when>\n    // <xsl:when test=\"self::tei:origDate\">true</xsl:when>\n    // <xsl:when test=\"self::tei:origPlace\">true</xsl:when>\n    // <xsl:when test=\"self::tei:pc\">true</xsl:when>\n    // <xsl:when test=\"self::tei:persName\">true</xsl:when>\n    // <xsl:when test=\"self::tei:placeName\">true</xsl:when>\n    // <xsl:when test=\"self::tei:ptr\">true</xsl:when>\n    // <xsl:when test=\"self::tei:publisher\">true</xsl:when>\n    // <xsl:when test=\"self::tei:pubPlace\">true</xsl:when>\n\n    switch (name) {\n    case \"tei:list\":\n      return false;\n    case \"tei:locus\":\n    case \"tei:mentioned\":\n    case \"tei:monogr\":\n    case \"tei:series\":\n    case \"tei:msName\":\n    case \"tei:name\":\n    case \"tei:num\":\n    case \"tei:orgName\":\n    case \"tei:orig\":\n    case \"tei:origDate\":\n    case \"tei:origPlace\":\n    case \"tei:pc\":\n    case \"tei:persName\":\n    case \"tei:placeName\":\n    case \"tei:ptr\":\n    case \"tei:publisher\":\n    case \"tei:pubPlace\":\n      return true;\n    default:\n      break;\n    }\n\n    // Not implemented: <xsl:when test=\"self::tei:lb or\n    // self::pb\">true</xsl:when> <xsl:when test=\"self::tei:quote and\n    // tei:lb\">false</xsl:when> <xsl:when test=\"self::tei:quote and\n    // $autoBlockQuote='true' and\n    // string-length(.)&gt;$autoBlockQuoteLength\">false</xsl:when> End\n    // not implemented.\n\n    // <xsl:when test=\"self::tei:q\">true</xsl:when>\n    // <xsl:when test=\"self::tei:quote\">true</xsl:when>\n    // <xsl:when test=\"self::tei:ref\">true</xsl:when>\n    // <xsl:when test=\"self::tei:region\">true</xsl:when>\n    // <xsl:when test=\"self::tei:repository\">true</xsl:when>\n    // <xsl:when test=\"self::tei:roleName\">true</xsl:when>\n    // <xsl:when test=\"self::tei:rubric\">true</xsl:when>\n    // <xsl:when test=\"self::tei:said\">true</xsl:when>\n    // <xsl:when test=\"self::tei:seg\">true</xsl:when>\n    // <xsl:when test=\"self::tei:sic\">true</xsl:when>\n    // <xsl:when test=\"self::tei:settlement\">true</xsl:when>\n    // <xsl:when test=\"self::tei:soCalled\">true</xsl:when>\n    // <xsl:when test=\"self::tei:summary\">true</xsl:when>\n    // <xsl:when test=\"self::tei:supplied\">true</xsl:when>\n    // <xsl:when test=\"self::tei:surname\">true</xsl:when>\n    // <xsl:when test=\"self::tei:tag\">true</xsl:when>\n    // <xsl:when test=\"self::tei:term\">true</xsl:when>\n    // <xsl:when test=\"self::tei:textLang\">true</xsl:when>\n    // <xsl:when test=\"self::tei:title\">true</xsl:when>\n    // <xsl:when test=\"self::tei:unclear\">true</xsl:when>\n    // <xsl:when test=\"self::tei:val\">true</xsl:when>\n    // <xsl:when test=\"self::tei:width\">true</xsl:when>\n    // <xsl:when test=\"self::tei:dynamicContent\">true</xsl:when>\n    // <xsl:when test=\"self::w:drawing\">true</xsl:when>\n    // <xsl:when test=\"self::m:oMath\">true</xsl:when>\n    switch (name) {\n    case \"tei:q\":\n    case \"tei:quote\":\n    case \"tei:ref\":\n    case \"tei:region\":\n    case \"tei:repository\":\n    case \"tei:roleName\":\n    case \"tei:rubric\":\n    case \"tei:said\":\n    case \"tei:seg\":\n    case \"tei:sic\":\n    case \"tei:settlement\":\n    case \"tei:soCalled\":\n    case \"tei:summary\":\n    case \"tei:supplied\":\n    case \"tei:surname\":\n    case \"tei:tag\":\n    case \"tei:term\":\n    case \"tei:textLang\":\n    case \"tei:title\":\n    case \"tei:unclear\":\n    case \"tei:val\":\n    case \"tei:width\":\n    case \"tei:dynamicContent\":\n    case \"w:drawing\":\n    case \"m:oMath\":\n      return true;\n    default:\n      break;\n    }\n\n    // Not implemented: <xsl:when\n    // test=\"parent::tei:note[tei:isEndNote(.)]\">false</xsl:when>\n    // <xsl:when test=\"empty($element/..)\">false</xsl:when> <xsl:when\n    // test=\"not(self::tei:p) and\n    // tei:is-inline($element/..)\">true</xsl:when> End not\n    // implemented.\n    return false;\n  }\n\n}\n\nexport { TeiMeta as Meta };\n\n//  LocalWords:  oMath dynamicContent textLang soCalled roleName seg\n//  LocalWords:  pubPlace ptr placeName persName pc origPlace orgName\n//  LocalWords:  origDate num msName monogr Mangalam metas tei Dubeau\n//  LocalWords:  MPL oop util namespace stylesheets isEndNote\n//  LocalWords:  isFootNote xsl biblStruct titlePage floatingText sp\n//  LocalWords:  bibl docAuthor mml altIdentifier listBibl biblScope\n//  LocalWords:  editionStmt att br del emph expan genName geogName\n//  LocalWords:  gi ident idno\n"]}