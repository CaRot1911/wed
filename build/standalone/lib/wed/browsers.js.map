{"version":3,"sources":["../../../wed/browsers.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;;;;IAEH,EAAE;IACF,+EAA+E;IAC/E,4EAA4E;IAC5E,8DAA8D;IAC9D,8BAA8B;IAC9B,EAAE;IACF,4EAA4E;IAC5E,0EAA0E;IAC1E,yDAAyD;IACzD,EAAE;IACF,gFAAgF;IAChF,gFAAgF;IAChF,6EAA6E;IAC7E,4EAA4E;IAC5E,gFAAgF;IAChF,4EAA4E;IAC5E,mDAAmD;IACnD,EAAE;IAEF;;OAEG;IACU,QAAA,MAAM,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IAErE;;OAEG;IACU,QAAA,UAAU,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAEvE;;OAEG;IACH,EAAE;IACF,4EAA4E;IAC5E,8EAA8E;IAC9E,oEAAoE;IACpE,EAAE;IACF,IAAM,YAAY,GAAG,aAAa,CAAC;IACtB,QAAA,cAAc,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CACvD,YAAY,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IAEzE;;OAEG;IACU,QAAA,IAAI,GAAG,sBAAc,IAAI,kBAAU,CAAC;IAEjD;;OAEG;IACU,QAAA,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IAEvE;;OAEG;IACU,QAAA,UAAU,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IAE5E;;OAEG;IACU,QAAA,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAEnE;;OAEG;IACU,QAAA,GAAG,GAAG,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;IAElE;;OAEG;IACH,kEAAkE;IACrD,QAAA,OAAO,GAAG,SAAS,CAAC,QAAQ,KAAK,OAAO,CAAC;;AAEtD,+BAA+B","file":"browsers.js","sourcesContent":["/**\n * Browser detection. Extremely ad hoc and meant for wed's internal purposes\n * only.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\n//\n// Yes, testing features rather versions or specific browsers is the way to go,\n// generally speaking. However, when we are working around bugs in *specific\n// versions* of *specific browsers*, feature testing is mostly\n// useless. So... here we are.\n//\n// Note that symbols are introduced for purely ad hoc reasons. If we need to\n// test for a specific combination somewhere in wed's code base, we have a\n// flag. If we don't need the test, we don't have a flag.\n//\n// Also this code only satisfies the interests of wed. Don't take the tests here\n// as gospel. If *you* need to test for some combinations that wed does not care\n// about, you may find that the code here gives incorrect results relative to\n// *your* goals. This code is meant to give correct results only relative to\n// what wed cares about. (Salient example: wed is not designed (at this time) to\n// run in tablets or phones. So the tests below don't take into account what\n// might happen when running in a tablet or phone.)\n//\n\n/**\n * True if the browser is Chrome.\n */\nexport const CHROME = navigator.userAgent.indexOf(\" Chrome/\") !== -1;\n\n/**\n * True if the browser is Internet Explorer up to version 10.\n */\nexport const MSIE_TO_10 = navigator.userAgent.indexOf(\" MSIE \") !== -1;\n\n/**\n * True if the browser is Internet Explorer from version 11 and up.\n */\n//\n// This may be overbroad but at this point, we don't care.  The string \"like\n// Gecko\" appears in a number of user agent strings but AFAIK it is only IE 11\n// that puts it at the end. We might want to refine this eventually.\n//\nconst MSIE_11_MARK = \" like Gecko\";\nexport const MSIE_11_AND_UP = navigator.userAgent.indexOf(\n  MSIE_11_MARK, navigator.userAgent.length - MSIE_11_MARK.length) !== -1;\n\n/**\n * True if the browser is Internet Explorer, any version.\n */\nexport const MSIE = MSIE_11_AND_UP || MSIE_TO_10;\n\n/**\n * True if the browser is Firefox.\n */\nexport const FIREFOX = navigator.userAgent.indexOf(\" Firefox/\") !== -1;\n\n/**\n * True if the browser is Firefox 24. This is an ESR version.\n */\nexport const FIREFOX_24 = navigator.userAgent.indexOf(\" Firefox/24\") !== -1;\n\n/**\n * True if the browser is Gecko-based.\n */\nexport const GECKO = navigator.userAgent.indexOf(\" Gecko/\") !== -1;\n\n/**\n * True if running on a OS X system.\n */\nexport const OSX = navigator.platform.lastIndexOf(\"Mac\", 0) === 0;\n\n/**\n * True if running on Windows.\n */\n// We don't care about old platforms or oddball Windows platforms.\nexport const WINDOWS = navigator.platform === \"Win32\";\n\n//  LocalWords:  MPL wed's MSIE\n"]}