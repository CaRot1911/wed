{"version":3,"file":"ajax.js","sourceRoot":"","sources":["../../../../lib/wed/ajax.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;IAaA,kDAAkD;IAClD,IAAM,MAAM,GAAG,gBAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;OAwBV,CAAC,CAAC;IAET,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAExB,wBAAwB;IACxB,cAAqB,QAAa;QAEhC,IAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAErC,IAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC;YAC5B,QAAQ,EAAE;gBACR,EAAE,EAAE,IAAI;gBACR,YAAY,EAAE,QAAQ,CAAC,QAAQ,CAAC,YAAY;aAC7C;SACF,EAC6B,SAAS,CAAC,CAAC;QAEzC,eAAe,QAAa;YAC1B,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxB,MAAM,IAAI,KAAK,CACb,4DAA4D;oBAC1D,uCAAuC,CAAC,CAAC;aAC9C;YAED,IAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAC5C,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,CAC7B,OAAO,CAAC,iBAAiB,EACzB,UAAC,GAAU;gBACT,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjC,IAAM,MAAM,GAAG,KAAK,CAAC,aAAa,CAAC,aAAa,CAAE,CAAC;gBACnD,MAAM,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC;gBACjC,MAAM,CAAC,EAAE,CAAC,qBAAqB,EAAE,UAAC,EAAqB;oBACrD,EAAE,CAAC,eAAe,EAAE,CAAC;oBACrB,EAAE,CAAC,cAAc,EAAE,CAAC;oBACpB,gDAAgD;oBAChD,kCAA2B,CACzB,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CACxC;wBACE,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;oBAC3B,CAAC,CAAC,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,KAAK,EAAE,CAAC;gBAEf,uEAAuE;gBACvE,wEAAwE;gBACxE,oCAAoC;gBACpC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;YACL,OAAO,GAAG,CAAC;QACb,CAAC;QAED,cAAc,QAAa;YACzB,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;QACjC,CAAC;QAED,OAAO;YACL,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,KAAK;SACb,CAAC;IACJ,CAAC;IAtDD,oBAsDC;;AAED,0CAA0C","sourcesContent":["/**\n * Ajax utilities for wed.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport * as bluejax from \"bluejax\";\nimport \"bootstrap\";\nimport $ from \"jquery\";\n\nimport { suppressUnhandledRejections } from \"./util\";\n\n// tslint:disable-next-line:no-jquery-raw-elements\nconst $modal = $(\"\\\n<div class='modal btw-fatal-modal' style='position: absolute' tabindex='1'>\\\n  <div class='modal-dialog'>\\\n    <div class='modal-content'>\\\n      <div class='modal-header'>\\\n        <button type='button' class='close' data-dismiss='modal'\\\naria-hidden='true'>&times;</button>\\\n        <h3>Connectivity Problem</h3>\\\n      </div>\\\n      <div class='modal-body'>\\\n        <p>We have detected a connectivity problem: \\\n           <span class='reason'></span>.</p>\\\n        <p>When you click the Ok button, we will recheck the connectivity. \\\n           If there is still a problem, this dialog will remain. Otherwise, \\\n           the window will be reloaded. If you were modifying information \\\n           on the \\\n           site when the outage occurred, please verify that what you were \\\n           trying to do actually happened.</p>\\\n      </div>\\\n      <div class='modal-footer'>\\\n        <a href='#' class='btn btn-primary' data-dismiss='modal'>Ok</a>\\\n      </div>\\\n    </div>\\\n  </div>\\\n</div>\");\n\nconst modal = $modal[0];\n\n// tslint:disable:no-any\nexport function make(baseOpts: any):\n{ ajax: bluejax.AjaxCall; ajax$: bluejax.AjaxCall$ } {\n  const bajax = bluejax.make(baseOpts);\n\n  const diagnose = bluejax.make({\n    diagnose: {\n      on: true,\n      knownServers: baseOpts.diagnose.knownServers,\n    },\n  },\n                                \"promise\");\n\n  function ajax$(settings: any): bluejax.Pair {\n    if (arguments.length > 1) {\n      throw new Error(\n        \"we do not support passing the URL as a separate argument; \" +\n          \"please use a single settings argument\");\n    }\n\n    const ret = bajax.call(undefined, settings);\n    ret.promise = ret.promise.catch(\n      bluejax.ConnectivityError,\n      (err: Error) => {\n        document.body.appendChild(modal);\n        const reason = modal.querySelector(\"span.reason\")!;\n        reason.textContent = err.message;\n        $modal.on(\"hide.bs.modal.modal\", (ev: JQueryEventObject) => {\n          ev.stopPropagation();\n          ev.preventDefault();\n          // tslint:disable-next-line:no-floating-promises\n          suppressUnhandledRejections(\n            diagnose(baseOpts.diagnose.serverURL).then(\n              () => {\n                window.location.reload();\n              }));\n        });\n        $modal.modal();\n\n        // Canceling the promise is something that Bluebird provides. It allows\n        // us to handle the exception here while at the same time declaring that\n        // no future handlers should be run.\n        ret.promise.cancel();\n      });\n    return ret;\n  }\n\n  function ajax(settings: any): Promise<any> {\n    return ajax$(settings).promise;\n  }\n\n  return {\n    ajax: ajax,\n    ajax$: ajax$,\n  };\n}\n\n//  LocalWords:  btw tabindex href btn MPL\n"]}