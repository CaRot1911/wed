{"version":3,"sources":["../../../wed/util.ts"],"names":[],"mappings":"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","file":"util.js","sourcesContent":["/**\n * Various utilities for wed.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport * as Promise from \"bluebird\"; //tslint:disable-line:no-unsafe-any\n\n/**\n * Calculates the distance on the basis of two deltas. This would typically be\n * called with the difference of X coordinates and the difference of Y\n * coordinates.\n *\n * @param delta1 The first delta.\n *\n * @param delta2 The second delta.\n *\n * @returns The distance.\n */\nexport function distFromDeltas(delta1: number, delta2: number): number {\n  // eslint-disable-next-line no-mixed-operators\n  return Math.sqrt(delta1 * delta1 + delta2 * delta2);\n}\n\n/**\n * Measures the distance of a point from a rectangle. If the point is in the\n * rectangle or touches it, the distance is 0. In the nomenclature below, left\n * and right are on the X axis and top and bottom on the Y axis.\n *\n * @param x X coordinate of the point.\n *\n * @param y Y coordinate of the point.\n *\n * @param left Left coordinate of the rectangle.\n *\n * @param top Top coordinate of the rectangle.\n *\n * @param right Right coordinate of the rectangle.\n *\n * @param bottom Bottom coordinate of the rectangle.\n *\n * @returns The distance.\n */\nexport function distFromRect(x: number, y: number, left: number, top: number,\n                             right: number, bottom: number): number {\n  const topDelta = y - top;\n  const leftDelta = x - left;\n  const bottomDelta = y - bottom;\n  const rightDelta = x - right;\n\n  const above = topDelta < 0;\n  const below = bottomDelta > 0;\n  // Neologism used to avoid conflict with left above.\n  const lefter = leftDelta < 0;\n  const righter = rightDelta > 0;\n\n  /* eslint-disable no-nested-ternary */\n  const deltaX = lefter ? leftDelta : (righter ? rightDelta : 0);\n  const deltaY = above ? topDelta : (below ? bottomDelta : 0);\n  /* eslint-enable */\n\n  return distFromDeltas(deltaX, deltaY);\n}\n\n/**\n * Measures the absolute horizontal and vertical distances of a point from a\n * rectangle. If the point is in the rectangle or touches it, the distance is\n * 0. In the nomenclature below, left and right are on the X axis and top and\n * bottom on the Y axis.\n *\n * @param x X coordinate of the point.\n *\n * @param y Y coordinate of the point.\n *\n * @param left Left coordinate of the rectangle.\n *\n * @param top Top coordinate of the rectangle.\n *\n * @param right Right coordinate of the rectangle.\n *\n * @param bottom Bottom coordinate of the rectangle.\n *\n * @returns The distance.\n */\nexport function distsFromRect(x: number, y: number, left: number, top: number,\n                              right: number, bottom: number):\n{x: number, y: number} {\n  const topDelta = y - top;\n  const leftDelta = x - left;\n  const bottomDelta = y - bottom;\n  const rightDelta = x - right;\n\n  const above = topDelta < 0;\n  const below = bottomDelta > 0;\n  // Neologism used to avoid conflict with left above.\n  const lefter = leftDelta < 0;\n  const righter = rightDelta > 0;\n\n  /* eslint-disable no-nested-ternary */\n  const deltaX = lefter ? leftDelta : (righter ? rightDelta : 0);\n  const deltaY = above ? topDelta : (below ? bottomDelta : 0);\n  /* eslint-enable */\n\n  return { x: Math.abs(deltaX), y: Math.abs(deltaY) };\n}\n\n/**\n * Escape character in CSS class that could cause trouble in CSS\n * selectors. **This is not a general solution.** This function supports only\n * what wed uses.\n *\n * @param cls The class\n *\n * @returns The escaped class.\n */\nexport function escapeCSSClass(cls: string): string {\n  return cls.replace(/:/g, \"\\\\:\");\n}\n\n/**\n * Get the original element name of a node created for wed's data tree.\n *\n * @param el The element whose name we want.\n *\n * @returns The name.\n */\nexport function getOriginalName(el: Element): string {\n  // The original name is the first class name of the element that was created.\n  return el.classList[0];\n}\n\n/**\n * Makes a class string appropriate for a node in wed's data tree.\n *\n * @param name The original element name.\n *\n * @returns The class string.\n */\nexport function classFromOriginalName(name: string): string {\n  // Special case if we want to match all\n  if (name === \"*\") {\n    return \"._real\";\n  }\n\n  return `.${escapeCSSClass(name)}._real`;\n}\n\n/**\n * Transforms an attribute name from wed's data tree to the original attribute\n * name before the data was transformed for use with wed.\n *\n * @param name The encoded name.\n *\n * @returns The decoded name.\n */\nexport function decodeAttrName(name: string): string {\n  // The slice skips \"data-wed-\"\n  return name.slice(9).replace(/---/, \":\").replace(/---(-+)/g, \"--$1\");\n}\n\n/**\n * Transforms an attribute name from its unencoded form in the\n * original XML data (before transformation for use with wed) to its\n * encoded name.\n *\n * @param name The unencoded name.\n *\n * @returns The encoded name.\n */\nexport function encodeAttrName(name: string): string {\n  return `data-wed-${name.replace(/--(-+)/g, \"---$1\").replace(/:/, \"---\")}`;\n}\n\n/**\n * Gets all the attributes of the node that were \"original\" attributes in the\n * XML document being edited, by opposition to those attributes that exist only\n * for HTML rendering.\n *\n * @param node The node to process.\n *\n * @returns An object whose keys are attribute names and values are attribute\n * values.\n */\nexport function getOriginalAttributes(node: Element): Record<string, string> {\n  const original: Record<string, string> =\n    Object.create(null) as Record<string, string>;\n  const attributes = node.attributes;\n  for (let i = 0; i < attributes.length; ++i) {\n    const attr = attributes[i];\n    // It is a node we want.\n    if (attr.localName!.lastIndexOf(\"data-wed-\", 0) === 0) {\n      original[decodeAttrName(attr.localName!)] = attr.value;\n    }\n  }\n  return original;\n}\n\nlet nextID = 0;\n\n/**\n * Generates a new generic element id. This id is guaranteed to be unique for\n * the current run of wed. The ids generated by this function are meant to be\n * eventually replaced by something more permanent.\n *\n * @returns An element id.\n */\nexport function newGenericID(): string {\n  return `WED-ID-${++nextID}`;\n}\n\n/**\n * @param ev A DOM event.\n *\n * @returns ``true`` if Control, Alt or Meta were held when the event was\n * created. Otherwise, ``false``.\n */\nexport function anySpecialKeyHeld(ev: Event): boolean {\n  const anyEv = ev as KeyboardEvent;\n  return anyEv.altKey || anyEv.ctrlKey || anyEv.metaKey;\n}\n\n/**\n * **This function is meant to be used in debugging.** It creates a\n * ``selenium_log`` object on ``window`` which is an array that contains the\n * series of ``obj`` passed to this function. Remember that ultimately\n * ``selenium_log`` is going to be serialized by Selenium. So go easy on what\n * you put in there and be aware that Selenium may have bugs that prevent\n * serialization of certain objects.\n *\n * @param args Objects to log.\n */\n/* tslint:disable:no-any no-unsafe-any */\nexport function seleniumLog(...args: any[]): void {\n  const w = window as any;\n  if (w.selenium_log === undefined) {\n    w.selenium_log = [];\n  }\n\n  w.selenium_log.push.apply(w.selenium_log, args);\n}\n\nfunction _exceptionStackTrace(err: any): string {\n  try {\n    throw err;\n  }\n  catch (e) {\n    return e.stack;\n  }\n}\n/* tslint:enable */\n\n/**\n * **This function is meant to be used in debugging.** Gets a stack trace. This\n * is only as cross-platform as needed for the platforms we support.\n *\n * Support for IE 9 is missing because it was designed by baboons.\n */\nexport function stackTrace(): string {\n  const err = new Error();\n  if (err.stack != null) {\n    return err.stack;\n  }\n\n  // If the stack is not filled already (true of IE 10, 11) then raise an\n  // exception to fill it.\n  return _exceptionStackTrace(err);\n}\n\n/**\n * Convert a \"pattern object\" to a string that can be shown to the user. This\n * function is meant to be used for \"complex\" name patterns that we may get from\n * salve. Note that a \"pattern object\" is the result of calling ``toObject()``\n * on the pattern. The goal of this function is to convert the pattern object to\n * a string that would be intepretable by the end user.\n *\n * An explanation about how this handles namespaces and wildcard patterns is in\n * order. In a Relax NG schema the name pattern ``*`` in the compact notation is\n * equivalent to ``<anyName/>`` in the expanded notation. And ``foo:*`` is\n * equivalent to ``<nsName ns=\"uri_of_foo\">`` where ``uri_of_foo`` is the URI\n * that has been assocated with ``foo`` in the compact schema. It would be nice\n * if the function here could reuse this notation, but we cannot. Consider the\n * case where an Relax NG schema in the compact notation wants to declare a name\n * pattern which means \"any name in the default namespace\". In XML we express a\n * name in the default namespace currently in effect by simply not prefixing it\n * with a namespace name: whereas ``foo:bar`` is the ``bar`` element in the\n * ``foo`` namespace, ``bar`` is the ``bar`` element in the default\n * namespace. The pattern \"any element in namespace foo\" is represented with\n * ``foo:*``, however we cannot use ``*`` to mean \"any element in the default\n * namespace\", because ``*`` means \"any name in any namespace whatsoever\". The\n * compact notation forces the author of the schema to use a prefix for the\n * default namespace. And because of this, ``*`` means unambiguously \"any\n * element in any namespace\".\n *\n * So the ``*`` in the Relax NG schema becomes ``*:*`` here. \"Any element in the\n * default namespace\" is represented by ``*``. Thus ``foo:*`` and ``*`` can\n * stand in the same relation to one another as ``foo:bar`` and ``bar``.\n *\n * @param obj The \"pattern object\" to convert.\n * @param resolver The resolver to use to convert URIs to prefixes.\n * @returns The string representing the pattern.\n */\n/* tslint:disable:no-any no-unsafe-any */\nexport function convertPatternObj(obj: any, resolver: any): string {\n  // NameChoice\n  if (obj.a != null && obj.b != null) {\n    return `(${convertPatternObj(obj.a, resolver)}) or \\\n(${convertPatternObj(obj.b, resolver)})`;\n  }\n\n  let ret: string;\n\n  // AnyName\n  if (obj.pattern === \"AnyName\") {\n    ret = \"*:*\";\n  }\n  else {\n    // Name and NsName\n    if (obj.ns === undefined) {\n      throw new Error(\"unexpected undefined obj.ns\");\n    }\n\n    if (obj.name !== undefined) {\n      ret = resolver.unresolveName(obj.ns, obj.name);\n      // Cannot unresolve, use the expanded name.\n      if (ret === undefined) {\n        ret = `{${obj.ns}}${obj.name}`;\n      }\n    }\n    else {\n      const ns = resolver.prefixFromURI(obj.ns);\n      // If ns is undefined, we cannot resolve the URI, so we\n      // display the expanded name.\n      if (ns === undefined) {\n        ret = `{${obj.ns}}`;\n      }\n      else {\n        // An empty ns happens if the URI refers to the default\n        // namespace.\n        ret = (ns !== \"\") ? (`${ns}:`) : ns;\n      }\n      ret += \"*\";\n    }\n  }\n\n  if (obj.except != null) {\n    ret += ` except (${convertPatternObj(obj.except, resolver)})`;\n  }\n  return ret;\n}\n/* tslint:enable */\n\nexport function readFile(file: File): Promise<string> {\n  const reader = new FileReader();\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = () => {\n      resolve(reader.result as string);\n    };\n    reader.onerror = reject;\n    reader.readAsText(file);\n  });\n}\n\n/**\n * This is required to work around a problem when extending built-in classes\n * like ``Error``. Some of the constructors for these classes return a value\n * from the constructor, which is then picked up by the constructors generated\n * by TypeScript (same with ES6 code transpiled through Babel), and this messes\n * up the inheritance chain.\n *\n * See https://github.com/Microsoft/TypeScript/issues/12123.\n */\n// tslint:disable:no-any\nexport function fixPrototype(obj: any, parent: Function): void {\n  const oldProto: Function = Object.getPrototypeOf !== undefined ?\n    Object.getPrototypeOf(obj) : (obj as any).__proto__;\n\n  if (oldProto !== parent) {\n    if (Object.setPrototypeOf !== undefined) {\n      Object.setPrototypeOf(obj, parent.prototype);\n    }\n    else {\n      (obj as any).__proto__ = parent.prototype;\n    }\n  }\n}\n// tslint:enable:no-any\n\n//  LocalWords:  Mangalam MPL Dubeau util CSS wed's unencoded\n"]}