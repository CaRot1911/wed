{"version":3,"sources":["../../../wed/undo-recorder.ts"],"names":[],"mappings":"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","file":"undo-recorder.js","sourcesContent":["/**\n * Listens to changes on a tree and records undo operations corresponding to\n * these changes.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\nimport { indexOf } from \"./domutil\";\nimport { BeforeDeleteNodeEvent, InsertNodeAtEvent, SetAttributeNSEvent,\n         SetTextNodeValueEvent, TreeUpdater } from \"./tree-updater\";\nimport * as undo from \"./undo\";\n\nfunction getOuterHTML(node: Node | undefined | null): string {\n  return (node == null) ? \"undefined\" : (node as Element).outerHTML;\n}\n\n/**\n * Undo operation for [[\"tree-updater\".InsertNodeAtEvent]].\n *\n * The parameters after ``tree_updater`` are the same as the properties on the\n * event corresponding to this class.\n *\n * @private\n */\nclass InsertNodeAtUndo extends undo.Undo {\n  private readonly parentPath: string;\n  private node: Node | undefined;\n\n  /**\n   * @param treeUpdater The tree updater to use to perform undo or redo\n   * operations.\n   *\n   * @param parent\n   * @param index\n   */\n  constructor(private readonly treeUpdater: TreeUpdater,\n              parent: Node, private readonly index: number) {\n    super(\"InsertNodeAtUndo\");\n    this.parentPath = treeUpdater.nodeToPath(parent);\n\n    // We do not take a node parameter and save it here because further\n    // manipulations could take the node out of the tree. So we cannot rely in a\n    // reference to a node. What we do instead is keep a path to the parent and\n    // the index. The ``node`` property will be filled as needed when\n    // undoing/redoing.\n  }\n\n  undo(): void {\n    if (this.node !== undefined) {\n      throw new Error(\"undo called twice in a row\");\n    }\n    const parent = this.treeUpdater.pathToNode(this.parentPath)!;\n    this.node = parent.childNodes[this.index].cloneNode(true);\n    this.treeUpdater.deleteNode(parent.childNodes[this.index]);\n  }\n\n  redo(): void {\n    if (this.node === undefined) {\n      throw new Error(\"redo called twice in a row\");\n    }\n    const parent = this.treeUpdater.pathToNode(this.parentPath)!;\n    this.treeUpdater.insertNodeAt(parent, this.index, this.node);\n    this.node = undefined;\n  }\n\n  toString(): string {\n    return [this.desc, \"\\n\",\n            \" Parent path: \", this.parentPath, \"\\n\",\n            \" Index: \", this.index, \"\\n\",\n            \" Node: \", getOuterHTML(this.node), \"\\n\"].join(\"\");\n  }\n}\n\n/**\n * Undo operation for [[\"tree-updater\".SetTextNodeValueEvent]].\n *\n * @private\n */\nclass SetTextNodeValueUndo extends undo.Undo {\n  private readonly nodePath: string;\n\n  /**\n   * @param treeUpdater The tree updater to use to perform undo or redo\n   * operations.\n   */\n  constructor(private readonly treeUpdater: TreeUpdater,\n              node: Text, private readonly value: string,\n              private readonly oldValue: string) {\n    super(\"SetTextNodeValueUndo\");\n    this.nodePath = treeUpdater.nodeToPath(node);\n  }\n\n  undo(): void {\n    // The node is necessarily a text node.\n    const node = this.treeUpdater.pathToNode(this.nodePath) as Text;\n    this.treeUpdater.setTextNodeValue(node, this.oldValue);\n  }\n\n  redo(): void {\n    // The node is necessarily a text node.\n    const node = this.treeUpdater.pathToNode(this.nodePath) as Text;\n    this.treeUpdater.setTextNodeValue(node, this.value);\n  }\n\n  toString(): string {\n    return [this.desc, \"\\n\",\n            \" Node path: \", this.nodePath, \"\\n\",\n            \" Value: \", this.value, \"\\n\",\n            \" Old value: \", this.oldValue, \"\\n\"].join(\"\");\n  }\n}\n\n/**\n * Undo operation for [[\"tree-updater\".BeforeDeleteNodeEvent]].\n *\n * @private\n */\nclass DeleteNodeUndo extends undo.Undo {\n  private readonly parentPath: string;\n  private readonly index: number;\n  private node: Node | undefined;\n\n  /**\n   * @param treeUpdater The tree updater to use to perform undo or redo\n   * operations.\n   */\n  constructor(private readonly treeUpdater: TreeUpdater, node: Node) {\n    super(\"DeleteNodeUndo\");\n    const parent = node.parentNode!;\n    this.parentPath = treeUpdater.nodeToPath(parent);\n    this.index = indexOf(parent.childNodes, node);\n    this.node = node.cloneNode(true);\n  }\n\n  undo(): void {\n    if (this.node === undefined) {\n      throw new Error(\"undo called twice in a row\");\n    }\n    const parent = this.treeUpdater.pathToNode(this.parentPath)!;\n    this.treeUpdater.insertNodeAt(parent, this.index, this.node);\n    this.node = undefined;\n  }\n\n  redo(): void {\n    if (this.node !== undefined) {\n      throw new Error(\"redo called twice in a row\");\n    }\n    const parent = this.treeUpdater.pathToNode(this.parentPath)!;\n    this.node = parent.childNodes[this.index].cloneNode(true);\n    this.treeUpdater.deleteNode(parent.childNodes[this.index]);\n  }\n\n  toString(): string {\n    return [this.desc, \"\\n\",\n            \" Parent path: \", this.parentPath, \"\\n\",\n            \" Index: \", this.index, \"\\n\",\n            \" Node: \", getOuterHTML(this.node), \"\\n\"].join(\"\");\n  }\n}\n\n/**\n * Undo operation for [[\"tree-updater\".SetAttributeNSEvent]].\n *\n * @private\n */\nclass SetAttributeNSUndo extends undo.Undo {\n  private readonly nodePath: string;\n\n  /**\n   * @param treeUpdater The tree updater to use to perform undo or redo\n   * operations.\n   */\n  constructor(private readonly treeUpdater: TreeUpdater,\n              node: Element, private readonly ns: string,\n              private readonly attribute: string,\n              private readonly oldValue: string | null,\n              private readonly newValue: string | null) {\n    super(\"SetAttributeNSUndo\");\n    this.nodePath = treeUpdater.nodeToPath(node);\n  }\n\n  undo(): void {\n    const node = this.treeUpdater.pathToNode(this.nodePath) as Element;\n    this.treeUpdater.setAttributeNS(node, this.ns, this.attribute,\n                                    this.oldValue);\n  }\n\n  redo(): void {\n    const node = this.treeUpdater.pathToNode(this.nodePath) as Element;\n    this.treeUpdater.setAttributeNS(node, this.ns, this.attribute,\n                                    this.newValue);\n  }\n\n  toString(): string {\n    return [this.desc, \"\\n\",\n            \" Node path: \", this.nodePath, \"\\n\",\n            \" Namespace: \", this.ns, \"\\n\",\n            \" Attribute Name: \", this.attribute, \"\\n\",\n            \" New value: \", this.newValue, \"\\n\",\n            \" Old value: \", this.oldValue, \"\\n\"].join(\"\");\n  }\n}\n\n// tslint:disable-next-line:no-any\nexport type Editor = any;\n\n/**\n * Records undo operations.\n */\nexport class UndoRecorder {\n  private suppress: boolean = false;\n\n  /**\n   * @param editor The editor for which this recorder is created.\n   *\n   * @param treeUpdater The tree updater on which to listen for modifications.\n   */\n  constructor(private readonly editor: Editor,\n              private readonly treeUpdater: TreeUpdater) {\n    treeUpdater.events.subscribe((ev) => {\n      switch (ev.name) {\n      case \"InsertNodeAt\":\n        this.insertNodeAtHandler(ev);\n        break;\n      case \"SetTextNodeValue\":\n        this.setTextNodeValueHandler(ev);\n        break;\n      case \"BeforeDeleteNode\":\n        this.beforeDeleteNodeHandler(ev);\n        break;\n      case \"SetAttributeNS\":\n        this.setAttributeNSHandler(ev);\n        break;\n      default:\n        // Do nothing...\n      }\n    });\n  }\n\n  /**\n   * Sets the suppression state. When suppression is on, the recorder does not\n   * record anything. When off, the recorder records. The recorder's suppression\n   * state is initially off.\n   *\n   * @param suppress Whether to suppress or not.\n   *\n   * @throws {Error} If the call does not change the suppression state.\n   */\n  suppressRecording(suppress: boolean): void {\n    if (suppress === this.suppress) {\n      throw new Error(\"spurious call to suppressRecording\");\n    }\n    this.suppress = suppress;\n  }\n\n  private insertNodeAtHandler(ev: InsertNodeAtEvent): void {\n    if (this.suppress) {\n      return;\n    }\n    this.editor.recordUndo(new InsertNodeAtUndo(this.treeUpdater,\n                                                ev.parent,\n                                                ev.index));\n  }\n\n  private setTextNodeValueHandler(ev: SetTextNodeValueEvent): void {\n    if (this.suppress) {\n      return;\n    }\n    this.editor.recordUndo(new SetTextNodeValueUndo(\n      this.treeUpdater, ev.node, ev.value, ev.oldValue));\n  }\n\n  private beforeDeleteNodeHandler(ev: BeforeDeleteNodeEvent): void {\n    if (this.suppress) {\n      return;\n    }\n    this.editor.recordUndo(new DeleteNodeUndo(this.treeUpdater, ev.node));\n  }\n\n  private setAttributeNSHandler(ev: SetAttributeNSEvent): void {\n    if (this.suppress) {\n      return;\n    }\n    this.editor.recordUndo(new SetAttributeNSUndo(\n      this.treeUpdater,\n      ev.node, ev.ns, ev.attribute, ev.oldValue, ev.newValue));\n  }\n}\n\n//  LocalWords:  html Mangalam MPL Dubeau nodeToPath pathToNode param\n//  LocalWords:  jQuery DeleteNodeUndo SetTextNodeValueUndo ev oop\n//  LocalWords:  InsertNodeAtUndo deleteNode setTextNodeValue jquery\n//  LocalWords:  insertNodeAt domutil\n"]}