{"version":3,"sources":["../../../wed/key-constants.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;IAIU,QAAA,QAAQ,GAAG,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAClC,QAAA,QAAQ,GAAG,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAClC,QAAA,QAAQ,GAAG,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAClC,QAAA,QAAQ,GAAG,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAClC,QAAA,QAAQ,GAAG,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAClC,QAAA,QAAQ,GAAG,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAClC,QAAA,oBAAoB,GAAG,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC9C,QAAA,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACvC,QAAA,gBAAgB,GAAG,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC1C,QAAA,mBAAmB,GAAG,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;IACvD,QAAA,oBAAoB,GAAG,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;IACxD,QAAA,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IACpC,QAAA,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,QAAA,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IACrC,QAAA,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IACpC,QAAA,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAClC,QAAA,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAChC,QAAA,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAC/B,QAAA,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAC/B,QAAA,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAE7C;;;;OAIG;IACU,QAAA,YAAY,GAA2B;QAClD,kBAAU;QACV,mBAAW;QACX,iBAAS;QACT,cAAM;QACN,aAAK;KACN,CAAC;;AAEF,oCAAoC","file":"key-constants.js","sourcesContent":["/**\n * Keys that wed uses, as constants.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\nimport * as key from \"./key\";\n\nexport const CTRLEQ_S = key.makeCtrlEqKey(\"S\");\nexport const CTRLEQ_Z = key.makeCtrlEqKey(\"Z\");\nexport const CTRLEQ_Y = key.makeCtrlEqKey(\"Y\");\nexport const CTRLEQ_C = key.makeCtrlEqKey(\"C\");\nexport const CTRLEQ_X = key.makeCtrlEqKey(\"X\");\nexport const CTRLEQ_V = key.makeCtrlEqKey(\"V\");\nexport const CTRLEQ_FORWARD_SLASH = key.makeCtrlEqKey(191);\nexport const CTRLEQ_PERIOD = key.makeCtrlEqKey(190);\nexport const CTRLEQ_BACKQUOTE = key.makeCtrlEqKey(192);\nexport const CTRLEQ_OPEN_BRACKET = key.makeCtrlEqKey(219); // Ctrl-[\nexport const CTRLEQ_CLOSE_BRACKET = key.makeCtrlEqKey(221); // Ctrl-]\nexport const LEFT_ARROW = key.makeKey(37, false);\nexport const UP_ARROW = key.makeKey(38, false);\nexport const RIGHT_ARROW = key.makeKey(39, false);\nexport const DOWN_ARROW = key.makeKey(40, false);\nexport const BACKSPACE = key.makeKey(8, false);\nexport const DELETE = key.makeKey(46, false);\nexport const ENTER = key.makeKey(13, false);\nexport const SPACE = key.makeKey(32, false);\nexport const ESCAPE = key.makeKey(27, false);\n\n/**\n * These are the keys that appear to be regular text input keys because they do\n * not have any modifiers set, but which do not actually **insert**\n * text. Modifying this array will result in erratic code.\n */\nexport const EDITING_KEYS: ReadonlyArray<key.Key> = [\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  BACKSPACE,\n  DELETE,\n  ENTER,\n];\n\n//  LocalWords:  Mangalam MPL Dubeau\n"]}