{"version":3,"sources":["../../../wed/gui/editing-menu-manager.ts"],"names":[],"mappings":";;;IAoBA,IAAM,YAAY,GAA2B;QAC3C,SAAS,EAAE,EAAE;QACb,IAAI,EAAE,sBAAsB;QAC5B,KAAK,EAAE,qBAAqB;KAC7B,CAAC;IAEF;;;;;;OAMG;IACH;QAQE;;WAEG;QACH,4BAA6B,MAAc;YAAd,WAAM,GAAN,MAAM,CAAQ;YACzC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;YACxC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;QACxC,CAAC;QAED;;;;;;WAMG;QACH,+CAAkB,GAAlB,UAAmB,CAAoB;YACrC,IAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;YAClC,EAAE,CAAC,CAAC,GAAG,KAAK,SAAS,IAAI,CAAC,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC7D,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;YAED,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;YAC1B,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;YAC9B,EAAE,CAAC,CAAC,CAAC,yBAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAM,QAAM,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC/B,EAAE,CAAC,CAAC,QAAM,KAAK,IAAI,CAAC,CAAC,CAAC;oBACpB,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;gBACjE,CAAC;gBACD,MAAM,GAAG,iBAAO,CAAC,QAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;gBAC1C,IAAI,GAAG,QAAM,CAAC;YAChB,CAAC;YAED,8BAA8B;YAC9B,IAAM,EAAE,GAAG,wBAAc,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9D,EAAE,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;gBAChB,IAAM,QAAM,GAAG,EAAE,CAAC,UAAU,CAAC;gBAC7B,EAAE,CAAC,CAAC,QAAM,KAAK,IAAI,CAAC,CAAC,CAAC;oBACpB,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;gBACjE,CAAC;gBACD,MAAM,GAAG,iBAAO,CAAC,QAAM,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;gBACxC,IAAI,GAAG,QAAM,CAAC;YAChB,CAAC;YAED,IAAM,IAAI,GAAG,wBAAc,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACzD,IAAM,QAAQ,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YACvE,IAAM,MAAM,GACV,wBAAc,CAAC,IAAI,EAAE,kBAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC;gBACjE,IAAI,CAAC,wBAAwB,CAAC,CAAC;gBAC/B,IAAI,CAAC,sBAAsB,CAAC;YAE9B,IAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAElE,0DAA0D;YAC1D,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAED,IAAM,GAAG,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,kBAAkB,CAAC,uCAAiB,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,SAAS,EAC/C,QAAQ,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED;;;WAGG;QACH,oCAAO,GAAP;YACE,iDAAiD;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,KAAK,SAAS,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;YACjC,CAAC;QACH,CAAC;QAED,+CAAkB,GAAlB,UAAmB,OAAiC,EAAE,CAAS,EAAE,CAAS,EACvD,KAAa,EAAE,QAAiB;YADnD,iBAgCC;YA9BC,2EAA2E;YAC3E,oCAAoC;YACpC,IAAM,IAAI,GAA4B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1D,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,UAAC,IAAI;gBACxB,+CAA+C;gBAC/C,IAAI,SAAS,GAAM,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC;oBACzB,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,OAAI,CAAC;gBACxD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;oBACvB,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC9B,CAAC;gBACD,IAAM,IAAI,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC9B,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;gBAEvB,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACvB,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,0EAA0E;gBAC1E,QAAQ;gBACR,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,YAAY,+BAAc,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;YAClC,IAAI,CAAC,eAAe,GAAG,IAAI,OAAO,CAChC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EACrB;gBACE,KAAI,CAAC,eAAe,GAAG,SAAS,CAAC;gBACjC,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;YACnC,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,qDAAwB,GAAhC;YACE,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAEO,mDAAsB,GAA9B,UAA+B,IAAiB,EAAE,MAAc,EACjC,IAAa;YAD5C,iBA4FC;YA1FC,IAAI,UAAU,GAAuB,IAAI,CAAC;YAC1C,0EAA0E;YAC1E,WAAW;YACX,IAAI,gBAAyC,CAAC;YAC9C,OAAO,UAAU,KAAK,IAAI,IAAI,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;gBACxE,gBAAgB,GAAG,UAAU,CAAC;gBAC9B,UAAU,GAAG,UAAU,CAAC,UAAyB,CAAC;YACpD,CAAC;YAED,EAAE,CAAC,CAAC,UAAU,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC9D,MAAM,CAAC,EAAE,CAAC;YACZ,CAAC;YAED,EAAE,CAAC,CAAC,gBAAgB,KAAK,SAAS,CAAC,CAAC,CAAC;gBACnC,yEAAyE;gBACzE,qDAAqD;gBACrD,CAAG;8GAAM,CAEuD,CAAC;YACnE,CAAC;YAED,IAAM,SAAS,GAAW,EAAE,CAAC;YAC7B,IAAM,QAAQ,GAAG,UAAC,IAA+B,EAC/B,EAA8B;gBAC9C,IAAM,EAAE,GAAG,KAAI,CAAC,qBAAqB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;gBAChD,SAAS,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YACvD,CAAC,CAAC;YAEF,EAAE,CAAC,CACD,CAAE,UAAU,CAAC,UAAsB,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACjE,2CAA2C;gBAC3C,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBACvE,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;oBAC5B,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;gBAC5C,CAAC;gBACD,mEAAmE;gBACnE,uEAAuE;gBACvE,uEAAuE;gBACvE,qBAAqB;gBACrB,IAAM,QAAQ,GAAG,SAAS,CAAC,IAAe,CAAC;gBAC3C,IAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;gBACjC,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAC7C,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;oBACpB,IAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;oBAElD,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;wBACnB,IAAM,EAAE,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC;wBAClD,SAAS,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;oBACzD,CAAC;gBACH,CAAC;gBAED,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,2BAA2B,CACjD,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACvC,GAAG,CAAC,CAAa,UAAG,EAAH,WAAG,EAAH,iBAAG,EAAH,IAAG;oBAAf,IAAM,EAAE,YAAA;oBACX,6DAA6D;oBAC7D,8BAA8B;oBAC9B,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;iBACrE;gBAED,EAAE,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACxE,IAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CACvC,CAAC,QAAQ,EAAE,eAAe,EAAE,OAAO,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;oBAC9D,GAAG,CAAC,CAAiB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;wBAAvB,IAAM,MAAM,gBAAA;wBACf,QAAQ,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;qBACrD;gBACH,CAAC;YACH,CAAC;YAED,IAAM,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE;iBAC3C,QAAQ,CAAC,2BAA2B,CAAC,CAAC,KAAK,EAAE,CAAC;YACjD,IAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC;gBACpC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACzD,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;gBACpB,IAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,EAAE;qBACvC,MAAM,CAAC;oBACN,6DAA6D;oBAC7D,oEAAoE;oBACpE,eAAe;oBACf,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAW,CAAC,CAAC;gBACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACR,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;gBACvD,IAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CACvC,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,QAAQ,EAAE,SAAS,CAAC,EAAE,MAAM,EACvE,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;gBACpD,GAAG,CAAC,CAAiB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;oBAAvB,IAAM,MAAM,gBAAA;oBACf,QAAQ,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC;iBAC9D;YACH,CAAC;YAED,MAAM,CAAC,SAAS,CAAC;QACnB,CAAC;QAED;;;;;;;;;;;;;;;WAeG;QACH,kDAAqB,GAArB,UAAyB,MAAiB,EAAE,IAAO,EAC1B,KAAe;YACtC,IAAM,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;YAC9B,IAAM,EAAE,GAAG,wBAAc,CACvB,mCAAgC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAI,IAAI,MAAG,CAAC,CAAC,CAAC,EAAE,eAChE,EACJ,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAgB,CAAC;YAE9B,EAAE,CAAC,CAAC,MAAM,YAAY,+BAAc,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;gBAClE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5C,CAAC;YAED,IAAM,CAAC,GAAG,EAAE,CAAC,iBAAkB,CAAC;YAChC,+DAA+D;YAC/D,6CAA6C;YAC7C,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC;gBAC9B,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC,CAAC,SAAS,EAAE,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,oBAAoB,CAAC,CAAC;YAC9C,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAED;;;;;;WAMG;QACH,sDAAyB,GAAzB,UAA0B,MAAc;YAAxC,iBAUC;YATC,IAAM,QAAQ,GAAG,eAAQ,CAAC,eAAe,CAAC,CAAC;YAC3C,IAAM,EAAE,GAAG,wBAAc,CACvB,kCAAgC,QAAQ,uCACZ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAgB,CAAC;YAC5D,IAAM,CAAC,GAAG,EAAE,CAAC,iBAAkB,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBACT,KAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAED,gDAAmB,GAAnB;YAAA,iBAqFC;YApFC,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;YAElC,6CAA6C;YAC7C,EAAE,CAAC,CAAC,GAAG,KAAK,SAAS,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC;YACT,CAAC;YAED,uDAAuD;YACvD,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAG,CAAC;YACtD,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACxB,IAAM,OAAO,GAAG,wBAAc,CAAC,IAAI,EAAE,kBAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACvE,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,wBAAc,CAAC,OAAsB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACzD,MAAM,CAAC;gBACT,CAAC;gBAED,IAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC/B,uDAAuD;gBACvD,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAG,CAAC;gBACpD,wCAAwC;gBACxC,IAAM,QAAQ,GAAG,SAAS,CAAC,IAAY,CAAC;gBACxC,qDAAqD;gBACrD,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC/C,MAAM,CAAC;gBACT,CAAC;gBAED,8CAA8C;gBAC9C,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAC7C,IAAM,UAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;gBAExD,EAAE,CAAC,CAAC,UAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC1B,4CAA4C;oBAC5C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC;yBAChD,OAAO,CAAC,UAAC,EAAE;wBACV,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,gBAAgB,CAAC,CAAC,CAAC;4BACtC,MAAM,CAAC;wBACT,CAAC;wBAED,IAAM,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC1B,EAAE,CAAC,CAAC,IAAI,YAAY,MAAM,CAAC,CAAC,CAAC;4BAC3B,MAAM,CAAC;wBACT,CAAC;wBAED,UAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACtB,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,uBAAuB;gBACvB,EAAE,CAAC,CAAC,UAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM,CAAC;gBACT,CAAC;gBAED,IAAM,QAAQ,GAAG,EAAE,CAAC;gBACpB,GAAG,CAAC,CAAsB,UAAQ,EAAR,aAAA,UAAQ,EAAR,sBAAQ,EAAR,IAAQ;oBAA7B,IAAM,WAAW,iBAAA;oBACpB,EAAE,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACrD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC7B,CAAC;iBACF;gBAED,4DAA4D;gBAC5D,aAAa;gBACb,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC;oBACrB,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC9D,MAAM,CAAC;gBACT,CAAC;gBAED,IAAM,GAAG,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;gBAEtD,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;gBAClC,IAAM,MAAI,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,gCAAc,CACpD,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,EAAE,UAAQ,EAC7D;oBACE,KAAI,CAAC,eAAe,GAAG,SAAS,CAAC;oBACjC,kEAAkE;oBAClE,wDAAwD;oBACxD,EAAE,CAAC,CAAC,MAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wBACjB,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;oBACnC,CAAC;oBACD,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE,CAAC;oBAC7C,CAAC;gBACH,CAAC,CAAC,CAAC;YACP,CAAC;QACH,CAAC;QAED;;;;;;;;;;;;WAYG;QACH,gDAAmB,GAAnB,UAAoB,CAAgC,EAChC,MAAuB;YAAvB,uBAAA,EAAA,cAAuB;YACzC,EAAE,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;gBACpB,CAAC,GAAG,EAAuB,CAAC;YAC9B,CAAC;YAED,wDAAwD;YACxD,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,IAAI,CAAC,CAAC,IAAI,KAAK,SAAS,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO;gBACpE,CAAC,CAAC,IAAI,KAAK,aAAa,CAAC,CAAC,CAAC;gBAC7B,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;YAC7C,CAAC;YAED,oEAAoE;YACpE,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACpC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,yEAAyE;gBACzE,SAAS;gBACT,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,IAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC1C,MAAM,CAAC;oBACL,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAC1D,IAAI,EAAE,IAAI,CAAC,IAAI;iBAChB,CAAC;YACJ,CAAC;YAED,IAAM,GAAG,GAAG,wBAAc,CAAC,IAAI,CAAC,YAAY,CAAC,KAAM,CAAC,IAAI,EAAE,MAAM,EACrC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzC,EAAE,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;gBACjB,IAAM,IAAI,GAAG,GAAG,CAAC,qBAAqB,EAAE,CAAC;gBACzC,wBAAwB;gBACxB,MAAM,CAAC;oBACL,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAC1D,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBACnC,CAAC;YACJ,CAAC;YAED,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QACzD,CAAC;QACH,yBAAC;IAAD,CA9ZA,AA8ZC,IAAA;IA9ZY,gDAAkB;;AAga/B,+EAA+E;AAC/E,2EAA2E;AAC3E,mDAAmD","file":"editing-menu-manager.js","sourcesContent":["/**\n * Editing menu manager.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { Action } from \"../action\";\nimport { CaretManager } from \"../caret-manager\";\nimport { DLoc } from \"../dloc\";\nimport { isElement } from \"../domtypeguards\";\nimport { closestByClass, htmlToElements, indexOf,\n         isNotDisplayed } from \"../domutil\";\nimport { ModeTree } from \"../mode-tree\";\nimport { Transformation, TransformationData } from \"../transformation\";\nimport { Editor } from \"../wed\";\nimport { ActionContextMenu, Item } from \"./action-context-menu\";\nimport { CompletionMenu } from \"./completion-menu\";\nimport { ContextMenu } from \"./context-menu\";\nimport { makeHTML } from \"./icon\";\n\nconst atStartToTxt: Record<string, string> = {\n  undefined: \"\",\n  true: \" before this element\",\n  false: \" after this element\",\n};\n\n/**\n * Manages the editing menus for a specific editing view. An \"editing menu\" is a\n * menu that appears in the editing pane. The context menu and completion menu\n * are editing menus.\n *\n * Only one editing menu may be shown at any given time.\n */\nexport class EditingMenuManager {\n  private readonly caretManager: CaretManager;\n  private readonly guiRoot: HTMLDocument | HTMLElement;\n  private readonly dataRoot: Document | Element;\n  private currentDropdown: ContextMenu | undefined;\n  private readonly modeTree: ModeTree;\n  private readonly doc: HTMLDocument;\n\n  /**\n   * @param editor The editor for which the manager is created.\n   */\n  constructor(private readonly editor: Editor) {\n    this.caretManager = editor.caretManager;\n    this.modeTree = editor.modeTree;\n    this.guiRoot = editor.guiRoot;\n    this.dataRoot = editor.dataRoot;\n    this.doc = this.guiRoot.ownerDocument;\n  }\n\n  /**\n   * This is the default menu handler called when the user right-clicks in the\n   * contents of a document or uses the keyboard shortcut.\n   *\n   * The menu handler which is invoked when a user right-clicks on an element\n   * start or end label is defined by the decorator that the mode is using.\n   */\n  contextMenuHandler(e: JQueryEventObject): boolean {\n    const sel = this.caretManager.sel;\n    if (sel === undefined || (!sel.collapsed && !sel.wellFormed)) {\n      return false;\n    }\n\n    let node = sel.focus.node;\n    let offset = sel.focus.offset;\n    if (!isElement(node)) {\n      const parent = node.parentNode;\n      if (parent === null) {\n        throw new Error(\"contextMenuHandler invoked on detached node\");\n      }\n      offset = indexOf(parent.childNodes, node);\n      node = parent;\n    }\n\n    // Move out of any placeholder\n    const ph = closestByClass(node, \"_placeholder\", this.guiRoot);\n    if (ph !== null) {\n      const parent = ph.parentNode;\n      if (parent === null) {\n        throw new Error(\"contextMenuHandler invoked on detached node\");\n      }\n      offset = indexOf(parent.childNodes, ph);\n      node = parent;\n    }\n\n    const real = closestByClass(node, \"_real\", this.guiRoot);\n    const readonly = real !== null && real.classList.contains(\"_readonly\");\n    const method =\n      closestByClass(node, \"_attribute_value\", this.guiRoot) !== null ?\n      this.getMenuItemsForAttribute :\n      this.getMenuItemsForElement;\n\n    const menuItems = method.call(this, node, offset, !sel.collapsed);\n\n    // There's no menu to display, so let the event bubble up.\n    if (menuItems.length === 0) {\n      return true;\n    }\n\n    const pos = this.computeMenuPosition(e);\n    this.displayContextMenu(ActionContextMenu, pos.left, pos.top, menuItems,\n                            readonly);\n    return false;\n  }\n\n  /**\n   * Dismiss the menu currently shown. If there is no menu currently shown, does\n   * nothing.\n   */\n  dismiss(): void {\n    // We may be called when there is no menu active.\n    if (this.currentDropdown !== undefined) {\n      this.currentDropdown.dismiss();\n    }\n  }\n\n  displayContextMenu(cmClass: typeof ActionContextMenu, x: number, y: number,\n                     items: Item[], readonly: boolean): void {\n    // Eliminate duplicate items. We perform a check only in the description of\n    // the action, and on ``data.name``.\n    const seen: Record<string, boolean> = Object.create(null);\n    items = items.filter((item) => {\n      // \"\\0\" not a legitimate value in descriptions.\n      let actionKey = `${(item.action !== null ?\n                       item.action.getDescription() : \"\")}\\0`;\n      if (item.data !== null) {\n        actionKey += item.data.name;\n      }\n      const keep = !seen[actionKey];\n      seen[actionKey] = true;\n\n      if (!keep || !readonly) {\n        return keep;\n      }\n\n      // If we get here, then we need to filter out anything that transforms the\n      // tree.\n      return !(item.action instanceof Transformation);\n    });\n\n    this.dismiss();\n    this.caretManager.pushSelection();\n    this.currentDropdown = new cmClass(\n      this.doc, x, y, items,\n      () => {\n        this.currentDropdown = undefined;\n        this.caretManager.popSelection();\n      });\n  }\n\n  private getMenuItemsForAttribute(): Action<{}>[] {\n    return [];\n  }\n\n  private getMenuItemsForElement(node: HTMLElement, offset: number,\n                                 wrap: boolean): Item[] {\n    let actualNode: HTMLElement | null = node;\n    // If we are in a phantom, we want to get to the first parent which is not\n    // phantom.\n    let lastPhantomChild: HTMLElement | undefined;\n    while (actualNode !== null && actualNode.classList.contains(\"_phantom\")) {\n      lastPhantomChild = actualNode;\n      actualNode = actualNode.parentNode as HTMLElement;\n    }\n\n    if (actualNode === null || !this.guiRoot.contains(actualNode)) {\n      return [];\n    }\n\n    if (lastPhantomChild !== undefined) {\n      // The actualNode exists and is in our GUI tree. If the offset is outside\n      // editable contents, move it into editable contents.\n      ({ offset } = this.caretManager\n       .normalizeToEditableRange(DLoc.mustMakeDLoc(this.guiRoot,\n                                                   lastPhantomChild)));\n    }\n\n    const menuItems: Item[] = [];\n    const pushItem = (data: TransformationData | null,\n                      tr: Action<TransformationData>): void =>  {\n      const li = this.makeMenuItemForAction(tr, data);\n      menuItems.push({ action: tr, item: li, data: data });\n    };\n\n    if (// Should not be part of a gui element.\n      !(actualNode.parentNode as Element).classList.contains(\"_gui\")) {\n      // We want the data node, not the gui node.\n      const treeCaret = this.caretManager.toDataLocation(actualNode, offset);\n      if (treeCaret === undefined) {\n        throw new Error(\"cannot find tree caret\");\n      }\n      // We are cheating a bit here. treeCaret.node cannot be a text node\n      // because of the way this method is invoked. It cannot be an attribute\n      // either. However, it could be a Document, which happens if the edited\n      // document is empty.\n      const dataNode = treeCaret.node as Element;\n      const tagName = dataNode.tagName;\n      const mode = this.modeTree.getMode(dataNode);\n      if (tagName != null) {\n        const docURL = mode.documentationLinkFor(tagName);\n\n        if (docURL != null) {\n          const li = this.makeDocumentationMenuItem(docURL);\n          menuItems.push({ action: null, item: li, data: null });\n        }\n      }\n\n      const trs = this.editor.getElementTransformationsAt(\n        treeCaret, wrap ? \"wrap\" : \"insert\");\n      for (const tr of trs) {\n        // If tr.name is not undefined we have a real transformation.\n        // Otherwise, it is an action.\n        pushItem((tr.name !== undefined) ? { name: tr.name } : null, tr.tr);\n      }\n\n      if (dataNode !== this.dataRoot.firstChild && dataNode !== this.dataRoot) {\n        const actions = mode.getContextualActions(\n          [\"unwrap\", \"delete-parent\", \"split\"], tagName, dataNode, 0);\n        for (const action of actions) {\n          pushItem({ node: dataNode, name: tagName }, action);\n        }\n      }\n    }\n\n    const $sep = $(actualNode).parents().addBack()\n      .siblings(\"[data-wed--separator-for]\").first();\n    const sepFor = $sep[0] !== undefined ?\n      $sep[0].getAttribute(\"data-wed--separator-for\") : null;\n    if (sepFor !== null) {\n      const transformationNode = $sep.siblings()\n        .filter(function filter(this: Element): boolean {\n          // Node.contains() will return true if this === node, whereas\n          // jQuery.has() only looks at descendants, so this can't be replaced\n          // with .has().\n          return this.contains(actualNode!);\n        })[0];\n      const mode = this.modeTree.getMode(transformationNode);\n      const actions = mode.getContextualActions(\n        [\"merge-with-next\", \"merge-with-previous\", \"append\", \"prepend\"], sepFor,\n        $.data(transformationNode, \"wed_mirror_node\"), 0);\n      for (const action of actions) {\n        pushItem({ node: transformationNode, name: sepFor }, action);\n      }\n    }\n\n    return menuItems;\n  }\n\n  /**\n   * Make a standardized menu item for a specific action. This method formats\n   * the menu item and sets an even handler appropriate to invoke the action's\n   * event handler.\n   *\n   * @param action The action for which we make a menu item.\n   *\n   * @param data The data that accompanies the action.\n   *\n   * @param start This parameter determines whether we are creating an item for\n   *              a start label (``true``) an end label (``false``) or\n   *              something which is neither a start or end label\n   *              (``undefined``).\n   *\n   * @returns A HTML element which is fit to serve as a menu item.\n   */\n  makeMenuItemForAction<D>(action: Action<D>, data: D,\n                           start?: boolean): HTMLElement {\n    const icon = action.getIcon();\n    const li = htmlToElements(\n      `<li><a tabindex='0' href='#'>${icon !== undefined ? `${icon} ` : \"\"}\\\n</a></li>`,\n      this.doc)[0] as HTMLElement;\n\n    if (action instanceof Transformation && action.kind !== undefined) {\n      li.setAttribute(\"data-kind\", action.kind);\n    }\n\n    const a = li.firstElementChild!;\n    // We do it this way so that to avoid an HTML interpretation of\n    // action.getDescriptionFor()`s return value.\n    const text = this.doc.createTextNode(action.getDescriptionFor(data) +\n                                         atStartToTxt[String(start)]);\n    a.appendChild(text);\n    a.normalize();\n    $(a).click(data, action.boundTerminalHandler);\n    return li;\n  }\n\n  /**\n   * Makes an HTML link to open the documentation of an element.\n   *\n   * @param docUrl The URL to the documentation to open.\n   *\n   * @returns A ``&lt;a>`` element that links to the documentation.\n   */\n  makeDocumentationMenuItem(docURL: string): HTMLElement {\n    const iconHtml = makeHTML(\"documentation\");\n    const li = htmlToElements(\n      `<li><a tabindex='0' href='#'>${iconHtml} \\\nElement's documentation.</a></li>`, this.doc)[0] as HTMLElement;\n    const a = li.firstElementChild!;\n    $(a).click(() => {\n      this.editor.openDocumentationLink(docURL);\n    });\n    return li;\n  }\n\n  setupCompletionMenu(): void {\n    this.dismiss();\n    const sel = this.caretManager.sel;\n\n    // We must not have an actual range in effect\n    if (sel === undefined || !sel.collapsed) {\n      return;\n    }\n\n    // If we have a selection, we necessarily have a caret.\n    const caret = this.caretManager.getNormalizedCaret()!;\n    const node = caret.node;\n    const attrVal = closestByClass(node, \"_attribute_value\", this.guiRoot);\n    if (attrVal !== null) {\n      if (isNotDisplayed(attrVal as HTMLElement, this.guiRoot)) {\n        return;\n      }\n\n      const doc = node.ownerDocument;\n      // If we have a selection, we necessarily have a caret.\n      const dataCaret = this.caretManager.getDataCaret()!;\n      // The node is necessarily an attribute.\n      const dataNode = dataCaret.node as Attr;\n      // We complete only at the end of an attribute value.\n      if (dataCaret.offset !== dataNode.value.length) {\n        return;\n      }\n\n      // First see if the mode has something to say.\n      const mode = this.modeTree.getMode(dataNode);\n      const possible = mode.getAttributeCompletions(dataNode);\n\n      if (possible.length === 0) {\n        // Nothing from the mode, use the validator.\n        this.editor.validator.possibleAt(dataCaret.node, 0)\n          .forEach((ev) => {\n            if (ev.params[0] !== \"attributeValue\") {\n              return;\n            }\n\n            const text = ev.params[1];\n            if (text instanceof RegExp) {\n              return;\n            }\n\n            possible.push(text);\n          });\n      }\n\n      // Nothing to complete.\n      if (possible.length === 0) {\n        return;\n      }\n\n      const narrowed = [];\n      for (const possibility of possible) {\n        if (possibility.lastIndexOf(dataNode.value, 0) === 0) {\n          narrowed.push(possibility);\n        }\n      }\n\n      // The current value in the attribute is not one that can be\n      // completed.\n      if (narrowed.length === 0 ||\n          (narrowed.length === 1 && narrowed[0] === dataNode.value)) {\n        return;\n      }\n\n      const pos = this.computeMenuPosition(undefined, true);\n\n      this.caretManager.pushSelection();\n      const menu = this.currentDropdown = new CompletionMenu(\n        this.editor, doc, pos.left, pos.top, dataNode.value, possible,\n        () => {\n          this.currentDropdown = undefined;\n          // If the focus moved from the document to the completion menu, we\n          // want to restore the caret. Otherwise, leave it as is.\n          if (menu.focused) {\n            this.caretManager.popSelection();\n          }\n          else {\n            this.caretManager.popSelectionAndDiscard();\n          }\n        });\n    }\n  }\n\n  /**\n   * Computes where a menu should show up, depending on the event that triggered\n   * it.\n   *\n   * @param e The event that triggered the menu. If no event is passed, it is\n   * assumed that the menu was not triggered by a mouse event.\n   *\n   * @param bottom If the event was not triggered by a mouse event, then use the\n   * bottom of the DOM entity used to compute the position, rather than its\n   * middle to determine the ``y`` coordinate of the context menu.\n   *\n   * @returns The top and left coordinates where the menu should appear.\n   */\n  computeMenuPosition(e: JQueryEventObject | undefined,\n                      bottom: boolean = false): { top: number, left: number } {\n    if (e === undefined) {\n      e = {} as JQueryEventObject;\n    }\n\n    // Take care of cases where the user is using the mouse.\n    if (e.type === \"mousedown\" || e.type === \"mouseup\" || e.type === \"click\" ||\n        e.type === \"contextmenu\") {\n      return { left: e.clientX, top: e.clientY };\n    }\n\n    // The next conditions happen only if the user is using the keyboard\n    const mark = this.caretManager.mark;\n    if (mark.inDOM) {\n      mark.scrollIntoView();\n      // We need to refresh immediately and acquire the client rectangle of the\n      // caret.\n      mark.refresh();\n      const rect = mark.getBoundingClientRect();\n      return {\n        top: bottom ? rect.bottom : (rect.top + (rect.height / 2)),\n        left: rect.left,\n      };\n    }\n\n    const gui = closestByClass(this.caretManager.caret!.node, \"_gui\",\n                               this.guiRoot);\n    if (gui !== null) {\n      const rect = gui.getBoundingClientRect();\n      // Middle of the region.\n      return {\n        top: bottom ? rect.bottom : (rect.top + (rect.height / 2)),\n        left: rect.left + (rect.width / 2),\n      };\n    }\n\n    throw new Error(\"no position for displaying the menu\");\n  }\n}\n\n//  LocalWords:  MPL contextMenuHandler readonly actualNode treeCaret jQuery li\n//  LocalWords:  prepend tabindex href getDescriptionFor iconHtml mousedown\n//  LocalWords:  attributeValue mouseup contextmenu\n"]}