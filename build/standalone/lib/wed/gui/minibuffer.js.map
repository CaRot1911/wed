{"version":3,"file":"minibuffer.js","sourceRoot":"","sources":["../../../../../lib/wed/gui/minibuffer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Minibuffer for wed.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport * as $ from \"jquery\";\nimport { Observable } from \"rxjs/Observable\";\nimport { Subject } from \"rxjs/Subject\";\nimport { Subscription } from \"rxjs/Subscription\";\n\nimport { ESCAPE } from \"../key-constants\";\n\nexport interface ChangeEvent {\n  name: \"ChangeEvent\";\n  value: string;\n}\n\nexport type KeydownHandler = (ev: JQueryKeyEventObject) => boolean | undefined;\n\nexport interface MinibufferClient {\n  onUninstall(): void;\n  onMinibufferKeydown: KeydownHandler;\n  onMinibufferChange(ev: ChangeEvent): void;\n}\n\n/**\n * A minibuffer is a kind of single line prompt that allows the user to enter\n * data. As the name suggests, this is inspired from Emacs.\n */\nexport class Minibuffer {\n  private readonly $top: JQuery;\n  private readonly input: HTMLInputElement;\n  private readonly $input: JQuery;\n  private previous: string | undefined;\n  private client: MinibufferClient | undefined;\n  private clientSubscription: Subscription;\n  private _enabled: boolean = false;\n\n  /**\n   * The keydown handler that may optionally be set to handle keys with\n   * modifiers.\n   */\n  private keydownHandler: KeydownHandler | undefined;\n\n  /** The element that holds the prompt. */\n  private promptEl: HTMLElement;\n\n  /**\n   * The object on which this class and subclasses may push new events.\n   */\n  protected readonly _events: Subject<ChangeEvent> = new Subject();\n\n  /**\n   * The observable on which clients can listen for events.\n   */\n  protected readonly events: Observable<ChangeEvent> =\n    this._events.asObservable();\n\n  get enabled(): boolean {\n    return this._enabled;\n  }\n\n  constructor(top: HTMLElement) {\n    this.$top = $(top);\n    this.$top.append(\"\\\n<label></label>&nbsp;<input type='text'>\");\n\n    this.promptEl = top.getElementsByTagName(\"label\")[0];\n    this.input = top.getElementsByTagName(\"input\")[0];\n\n    const $input = this.$input = $(this.input);\n    $input.on(\"input\", this.onInput.bind(this));\n    $input.on(\"keypress\", this.onKeypress.bind(this));\n    $input.on(\"keydown\", this.onKeydown.bind(this));\n    this.disable();\n  }\n\n  protected enable(): void {\n    this._enabled = true;\n    this.input.disabled = false;\n    this.input.style.display = \"\";\n    this.input.focus();\n  }\n\n  protected disable(): void {\n    this._enabled = false;\n    this.input.disabled = true;\n    this.input.value = \"\";\n    this.input.style.display = \"none\";\n  }\n\n  installClient(client: MinibufferClient): void {\n    this.client = client;\n    this.keydownHandler = client.onMinibufferKeydown.bind(client);\n    this.clientSubscription =\n      this.events.subscribe(client.onMinibufferChange.bind(client));\n    this.enable();\n  }\n\n  uninstallClient(): void {\n    const client = this.client;\n    if (client === undefined) {\n      return;\n    }\n\n    this.client = undefined;\n    this.keydownHandler = undefined;\n    this.clientSubscription.unsubscribe();\n    this.disable();\n    this.prompt = \"\";\n    this.previous = undefined;\n    client.onUninstall();\n  }\n\n  get prompt(): string {\n    return this.promptEl.textContent!;\n  }\n\n  set prompt(value: string) {\n    this.promptEl.textContent = value;\n  }\n\n  public forwardEvent(ev: JQueryEventObject): void {\n    // For keypress events, we have to fill the input ourselves.\n    if (ev.type === \"keypress\") {\n      this.input.value += String.fromCharCode(ev.which);\n    }\n\n    this.$input.trigger(ev);\n  }\n\n  private onKeydown(ev: JQueryKeyEventObject): undefined | boolean {\n    if (ESCAPE.matchesEvent(ev)) {\n      this.uninstallClient();\n      return false;\n    }\n\n    if (this.keydownHandler != null && this.keydownHandler(ev) === false) {\n      return false;\n    }\n\n    return undefined;\n  }\n\n  protected onKeypress(ev: JQueryKeyEventObject): void {\n    const value = this.input.value;\n    if (value !== this.previous) {\n      this.previous = value;\n      this._events.next({ name: \"ChangeEvent\", value });\n    }\n  }\n\n  protected onInput(ev: JQueryKeyEventObject): void {\n    const value = this.input.value;\n    if (value !== this.previous) {\n      this.previous = value;\n      this._events.next({ name: \"ChangeEvent\", value });\n    }\n  }\n}\n"]}