{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 00e57a16e73cca5c5cfb","webpack:///./build/dist/lib/salve/validate.js","webpack:///./build/dist/lib/salve/patterns.js","webpack:///./build/dist/lib/salve/name_resolver.js","webpack:///./build/dist/lib/salve/ename.js","webpack:///./build/dist/lib/salve/util.js","webpack:///./build/dist/lib/salve/hashstructs.js","webpack:///./build/dist/lib/salve/oop.js","webpack:///./build/dist/lib/salve/set.js","webpack:///./build/dist/lib/salve/datatypes.js","webpack:///./build/dist/lib/salve/datatypes/builtin.js","webpack:///./build/dist/lib/salve/tools.js","webpack:///./build/dist/lib/salve/datatypes/errors.js","webpack:///./build/dist/lib/salve/datatypes/xmlschema.js","webpack:///./build/dist/lib/salve/datatypes/regexp.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/process/browser.js","webpack:///./build/dist/lib/salve/datatypes/xmlcharacters.js","webpack:///./~/xregexp/src/index.js","webpack:///./~/xregexp/src/xregexp.js","webpack:///./~/xregexp/src/addons/build.js","webpack:///./~/xregexp/src/addons/matchrecursive.js","webpack:///./~/xregexp/src/addons/unicode-base.js","webpack:///./~/xregexp/src/addons/unicode-blocks.js","webpack:///./~/xregexp/src/addons/unicode-categories.js","webpack:///./~/xregexp/src/addons/unicode-properties.js","webpack:///./~/xregexp/src/addons/unicode-scripts.js","webpack:///./build/dist/lib/salve/errors.js","webpack:///./build/dist/lib/salve/name_patterns.js","webpack:///./build/dist/lib/salve/formats.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1IA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mCAAkC,kBAAkB;AACpD;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAiB,wCAAwC;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,qEAAoE;AACpE,uCAAsC,OAAO;AAC7C,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB;AACA,cAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,cAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,wBAAwB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,2BAA2B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,wBAAwB;AACnC;AACA;AACA,YAAW,2BAA2B;AACtC,mBAAkB,4CAA4C;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,sCAAsC;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,qEAAoE;AACpE,uCAAsC,OAAO;AAC7C,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,4DAA2D;AAC3D,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,uCAAuC;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,sEAAqE;AACrE,uCAAsC,OAAO;AAC7C,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,0CAAyC;AACzC;AACA;AACA,kEAAiE;AACjE,kDAAiD;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,QAAQ;AACnB;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB;AACA;AACA,cAAa,8CAA8C;AAC3D,sDAAqD;AACrD,kDAAiD;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,2BAA2B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,wBAAwB;AACnC;AACA;AACA,YAAW,2BAA2B;AACtC,mBAAkB,2CAA2C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA6C;AAC7C,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA6C;AAC7C,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,2BAA0B,kCAAkC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,sBAAsB;AACjC;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,qBAAqB;AAChC;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,iBAAiB;AAC5B;AACA;AACA,YAAW,iBAAiB;AAC5B;AACA;AACA,YAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA,IAAG;AACH,EAAC;;AAED;AACA,2BAA0B,kCAAkC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,sBAAsB;AACjC;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,8BAA8B;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAgC,6BAA6B;AAC7D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,iBAAiB;AAC5B;AACA;AACA,YAAW,iBAAiB;AAC5B;AACA;AACA,YAAW,QAAQ,4BAA4B,EAAE;AACjD;AACA;AACA,YAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B,kCAAiC;AACjC,8BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAG;AACH,EAAC;;AAED;AACA,2BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,qBAAqB;AAChC;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO,8BAA8B;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAgC,6BAA6B;AAC7D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B,4CAA4C;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,2BAA2B;AACtC;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,gCAAgC;AAC3C;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,0BAA0B;AACrC;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,gCAAgC;AAC3C;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,YAAW,uBAAuB;AAClC;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iDAAgD,IAAI;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,gCAAgC;AAC3C;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,YAAW,sBAAsB;AACjC;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,gCAAgC;AAC3C;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,YAAW,2BAA2B;AACtC;AACA;AACA,YAAW,kCAAkuCAAsC;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,gCAAgC;AAC3C;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,0BAA0B;AACrC;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,gCAAgC;AAC3C;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,YAAW,wBAAwB;AACnC;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,gCAAgC;AAC3C;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,uBAAuB;AAClC;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,wBAAwB;AACnC;AACA,YAAW,+BAA+B,0BAA0B;AACpE,kCAAiC;AACjC;AACA;AACA,aAAY,+BAA+B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY,+BAA+B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,oCAAoC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,QAAQ;AACnB;AACA;AACA,cAAa,6BAA6B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAQ;AACR,+BAA8B;AAC9B;AACA,YAAW,OAAO;AAClB;AACA,YAAW,OAAO;AAClB;AACA,cAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,sBAAsB;AACjC;AACA,cAAa,4CAA4C;AACzD,sCAAqC;AACrC,oBAAmB,oBAAoB,MAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzjHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,kDAAkD;AACtE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,4EAA2E;AAC3E,uCAAsC,OAAO;AAC7C,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,kCAAkC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,MAAM;AAClB,KAAI,kEAAkE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,QAAQ;AACnB;AACA,aAAY,MAAM;AAClB;AACA;AACA,cAAa,6BAA6B;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,4BAA2B;AAC3B,qBAAoB;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,cAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB;AACnB,gDAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,cAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA,oBAAmB;AACnB,gDAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;;;;;;AC3RA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,OAAO;AACpB;AACA;AACA,YAAW,gBAAgB;AAC3B;;AAEA;AACA;AACA;AACA,YAAW,mBAAmB;AAC9B;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChBA;AACA,WAAU,yCAAyC,MAAM;AACzD,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iEAAgE;AAChE,uCAAsC,MAAM;AAC5C,YAAW;AACX;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAgD;AAChD;AACA;AACA;;AAEA;AACA;AACA,uBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;;AAEA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;AChUA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,mBAAmB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;;;;;AC9KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,QAAQ;AACtB;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA,iBAAgB,oDAAoD;AACpE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,QAAQ,4BAA4B,EAAE;AACjD;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA,aAAY,uCAAuC;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA,YAAW,yBAAyB;AACpC;AACA,aAAY,sCAAsC;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,OAAO;AAClB;AACA,YAAW,yBAAyB;AACpC;AACA;AACA,cAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,OAAO;AAClB;AACA,YAAW,yBAAyB;AACpC;AACA;AACA,cAAa,QAAQ;AACrB;;AAEA;AACA,cAAa,OAAO;AACpB;AACA,eAAc,OAAO;AACrB;AACA,eAAc,0CAA0C;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA,eAAc,kCAAkC;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,6BAA6B;AACxC;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,cAAa,uCAAuC;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,cAAa,6BAA6B;AAC1C;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACnMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,cAAa,OAAO;AACpB;AACA;AACA,mCAAkC,GAAG;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ,IAAG;AACH;;AAEA,uBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,OAAO;AAClB;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,mBAAkB,YAAY;AAC9B;AACA;;AAEA;AACA;;AAEA;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI,oDAAoD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mEAAkE;AAClE,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAiC;AACjC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA,eAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,+CAA8C;AAC9C,yDAAwD;AACxD;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,OAAO,WAAW,yCAAyC;AACtE;AACA;AACA,cAAa,iDAAiD;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,yBAAwB,sDAAsD;AAC9E;AACA,4EAA2E;AAC3E,yDAAwD;AACxD;AACA,YAAW,OAAO,WAAW,yCAAyC;AACtE;AACA;AACA,cAAa,yCAAyC;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,sBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA,yBAAwB,mDAAmD;AAC3E,KAAI,iDAAiD,KAAK;AAC1D,iDAAgD;AAChD;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,GAAG;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA,eAAc,6CAA6C;AAC3D;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4EAA2E;AAC3E,oDAAmD;AACnD;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,yBAAyB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,cAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,KAAI,mDAAmD;AACvD;AACA,oDAAmD;AACnD,0CAAyC;AACzC;AACA;AACA;AACA,cAAa,iDAAiD;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,0CAAyC;AACzC;AACA;AACA;AACA,aAAY;AACZ,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,iCAAgC;AAChC;AACA;AACA;AACA,EAAC;;AAED,sBAAqB;AACrB;AACA;AACA,6BAA4B,EAAE;AAC9B,EAAC;;AAED,yBAAwB;AACxB;AACA;AACA,sBAAqB,IAAI,cAAc,IAAI;AAC3C,EAAC;;AAED,qBAAoB;AACpB;AACA;AACA;AACA,EAAC;;AAED,uBAAsB;AACtB;AACA;AACA;AACA,EAAC;;AAED;AACA,wBAAuB;AACvB;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA,EAAC;;AAED,mBAAkB;AAClB;AACA;AACA,EAAC;;AAED,sBAAqB;AACrB;AACA;AACA,EAAC;;AAED;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,EAAC;;AAED,uBAAsB;AACtB;AACA;AACA,EAAC;;AAED,yBAAwB;AACxB;AACA;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH,EAAC;;AAED,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,qBAAoB;AACpB;AACA;AACA;AACA;AACA,EAAC;;AAED,uBAAsB;AACtB;AACA;AACA;AACA;AACA,EAAC;;AAED,sBAAqB;AACrB;AACA;AACA;AACA;AACA,EAAC;;AAED,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAuB,EAAE,qBAAqB,EAAE;AAChD,OAAM,EAAE;;AAER,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED,0BAAyB;AACzB;AACA;AACA,4BAA2B,EAAE;AAC7B;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;;AAEA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,IAAG;AACH;AACA,EAAC;;AAED,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,IAAG;AACH;AACA,EAAC;;AAED,yBAAwB;AACxB;AACA;AACA;AACA;AACA,EAAC;;AAED,wCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;AACrC;AACA,+CAA8C;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAG;AACH,EAAC;;AAED,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH,EAAC;;AAED,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH,EAAC;;AAED,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH,EAAC;;AAED,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH,EAAC;;AAED,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH,EAAC;;AAED,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH,EAAC;;AAED,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA,mGAAkG,iBAAiB,EAAE,kCAAkC,IAAI,GAAG,EAAE,kBAAkB,IAAI,GAAG,EAAE,gBAAgB,IAAI,mBAAmB,IAAI,GAAG,EAAE,mBAAmB,IAAI,GAAG,IAAI,YAAY,IAAI,mBAAmB,IAAI,GAAG,EAAE,mBAAmB,IAAI,GAAG,IAAI,YAAY,IAAI,mBAAmB,IAAI,GAAG,EAAE,mBAAmB,IAAI,GAAG,IAAI,YAAY,IAAI,gBAAgB,IAAI,oBAAoB,IAAI,GAAG,IAAI,YAAY,IAAI,oBAAoB,IAAI,aAAa,IAAI,gDAAgD,EAAE,4DAA4D,IAAI,GAAG,IAAI,YAAY,IAAI,gBAAgB,IAAI,mBAAmB,IAAI,GAAG,IAAI,YAAY,IAAI,iDAAiD,uDAAuD,EAAE,qEAAqE,gBAAgB,EAAE,gDAAgD,kBAAkB,EAAE,sCAAsC,kBAAkB,EAAE,mCAAmC,kBAAkB,EAAE,mCAAmC,kBAAkB,EAAE,mCAAmC,kBAAkB,EAAE,uCAAuC,qBAAqB,EAAE,qCAAqC,qBAAqB,EAAE,2CAA2C,iBAAiB,EAAE,kCAAkC,IAAI,GAAG,EAAE,kBAAkB,IAAI,GAAG,EAAE,gBAAgB,IAAI,mBAAmB,IAAI,GAAG,EAAE,mBAAmB,IAAI,GAAG,IAAI,YAAY,IAAI,mBAAmB,IAAI,GAAG,EAAE,mBAAmB,IAAI,GAAG,IAAI,YAAY,IAAI,mBAAmB,IAAI,GAAG,EAAE,mBAAmB,IAAI,GAAG,IAAI,YAAY,IAAI,gBAAgB,IAAI,oBAAoB,IAAI,GAAG,IAAI,YAAY,IAAI,oBAAoB,IAAI,aAAa,IAAI,gDAAgD,EAAE,4DAA4D,IAAI,GAAG,IAAI,YAAY,IAAI,gBAAgB,IAAI,mBAAmB,IAAI,GAAG,IAAI,YAAY,IAAI,iDAAiD,uDAAuD,EAAE,qEAAqE,gBAAgB,EAAE,gDAAgD,kBAAkB,EAAE,sCAAsC,kBAAkB,EAAE,mCAAmC,kBAAkB,EAAE,mCAAmC,iBAAiB,EAAE,mCAAmC,kBAAkB,EAAE,uCAAuC,qBAAqB,EAAE,qCAAqC,qBAAqB,EAAE;;AAE5kF,uBAAsB;AACtB;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;;;;;;AC13CA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAU;AACV;AACA,gBAAe,kCAAkC;AACjD,kBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,sBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oJAAmJ;AACnJ,UAAS;;AAET;AACA;AACA,sBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,WAAW,YAAY,IAAI,WAAW,SAAS;AACvE,eAAc,yBAAyB,EAAE;AACzC,OAAM;AACN,YAAW,6HAA6H,qBAAqB,qaAAqa;AAClkB,cAAa,kDAAkD,OAAO,gNAAgN;AACtR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,8BAA8B;AACvD;AACA;AACA;AACA;AACA;AACA,0BAAyB,8BAA8B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;AACD,UAAS,uHAAuH,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,cAAc,yGAAyG,4BAA4B,8CAA8C,+BAA+B,wGAAwG,oGAAoG,iGAAiG,8BAA8B,QAAQ,EAAE,wGAAwG,sEAAsE,gBAAgB,EAAE,UAAU,EAAE,UAAU,EAAE,mGAAmG,EAAE,UAAU,2GAA2G,UAAU,4CAA4C,UAAU,EAAE,oBAAoB,2FAA2F,0BAA0B,EAAE,oBAAoB,gBAAgB,oBAAoB,EAAE,UAAU,gBAAgB,UAAU;AACz7C,kBAAiB,uDAAuD;AACxE;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D;AAC/D;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,GAAG;AACnB,kBAAiB,GAAG;AACpB,kBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE;AAC/B,iBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,kCAAiC;AACjC,sBAAqB;AACrB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL,sDAAqD;AACrD;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;AACL,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA,gCAA+B;AAC/B;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,sCAAqC,+CAA+C,kJAAkJ,UAAU,iCAAiC,KAAK,aAAa,KAAK;AACxS,cAAa,aAAa,6CAA6C,aAAa,kCAAkC,YAAY;AAClI,EAAC;AACD;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA,EAAC;;;AAGD;AACA;AACA;AACA,8BAA6B,8CAA8C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;ACjzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;ACnLtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACzCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACVA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,IAAI,oCAAoC,EAAE,gBAAgB,EAAE,EAAE,YAAY,iDAAiD,aAAa;AAC5K;AACA,+BAA8B,IAAI,yBAAyB,EAAE,gBAAgB,EAAE,EAAE,YAAY;AAC7F;AACA;AACA,+BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,kBAAiB,QAAQ;AACzB,kBAAiB,QAAQ;AACzB,qBAAoB,QAAQ;AAC5B,qBAAoB,QAAQ;AAC5B,4BAA2B,QAAQ;AACnC;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;;AAEA;;AAEA,2BAA0B;AAC1B,2BAA0B;AAC1B;AACA;AACA;;AAEA,wBAAuB;AACvB,wBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,EAAE;AACb,cAAa,OAAO;AACpB;AACA;AACA;;AAEA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,EAAE;AACb,YAAW,OAAO;AAClB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,sDAAqD,aAAa;AAClE;AACA,0CAAyC,aAAa;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,gBAAe,kBAAkB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,OAAO,+DAA+D;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,QAAQ,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA,6BAA4B,EAAE;AAC9B,6BAA4B,EAAE;AAC9B,6BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA8B;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,mBAAkB,OAAO;AACzB,kBAAiB,OAAO;AACxB;AACA,2BAA0B,OAAO;AACjC;AACA;AACA,qBAAoB,QAAQ;AAC5B;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC,OAAM;AACN;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAc,aAAa;AAC3B,uBAAsB,yCAAyC;AAC/D,OAAM;AACN;AACA,sCAAqC;AACrC,uCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,eAAe;AAC1B;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA,oEAAmE,EAAE;AACrE,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,8BAA6B,WAAW;AACxC;;AAEA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA0C;AAC1C;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA,+BAA8B;AAC9B,+BAA8B;AAC9B,uCAAsC;AACtC,uCAAsC;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,uCAAsC;AACtC,sCAAqC;AACrC;AACA;AACA,gCAA+B;AAC/B,sCAAqC;AACrC,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM,yCAAyC;AAC/C,OAAM;AACN;AACA;AACA;AACA;AACA;AACA,yDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,4CAA2C,EAAE;AAC7C;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,cAAc;AACzB,YAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,2CAA0C,KAAK,IAAI,MAAM;AACzD;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kFAAiF,KAAK;AACtF;AACA,YAAW,OAAO;AAClB,YAAW,MAAM;AACjB,cAAa,OAAO;AACpB;AACA;AACA;AACA,kCAAiC,KAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;;AAEA,gBAAe,yBAAyB;AACxC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,cAAc;AACzB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,eAAe;AAC1B;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA,0CAAyC;AACzC,0CAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,qBAAqB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA,oCAAmC;AACnC;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,4BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,gBAAgB;AAC3B,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,sBAAqB;AACrB;;AAEA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA,+CAA8C;AAC9C;AACA;AACA,kCAAiC;AACjC;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA,0BAAyB,iBAAiB;AAC1C;AACA,+DAA8D,GAAG;AACjE;AACA,iFAAgF,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,EAAE,EAAE,YAAY,iBAAiB,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAoD,IAAI;AACxD;AACA;AACA;AACA,wBAAuB,IAAI;AAC3B;AACA;AACA;AACA,UAAS,cAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,KAAK;AAC5E,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,MAAK;AACL;;AAEA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzyDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qCAAoC,UAAU,KAAK,UAAU;;AAE7D;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,cAAc;AAC7B,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO,kCAAkC,MAAM;AAC9D,cAAa,MAAM,+BAA+B,MAAM;AACxD;AACA,gBAAe,OAAO;AACtB;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA,0CAAyC,OAAO,IAAI,SAAS;AAC7D,kCAAiC,KAAK,OAAO,KAAK;AAClD;AACA;AACA,WAAU;AACV;AACA,SAAQ;AACR,2BAA0B;AAC1B,4CAA2C;AAC3C;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;;;;;;;ACzLA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,YAAW,4DAA4D;AACvE,YAAW,6DAA6D;AACxE,YAAW,6DAA6D;AACxE,YAAW,6DAA6D;AACxE,YAAW;AACX;AACA;AACA;AACA,mBAAkB,EAAE,KAAK,cAAc,QAAQ,MAAM;AACrD,sCAAqC,KAAK;AAC1C;AACA;AACA,SAAQ;AACR;AACA,YAAW,iDAAiD;AAC5D,YAAW,iDAAiD;AAC5D,YAAW,6BAA6B,oBAAoB;AAC5D,YAAW,uCAAuC,QAAQ,KAAK;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC3LA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAAyB,GAAG,gEAAgE,GAAG;AAC/F,cAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAoC,GAAG,KAAK,GAAG,KAAK,IAAI;AACxD;AACA;AACA,mFAAkF,EAAE;AACpF,sBAAqB,SAAS,IAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,GAAG,OAAO;AAC5C;AACA;AACA;AACA,+FAA8F;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,qBAAoB,OAAO,KAAK,YAAY,iBAAiB;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AClOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,aAAa;AACxnjCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iEAAgE,GAAG,SAAS,iBAAizGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wDAAuiBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,kCAAkC;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,eAAe;AAC1B;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACtLA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,cAAa,kDAAkD;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAwB,qCAAqC;AAC7D;AACA;AACA,cAAa,uCAAuC;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AC1WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB;AACA,aAAY,MAAM;AAClB;AACA,cAAa,OAAO,sBAAsB;AAC1C,8DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA,YAAW,MAAM;AACjB;AACA,cAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,cAAc;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA4C,WAAW;AACvD,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA,yCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,aAAY,MAAM;AAClB;AACA,cAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"salve.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"salve\"] = factory();\n\telse\n\t\troot[\"salve\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 00e57a16e73cca5c5cfb","/**\n * @desc RNG-based validator.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\nvar patterns = require(\"./patterns\");\nvar formats = require(\"./formats\");\nvar EName = require(\"./ename\").EName;\nvar errors = require(\"./errors\");\nvar NameResolver = require(\"./name_resolver\").NameResolver;\nvar namePatterns = require(\"./name_patterns\");\nvar hashStructs = require(\"./hashstructs\");\n\nexports.version = \"3.0.0\";\n\n/**\n * @see module:patterns.Event\n * @static\n */\nexports.Event = patterns.Event;\n\n/**\n * @see module:patterns.eventsToTreeString\n * @static\n */\nexports.eventsToTreeString = patterns.eventsToTreeString;\n\n/**\n * @see module:patterns.ReferenceError\n * @static\n */\nexports.ReferenceError = patterns.ReferenceError;\n\n/**\n * @see module:patterns.Grammar\n * @static\n */\nexports.Grammar = patterns.Grammar;\n\n/**\n * @see module:patterns.Walker\n * @static\n */\nexports.Walker = patterns.Walker;\n\n/**\n * @see module:patterns.__test\n * @private\n * @static\n */\nexports.__test = patterns.__test;\n\n/**\n * @see module:ename.EName\n * @static\n */\nexports.EName = EName;\n\n\n/**\n * @see module:errors.ValidationError\n * @static\n */\nexports.ValidationError = errors.ValidationError;\n\n/**\n * @see module:errors.AttributeNameError\n * @static\n */\nexports.AttributeNameError = errors.AttributeNameError;\n\n/**\n * @see module:errors.AttributeValueError\n * @static\n */\nexports.AttributeValueError = errors.AttributeValueError;\n\n/**\n * @see module:errors.ElementNameError\n * @static\n */\nexports.ElementNameError = errors.ElementNameError;\n\n/**\n * @see module:errors.ChoiceError\n * @static\n */\nexports.ChoiceError = errors.ChoiceError;\n\n/**\n * @see module:formats.constructTree\n * @static\n */\nexports.constructTree = formats.constructTree;\n\n/**\n * @see module:name_resolver.NameResolver\n * @static\n */\nexports.NameResolver = NameResolver;\n\n/**\n * @see module:name_patterns.Name\n * @static\n */\nexports.Name = namePatterns.Name;\n\n/**\n * @see module:name_patterns.NameChoice\n * @static\n */\nexports.NameChoice = namePatterns.NameChoice;\n\n/**\n * @see module:name_patterns.NsName\n * @static\n */\nexports.NsName = namePatterns.NsName;\n\n/**\n * @see module:name_patterns.AnyName\n * @static\n */\nexports.AnyName = namePatterns.AnyName;\n\n/**\n * Do not use this. This is here only for historical reasons and may be yanked\n * at any time.\n *\n * @see module:hashstructs.HashMap\n * @static\n * @private\n */\nexports.HashMap = hashStructs.HashMap;\n\n//  LocalWords:  validator constructTree RNG MPL Dubeau Mangalam rng\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/validate.js\n// module id = 0\n// module chunks = 0 1","/**\n * @desc Classes that model RNG patterns.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\n/* eslint-disable no-use-before-define */\n\nvar nameResolver = require(\"./name_resolver\");\nvar EName = require(\"./ename\").EName;\n\n// XML validation against a schema could work without any lookahead if it were\n// not for namespaces. However, namespace support means that the interpretation\n// of a tag or of an attribute may depend on information which appears *later*\n// than the earliest time at which a validation decision might be called for:\n//\n// Consider:\n//    <elephant a=\"a\" b=\"b\"... xmlns=\"elephant_uri\"/>\n//\n// It is not until xmlns is encountered that the validator will know that\n// elephant belongs to the elephant_uri namespace. This is not too troubling for\n// a validator that can access the whole document but for validators used in a\n// line-by-line process (which is the case if the validator is driven by a\n// CodeMirror or Ace tokenizer, and anything based on them), this can be\n// problematic because the attributes could appear on lines other than the line\n// on which the start of the tag appears:\n//\n// <elephant\n//  a=\"a\"\n//  b=\"b\"\n//  xmlns=\"elephant_uri\"/>\n//\n// The validator encounters the start of the tag and the attributes, without\n// knowing that eventually this elephant tag belongs to the elephant_uri\n// namespace. This discovery might result in things that were seen previously\n// and deemed valid becoming invalid. Or things that were invalid becoming\n// valid.\n//\n// Handling namespaces will require lookahead. Although the validator would\n// still expect all events that have tag and attribute names to have a proper\n// namespace uri, upon ``enterStartTag`` the parsing code which feeds events to\n// the validator would look ahead for these cases:\n//\n// * There is a valid ``>`` character ending the start tag. Scan the start tag\n//   for all namespace declarations.\n//\n// * The tag ends at EOF. Scan from beginning of tag to EOF for namespace\n//   declarations.\n//\n// * The tag is terminated by an invalid token. Scan from beginning of tag to\n//   error.\n//\n// Then issue the enterStartTag and attributeName events on the basis of what\n// was found in scanning.\n//\n// When the parsing code discovers a change in namespace declarations, for\n// instance because the user typed xmlns=\"...\" or removed a declaration, the\n// parsing code must *restart* validation *from* the location of the original\n// enterStartTag event.\n\nvar util = require(\"./util\");\nvar hashstructs = require(\"./hashstructs\");\nvar oop = require(\"./oop\");\nvar Set = require(\"./set\").Set;\nvar datatypes = require(\"./datatypes\");\nvar errors = require(\"./errors\");\n\nvar ValidationError = errors.ValidationError;\nvar ElementNameError = errors.ElementNameError;\nvar AttributeNameError = errors.AttributeNameError;\nvar AttributeValueError = errors.AttributeValueError;\nvar ChoiceError = errors.ChoiceError;\nvar registry = datatypes.registry;\nvar inherit = oop.inherit;\nvar implement = oop.implement;\nvar HashMap = hashstructs.HashMap;\n\nvar DEBUG = false;\n\nif (DEBUG) {\n  //\n  // Debugging utilities\n  //\n\n  var trace = function trace(msg) {\n    console.log(msg); // eslint-disable-line no-console\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  var stackTrace = function stackTrace() {\n    trace(new Error().stack);\n  };\n\n  /* eslint-disable no-unused-vars */\n  var possibleTracer;\n  var fireEventTracer;\n  var plainTracer;\n  /* eslint-enable no-unused-vars */\n  var callDump;\n\n  (function buildTracingCode() {\n    var buf = \"\";\n    var step = \" \";\n\n    var nameOrPath = function nameOrPath(walker) {\n      var el = walker.el;\n\n      if (!el) {\n        return \"\";\n      }\n\n      if (el.name === undefined) {\n        return \" with path \" + el.xmlPath;\n      }\n\n      var named = \" named \" + el.name.toString();\n      if (!walker.boundName) {\n        return named;\n      }\n\n      return named + \" (bound to \" + walker.boundName.toString() + \")\";\n    };\n\n    // eslint-disable-next-line no-shadow\n    callDump = function callDump(msg, name, me) {\n      trace(buf + msg + name + \" on class \" + me.constructor.name +\n            \" id \" + me.id + nameOrPath(me));\n    };\n\n    // eslint-disable-next-line no-shadow\n    possibleTracer = function possibleTracer(oldMethod, name, args) {\n      buf += step;\n      callDump(\"calling \", name, this);\n      var ret = oldMethod.apply(this, args);\n      callDump(\"called \", name, this);\n      trace(buf + \"return from the call: \" + util.inspect(ret));\n      buf = buf.slice(step.length);\n      return ret;\n    };\n\n    // eslint-disable-next-line no-shadow\n    fireEventTracer = function fireEventTracer(oldMethod, name, args) {\n      buf += step;\n      callDump(\"calling \", name, this);\n      trace(buf + util.inspect(args[0]));\n\n      var ret = oldMethod.apply(this, args);\n      callDump(\"called \", name, this);\n      if (ret !== false) {\n        trace(buf + \"return from the call: \" + util.inspect(ret));\n      }\n      buf = buf.slice(step.length);\n      return ret;\n    };\n\n    // eslint-disable-next-line no-shadow\n    plainTracer = function plainTracer(oldMethod, name, args) {\n      buf += step;\n      callDump(\"calling \", name, this);\n\n      var ret = oldMethod.apply(this, args);\n      callDump(\"called \", name, this);\n      // if (ret !== true) {\n      //    trace(buf + \"return from the call: \" + util.inspect(ret));\n      // }\n      buf = buf.slice(step.length);\n      return ret;\n    };\n  }());\n\n  /**\n   * Utility function for debugging. Wraps ``me[name]`` in a wrapper\n   * function. ``me[name]`` must be a function.  ``me`` could be an instance or\n   * could be a prototype. This function cannot trivially wrap the same field on\n   * the same object twice.\n   *\n   * @private\n   * @param {Object} me The object to modify.\n   * @param {string} name The field name to modify in the object.\n   * @param {Function} f The function that should serve as wrapper.\n   *\n   */\n  // eslint-disable-next-line no-unused-vars\n  var wrap = function wrap(me, name, f) {\n    var mangledName = \"___\" + name;\n    me[mangledName] = me[name];\n    me[name] = function wrapper() {\n      return f.call(this, me[mangledName], name, arguments);\n    };\n  };\n}\n\n/**\n * Sets up a newWalker method in a prototype.\n *\n * @private\n * @param {Function} elCls The class that will get the new method.\n * @param {Function} walkerCls The Walker class to instantiate.\n */\nfunction addWalker(elCls, walkerCls) {\n  // `resolver` is a NameResolver.\n  elCls.prototype.newWalker = function newWalker(resolver) {\n    // eslint-disable-next-line new-cap\n    return new walkerCls(this, resolver);\n  };\n}\n\n/**\n * Factory method to create constructors that create singleton objects.  Upon\n * first call, the constructor will return a new object. Subsequent calls to the\n * constructor return the same object.\n *\n * @private\n *\n * @param {Function} base The base class from which this constructor should\n * inherit. Note that inherit() should still be called outside\n * makeSingletonConstructor to setup inheritance.\n * @returns {Function} The new constructor.\n */\nfunction makeSingletonConstructor(base) {\n  function f() {\n    if (f.prototype.__singletonInstance !== undefined) {\n      return f.prototype.__singletonInstance;\n    }\n\n    /* jshint validthis: true */\n    base.apply(this, arguments);\n\n    f.prototype.__singletonInstance = this;\n    return this;\n  }\n\n  return f;\n}\n\n// function EventSet() {\n//     var args = Array.prototype.slice.call(arguments);\n//     args.unshift(function (x) { return x.hash() });\n//     HashSet.apply(this, args);\n// }\n// inherit(EventSet, HashSet);\n\n// The naive Set implementation turns out to be faster than the HashSet\n// implementation for how we are using it.\n\nvar EventSet = Set;\n\n/**\n * Calls the ``hash()`` method on the object passed to it.\n *\n * @private\n * @param {Object} o An object that implements ``hash()``.\n * @returns {boolean} The return value of ``hash()``.\n */\nfunction hashHelper(o) {\n  return o.hash();\n}\n\n/**\n *\n * @classdesc This is the base class for all patterns created from the file\n * passed to constructTree. These patterns form a JavaScript representation of\n * the simplified RNG tree. The base class implements a leaf in the RNG tree. In\n * other words, it does not itself refer to children Patterns. (To put it in\n * other words, it has no subpatterns.)\n *\n * @extends Object\n *\n * @class\n * @static\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n */\nfunction Pattern(xmlPath) {\n  this.id = \"P\" + this.__newID();\n  this.xmlPath = xmlPath;\n}\n\ninherit(Pattern, Object);\n\n/**\n * The next id to associate to the next Pattern object to be created. This is\n * used so that {@link module:patterns.Pattern#hash hash} can return unique\n * values.\n *\n * @private\n */\nPattern.__id = 0;\n\n/**\n * Gets a new Pattern id.\n *\n * @private\n * @returns {integer} The new id.\n */\nPattern.prototype.__newID = function __newID() {\n  return Pattern.__id++;\n};\n\n/**\n * This method is mainly used to be able to use Event objects in a {@link\n * module:hashstructs.HashSet HashSet} or a {@link module:hashstructs.HashMap\n * HashMap}.\n *\n * Returns a hash guaranteed to be unique to this object. There are some\n * limitations. First, if this module is instantiated twice, the objects created\n * by the two instances cannot mix without violating the uniqueness\n * guarantee. Second, the hash is a monotonically increasing counter, so when it\n * reaches beyond the maximum integer that the JavaScript vm can handle, things\n * go kaboom.\n *\n * @returns {integer} A number unique to this object.\n */\nPattern.prototype.hash = function hash() {\n  return this.id;\n};\n\n/**\n * Resolve references to definitions.\n *\n * @private\n *\n * @param {Array} definitions The definitions that exist in this grammar.\n *\n * @returns {Array|undefined} The references that cannot be resolved, or\n * ``undefined`` if no references cannot be resolved. The caller is free to\n * modify the value returned as needed.\n */\nPattern.prototype._resolve = function _resolve(_definitions) {\n  return undefined;\n};\n\n/**\n * This method must be called after resolution has been performed.  ``_prepare``\n * recursively calls children but does not traverse ref-define boundaries to\n * avoid infinite regress...\n *\n * This function now performs two tasks: a) it prepares the attributes\n * (Definition and Element objects maintain a pattern which contains only\n * attribute patterns, and nothing else), b) it gathers all the namespaces seen\n * in the schema.\n *\n * @private\n *\n * @param {Object} namespaces An object whose keys are the namespaces seen in\n * the schema. This method populates the object.\n *\n */\nPattern.prototype._prepare = function _prepare(_namespaces) {\n  // nothing here\n};\n\n\n/**\n * Creates a new walker to walk this pattern.\n *\n * @returns {module:patterns.Walker} A walker.\n */\nPattern.prototype.newWalker = function newWalker() {\n  throw new Error(\"must define newWalker method\");\n};\n\n/**\n * Makes a deep copy (a clone) of this pattern.\n *\n * @returns {module:patterns.Pattern} A new copy.\n */\nPattern.prototype.clone = function clone() {\n  return this._clone(new HashMap(hashHelper));\n};\n\n/**\n * Helper function for clone. Code that is not part of the Pattern family would\n * call clone() whereas Pattern and its derived classes call _clone() with the\n * appropriate memo.\n *\n * @private\n *\n * @param {module:hashstructs.HashMap} memo A mapping of old object to copy\n * object. As a tree of patterns is being cloned, this memo is populated.  So if\n * A is cloned to B then a mapping from A to B is stored in the memo.  If A is\n * seen again in the same cloning operation, then it will be substituted with B\n * instead of creating a new object.\n *\n * @returns An new object of the same class as the one being cloned. The new\n * object is a clone.\n */\nPattern.prototype._clone = function _clone(memo) {\n  var other = memo.has(this);\n  if (other !== undefined) {\n    return other;\n  }\n  other = new this.constructor();\n  memo.add(this, other);\n  this._copyInto(other, memo);\n  return other;\n};\n\n/**\n * Helper method for clone() and _clone(). All classes deriving from Pattern\n * must implement their own version of this function so that they copy and clone\n * their fields as needed.\n *\n * @private\n *\n * @param {module:patterns.Pattern} obj Object into which we must copy the\n * fields of this object.\n *\n * @param {module:hashstructs.HashMap} memo The memo that contains the copy\n * mappings. See {@link module:patterns.Pattern#clone clone()} above.\n */\nPattern.prototype._copyInto = function _copyInto(obj, _memo) {\n  obj.xmlPath = this.xmlPath;\n};\n\n/**\n * This method tests whether a pattern is an attribute pattern or contains\n * attribute patterns. This method does not cross element boundaries. That is,\n * if element X cannot have attributes of its own but can contain elements that\n * can have attributes, the return value if this method is called on the pattern\n * contained by element X's pattern will be ``false``.\n *\n * @returns {boolean} True if the pattern is or has attributes. False if not.\n */\nPattern.prototype._hasAttrs = function _hasAttrs() {\n  return false;\n};\n\n/**\n * Populates a memo with a mapping of (element name, [list of patterns]).  In a\n * Relax NG schema, the same element name may appear in multiple contexts, with\n * multiple contents. For instance an element named \"name\" could require the\n * sequence of elements \"firstName\", \"lastName\" in a certain context and text in\n * a different context. This method allows determining whether this happens or\n * not within a pattern.\n *\n * @private\n * @param {Object} memo The memo in which to store the information.\n */\nPattern.prototype._gatherElementDefinitions =\n  function _gatherElementDefinitions(_memo) {\n    // By default we have no children.\n  };\n\n/**\n * @classdesc Pattern objects of this class have exactly one child pattern.\n * @extends module:patterns.Pattern\n * @private\n *\n * @class\n * @static\n *\n * @param {string} xmlPath This is a string which uniquely\n * identifies the element from the simplified RNG tree. Used in debugging.\n */\nfunction PatternOnePattern(xmlPath) {\n  Pattern.call(this, xmlPath);\n  this.pat = undefined;\n}\ninherit(PatternOnePattern, Pattern);\n\nPatternOnePattern.prototype._resolve = function _resolve(definitions) {\n  return this.pat._resolve(definitions);\n};\n\nPatternOnePattern.prototype._copyInto = function _copyInto(obj, memo) {\n  Pattern.prototype._copyInto.call(this, obj, memo);\n  obj.pat = this.pat._clone(memo);\n};\n\nPatternOnePattern.prototype._prepare = function _prepare(namespaces) {\n  this.pat._prepare(namespaces);\n};\n\nPatternOnePattern.prototype._hasAttrs = function _hasAttrs() {\n  return this.pat._hasAttrs();\n};\n\nPatternOnePattern.prototype._gatherElementDefinitions =\n  function _gatherElementDefinitions(memo) {\n    this.pat._gatherElementDefinitions(memo);\n  };\n\n/**\n * @classdesc Pattern objects of this class have exactly two child patterns.\n *\n * @extends module:patterns.Pattern\n *\n * @class\n * @static\n * @private\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n */\nfunction PatternTwoPatterns(xmlPath) {\n  Pattern.call(this, xmlPath);\n  this.patA = undefined;\n  this.patB = undefined;\n}\ninherit(PatternTwoPatterns, Pattern);\n\nPatternTwoPatterns.prototype._resolve = function _resolve(definitions) {\n  var a = this.patA._resolve(definitions);\n  var b = this.patB._resolve(definitions);\n  if (a && b) {\n    return a.concat(b);\n  }\n\n  if (a) {\n    return a;\n  }\n\n  return b;\n};\n\nPatternTwoPatterns.prototype._copyInto = function _copyInto(obj, memo) {\n  Pattern.prototype._copyInto.call(this, obj, memo);\n  obj.patA = this.patA._clone(memo);\n  obj.patB = this.patB._clone(memo);\n};\n\nPatternTwoPatterns.prototype._prepare = function _prepare(namespaces) {\n  this.patA._prepare(namespaces);\n  this.patB._prepare(namespaces);\n};\n\nPatternTwoPatterns.prototype._hasAttrs = function _hasAttrs() {\n  return this.patA._hasAttrs() || this.patB._hasAttrs();\n};\n\n\nPatternTwoPatterns.prototype._gatherElementDefinitions =\n  function _gatherElementDefinitions(memo) {\n    this.patA._gatherElementDefinitions(memo);\n    this.patB._gatherElementDefinitions(memo);\n  };\n\n/**\n * @classdesc This class modelizes events occurring during parsing. Upon\n * encountering the start of a start tag, an \"enterStartTag\" event is generated,\n * etc. Event objects are held to be immutable. No precautions have been made to\n * enforce this. Users of these objects simply must not modify them. Moreover,\n * there is one and only one of each event created.\n *\n * An event is made of a list of event parameters, with the first one being the\n * type of the event and the rest of the list varying depending on this type.\n *\n * @class\n * @static\n *\n * @param args... The event parameters may be passed directly in the call ``(new\n * Event(a, b, ...))`` or the first call parameter may be a list containing all\n * the event parameters ``(new Event([a, b, ])``. All of the event parameters\n * must be strings.\n */\nfunction Event() {\n  var params;\n  if (arguments[0] instanceof Array) {\n    params = arguments[0];\n  }\n  else {\n    // We do it this way to allow v8 to optimize the function.\n    var lim = arguments.length;\n    params = new Array(lim);\n    for (var i = 0; i < lim; ++i) {\n      params[i] = arguments[i];\n    }\n  }\n\n  var key = params.join();\n\n  // Ensure we have only one of each event created.\n  var cached = Event.__cache[key];\n  if (cached !== undefined) {\n    return cached;\n  }\n\n  this.id = this.__newID();\n  this.params = params;\n  this.key = key;\n\n  Event.__cache[key] = this;\n  return this;\n}\n\n/**\n * The cache of Event objects. So that we create one and only one Event object\n * per run.\n *\n * @private\n */\nEvent.__cache = Object.create(null);\n\n/**\n * The next id to associate to the next Event object to be created. This is used\n * so that {@link module:patterns.Event#hash hash} can return unique values.\n *\n * @private\n */\nEvent.__id = 0;\n\n/**\n * Gets a new Event id.\n *\n * @private\n * @returns {integer} The new id.\n */\nEvent.prototype.__newID = function __newID() {\n  return Event.__id++;\n};\n\n/**\n * This method is mainly used to be able to use Event objects in a {@link\n * module:hashstructs.HashSet HashSet} or a {@link module:hashstructs.HashMap\n * HashMap}.\n *\n * Returns a hash guaranteed to be unique to this object. There are some\n * limitations. First, if this module is instantiated twice, the objects created\n * by the two instances cannot mix without violating the uniqueness\n * guarantee. Second, the hash is a monotonically increasing counter, so when it\n * reaches beyond the maximum integer that the JavaScript vm can handle, things\n * go kaboom.\n *\n * @returns {integer} A number unique to this object.\n */\nEvent.prototype.hash = function hash() {\n  return this.id;\n};\n\n/**\n * Is this Event an attribute event?\n *\n * @returns {boolean} ``true`` if the event is an attribute event, ``false``\n * otherwise.\n */\nEvent.prototype.isAttributeEvent = function isAttributeEvent() {\n  return (this.params[0] === \"attributeName\" ||\n          this.params[0] === \"attributeValue\");\n};\n\n/**\n * @returns {string} A string representation of the event.\n */\nEvent.prototype.toString = function toString() {\n  return \"Event: \" + this.params.join(\", \");\n};\n\n/**\n * Utility function used mainly in testing to transform a {@link module:set.Set\n * Set} of events into a string containing a tree structure.  The principle is\n * to combine events of a same type together and among events of a same type\n * combine those which are in the same namespace. So for instance if there is a\n * set of events that are all attributeName events plus one leaveStartTag event,\n * the output could be:\n *\n * <pre>``\n * attributeName:\n * ..uri A:\n * ....name 1\n * ....name 2\n * ..uri B:\n * ....name 3\n * ....name 4\n * leaveStartTag\n * ``</pre>\n *\n * The dots above are to represent more visually the indentation. Actual output\n * does not contain leading dots.  In this list there are two attributeName\n * events in the \"uri A\" namespace and two in the \"uri B\" namespace.\n *\n *\n * @static\n *\n * @param {module:set.Set} evs Events to turn into a string.\n * @returns {string} A string which contains the tree described above.\n */\nfunction eventsToTreeString(evs) {\n  var hashF = function hashF(x) {\n    return x;\n  };\n  var hash = new HashMap(hashF);\n  evs.forEach(function each(ev) {\n    var params = ev;\n    if (ev instanceof Event) {\n      params = ev.params;\n    }\n\n    var node = hash;\n    for (var i = 0; i < params.length; ++i) {\n      if (i === params.length - 1) {\n        // Our HashSet/Map cannot deal with undefined values. So we mark\n        // leaf elements with the value false.\n        node.add(params[i], false);\n      }\n      else {\n        var nextNode = node.has(params[i]);\n        if (nextNode === undefined) {\n          nextNode = new HashMap(hashF);\n          node.add(params[i], nextNode);\n        }\n        node = nextNode;\n      }\n    }\n  });\n\n  var dumpTree = (function makeDumpTree() {\n    var dumpTreeBuf = \"\";\n    var dumpTreeIndent = \"    \";\n    // eslint-disable-next-line no-shadow\n    return function dumpTree(hash, _indent) {\n      var ret = \"\";\n      var keys = hash.keys();\n      keys.sort();\n      keys.forEach(function each(key) {\n        var sub = hash.has(key);\n        if (sub !== false) {\n          ret += dumpTreeBuf + key + \":\\n\";\n          dumpTreeBuf += dumpTreeIndent;\n          ret += dumpTree(hash.has(key));\n          dumpTreeBuf =\n            dumpTreeBuf.slice(dumpTreeIndent.length);\n        }\n        else {\n          ret += dumpTreeBuf + key + \"\\n\";\n        }\n      });\n      return ret;\n    };\n  }());\n\n  return dumpTree(hash);\n}\n\n/**\n * Special event to which only the EmptyWalker responds positively.\n * @private\n */\nvar emptyEvent = new Event(\"<empty>\");\n\n/**\n * Return value for ``fireEvent`` methods. It is returned only for text values\n * and indicates that part of the text was matched. These objects are immutable\n * by convention.\n *\n * @class\n * @static\n * @param {integer} length The length of the part that was matched.\n * @property {integer} length The length that was passed during construction.\n */\nfunction PartialMatch(length) {\n  this.length = length;\n}\n\n/**\n * @classdesc Roughly speaking each {@link module:patterns.Pattern Pattern}\n * object has a corresponding Walker class that modelizes an object which is\n * able to walk the pattern to which it belongs. So an Element has an\n * ElementWalker and an Attribute has an AttributeWalker. A Walker object\n * responds to parsing events and reports whether the structure represented by\n * these events is valid.\n *\n * This base class records only a minimal number of properties so that child\n * classes can avoid keeping useless properties. A prime example is the walker\n * for ``<empty>`` which is a terminal walker (it has no subwalker) so does not\n * need to record the name resolver.\n *\n * Note that users of this API do not instantiate Walker objects themselves.\n * @class\n * @static\n */\nfunction Walker() {\n  this.id = \"W\" + this.__newID();\n  this.possibleCached = undefined;\n  this.suppressedAttributes = false;\n  // if (DEBUG) {\n  //     wrap(this, \"_possible\", possibleTracer);\n  //     wrap(this, \"fireEvent\", fireEventTracer);\n  //     wrap(this, \"end\", plainTracer);\n  //     wrap(this, \"_suppressAttributes\", plainTracer);\n  //     wrap(this, \"_clone\", plainTracer);\n  // }\n}\n\n/**\n * The next id to associate to the next Walker object to be created. This is\n * used so that {@link module:patterns.Walker#hash hash} can return unique\n * values.\n *\n * @private\n */\nWalker.__id = 0;\n\n/**\n * Gets a new Walker id.\n *\n * @private\n * @returns {integer} The new id.\n */\nWalker.prototype.__newID = function __newID() {\n  return Walker.__id++;\n};\n\n/**\n * This method is mainly used to be able to use Walker objects in a {@link\n * module:hashstructs.HashSet HashSet} or a {@link module:hashstructs.HashMap\n * HashMap}.\n *\n * Returns a hash guaranteed to be unique to this object. There are some\n * limitations. First, if this module is instantiated twice, the objects created\n * by the two instances cannot mix without violating the uniqueness\n * guarantee. Second, the hash is a monotonically increasing counter, so when it\n * reaches beyond the maximum integer that the JavaScript vm can handle, things\n * go kaboom.\n *\n * @returns {integer} A number unique to this object.\n */\nWalker.prototype.hash = function hash() {\n  return this.id;\n};\n\n/**\n * Fetch the set of possible events at the current stage of parsing.\n *\n * @returns {module:set.Set} The set of events that can be fired without\n * resulting in an error.\n */\nWalker.prototype.possible = function possible() {\n  return new EventSet(this._possible());\n};\n\n/**\n * Helper method for possible(). The possible() method is designed to be safe,\n * in that the value it returns is not shared, so the caller may change it\n * without breaking anything. However, this method returns a value that may not\n * be modified by the caller. It is used internally among the classes of this\n * file to save copying time.\n *\n * @private\n * @returns {module:set.Set} The set of events that can be fired without\n * resulting in an error.\n */\nWalker.prototype._possible = function _possible() {\n  throw new Error(\"must be implemented by derived classes\");\n};\n\n// These functions return true if there is no problem, or a list of\n// ValidationError objects otherwise.\n\n/**\n * Passes an event to the walker for handling. The Walker will determine whether\n * it or one of its children can handle the event.\n *\n * @param ev The event to handle.\n *\n * @returns {false|undefined|module:patterns.PartialMatch|\n * Array.<module:errors.ValidationError>} The value ``false`` if there was no\n * error. The value ``undefined`` if no walker matches the pattern. A\n * ``PartialMatch`` object if a chunk of text was partially matched. (Note that\n * this value is used only internally.)  Otherwise, an array of {@link\n * module:errors.ValidationError ValidationError} objects.\n */\nWalker.prototype.fireEvent = function fireEvent(_ev) {\n  throw new Error(\"must be implemented by derived classes\");\n};\n\n/**\n * Can this Walker validly end after the previous event fired?\n *\n * @param {boolean} attribute ``true`` if calling this method while processing\n * attributes, ``false`` otherwise.\n *\n * @return {boolean} ``true`` if the walker can validly end here.  ``false``\n * otherwise.\n */\nWalker.prototype.canEnd = function canEnd(_attribute) {\n  return true;\n};\n\n/**\n * This method ends the Walker processing. It should not see any further events\n * after end is called.\n *\n * @param {boolean} attribute ``true`` if calling this method while processing\n * attributes, ``false`` otherwise.\n *\n * @returns {boolean|Array.<module:errors.ValidationError>} ``false`` if the\n * walker ended without error. Otherwise, a list of {@link\n * module:errors.ValidationError ValidationError} objects.\n */\nWalker.prototype.end = function end(_attribute) {\n  return false;\n};\n\n/**\n * Deep copy the Walker.\n *\n * @returns {module:patterns.Walker} A deep copy of the Walker.\n */\nWalker.prototype.clone = function clone() {\n  return this._clone(new HashMap(hashHelper));\n};\n\n/**\n * Helper function for clone. Code that is not part of the Walker family would\n * call clone() whereas Walker and its derived classes call _clone() with the\n * appropriate memo.\n *\n * @private\n *\n * @param {module:hashstructs.HashMap} memo A mapping of old object to copy\n * object, passed to ``_copyInto``.\n *\n * @returns A new object of the same class as the one being cloned. The new\n * object is a clone.\n */\nWalker.prototype._clone = function _clone(memo) {\n  // _clone does not need to use the memo because Walker objects form a\n  // tree. There are no cycles so we can't see the same object twice.  However,\n  // all Walkers have a reference to a name resolver and need to clone it too,\n  // only once. So the memo is still needed.\n  var other = new this.constructor();\n  this._copyInto(other, memo);\n  return other;\n};\n\n/**\n * Helper method for ``_copyInto``. This method should be called to clone\n * objects that do not participate in the ``clone``, ``_clone``, ``_copyInto``\n * protocol. This typically means instance properties that are not ``Walker``\n * objects and not immutable.\n *\n * This method will call a ``clone`` method on ``obj``, when it determines that\n * cloning must happen.\n *\n * @private\n * @param {Object} obj The object to clone.\n *\n * @param {Object} memo A mapping of old object to copy object. As a tree of\n * patterns is being cloned, this memo is populated. So if A is cloned to B then\n * a mapping from A to B is stored in the memo. If A is seen again in the same\n * cloning operation, then it will be substituted with B instead of creating a\n * new object. This should be the same object as the one passed to ``_clone``\n * and ``_copyInto``.\n *\n * @returns {Object} A clone of ``obj``.\n */\nWalker.prototype._cloneIfNeeded = function _cloneIfNeeded(obj, memo) {\n  var other = memo.has(obj);\n  if (other !== undefined) {\n    return other;\n  }\n  other = obj.clone();\n  memo.add(obj, other);\n  return other;\n};\n\n/**\n * Helper method for clone() and _clone(). All classes deriving from Walker must\n * implement their own version of this function so that they copy and clone\n * their fields as needed.\n *\n * @private\n *\n * @param {module:patterns.Pattern} obj Object into which we must copy the\n * fields of this object.\n *\n * @param {module:hashstructs.HashMap} memo The memo that contains the copy\n * mappings. See {@link module:patterns.Walker#clone clone()} above.\n */\nWalker.prototype._copyInto = function _copyInto(obj, _memo) {\n  // We can share the same Set because once created the Set in\n  // this.possibleCached is not altered.\n  obj.possibleCached = this.possibleCached;\n  obj.suppressedAttributes = this.suppressedAttributes;\n};\n\n/**\n * Helper function used to prevent Walker objects from reporting attribute\n * events as possible. In RelaxNG it is normal to mix attributes and elements in\n * patterns. However, XML validation segregates attributes and elements. Once a\n * start tag has been processed, attributes are not possible until a new start\n * tag begins. For instance, if a Walker is processing ``<foo a=\"1\">``, as\n * soon as the greater than symbol is encountered, attribute events are no\n * longer possible. This function informs the Walker of this fact.\n *\n * @private\n */\nWalker.prototype._suppressAttributes = function _suppressAttributes() {\n  throw new Error(\"must be implemented by derived classes\");\n};\n\n/**\n * @classdesc Mixin designed to be used for {@link module:patterns.Walker\n * Walker} objects that can only have one subwalker.\n *\n * @mixin\n * @class\n * @static\n * @private\n */\nfunction SingleSubwalker() {\n  throw new Error(\"not meant to be called\");\n}\n\nSingleSubwalker.prototype._possible = function _possible(_ev) {\n  return this.subwalker.possible();\n};\n\nSingleSubwalker.prototype.fireEvent = function fireEvent(ev) {\n  return this.subwalker.fireEvent(ev);\n};\n\nSingleSubwalker.prototype._suppressAttributes =\n  function _suppressAttributes() {\n    if (!this.suppressedAttributes) {\n      this.suppressedAttributes = true;\n      this.subwalker._suppressAttributes();\n    }\n  };\n\nSingleSubwalker.prototype.canEnd = function canEnd(attribute) {\n  return this.subwalker.canEnd(attribute);\n};\n\nSingleSubwalker.prototype.end = function end(attribute) {\n  return this.subwalker.end(attribute);\n};\n\n/**\n * @classdesc Mixin designed to be used for {@link module:patterns.Walker\n * Walker} objects that cannot have any subwalkers.\n *\n * @mixin\n * @class\n * @static\n * @private\n */\nfunction NoSubwalker() {\n  throw new Error(\"not meant to be called\");\n}\n\nNoSubwalker.prototype._suppressAttributes =\n  function _suppressAttributes() {\n    this.suppressedAttributes = true;\n  };\n\nNoSubwalker.prototype.canEnd = function canEnd(_attribute) {\n  return true;\n};\n\nNoSubwalker.prototype.end = function end(_attribute) {\n  return false;\n};\n\n/**\n * @classdesc Pattern for ``<empty/>``.\n *\n * @class\n * @static\n * @private\n * @extends module:patterns.Pattern\n */\nvar Empty = makeSingletonConstructor(Pattern);\n\ninherit(Empty, Pattern);\n\n// No need for _copyInto\n\naddWalker(Empty, EmptyWalker);\n\n/**\n * @classdesc Walker for {@link module:patterns.Empty Empty}.\n *\n * @extends module:patterns.Walker\n * @mixes module:patterns.NoSubwalker\n * @class\n * @static\n * @private\n *\n * @param {module:patterns.Empty} el The pattern for which this walker was\n * created.\n *\n * @param {module:name_resolver.NameResolver} resolver Ignored by this walker.\n */\nfunction EmptyWalker(_el) {\n  Walker.call(this);\n  this.possibleCached = new EventSet();\n}\ninherit(EmptyWalker, Walker);\nimplement(EmptyWalker, NoSubwalker);\n\nEmptyWalker.prototype.possible = function possible() {\n  // Save some time by avoiding calling _possible\n  return new EventSet();\n};\n\nEmptyWalker.prototype._possible = function _possible() {\n  return this.possibleCached;\n};\n\nEmptyWalker.prototype.fireEvent = function fireEvent(ev) {\n  if ((ev === emptyEvent) ||\n      ((ev.params[0] === \"text\") && (ev.params[1].trim() === \"\"))) {\n    return false;\n  }\n\n  return undefined;\n};\n\nvar Param = makeSingletonConstructor(Pattern);\ninherit(Param, Pattern);\naddWalker(Param, TextWalker); // Cheat until we have a real Data library.\n\n/**\n * @classdesc List pattern.\n * @extends module:patterns.PatternOnePattern\n * @private\n * @class\n * @static\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n *\n * @param {module:patterns.Pattern} pat The single child pattern.\n */\nfunction List(xmlPath, pat) {\n  PatternOnePattern.call(this, xmlPath);\n  this.pat = pat;\n}\ninherit(List, PatternOnePattern);\naddWalker(List, ListWalker);\n\n/**\n * @classdesc Walker for {@link module:patterns.List List}.\n *\n * @extends module:patterns.Walker\n * @mixes module:patterns.SingleSubwalker\n * @private\n * @class\n * @static\n *\n * @param {module:patterns.List} el The pattern for which this walker was\n * created.\n *\n * @param {module:name_resolver.NameResolver} resolver The name resolver that\n * can be used to convert namespace prefixes to namespaces.\n */\nfunction ListWalker(el, resolver) {\n  Walker.call(this);\n  this.el = el;\n  this.nameResolver = resolver;\n  this.subwalker = (el !== undefined) ? el.pat.newWalker(this.nameResolver)\n    : undefined;\n  this.seenTokens = false;\n  this.matched = false;\n}\n\ninherit(ListWalker, Walker);\nimplement(ListWalker, SingleSubwalker);\n\nListWalker.prototype._copyInto = function _copyInto(obj, memo) {\n  Walker.prototype._copyInto.call(this, obj, memo);\n  obj.el = this.el;\n  obj.nameResolver = this._cloneIfNeeded(this.nameResolver, memo);\n  obj.subwalker = this.subwalker._clone(memo);\n  obj.seenTokens = this.seenTokens;\n  obj.matched = this.matched;\n};\n\nListWalker.prototype.fireEvent = function fireEvent(ev) {\n  // Only these two types can match.\n  if (ev.params[0] !== \"text\") {\n    return undefined;\n  }\n\n  var trimmed = ev.params[1].trim();\n\n  // The list walker cannot send empty strings to its children because it\n  // validates a list of **tokens**.\n  if (trimmed === \"\") {\n    return false;\n  }\n\n  this.seenTokens = true;\n\n  var tokens = trimmed.split(/\\s+/);\n\n  for (var i = 0; i < tokens.length; ++i) {\n    var ret = this.subwalker.fireEvent(new Event(ev.params[0], tokens[i]));\n    if (ret !== false) {\n      return ret;\n    }\n  }\n\n  this.matched = true;\n  return false;\n};\n\nListWalker.prototype._suppressAttributes = function _suppressAttributes() {\n  // Lists cannot contain attributes.\n};\n\nListWalker.prototype.canEnd = function canEnd(attribute) {\n  if (!this.seenTokens) {\n    return (this.subwalker.fireEvent(emptyEvent) === false);\n  }\n  return this.subwalker.canEnd(attribute);\n};\n\nListWalker.prototype.end = function end(attribute) {\n  var ret = this.subwalker.end(attribute);\n  if (ret !== false) {\n    return ret;\n  }\n\n  if (this.canEnd(attribute)) {\n    return false;\n  }\n\n  return [new ValidationError(\"unfulfilled list\")];\n};\n\n/**\n * @classdesc Value pattern.\n * @extends module:patterns.Pattern\n * @private\n * @class\n * @static\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n *\n * @param {string} value The value expected in the document.\n *\n * @param {string|undefined} type The type of value. ``undefined`` means\n * ``\"token\"``.\n *\n * @param {string|undefined} datatypeLibrary The URI of the datatype library to\n * use. ``undefined`` means use the builtin library.\n *\n * @param {string|undefined} ns The namespace in which to interpret the value.\n */\nfunction Value(xmlPath, value, type, datatypeLibrary, ns) {\n  Pattern.call(this, xmlPath);\n  this.type = type || \"token\";\n  this.datatypeLibrary = datatypeLibrary || \"\";\n  this.ns = ns || \"\";\n  this.datatype = registry.get(this.datatypeLibrary).types[this.type];\n  if (!this.datatype) {\n    throw new Error(\"unkown type: \" + type);\n  }\n  this.rawValue = value;\n  this._value = undefined;\n}\n\ninherit(Value, Pattern);\naddWalker(Value, ValueWalker);\n\nValue.prototype._copyInto = function _copyInto(obj, memo) {\n  Pattern.prototype._copyInto.call(this, obj, memo);\n  obj.value = this.value;\n  obj.rawValue = this.rawValue;\n  obj.type = this.type;\n  obj.datatypeLibrary = this.datatypeLibrary;\n  obj.ns = this.ns;\n  obj.datatype = this.datatype; // Immutable.\n  obj._value = this._value;\n};\n\nObject.defineProperty(Value.prototype, \"value\", {\n  get: function get() {\n    var ret = this._value;\n    if (ret) {\n      return ret;\n    }\n\n    // We construct a pseudo-context representing the context in the schema\n    // file.\n    var context;\n    if (this.datatype.needsContext) {\n      var nr = new nameResolver.NameResolver();\n      nr.definePrefix(\"\", this.ns);\n      context = { resolver: nr };\n    }\n    ret = this._value = this.datatype.parseValue(this.rawValue, context);\n\n    return ret;\n  },\n});\n\n/**\n * @classdesc Walker for {@link module:patterns.Value Value}.\n *\n * @extends module:patterns.Walker\n * @private\n * @class\n * @static\n *\n * @param {module:patterns.Value} el The pattern for which this walker was\n * created.\n *\n * @param {module:name_resolver.NameResolver} resolver The name resolver that\n * can be used to convert namespace prefixes to namespaces.\n */\nfunction ValueWalker(el, resolver) {\n  Walker.call(this);\n  this.el = el;\n  this.nameResolver = resolver;\n  this.matched = false;\n  this.possibleCached =\n    el ? new EventSet(new Event(\"text\", el.rawValue)) : undefined;\n  this.context = (el && el.datatype.needsContext) ?\n    { resolver: this.nameResolver } : undefined;\n}\ninherit(ValueWalker, Walker);\n\nValueWalker.prototype._copyInto = function _copyInto(obj, memo) {\n  Walker.prototype._copyInto.call(this, obj, memo);\n  obj.el = this.el;\n  obj.nameResolver = this._cloneIfNeeded(this.nameResolver, memo);\n  obj.context = this.context ? { resolver: obj.nameResolver } : undefined;\n  obj.matched = this.matched;\n  // possibleCached taken care of by Walker\n};\n\nValueWalker.prototype._possible = function _possible() {\n  return this.possibleCached;\n};\n\nValueWalker.prototype.fireEvent = function fireEvent(ev) {\n  if (this.matched) {\n    return undefined;\n  }\n\n  if (ev.params[0] !== \"text\") {\n    return undefined;\n  }\n\n  if (!this.el.datatype.equal(ev.params[1], this.el.value, this.context)) {\n    return undefined;\n  }\n\n  this.matched = true;\n  this.possibleCached = new EventSet();\n  return false;\n};\n\nValueWalker.prototype.canEnd = function canEnd(_attribute) {\n  return this.matched || this.el.rawValue === \"\";\n};\n\nValueWalker.prototype.end = function end(attribute) {\n  if (this.canEnd(attribute)) {\n    return false;\n  }\n\n  return [new ValidationError(\"value required: \" + this.el.rawValue)];\n};\n\nValueWalker.prototype._suppressAttributes =\n  function _suppressAttributes() {\n    // No child attributes.\n  };\n\n/**\n * @classdesc Data pattern.\n * @extends module:patterns.Pattern\n * @private\n * @class\n * @static\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n *\n * @param {string|undefined} type The type of value. ``undefined`` means\n * ``\"token\"``.\n *\n * @param {string|undefined} datatypeLibrary The URI of the datatype library to\n * use. ``undefined`` means use the builtin library.\n *\n * @param {Array.<{name: string, value: string}>} params The parameters from the\n * RNG file.\n *\n * @param {module:patterns.Pattern} except The exception pattern.\n */\nfunction Data(xmlPath, type, datatypeLibrary, params, except) {\n  Pattern.call(this, xmlPath);\n  this.type = type || \"token\";\n  this.datatypeLibrary = datatypeLibrary || \"\";\n  this.except = except;\n  this.datatype = registry.get(this.datatypeLibrary).types[this.type];\n  if (!this.datatype) {\n    throw new Error(\"unkown type: \" + type);\n  }\n  this.rngParams = params || [];\n  this._params = undefined;\n}\n\ninherit(Data, Pattern);\naddWalker(Data, DataWalker);\n\nData.prototype._copyInto = function _copyInto(obj, memo) {\n  Pattern.prototype._copyInto.call(this, obj, memo);\n  obj.type = this.type;\n  obj.datatypeLibrary = this.datatypeLibrary;\n  obj.except = this.except && this.except._clone(memo);\n  obj.datatype = this.datatype; // Immutable\n  obj.rngParams = this.rngParams; // Immutable\n  obj._params = this._params; // Immutable\n};\n\nObject.defineProperty(Data.prototype, \"params\", {\n  get: function get() {\n    var ret = this._params;\n    if (ret) {\n      return ret;\n    }\n\n    ret = this._params = this.datatype.parseParams(this.xmlPath, this.rngParams);\n\n    return ret;\n  },\n});\n\n/**\n * @classdesc Walker for {@link module:patterns.Data Data}.\n *\n * @extends module:patterns.Walker\n * @private\n * @class\n * @static\n *\n * @param {module:patterns.Data} el The pattern for which this walker was\n * created.\n *\n * @param {module:name_resolver.NameResolver} resolver The name resolver that\n * can be used to convert namespace prefixes to namespaces.\n */\nfunction DataWalker(el, resolver) {\n  Walker.call(this);\n  this.el = el;\n  this.nameResolver = resolver;\n\n  // An undefined el can happen when cloning.\n  if (this.el) {\n    // We completely ignore the possible exception when producing the\n    // possibilities. There is no clean way to specify such an exception.\n    this.possibleCached =\n      new EventSet(new Event(\"text\", this.el.datatype.regexp));\n    this.context = (this.el.datatype.needsContext) ?\n      { resolver: this.nameResolver } : undefined;\n  }\n}\ninherit(DataWalker, Walker);\n\nDataWalker.prototype._copyInto = function _copyInto(obj, memo) {\n  Walker.prototype._copyInto.call(this, obj, memo);\n  obj.el = this.el;\n  obj.nameResolver = this._cloneIfNeeded(this.nameResolver, memo);\n  obj.context = this.context ? { resolver: obj.nameResolver } : undefined;\n  obj.matched = this.matched;\n  // possibleCached taken care of by Walker\n};\n\nDataWalker.prototype._possible = function _possible() {\n  return this.possibleCached;\n};\n\nDataWalker.prototype.fireEvent = function fireEvent(ev) {\n  if (this.matched) {\n    return undefined;\n  }\n\n  if (ev.params[0] !== \"text\") {\n    return undefined;\n  }\n\n  if (this.el.datatype.disallows(ev.params[1], this.el.params, this.context)) {\n    return undefined;\n  }\n\n  if (this.el.except) {\n    var walker = this.el.except.newWalker(this.nameResolver);\n    var exceptRet = walker.fireEvent(ev);\n\n    // False, so the except does match the text, and so this pattern does\n    // not match it.\n    if (exceptRet === false) {\n      return undefined;\n    }\n\n    // Otherwise, it is undefined, in which case it means the except does\n    // not match the text, and we are fine. Or it would be possible for the\n    // walker to have returned an error but there is nothing we can do with\n    // such errors here.\n  }\n\n  this.matched = true;\n  this.possibleCached = new EventSet();\n  return false;\n};\n\nDataWalker.prototype.canEnd = function canEnd(_attribute) {\n  // If we matched, we are done. salve does not allow text that appears in\n  // an XML element to be passed as two \"text\" events. So there is nothing\n  // to come that could falsify the match. (If a client *does* pass\n  // multiple text events one after the other, it is using salve\n  // incorrectly.)\n  if (this.matched) {\n    return true;\n  }\n\n  // We have not matched anything. Therefore we have to check whether we\n  // allow the empty string.\n  if (this.el.except) {\n    var walker = this.el.except.newWalker(this.nameResolver);\n    if (walker.canEnd()) { // Matches the empty string\n      return false;\n    }\n  }\n\n  return !this.el.datatype.disallows(\"\", this.el.params, this.context);\n};\n\nDataWalker.prototype.end = function end(attribute) {\n  if (this.canEnd(attribute)) {\n    return false;\n  }\n\n  return [new ValidationError(\"value required\")];\n};\n\nDataWalker.prototype._suppressAttributes = function _suppressAttributes() {\n  // No child attributes.\n};\n\n/**\n * @classdesc Pattern for ``<notAllowed/>``.\n * @extends module:patterns.Pattern\n *\n * @class\n * @static\n * @private\n */\nvar NotAllowed = makeSingletonConstructor(Pattern);\ninherit(NotAllowed, Pattern);\naddWalker(NotAllowed, NotAllowedWalker);\n\n/**\n * @classdesc Walker for {@link module:patterns.NotAllowed NotAllowed}.\n *\n * @extends module:patterns.Walker\n * @private\n * @class\n * @static\n *\n * @param {module:patterns.NotAllowed} el The pattern for which this walker was\n * created.\n *\n * @param {module:name_resolver.NameResolver} nameResolver Ignored by this\n * class.\n */\nfunction NotAllowedWalker(el) {\n  Walker.call(this);\n  this.el = el;\n  this.possibleCached = new EventSet();\n}\ninherit(NotAllowedWalker, Walker);\n\nNotAllowedWalker.prototype._copyInto = function _copyInto(obj, memo) {\n  Walker.prototype._copyInto.call(this, obj, memo);\n  obj.el = this.el;\n  // possibleCached taken care of by Walker\n};\n\nNotAllowedWalker.prototype.possible = function possible() {\n  // Save some time by avoiding calling _possible\n  return new EventSet();\n};\n\nNotAllowedWalker.prototype._possible = function _possible() {\n  return this.possibleCached;\n};\n\nNotAllowedWalker.prototype.fireEvent = function fireEvent(_ev) {\n  return undefined; // we never match!\n};\n\n/**\n * @classdesc Pattern for ``<text/>``.\n * @extends module:patterns.Pattern\n *\n * @class\n * @static\n * @private\n */\nvar Text = makeSingletonConstructor(Pattern);\ninherit(Text, Pattern);\n\naddWalker(Text, TextWalker);\n\n/**\n *\n * @classdesc Walker for {@link module:patterns.Text Text}\n * @extends module:patterns.Walker\n * @mixes module:patterns.NoSubwalker\n * @private\n * @class\n * @static\n *\n * @param {module:patterns.Text} el The pattern for which this walker was\n * constructed.\n */\nfunction TextWalker(_el) {\n  Walker.call(this);\n  this.possibleCached = new EventSet(TextWalker._textEvent);\n}\ninherit(TextWalker, Walker);\nimplement(TextWalker, NoSubwalker);\n\n// Events are constant so create the one we need just once.\nTextWalker._textEvent = new Event(\"text\", /^.*$/);\n\nTextWalker.prototype._possible = function _possible() {\n  return this.possibleCached;\n};\n\nTextWalker.prototype.fireEvent = function fireEvent(ev) {\n  return (ev.params[0] === \"text\") ? false : undefined;\n};\n\n/**\n * @classdesc A pattern for RNG references.\n * @extends module:patterns.Pattern\n * @private\n * @class\n * @static\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n *\n * @param {string} name The reference name.\n */\nfunction Ref(xmlPath, name) {\n  Pattern.call(this, xmlPath);\n  this.name = name;\n  this.resolvesTo = undefined;\n}\ninherit(Ref, Pattern);\n\nRef.prototype._prepare = function _prepare() {\n  // We do not cross ref/define boundaries to avoid infinite loops.\n  return;\n};\n\n// addWalker(Ref, RefWalker); No, see below\nRef.prototype._copyInto = function _copyInto(obj, memo) {\n  Pattern.prototype._copyInto.call(this, obj, memo);\n  obj.name = this.name;\n  obj.resolvesTo = this.resolvesTo;\n};\n\nRef.prototype._resolve = function _resolve(definitions) {\n  this.resolvesTo = definitions[this.name];\n  if (this.resolvesTo === undefined) {\n    return [this];\n  }\n  return undefined;\n};\n\n// This completely skips the creation of RefWalker and DefineWalker. This\n// returns the walker for whatever it is that the Define element this\n// refers to ultimately contains.\nRef.prototype.newWalker = function newWalker(resolver) {\n  return this.resolvesTo.pat.newWalker(resolver);\n};\n\n/**\n * @classdesc A pattern for ``<oneOrMore>``.\n * @extends module:patterns.Pattern\n *\n * @private\n * @class\n * @static\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n *\n * @param {Array.<module:patterns.Pattern>} pats The pattern contained by\n * this one.\n *\n * @throws {Error} If ``pats`` is not of length 1.\n */\nfunction OneOrMore(xmlPath, pats) {\n  PatternOnePattern.call(this, xmlPath);\n  // Undefined happens when cloning.\n  if (pats !== undefined) {\n    if (pats.length !== 1) {\n      throw new Error(\"OneOrMore needs exactly one pattern.\");\n    }\n    this.pat = pats[0];\n  }\n}\n\ninherit(OneOrMore, PatternOnePattern);\naddWalker(OneOrMore, OneOrMoreWalker);\n\n/**\n *\n * @classdesc Walker for {@link module:patterns.OneOrMore OneOrMore}\n * @extends module:patterns.Walker\n *\n * @private\n * @class\n * @static\n *\n * @param {module:patterns.OneOrMore} el The pattern for which this walker was\n * created.\n *\n * @param {module:name_resolver.NameResolver} resolver The name resolver that\n * can be used to convert namespace prefixes to namespaces.\n */\nfunction OneOrMoreWalker(el, resolver) {\n  Walker.call(this);\n  this.seenOnce = false;\n  this.el = el;\n  this.nameResolver = resolver;\n  this.currentIteration = undefined;\n  this.nextIteration = undefined;\n}\ninherit(OneOrMoreWalker, Walker);\n\nOneOrMoreWalker.prototype._copyInto = function _copyInto(obj, memo) {\n  Walker.prototype._copyInto.call(this, obj, memo);\n  obj.seenOnce = this.seenOnce;\n  obj.el = this.el;\n  obj.nameResolver = this._cloneIfNeeded(this.nameResolver, memo);\n  obj.currentIteration = (this.currentIteration !== undefined) ?\n    this.currentIteration._clone(memo) : undefined;\n  obj.nextIteration = (this.nextIteration !== undefined) ?\n    this.nextIteration._clone(memo) : undefined;\n};\n\nOneOrMoreWalker.prototype._instantiateCurrentIteration =\n  function _instantiateCurrentIteration() {\n    if (this.currentIteration === undefined) {\n      this.currentIteration = this.el.pat.newWalker(this.nameResolver);\n    }\n  };\n\nOneOrMoreWalker.prototype._instantiateNextIteration =\n  function _instantiateNextIteration() {\n    if (this.nextIteration === undefined) {\n      this.nextIteration = this.el.pat.newWalker(this.nameResolver);\n\n      // Whereas _suppressAttributes calls _instantiateCurrentIteration() so\n      // that currentIteration is always existing and its _suppressAttributes()\n      // method is called before _suppressAttributes() returns, the same is not\n      // true of nextIteration. So if we create it **after**\n      // _suppressAttributes() was called we need to call _suppressAttributes()\n      // on it.\n      if (this.suppressedAttributes) {\n        this.nextIteration._suppressAttributes();\n      }\n    }\n  };\n\nOneOrMoreWalker.prototype._possible = function _possible() {\n  if (this.possibleCached !== undefined) {\n    return this.possibleCached;\n  }\n\n  this._instantiateCurrentIteration();\n  this.possibleCached = this.currentIteration._possible();\n\n  if (this.currentIteration.canEnd()) {\n    this.possibleCached = new EventSet(this.possibleCached);\n    this._instantiateNextIteration();\n\n    var nextPossible = this.nextIteration._possible(this.nameResolver);\n\n    this.possibleCached.union(nextPossible);\n  }\n\n  return this.possibleCached;\n};\n\nOneOrMoreWalker.prototype.fireEvent = function fireEvent(ev) {\n  this.possibleCached = undefined;\n\n  this._instantiateCurrentIteration();\n\n  var ret = this.currentIteration.fireEvent(ev);\n  if (ret === false) {\n    this.seenOnce = true;\n  }\n\n  if (ret !== undefined) {\n    return ret;\n  }\n\n  if (this.seenOnce && this.currentIteration.canEnd()) {\n    ret = this.currentIteration.end();\n    if (ret) {\n      throw new Error(\"internal error; canEnd() returns true but end() fails\");\n    }\n\n    this._instantiateNextIteration();\n    var nextRet = this.nextIteration.fireEvent(ev);\n    if (nextRet === false) {\n      this.currentIteration = this.nextIteration;\n      this.nextIteration = undefined;\n    }\n    return nextRet;\n  }\n  return undefined;\n};\n\nOneOrMoreWalker.prototype._suppressAttributes =\n  function _suppressAttributes() {\n    // A oneOrMore element can happen if we have the pattern ``(attribute * {\n    // text })+`` for instance. Once converted to the simplified RNG, it\n    // becomes:\n    //\n    // ``<oneOrMore><attribute><anyName/><rng:text/></attribute></oneOrMore>``\n    //\n    // An attribute in ``oneOrMore`` cannot happen when ``anyName`` is not used\n    // because an attribute of any given name cannot be repeated.\n    //\n    this._instantiateCurrentIteration();\n    if (!this.suppressedAttributes) {\n      this.suppressedAttributes = true;\n      this.possibleCached = undefined; // No longer valid.\n      this.currentIteration._suppressAttributes();\n\n      if (this.nextIteration) {\n        this.nextIteration._suppressAttributes();\n      }\n    }\n  };\n\nOneOrMoreWalker.prototype.canEnd = function canEnd(attribute) {\n  if (attribute) {\n    if (!this.el.pat._hasAttrs()) {\n      return true;\n    }\n\n    this._instantiateCurrentIteration();\n\n    return this.currentIteration.canEnd(true);\n  }\n  return this.seenOnce && this.currentIteration.canEnd();\n};\n\nOneOrMoreWalker.prototype.end = function end(attribute) {\n  if (this.canEnd(attribute)) {\n    return false;\n  }\n\n  // Undefined currentIteration can happen in rare cases.\n  this._instantiateCurrentIteration();\n\n  // Release nextIteration, which we won't need anymore.\n  this.nextIteration = undefined;\n  return this.currentIteration.end(attribute);\n};\n\n/**\n * @classdesc A pattern for ``<choice>``.\n * @extends module:patterns.Pattern\n * @private\n * @class\n * @static\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n *\n * @param {Array.<module:patterns.Pattern>} pats The patterns contained by this\n * one.\n *\n * @throws {Error} If ``pats`` is not of length 2.\n */\nfunction Choice(xmlPath, pats) {\n  PatternTwoPatterns.call(this, xmlPath);\n  // Undefined happens when cloning.\n  if (pats !== undefined) {\n    if (pats.length !== 2) {\n      throw new Error(\"ChoiceWalker does not work with \" +\n                      \"Choices that have not exactly 2 elements\");\n    }\n    this.patA = pats[0];\n    this.patB = pats[1];\n  }\n}\n\ninherit(Choice, PatternTwoPatterns);\naddWalker(Choice, ChoiceWalker);\n\n/**\n * @classdesc Walker for {@link module:patterns.Choice Choice}\n * @extends module:patterns.Walker\n * @private\n * @class\n * @static\n *\n * @param {module:patterns.Choice} el The pattern for which this walker was\n * created.\n *\n * @param {module:name_resolver.NameResolver} resolver The name resolver that\n * can be used to convert namespace prefixes to namespaces.\n */\nfunction ChoiceWalker(el, resolver) {\n  Walker.call(this);\n  this.el = el;\n  this.nameResolver = resolver;\n  this.chosen = false;\n  this.walkerA = this.walkerB = undefined;\n  this.instantiatedWalkers = false;\n}\n\ninherit(ChoiceWalker, Walker);\n\nChoiceWalker.prototype._copyInto = function _copyInto(obj, memo) {\n  Walker.prototype._copyInto.call(this, obj, memo);\n  obj.el = this.el;\n  obj.nameResolver = this._cloneIfNeeded(this.nameResolver, memo);\n  obj.chosen = this.chosen;\n  obj.walkerA = (this.walkerA !== undefined) ?\n    this.walkerA._clone(memo) : undefined;\n  obj.walkerB = (this.walkerB !== undefined) ?\n    this.walkerB._clone(memo) : undefined;\n  obj.instantiatedWalkers = this.instantiatedWalkers;\n};\n\n/**\n * Creates walkers for the patterns contained by this one. Calling this method\n * multiple times is safe as the walkers are created once and only once.\n *\n * @private\n */\nChoiceWalker.prototype._instantiateWalkers =\n  function _instantiateWalkers() {\n    if (!this.instantiatedWalkers) {\n      this.instantiatedWalkers = true;\n\n      this.walkerA = this.el.patA.newWalker(this.nameResolver);\n      this.walkerB = this.el.patB.newWalker(this.nameResolver);\n    }\n  };\n\nChoiceWalker.prototype._possible = function _possible() {\n  this._instantiateWalkers();\n  if (this.possibleCached !== undefined) {\n    return this.possibleCached;\n  }\n\n  this.possibleCached = (this.walkerA !== undefined) ?\n    this.walkerA._possible() : undefined;\n\n  if (this.walkerB !== undefined) {\n    this.possibleCached = new EventSet(this.possibleCached);\n    var possibleB = this.walkerB._possible();\n    this.possibleCached.union(possibleB);\n  }\n  else if (this.possibleCached === undefined) {\n    this.possibleCached = new EventSet();\n  }\n\n  return this.possibleCached;\n};\n\nChoiceWalker.prototype.fireEvent = function fireEvent(ev) {\n  this._instantiateWalkers();\n\n  this.possibleCached = undefined;\n  // We purposely do not normalize this.walker_{a,b} to a boolean value because\n  // we do want `undefined` to be the result if the walkers are undefined.\n  var retA = this.walkerA && this.walkerA.fireEvent(ev);\n  var retB = this.walkerB && this.walkerB.fireEvent(ev);\n\n  if (retA !== undefined) {\n    this.chosen = true;\n    if (retB === undefined) {\n      this.walkerB = undefined;\n      return retA;\n    }\n    return retA;\n  }\n\n  if (retB !== undefined) {\n    this.chosen = true;\n    // We do not need to test if retA is undefined because we would not get here\n    // if it were not.\n    this.walkerA = undefined;\n    return retB;\n  }\n\n  return undefined;\n};\n\nChoiceWalker.prototype._suppressAttributes =\n  function _suppressAttributes() {\n    this._instantiateWalkers();\n    if (!this.suppressedAttributes) {\n      this.possibleCached = undefined; // no longer valid\n      this.suppressedAttributes = true;\n\n      if (this.walkerA) {\n        this.walkerA._suppressAttributes();\n      }\n      if (this.walkerB) {\n        this.walkerB._suppressAttributes();\n      }\n    }\n  };\n\nChoiceWalker.prototype.canEnd = function canEnd(attribute) {\n  this._instantiateWalkers();\n\n  var retA = false;\n  var retB = false;\n  if (attribute) {\n    retA = !this.el.patA._hasAttrs();\n    retB = !this.el.patB._hasAttrs();\n  }\n\n  // The `!!` are to normalize to boolean values.\n  retA = retA || (!!this.walkerA && this.walkerA.canEnd(attribute));\n  retB = retB || (!!this.walkerB && this.walkerB.canEnd(attribute));\n\n  // ChoiceWalker can end if any walker can end. The assignments earlier ensure\n  // that the logic works.\n  return retA || retB;\n};\n\nChoiceWalker.prototype.end = function end(attribute) {\n  this._instantiateWalkers();\n\n  if (this.canEnd(attribute)) {\n    return false;\n  }\n\n  // The `!!` are to normalize to boolean values.\n  var retA = !!this.walkerA && this.walkerA.end(attribute);\n  var retB = !!this.walkerB && this.walkerB.end(attribute);\n\n  if (!retA && !retB) {\n    return false;\n  }\n\n  if (retA && !retB) {\n    return retA;\n  }\n\n  if (!retA && retB) {\n    return retB;\n  }\n\n  // If we are here both walkers exist and returned an error.\n  var namesA = [];\n  var namesB = [];\n  var notAChoiceError = false;\n  this.walkerA.possible().forEach(function each(ev) {\n    if (ev.params[0] === \"enterStartTag\") {\n      namesA.push(ev.params[1]);\n    }\n    else {\n      notAChoiceError = true;\n    }\n  });\n\n  if (!notAChoiceError) {\n    this.walkerB.possible().forEach(function each(ev) {\n      if (ev.params[0] === \"enterStartTag\") {\n        namesB.push(ev.params[1]);\n      }\n      else {\n        notAChoiceError = true;\n      }\n    });\n\n    if (!notAChoiceError) {\n      return [new ChoiceError(namesA, namesB)];\n    }\n  }\n\n  // If we get here, we were not able to raise a ChoiceError, possibly\n  // because there was not enough information to decide among the two\n  // walkers. Return whatever error comes first.\n  return retA || retB;\n};\n\n/**\n * @classdesc A pattern for ``<group>``.\n * @extends module:patterns.PatternTwoPatterns\n *\n * @private\n * @class\n * @static\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n *\n * @param {Array.<module:patterns.Pattern>} pats The patterns contained by this\n * one.\n *\n * @throws {Error} If ``pats`` is not of length 2.\n */\nfunction Group(xmlPath, pats) {\n  PatternTwoPatterns.call(this, xmlPath);\n  // Undefined happens when cloning.\n  if (pats !== undefined) {\n    if (pats.length !== 2) {\n      throw new Error(\"GroupWalkers walk only groups of two elements!\");\n    }\n    this.patA = pats[0];\n    this.patB = pats[1];\n  }\n}\n\ninherit(Group, PatternTwoPatterns);\naddWalker(Group, GroupWalker);\n\n/**\n * @classdesc Walker for {@link module:patterns.Group Group}\n * @extends module:patterns.Walker\n * @private\n * @class\n * @static\n *\n * @param {module:patterns.Group} el The pattern for which this walker was\n * created.\n *\n * @param {module:name_resolver.NameResolver} resolver The name resolver that\n * can be used to convert namespace prefixes to namespaces.\n */\nfunction GroupWalker(el, resolver) {\n  Walker.call(this);\n  this.el = el;\n  this.nameResolver = resolver;\n  this.hitA = false;\n  this.endedA = false;\n  this.hitB = false;\n  this.walkerA = this.walkerB = undefined;\n}\ninherit(GroupWalker, Walker);\n\nGroupWalker.prototype._copyInto = function _copyInto(obj, memo) {\n  Walker.prototype._copyInto.call(this, obj, memo);\n  obj.el = this.el;\n  obj.nameResolver = this._cloneIfNeeded(this.nameResolver, memo);\n  obj.hitA = this.hitA;\n  obj.endedA = this.endedA;\n  obj.hitB = this.hitB;\n  obj.walkerA = (this.walkerA !== undefined) ?\n    this.walkerA._clone(memo) : undefined;\n  obj.walkerB = (this.walkerB !== undefined) ?\n    this.walkerB._clone(memo) : undefined;\n};\n\n/**\n * Creates walkers for the patterns contained by this one. Calling this\n * method multiple times is safe as the walkers are created once and only\n * once.\n *\n * @private\n */\nGroupWalker.prototype._instantiateWalkers =\n  function _instantiateWalkers() {\n    if (this.walkerA === undefined) {\n      this.walkerA = this.el.patA.newWalker(this.nameResolver);\n      this.walkerB = this.el.patB.newWalker(this.nameResolver);\n    }\n  };\n\nGroupWalker.prototype._possible = function _possible() {\n  this._instantiateWalkers();\n  if (this.possibleCached !== undefined) {\n    return this.possibleCached;\n  }\n\n  this.possibleCached = (!this.endedA) ? this.walkerA._possible() : undefined;\n\n  if (this.suppressedAttributes) {\n    // If we are in the midst of processing walker a and it cannot end yet,\n    // then we do not want to see anything from b.\n    if (this.endedA || this.walkerA.canEnd()) {\n      this.possibleCached = new EventSet(this.possibleCached);\n      this.possibleCached.union(this.walkerB._possible());\n    }\n  }\n  else {\n    var possibleB = this.walkerB._possible();\n\n    // Attribute events are still possible event if the first walker is not\n    // done with.\n    if ((!this.endedA || this.hitB) && !this.walkerA.canEnd()) {\n      // Narrow it down to attribute events...\n      possibleB = possibleB.filter(function filter(x) {\n        return x.isAttributeEvent();\n      });\n    }\n    this.possibleCached = new EventSet(this.possibleCached);\n    this.possibleCached.union(possibleB);\n  }\n\n  return this.possibleCached;\n};\n\nGroupWalker.prototype.fireEvent = function fireEvent(ev) {\n  this._instantiateWalkers();\n\n  this.possibleCached = undefined;\n  if (!this.endedA) {\n    var retA = this.walkerA.fireEvent(ev);\n    if (retA !== undefined) {\n      this.hitA = true;\n      return retA;\n    }\n\n    // We must return right away if walkerA cannot yet end. Only attribute\n    // events are allowed to move forward.\n    if (!ev.isAttributeEvent() && !this.walkerA.canEnd()) {\n      return undefined;\n    }\n  }\n\n  var retB = this.walkerB.fireEvent(ev);\n  if (retB !== undefined) {\n    this.hitB = true;\n  }\n\n  // Non-attribute event: if walker b matched the event then we must end\n  // walkerA, if we've not already done so.\n  if (!ev.isAttributeEvent() && retB !== undefined && !this.endedA) {\n    var endRet = this.walkerA.end();\n    this.endedA = true;\n\n    // Combine the possible errors.\n    if (!retB) {\n      // retB must be false, because retB === undefined has been\n      // eliminated above; toss it.\n      retB = endRet;\n    }\n    else if (endRet) {\n      retB = retB.concat(endRet);\n    }\n  }\n  return retB;\n};\n\nGroupWalker.prototype._suppressAttributes =\n  function _suppressAttributes() {\n    this._instantiateWalkers();\n    if (!this.suppressedAttributes) {\n      this.possibleCached = undefined; // no longer valid\n      this.suppressedAttributes = true;\n\n      this.walkerA._suppressAttributes();\n      this.walkerB._suppressAttributes();\n    }\n  };\n\nGroupWalker.prototype.canEnd = function canEnd(attribute) {\n  this._instantiateWalkers();\n  if (attribute) {\n    var aHas = this.el.patA._hasAttrs();\n    var bHas = this.el.patB._hasAttrs();\n    if (aHas && bHas) {\n      return this.walkerA.canEnd(attribute) && this.walkerB.canEnd(attribute);\n    }\n    else if (aHas) {\n      return this.walkerA.canEnd(true);\n    }\n    else if (bHas) {\n      return this.walkerB.canEnd(true);\n    }\n\n    return true;\n  }\n\n  return this.walkerA.canEnd(attribute) && this.walkerB.canEnd(attribute);\n};\n\nGroupWalker.prototype.end = function end(attribute) {\n  if (this.canEnd()) {\n    return false;\n  }\n\n  var ret;\n\n  if (!this.endedA) { // Don't end it more than once.\n    ret = this.walkerA.end(attribute);\n    if (ret) {\n      return ret;\n    }\n  }\n\n  ret = this.walkerB.end(attribute);\n  if (ret) {\n    return ret;\n  }\n\n  return false;\n};\n\n/**\n * @classdesc A pattern for ``<interleave>``.\n * @extends module:patterns.PatternTwoPatterns\n *\n * @private\n * @class\n * @static\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n *\n * @param {Array.<module:patterns.Pattern>} pats The patterns contained by this\n * one.\n *\n * @throws {Error} If ``pats`` is not of length 2.\n */\nfunction Interleave(xmlPath, pats) {\n  PatternTwoPatterns.call(this, xmlPath);\n  // Undefined happens when cloning.\n  if (pats !== undefined) {\n    if (pats.length !== 2) {\n      throw new Error(\"InterleaveWalkers walk only interleaves of \" +\n                      \"two elements!\");\n    }\n    this.patA = pats[0];\n    this.patB = pats[1];\n  }\n}\n\ninherit(Interleave, PatternTwoPatterns);\naddWalker(Interleave, InterleaveWalker);\n\n/**\n * @classdesc Walker for {@link module:patterns.Interleave Interleave}\n * @extends module:patterns.Walker\n * @private\n * @class\n * @static\n *\n * @param {module:patterns.Interleave} el The pattern for which this walker was\n * created.\n *\n * @param {module:name_resolver.NameResolver} resolver The name resolver that\n * can be used to convert namespace prefixes to namespaces.\n */\nfunction InterleaveWalker(el, resolver) {\n  Walker.call(this);\n  this.el = el;\n  this.nameResolver = resolver;\n\n  this.inA = false;\n  this.inB = false;\n  this.walkerA = this.walkerB = undefined;\n}\n\ninherit(InterleaveWalker, Walker);\n\nInterleaveWalker.prototype._copyInto = function _copyInto(obj, memo) {\n  Walker.prototype._copyInto.call(this, obj, memo);\n  obj.el = this.el;\n  obj.nameResolver = this._cloneIfNeeded(this.nameResolver, memo);\n  obj.inA = this.inA;\n  obj.inB = this.inB;\n  obj.walkerA = this.walkerA && this.walkerA._clone(memo);\n  obj.walkerB = this.walkerB && this.walkerB._clone(memo);\n};\n\n/**\n * Creates walkers for the patterns contained by this one. Calling this method\n * multiple times is safe as the walkers are created once and only once.\n *\n * @private\n */\nInterleaveWalker.prototype._instantiateWalkers =\n  function _instantiateWalkers() {\n    if (!this.walkerA) {\n      this.walkerA = this.el.patA.newWalker(this.nameResolver);\n    }\n    if (!this.walkerB) {\n      this.walkerB = this.el.patB.newWalker(this.nameResolver);\n    }\n  };\n\nInterleaveWalker.prototype._possible = function _possible() {\n  this._instantiateWalkers();\n  if (this.possibleCached !== undefined) {\n    return this.possibleCached;\n  }\n\n  if (this.inA && this.inB) {\n    // It due to the restrictions imposed by Relax NG, it should not be\n    // possible to be both inA and inB.\n    throw new Error(\"impossible state\");\n  }\n\n  if (this.inA && !this.walkerA.canEnd()) {\n    this.possibleCached = this.walkerA._possible();\n  }\n  else if (this.inB && !this.walkerB.canEnd()) {\n    this.possibleCached = this.walkerB._possible();\n  }\n\n  if (!this.possibleCached) {\n    this.possibleCached = this.walkerA.possible();\n    this.possibleCached.union(this.walkerB._possible());\n  }\n\n  return this.possibleCached;\n};\n\nInterleaveWalker.prototype.fireEvent = function fireEvent(ev) {\n  this._instantiateWalkers();\n\n  this.possibleCached = undefined;\n\n  if (this.inA && this.inB) {\n    // It due to the restrictions imposed by Relax NG, it should not be possible\n    // to be both inA and inB.\n    throw new Error(\"impossible state\");\n  }\n\n  var retA;\n  var retB;\n  if (!this.inA && !this.inB) {\n    retA = this.walkerA.fireEvent(ev);\n    if (retA === false) {\n      this.inA = true;\n      return false;\n    }\n\n    // The constraints on interleave do not allow for two child patterns of\n    // interleave to match. So if the first walker matched, the second\n    // cannot. So we don't have to fireEvent on the second walker if the first\n    // matched.\n    retB = this.walkerB.fireEvent(ev);\n    if (retB === false) {\n      this.inB = true;\n      return false;\n    }\n\n    if (retB === undefined) {\n      return retA;\n    }\n\n    if (retA === undefined) {\n      return retB;\n    }\n\n    return retA.concat(retB);\n  }\n  else if (this.inA) {\n    retA = this.walkerA.fireEvent(ev);\n    if (retA || retA === false) {\n      return retA;\n    }\n\n    // If we got here, retA === undefined\n    retB = this.walkerB.fireEvent(ev);\n\n    if (retB === false) {\n      this.inA = false;\n      this.inB = true;\n      return false;\n    }\n  }\n  else { // inB\n    retB = this.walkerB.fireEvent(ev);\n    if (retB || retB === false) {\n      return retB;\n    }\n\n    // If we got here, retB === undefined\n    retA = this.walkerA.fireEvent(ev);\n\n    if (retA === false) {\n      this.inA = true;\n      this.inB = false;\n      return false;\n    }\n  }\n\n  return undefined;\n};\n\nInterleaveWalker.prototype._suppressAttributes =\n  function _suppressAttributes() {\n    this._instantiateWalkers();\n    if (!this.suppressedAttributes) {\n      this.possibleCached = undefined; // no longer valid\n      this.suppressedAttributes = true;\n\n      this.walkerA._suppressAttributes();\n      this.walkerB._suppressAttributes();\n    }\n  };\n\nInterleaveWalker.prototype.canEnd = function canEnd(attribute) {\n  this._instantiateWalkers();\n  return this.walkerA.canEnd(attribute) && this.walkerB.canEnd(attribute);\n};\n\nInterleaveWalker.prototype.end = function end(attribute) {\n  this._instantiateWalkers();\n  var retA = this.walkerA.end(attribute);\n  var retB = this.walkerB.end(attribute);\n\n  if (retA && !retB) {\n    return retA;\n  }\n\n  if (retB && !retA) {\n    return retB;\n  }\n\n  if (!retA && !retB) {\n    return false;\n  }\n\n  return retA.concat(retB);\n};\n\n/**\n * @classdesc A pattern for attributes.\n * @extends module:patterns.PatternOnePattern\n *\n * @private\n * @class\n * @static\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n *\n * @param {string} name The qualified name of the attribute.\n *\n * @param {Array.<module:patterns.Pattern>} pats The pattern contained by this\n * one.\n *\n * @throws {Error} If ``pats`` is not of length 1.\n */\nfunction Attribute(xmlPath, name, pats) {\n  PatternOnePattern.call(this, xmlPath);\n  this.name = name;\n  if (pats !== undefined) {\n    if (pats.length !== 1) {\n      throw new Error(\"Attribute needs exactly one pattern.\");\n    }\n    this.pat = pats[0];\n  }\n}\n\ninherit(Attribute, PatternOnePattern);\naddWalker(Attribute, AttributeWalker);\nAttribute.prototype._copyInto = function _copyInto(obj, memo) {\n  Pattern.prototype._copyInto.call(this, obj, memo);\n  obj.name = this.name;\n  obj.pat = this.pat;\n};\n\nAttribute.prototype._prepare = function _prepare(namespaces) {\n  var nss = Object.create(null);\n  this.name._recordNamespaces(nss);\n\n  // A lack of namespace on an attribute should not be recorded.\n  delete nss[\"\"];\n\n  // Copy the resulting namespaces.\n  var keys = Object.keys(nss);\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    namespaces[key] = 1;\n  }\n};\n\nAttribute.prototype._hasAttrs = function _hasAttrs() {\n  return true;\n};\n\n/**\n * @classdesc Walker for {@link module:patterns.Attribute Attribute}\n * @extends module:patterns.Walker\n *\n * @private\n * @class\n * @static\n *\n * @param {module:patterns.Attribute} el The pattern for which this walker was\n * created.\n *\n * @param {module:name_resolver.NameResolver} resolver The name resolver that\n * can be used to convert namespace prefixes to namespaces.\n */\nfunction AttributeWalker(el, resolver) {\n  Walker.call(this);\n  this.el = el;\n  this.nameResolver = resolver;\n  this.seenName = false;\n  this.seenValue = false;\n  this.subwalker = undefined;\n\n  this.attrNameEvent = el && new Event(\"attributeName\", el.name);\n}\ninherit(AttributeWalker, Walker);\n\nAttributeWalker.prototype._copyInto = function _copyInto(obj, memo) {\n  Walker.prototype._copyInto.call(this, obj, memo);\n  obj.el = this.el;\n  obj.nameResolver = this._cloneIfNeeded(this.nameResolver, memo);\n  obj.seenName = this.seenName;\n  obj.seenValue = this.seenValue;\n  obj.subwalker = this.subwalker && this.subwalker._clone(memo);\n\n  // No need to clone; values are immutable.\n  obj.attrNameEvent = this.attrNameEvent;\n};\n\nAttributeWalker.prototype._possible = function _possible() {\n  // We've been suppressed!\n  if (this.suppressedAttributes) {\n    return new EventSet();\n  }\n\n  if (!this.seenName) {\n    return new EventSet(this.attrNameEvent);\n  }\n  else if (!this.seenValue) {\n    if (this.subwalker === undefined) {\n      this.subwalker = this.el.pat.newWalker(this.nameResolver);\n    }\n\n    var sub = this.subwalker._possible();\n    var ret = new EventSet();\n    // Convert text events to attributeValue events.\n    sub.forEach(function each(ev) {\n      if (ev.params[0] !== \"text\") {\n        throw new Error(\"unexpected event type: \" + ev.params[0]);\n      }\n      ret.add(new Event(\"attributeValue\", ev.params[1]));\n    });\n    return ret;\n  }\n\n  return new EventSet();\n};\n\n// _possible always return new sets.\nAttributeWalker.prototype.possible = AttributeWalker.prototype._possible;\n\nAttributeWalker.prototype.fireEvent = function fireEvent(ev) {\n  if (this.suppressedAttributes) {\n    return undefined;\n  }\n\n  if (this.seenName) {\n    if (!this.seenValue && ev.params[0] === \"attributeValue\") {\n      this.seenValue = true;\n\n      if (!this.subwalker) {\n        this.subwalker = this.el.pat.newWalker(this.nameResolver);\n      }\n\n      // Convert the attributeValue event to a text event.\n      var textEv = new Event(\"text\", ev.params[1]);\n      var ret = this.subwalker.fireEvent(textEv);\n\n      if (ret === undefined) {\n        return [new AttributeValueError(\"invalid attribute value\",\n                                        this.el.name)];\n      }\n      else if (ret instanceof PartialMatch) {\n        return [new AttributeValueError(\"invalid attribute value\",\n                                        this.el.name)];\n      }\n\n      // Attributes end immediately.\n      if (ret === false) {\n        ret = this.subwalker.end();\n      }\n\n      return ret;\n    }\n  }\n  else if (ev.params[0] === \"attributeName\" &&\n           this.el.name.match(ev.params[1], ev.params[2])) {\n    this.seenName = true;\n    return false;\n  }\n\n  return undefined;\n};\n\nAttributeWalker.prototype._suppressAttributes = function _suppressAttributes() {\n  this.suppressedAttributes = true;\n};\n\nAttributeWalker.prototype.canEnd = function canEnd(_attribute) {\n  return this.seenValue;\n};\n\nAttributeWalker.prototype.end = function end(_attribute) {\n  if (!this.seenName) {\n    return [new AttributeNameError(\"attribute missing\", this.el.name)];\n  }\n  else if (!this.seenValue) {\n    return [new AttributeValueError(\"attribute value missing\", this.el.name)];\n  }\n  return false;\n};\n\n/**\n * @classdesc A pattern for elements.\n * @extends module:patterns.PatternOnePattern\n * @private\n * @class\n * @static\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n *\n * @param {string} name The qualified name of the element.\n *\n * @param {Array.<module:patterns.Pattern>} pats The pattern contained by this\n * one.\n *\n * @throws {Error} If ``pats`` is not of length 1.\n */\nfunction Element(xmlPath, name, pats) {\n  PatternOnePattern.call(this, xmlPath);\n  this.name = name;\n  if (pats !== undefined) {\n    if (pats.length !== 1) {\n      throw new Error(\"Element requires exactly one pattern.\");\n    }\n    this.pat = pats[0];\n  }\n}\n\ninherit(Element, PatternOnePattern);\n// addWalker(Element, ElementWalker); Nope... see below..\nElement.prototype._copyInto = function _copyInto(obj, memo) {\n  PatternOnePattern.prototype._copyInto.call(this, obj, memo);\n  obj.name = this.name;\n};\n\nElement.prototype._prepare = function _prepare(namespaces) {\n  this.name._recordNamespaces(namespaces);\n  this.pat._prepare(namespaces);\n};\n\nElement.prototype.newWalker = function newWalker(resolver) {\n  if (this.pat instanceof NotAllowed) {\n    return this.pat.newWalker(resolver);\n  }\n\n  return new ElementWalker(this, resolver);\n};\n\nElement.prototype._hasAttrs = function _hasAttrs() {\n  return false;\n};\n\nElement.prototype._gatherElementDefinitions =\n  function _gatherElementDefinitions(memo) {\n    var key = this.name.toString();\n    if (memo[key] === undefined) {\n      memo[key] = [this];\n    }\n    else {\n      memo[key].push(this);\n    }\n  };\n\n/**\n *\n * @classdesc Walker for {@link module:patterns.Element Element}\n * @extends module:patterns.Walker\n * @private\n * @class\n * @static\n *\n * @param {module:patterns.Element} el The pattern for which this walker was\n * created.\n *\n * @param {module:name_resolver.NameResolver} resolver The name resolver that\n * can be used to convert namespace prefixes to namespaces.\n */\nfunction ElementWalker(el, resolver) {\n  Walker.call(this);\n  this.el = el;\n  this.nameResolver = resolver;\n  this.seenName = false;\n  this.endedStartTag = false;\n  this.closed = false;\n  this.walker = undefined;\n  this.startTagEvent = el && new Event(\"enterStartTag\", el.name);\n  this.endTagEvent = undefined;\n  this.boundName = undefined;\n}\ninherit(ElementWalker, Walker);\n// Reuse the same event object, since they are immutable\nElementWalker._leaveStartTagEvent = new Event(\"leaveStartTag\");\n\nElementWalker.prototype._copyInto = function _copyInto(obj, memo) {\n  Walker.prototype._copyInto.call(this, obj, memo);\n  obj.el = this.el;\n  obj.nameResolver = this._cloneIfNeeded(this.nameResolver, memo);\n  obj.seenName = this.seenName;\n  obj.endedStartTag = this.endedStartTag;\n  obj.closed = this.closed;\n  obj.walker = (this.walker !== undefined) ?\n    this.walker._clone(memo) : undefined;\n\n  // No cloning needed since these are immutable.\n  obj.startTagEvent = this.startTagEvent;\n  obj.endTagEvent = this.endTagEvent;\n  obj.boundName = this.boundName;\n};\n\nElementWalker.prototype._possible = function _possible() {\n  if (!this.seenName) {\n    return new EventSet(this.startTagEvent);\n  }\n  else if (!this.endedStartTag) {\n    var all = this.walker._possible();\n    var ret = new EventSet();\n    // We use valueEvs to record whether an attributeValue is a\n    // possibility. If so, we must only return these possibilities and no\n    // other.\n    var valueEvs = new EventSet();\n    all.forEach(function each(poss) {\n      if (poss.params[0] === \"attributeValue\") {\n        valueEvs.add(poss);\n      }\n      else if (poss.isAttributeEvent()) {\n        ret.add(poss);\n      }\n    });\n\n    if (valueEvs.size()) {\n      ret = valueEvs;\n    }\n    else if (this.walker.canEnd(true)) {\n      ret.add(ElementWalker._leaveStartTagEvent);\n    }\n\n    return ret;\n  }\n  else if (!this.closed) {\n    var posses = new EventSet(this.walker._possible());\n    if (this.walker.canEnd()) {\n      posses.add(this.endTagEvent);\n    }\n    return posses;\n  }\n\n  return new EventSet();\n};\n\n// _possible always returns new sets\nElementWalker.prototype.possible = ElementWalker.prototype._possible;\n\nElementWalker.prototype.fireEvent = function fireEvent(ev) {\n  var ret;\n  var errs;\n  var err;\n  var i;\n  if (!this.endedStartTag) {\n    if (!this.seenName) {\n      if (ev.params[0] === \"enterStartTag\" &&\n          this.el.name.match(ev.params[1], ev.params[2])) {\n        this.walker = this.el.pat.newWalker(this.nameResolver);\n        this.seenName = true;\n        this.boundName = new namePatterns.Name(\"\", ev.params[1], ev.params[2]);\n        this.endTagEvent = new Event(\"endTag\", this.boundName);\n        return false;\n      }\n    }\n    else if (ev.params[0] === \"leaveStartTag\") {\n      this.endedStartTag = true;\n\n      errs = this.walker.end(true);\n      ret = [];\n      for (i = 0; i < errs.length; ++i) {\n        err = errs[i];\n        if (err instanceof AttributeValueError ||\n            err instanceof AttributeNameError) {\n          ret.push(err);\n        }\n      }\n      if (ret.length === 0) {\n        ret = false;\n      }\n\n      // And suppress the attributes.\n      this.walker._suppressAttributes();\n\n      // We do not return undefined here\n      return ret || false;\n    }\n\n    return (this.walker !== undefined) ?\n      this.walker.fireEvent(ev) : undefined;\n  }\n  else if (!this.closed) {\n    ret = this.walker.fireEvent(ev);\n    if (ret === undefined) {\n      // Our subwalker did not handle the event, so we must do it here.\n      if (ev.params[0] === \"endTag\") {\n        if (this.boundName.match(ev.params[1], ev.params[2])) {\n          this.closed = true;\n\n          errs = this.walker.end();\n          ret = [];\n\n          // Strip out the attributes errors as we've already reported\n          // them.\n          for (i = 0; i < errs.length; ++i) {\n            err = errs[i];\n            if (!(err instanceof AttributeValueError ||\n                  err instanceof AttributeNameError)) {\n              ret.push(err);\n            }\n          }\n\n          return ret.length !== 0 && ret;\n        }\n      }\n      else if (ev.params[0] === \"leaveStartTag\") {\n        return [new ValidationError(\n          \"unexpected leaveStartTag event; it is likely that \" +\n            \"fireEvent is incorrectly called\")];\n      }\n    }\n    return ret;\n  }\n  return undefined;\n};\n\nElementWalker.prototype._suppressAttributes = function _suppressAttributes() {\n  // _suppressAttributes does not cross element boundary\n  return;\n};\n\nElementWalker.prototype.canEnd = function canEnd(attribute) {\n  if (attribute) {\n    return true;\n  }\n  return this.closed;\n};\n\nElementWalker.prototype.end = function end(attribute) {\n  if (attribute) {\n    return false;\n  }\n\n  var ret = [];\n  if (!this.seenName) {\n    ret.push(new ElementNameError(\"tag required\", this.el.name));\n  }\n  else if (!this.endedStartTag || !this.closed) {\n    if (this.walker !== undefined) {\n      var errs = this.walker.end();\n      if (errs) {\n        ret = errs;\n      }\n    }\n    ret.push(this.endedStartTag ?\n             new ElementNameError(\"tag not closed\", this.el.name) :\n             new ElementNameError(\"start tag not terminated\", this.el.name));\n  }\n\n  if (ret.length > 0) {\n    return ret;\n  }\n\n  return false;\n};\n\n\n/**\n * @classdesc A pattern for ``<define>``.\n * @extends module:patterns.PatternOnePattern\n * @private\n * @class\n * @static\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n *\n * @param {string} name The name of the definition.\n *\n * @param {Array.<module:patterns.Pattern>} pats The pattern contained by this\n * one.\n *\n * @throws {Error} If ``pats`` is not of length 1.\n */\nfunction Define(xmlPath, name, pats) {\n  PatternOnePattern.call(this, xmlPath);\n  this.name = name;\n  if (pats !== undefined) {\n    if (pats.length !== 1) {\n      throw new Error(\"Define needs exactly one pattern.\");\n    }\n    this.pat = pats[0];\n  }\n}\ninherit(Define, PatternOnePattern);\naddWalker(Define, DefineWalker);\n\nDefine.prototype._copyInto = function _copyInto(obj, memo) {\n  PatternOnePattern.prototype._copyInto.call(this, obj, memo);\n  obj.name = this.name;\n};\n\n/**\n * @classdesc Walker for {@link module:patterns.Define Define}\n * @extends module:patterns.Walker\n * @mixes module:patterns.SingleSubwalker\n * @private\n * @class\n * @static\n *\n * @param {module:patterns.Define} el The pattern for which this walker was\n * created.\n *\n * @param {module:name_resolver.NameResolver} resolver The name resolver that\n * can be used to convert namespace prefixes to namespaces.\n */\nfunction DefineWalker(el, resolver) {\n  Walker.call(this);\n  this.el = el;\n  this.nameResolver = resolver;\n  this.subwalker = (el !== undefined) ?\n    el.pat.newWalker(this.nameResolver) : undefined;\n}\ninherit(DefineWalker, Walker);\nimplement(DefineWalker, SingleSubwalker);\n\nDefineWalker.prototype._copyInto = function _copyInto(obj, memo) {\n  Walker.prototype._copyInto.call(this, obj, memo);\n  obj.el = this.el;\n  obj.nameResolver = this._cloneIfNeeded(this.nameResolver, memo);\n  obj.subwalker = this.subwalker._clone(memo);\n};\n\n/**\n * @classdesc This is an exception raised to indicate references to undefined\n * entities in a schema. If for instance element A has element B as its children\n * but B is not defined, then this exception would be raised.\n *\n * This exception is indicative of an internal error because by the time this\n * module loads a schema, the schema should have been simplified already and\n * simplification should have failed due to the unresolvable reference.\n *\n * @extends Error\n * @class\n * @static\n *\n * @param {module:set.Set} references The set of references that could not be\n * resolved.\n */\nfunction ReferenceError(references) {\n  this.references = references;\n}\ninherit(ReferenceError, Error);\n\n/**\n * @returns {string} A string representation of the error.\n */\n// eslint-disable-next-line no-extend-native\nReferenceError.prototype.toString = function toString() {\n  return \"Cannot resolve the following references: \" +\n    this.references.toString();\n};\n\n/**\n * Create a Grammar object. Users of this library normally do not create objects\n * of this class themselves but rely on constructTree().\n *\n * @class\n * @static\n * @private\n *\n * @param {string} xmlPath This is a string which uniquely identifies the\n * element from the simplified RNG tree. Used in debugging.\n *\n * @param {module:patterns.Pattern} start The start pattern of this grammar.\n *\n * @param {Array.<module:patterns.Define>} definitions An array of {@link\n * module:patterns.Define Define} objects which contain all definitions\n * specified in this grammar.\n *\n * @throws {module:patterns.ReferenceError} When any definition in the original\n * schema refers to a schema entity which is not defined in the schema.\n */\nfunction Grammar(xmlPath, start, definitions) {\n  this.xmlPath = xmlPath;\n  this.start = start;\n  this.definitions = Object.create(null);\n  this._elementDefinitions = undefined;\n  this._namespaces = Object.create(null);\n  var me = this;\n  if (definitions) {\n    definitions.forEach(function each(x) {\n      me.add(x);\n    });\n  }\n  this._resolve();\n  this._prepare(this._namespaces);\n}\nGrammar.prototype.definitions = undefined;\nGrammar.prototype.start = undefined;\n\n/**\n * Resolves references.\n *\n * @private\n *\n * @throws {module:patterns.ReferenceError} When any definition in the original\n * schema refers to a schema entity which is not defined in the schema.\n */\nGrammar.prototype._resolve = function _resolve() {\n  var all = [];\n  var ret;\n  // eslint-disable-next-line guard-for-in\n  for (var d in this.definitions) {\n    ret = this.definitions[d]._resolve(this.definitions);\n    if (ret) {\n      all = all.concat(ret);\n    }\n  }\n  ret = this.start._resolve(this.definitions);\n  if (ret) {\n    all = all.concat(ret);\n  }\n\n  if (all.length) {\n    throw new ReferenceError(all);\n  }\n};\n\n/**\n * Adds a definition.\n *\n * @param {module:patterns.Define} d The definition to add.\n */\nGrammar.prototype.add = function add(d) {\n  this.definitions[d.name] = d;\n  if (d.name === \"start\") {\n    this.start = d;\n  }\n};\n\n/**\n * This method must be called after resolution has been performed.\n *\n * This function now performs two tasks: a) it prepares the attributes\n * (Definition and Element objects maintain a pattern which contains only\n * attribute patterns, and nothing else), b) it gathers all the namespaces seen\n * in the schema.\n *\n * @private\n *\n * @param {Object} namespaces An object whose keys are the namespaces seen in\n * the schema. This method populates the object.\n */\nGrammar.prototype._prepare = function _prepare(namespaces) {\n  this.start._prepare(namespaces);\n  // eslint-disable-next-line guard-for-in\n  for (var d in this.definitions) {\n    this.definitions[d]._prepare(namespaces);\n  }\n};\n\n/**\n * Populates a memo with a mapping of (element name, [list of patterns]).  In a\n * Relax NG schema, the same element name may appear in multiple contexts, with\n * multiple contents. For instance an element named \"name\" could require the\n * sequence of elements \"firstName\", \"lastName\" in a certain context and text in\n * a different context. This method allows determining whether this happens or\n * not within a pattern.\n *\n * @private\n * @param {Object} memo The memo in which to store the information.\n */\nGrammar.prototype._gatherElementDefinitions =\n  function _gatherElementDefinitions(memo) {\n    // eslint-disable-next-line guard-for-in\n    for (var d in this.definitions) {\n      this.definitions[d]._gatherElementDefinitions(memo);\n    }\n  };\n\nObject.defineProperty(Grammar.prototype, \"elementDefinitions\", {\n  get: function get() {\n    var ret = this._elementDefinitions;\n    if (ret) {\n      return ret;\n    }\n\n    ret = this._elementDefinitions = Object.create(null);\n    this._gatherElementDefinitions(ret);\n    return ret;\n  },\n});\n\n/**\n * @returns {boolean} ``true`` if the schema is wholly context independent. This\n * means that each element in the schema can be validated purely on the basis of\n * knowing its expanded name. ``false`` otherwise.\n */\nGrammar.prototype.whollyContextIndependent =\n  function whollyContextIndependent() {\n    var defs = this.elementDefinitions;\n    for (var v in defs) {\n      if (defs[v].length > 1) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n/**\n *\n * @returns {Array.<string>} An array of all namespaces used in the schema.  The\n * array may contain two special values: ``*`` indicates that there was an\n * ``anyName`` element in the schema and thus that it is probably possible to\n * insert more than the namespaces listed in the array, ``::except`` indicates\n * that an ``except`` element is affecting what namespaces are acceptable to the\n * schema.\n */\nGrammar.prototype.getNamespaces = function getNamespaces() {\n  return Object.keys(this._namespaces);\n};\n\naddWalker(Grammar, GrammarWalker);\n\n/**\n *\n * @classdesc Walker for {@link module:patterns.Grammar Grammar}\n * @extends module:patterns.Walker\n * @mixes module:patterns.SingleSubwalker\n * @private\n * @class\n * @static\n *\n * @param {module:patterns.Grammar} el The grammar for which this walker was\n * created.\n */\nfunction GrammarWalker(el) {\n  Walker.call(this);\n  this.el = el;\n  this.nameResolver = new nameResolver.NameResolver();\n  this.subwalker = (el !== undefined) ?\n    el.start.newWalker(this.nameResolver) : undefined;\n  // A stack that keeps state for misplace elements. The elements of this\n  // stack are either Array or Walker objects. They are arrays when we are\n  // dealing with an element which is unknown to the schema (or which\n  // cannot be unambigiously determined. They are Walker objects when we\n  // can find a definition in the schema.\n  this._misplacedElements = [];\n  this._swallowAttributeValue = false;\n  this.suspendedWs = undefined;\n  this.ignoreNextWs = false;\n  this._prevEvWasText = false;\n  this._swallowAttributeValue = false;\n}\n\ninherit(GrammarWalker, Walker);\nimplement(GrammarWalker, SingleSubwalker);\n\nGrammarWalker.prototype.subwalker = undefined;\nGrammarWalker.prototype._copyInto = function _copyInto(obj, memo) {\n  Walker.prototype._copyInto.call(this, obj, memo);\n  obj.el = this.el;\n  obj.subwalker = this.subwalker._clone(memo);\n  obj._misplacedElements = [];\n  for (var i = 0; i < this._misplacedElements.length; ++i) {\n    var mpe = this._misplacedElements[i];\n    obj._misplacedElements.push(mpe instanceof Walker ?\n                                mpe._clone(memo) :\n                                mpe.concat([]));\n  }\n  obj._swallowAttributeValue = this._swallowAttributeValue;\n  obj.nameResolver = this._cloneIfNeeded(this.nameResolver, memo);\n  obj.suspendedWs = this.suspendedWs;\n  obj.ignoreNextWs = this.ignoreNextWs;\n  obj._prevEvWasText = this._prevEvWasText;\n};\n\n/**\n * Resolves a name using the walker's own name resolver.\n *\n * @param {string} name A qualified name.\n *\n * @param {boolean} attribute Whether this qualified name refers to an\n * attribute.\n *\n * @returns {module:ename.EName|undefined} An expanded name, or undefined if\n * the name cannot be resolved.\n */\nGrammarWalker.prototype.resolveName = function resolveName(name, attribute) {\n  return this.nameResolver.resolveName(name, attribute);\n};\n\n/**\n * See {@link module:name_resolver.NameResolver#unresolveName\n * NameResolver.unresolveName} for the details.\n *\n * @param {string} uri The URI part of the expanded name.\n *\n * @param {string} name The name part.\n *\n * @returns {string|undefined} The qualified name that corresponds to the\n * expanded name, or ``undefined`` if it cannot be resolved.\n */\nGrammarWalker.prototype.unresolveName = function unresolveName(uri, name) {\n  return this.nameResolver.unresolveName(uri, name);\n};\n\n/**\n * On a GrammarWalker this method cannot return ``undefined``. An undefined\n * value would mean nothing matched, which is a validation error.\n *\n * @param {module:patterns.Event} ev The event to fire.\n *\n * @returns {false|Array.<module:errors.ValidationError>} The value ``false`` if\n * there is no error or an array of {@link module:errors.ValidationError\n * ValidationError} objects.  @throws {Error} When name resolving events\n * (``enterContext``, ``leaveContext``, or ``definePrefix``) are passed while\n * this walker was not instructed to create its own name resolver or when trying\n * to process an event type unknown to salve.\n */\nGrammarWalker.prototype.fireEvent = function fireEvent(ev) {\n  function combineWsErrWith(x) {\n    if (wsErr === undefined) {\n      wsErr = [new ValidationError(\"text not allowed here\")];\n    }\n\n    if (wsErr === false) {\n      return x;\n    }\n\n    if (x === false) {\n      return wsErr;\n    }\n\n    if (x === undefined) {\n      throw new Error(\"undefined x\");\n    }\n\n    return wsErr.concat(x);\n  }\n\n  if (ev.params[0] === \"enterContext\" ||\n      ev.params[0] === \"leaveContext\" ||\n      ev.params[0] === \"definePrefix\") {\n    switch (ev.params[0]) {\n    case \"enterContext\":\n      this.nameResolver.enterContext();\n      break;\n    case \"leaveContext\":\n      this.nameResolver.leaveContext();\n      break;\n    case \"definePrefix\":\n      this.nameResolver.definePrefix(ev.params[1], ev.params[2]);\n      break;\n    default:\n      throw new Error(\"unexpected event: \" + ev.params[0]);\n    }\n    return false;\n  }\n\n  // Process whitespace nodes\n  if (ev.params[0] === \"text\" && ev.params[1].trim() === \"\") {\n    if (this.suspendedWs) {\n      this.suspendedWs += ev.params[1];\n    }\n    else {\n      this.suspendedWs = ev.params[1];\n    }\n    return false;\n  }\n\n  // This is the walker we must fire all our events on.\n  var walker = (this._misplacedElements.length > 0 &&\n                this._misplacedElements[0] instanceof Walker) ?\n        // This happens if we ran into a misplaced element that we were\n        // able to infer.\n        this._misplacedElements[0] : this.subwalker;\n\n  var ignoreNextWsNow = this.ignoreNextWs;\n  this.ignoreNextWs = false;\n  var wsErr = false;\n  switch (ev.params[0]) {\n  case \"enterStartTag\":\n    // Absorb the whitespace: poof, gone!\n    this.suspendedWs = undefined;\n    break;\n  case \"text\":\n    if (this._prevEvWasText) {\n      throw new Error(\"fired two text events in a row: this is \" +\n                      \"disallowed by salve\");\n    }\n\n    if (this.ignoreNextWs) {\n      this.suspendedWs = undefined;\n      var trimmed = ev.params[1].replace(/^\\s+/, \"\");\n      if (trimmed.length !== ev.params[1].length) {\n        ev = new Event(\"text\", trimmed);\n      }\n    }\n    else if (this.suspendedWs) {\n      wsErr = walker.fireEvent(new Event(\"text\", this.suspendedWs));\n      this.suspendedWs = undefined;\n    }\n    break;\n  case \"endTag\":\n    this.ignoreNextWs = true;\n    /* falls through */\n  default:\n    // Process the whitespace that was suspended.\n    if (this.suspendedWs && !ignoreNextWsNow) {\n      wsErr = walker.fireEvent(new Event(\"text\", this.suspendedWs));\n    }\n    this.suspendedWs = undefined;\n  }\n\n  // We can update it here because we're done examining the value that was\n  // set from the previous call to fireEvent.\n  this._prevEvWasText = (ev.params[0] === \"text\");\n\n  if (this._misplacedElements.length > 0 &&\n      this._misplacedElements[0] instanceof Array) {\n    // We are in a misplaced element which is foreign to the schema (or\n    // which cannot be infered unambiguously.\n    var mpe = this._misplacedElements[0];\n    switch (ev.params[0]) {\n    case \"enterStartTag\":\n      mpe.unshift(ev.params.slice(1));\n      break;\n    case \"endTag\":\n      mpe.shift();\n      break;\n    default:\n      // We don't care\n      break;\n    }\n\n    // We're done with this context.\n    if (!mpe.length) {\n      this._misplacedElements.shift();\n    }\n\n    return false;\n  }\n\n  // This would happen if the user puts an attribute on a tag that does not\n  // allow one. Instead of generating errors for both the attribute name\n  // and value, we generate an error for the name and ignore the value.\n  if (this._swallowAttributeValue) {\n    // Swallow only one event.\n    this._swallowAttributeValue = false;\n    if (ev.params[0] === \"attributeValue\") {\n      return false;\n    }\n\n    return [new ValidationError(\"attribute value required\")];\n  }\n\n  var ret = walker.fireEvent(ev);\n\n  if (ret instanceof PartialMatch) {\n    if (ev.params[0] !== \"text\") {\n      throw new Error(\"got PartialMatch when firing a non-text event\");\n    }\n\n    // Create a new event with the rest of the text and fire it.\n    var rest = new Event(\"text\", ev.params[1].slice(ret.length));\n    return this.fireEvent(rest);\n  }\n  else if (ret === undefined) {\n    switch (ev.params[0]) {\n    case \"enterStartTag\":\n      var name = new namePatterns.Name(\"\", ev.params[1], ev.params[2]);\n      ret = [new ElementNameError(\"tag not allowed here\", name)];\n\n      // Try to infer what element is meant by this errant tag. If we can't find\n      // a candidate, then fall back to a dumb mode.\n      var candidates = this.el.elementDefinitions[name.toString()];\n      if (candidates && candidates.length === 1) {\n        var newWalker = candidates[0].newWalker(this.nameResolver);\n        this._misplacedElements.unshift(newWalker);\n        if (newWalker.fireEvent(ev) !== false) {\n          throw new Error(\"internal error: the infered element \" +\n                          \"does not accept its initial event\");\n        }\n      }\n      else {\n        // Dumb mode...\n        this._misplacedElements.unshift([ev.params.slice(1)]);\n      }\n      break;\n    case \"endTag\":\n      ret = [new ElementNameError(\n        \"unexpected end tag\",\n        new namePatterns.Name(\"\", ev.params[1], ev.params[2]))];\n      break;\n    case \"attributeName\":\n      ret = [new AttributeNameError(\n        \"attribute not allowed here\",\n        new namePatterns.Name(\"\", ev.params[1], ev.params[2]))];\n      this._swallowAttributeValue = true;\n      break;\n    case \"attributeValue\":\n      ret = [new ValidationError(\n        \"unexpected attributeValue event; it is likely \" +\n          \"that fireEvent is incorrectly called\")];\n      break;\n    case \"text\":\n      ret = [new ValidationError(\"text not allowed here\")];\n      break;\n    case \"leaveStartTag\":\n      // If the _misplacedElements stack did not exist then we would get here\n      // if a file being validated contains a tag which is not allowed. An\n      // ElementNameError will already have been issued. So rather than violate\n      // our contract (which says no undefined value may be returned) or require\n      // that callers do something special with 'undefined' as a return value,\n      // just treat this event as a non-error.\n      //\n      // But the stack exists, so we cannot get here. If we do end up here, then\n      // there is an internal error somewhere.\n      /* falls through */\n    default:\n      throw new Error(\"unexpected event type in GrammarWalker's fireEvent: \" +\n                      ev.params[0]);\n    }\n  }\n\n  // Check whether the context should end\n  if (this._misplacedElements.length > 0 &&\n      this._misplacedElements[0] instanceof Walker) {\n    walker = this._misplacedElements[0];\n    if (walker.canEnd()) {\n      this._misplacedElements.shift();\n      var endRet = walker.end();\n      if (endRet) {\n        ret = ret ? ret.concat(endRet) : endRet;\n      }\n    }\n  }\n\n  return combineWsErrWith(ret);\n};\n\nGrammarWalker.prototype.possible = function possible(_ev) {\n  if (this._misplacedElements.length) {\n    var mpe = this._misplacedElements[0];\n    // Return an empty set if the tags are unknown to us.\n    return mpe instanceof Walker ? mpe.possible() : new EventSet();\n  }\n\n  // There's no point in calling this._possible.\n  return this.subwalker.possible();\n};\n\nGrammarWalker.prototype._suppressAttributes =\n  function _suppressAttributes() {\n    throw new Error(\"_suppressAttributes cannot be called on a GrammarWalker\");\n  };\n\nexports.Event = Event;\nexports.eventsToTreeString = eventsToTreeString;\nexports.ReferenceError = ReferenceError;\nexports.Grammar = Grammar;\nexports.Walker = Walker;\n\n//\n// Things used only during testing.\n//\nvar tret = {};\n\ntret.GrammarWalker = GrammarWalker;\ntret.Text = Text;\n\nexports.__test = function __test() {\n  return tret;\n};\n\n//\n// Exports which are meant for other modules internal to salve.\n//\n// DO NOT USE THIS OUTSIDE SALVE! THIS EXPORT MAY CHANGE AT ANY TIME!\n// YOU'VE BEEN WARNED!\n//\nvar namePatterns = require(\"./name_patterns\");\n\nexports.__protected = {\n  Empty: Empty,\n  Data: Data,\n  List: List,\n  Param: Param,\n  Value: Value,\n  NotAllowed: NotAllowed,\n  Text: Text,\n  Ref: Ref,\n  OneOrMore: OneOrMore,\n  Choice: Choice,\n  Group: Group,\n  Attribute: Attribute,\n  Element: Element,\n  Define: Define,\n  Grammar: Grammar,\n  EName: EName,\n  Interleave: Interleave,\n  Name: namePatterns.Name,\n  NameChoice: namePatterns.NameChoice,\n  NsName: namePatterns.NsName,\n  AnyName: namePatterns.AnyName,\n};\n\n//  LocalWords:  namespaces validator namespace xmlns validators EOF\n//  LocalWords:  lookahead enterStartTag attributeName newWalker URI\n//  LocalWords:  makeSingletonConstructor HashSet constructTree RNG\n//  LocalWords:  subpatterns hashstructs cleanAttrs fireEvent HashMap\n//  LocalWords:  EName ValidationError msg modelizes args uri RelaxNG\n//  LocalWords:  attributeValue leaveStartTag AttributeWalker API MPL\n//  LocalWords:  ElementWalker subwalkers NotAllowed RefWalker Mixin\n//  LocalWords:  DefineWalker oneOrMore ChoiceWalker subwalker Dubeau\n//  LocalWords:  ChoiceError GroupWalker unresolvable addWalker el lt\n//  LocalWords:  useNameResolver GrammarWalker formedness notAllowed\n//  LocalWords:  ElementNameError GrammarWalker's Mangalam util oop\n//  LocalWords:  CodeMirror tokenizer jshint newcap validthis canEnd\n//  LocalWords:  SingleNameError NoSubwalker SingleSubwalker ATTRS ev\n//  LocalWords:  endTag PatternTwoPatterns GroupWalkers rng attr vm\n//  LocalWords:  PatternOnePattern enterContext leaveContext NG ret\n//  LocalWords:  definePrefix firstName lastName ttt EventSet unshift\n//  LocalWords:  suppressAttributes\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/patterns.js\n// module id = 1\n// module chunks = 0 1","/**\n * @desc Implements a name resolver for handling namespace changes in XML.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\nvar EName = require(\"./ename\").EName;\n\n// Both defined at:\n// http://www.w3.org/TR/REC-xml-names/#ns-decl\nvar XML1_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\nvar XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\";\n\n/**\n * @classdesc A name resolver for handling namespace changes in XML. This name\n * resolver maintains mappings from namespace prefix to namespace URI.\n *\n * @class\n * @static\n */\nfunction NameResolver() {\n  this.id = \"N\" + this.__newID();\n  this._contextStack = [];\n\n  // Create a default context.\n  this.enterContext();\n\n  // Both namespaces defined at:\n  // http://www.w3.org/TR/REC-xml-names/#ns-decl\n  // Skip definePrefix for these initial values.\n  this._contextStack[0].forward.xml = XML1_NAMESPACE;\n  this._contextStack[0].backwards[XML1_NAMESPACE] = [\"xml\"];\n  this._contextStack[0].forward.xmlns = XMLNS_NAMESPACE;\n  this._contextStack[0].backwards[XMLNS_NAMESPACE] = [\"xmlns\"];\n}\n\n/**\n * The next id to associate to the next NameResolver object to be created.  This\n * is used so that {@link module:name_resolver.NameResolver#hash hash} can return\n * unique values.\n *\n * @private\n */\nNameResolver.__id = 0;\n\n/**\n * Gets a new Pattern id.\n *\n * @private\n * @returns {integer} The new id.\n */\nNameResolver.prototype.__newID = function __newID() {\n  return NameResolver.__id++;\n};\n\n/**\n * This method is mainly used to be able to use NameResolver objects in a {@link\n * module:hashstructs.HashSet HashSet} or a {@link module:hashstructs.HashMap\n * HashMap}.\n *\n * Returns a hash guaranteed to be unique to this object. There are some\n * limitations. First, if this module is instantiated twice, the objects created\n * by the two instances cannot mix without violating the uniqueness\n * guarantee. Second, the hash is a monotonically increasing counter, so when it\n * reaches beyond the maximum integer that the JavaScript vm can handle, things\n * go kaboom.\n *\n * @returns {integer} A number unique to this object.\n */\nNameResolver.prototype.hash = function hash() {\n  return this.id;\n};\n\n/**\n * Makes a deep copy.\n *\n * @returns {module:name_resolver.NameResolver} A deep copy of the\n * resolver.\n */\nNameResolver.prototype.clone = function clone() {\n  var ret = new NameResolver();\n  ret._contextStack = this._contextStack.slice();\n  return ret;\n};\n\n/**\n * Defines a (prefix, URI) mapping.\n *\n * @param {string} prefix The namespace prefix to associate with the URI.\n *\n * @param {string} uri The namespace URI associated with the prefix.\n */\nNameResolver.prototype.definePrefix = function definePrefix(prefix, uri) {\n  // http://www.w3.org/TR/REC-xml-names/#ns-decl\n  if (prefix === \"xmlns\") {\n    throw new Error(\"trying to define 'xmlns' but the XML Namespaces \" +\n                    \"standard stipulates that 'xmlns' cannot be \" +\n                    \"declared (= \\\"defined\\\")\");\n  }\n\n  if (prefix === \"xml\" && uri !== XML1_NAMESPACE) {\n    throw new Error(\"trying to define 'xml' to an incorrect URI\");\n  }\n\n  this._contextStack[0].forward[prefix] = uri;\n\n  var prefixes = this._contextStack[0].backwards[uri];\n  if (prefixes === undefined) {\n    prefixes = this._contextStack[0].backwards[uri] = [];\n  }\n\n  // This ensure that the default namespace is given priority when\n  // unresolving names.\n  if (prefix === \"\") {\n    prefixes.unshift(\"\");\n  }\n  else {\n    prefixes.push(prefix);\n  }\n};\n\n/**\n * This method is called to indicate the start of a new context.  Contexts\n * enable this class to support namespace redeclarations. In XML, each start tag\n * can potentially redefine a prefix that was already defined by an\n * ancestor. When using this class, such redefinition must appear in a new\n * context, otherwise it would merely overwrite the old definition.\n *\n * At creation, a ``NameResolver`` has a default context already created. There\n * is no need to create it and it is not possible to leave it.\n */\nNameResolver.prototype.enterContext = function enterContext() {\n  this._contextStack.unshift(Object.create(null));\n  this._contextStack[0].forward = Object.create(null);\n  this._contextStack[0].backwards = Object.create(null);\n};\n\n/**\n * This method is called to indicate the end of a context. Whatever context was\n * in effect when the current context ends becomes effective.\n *\n * @throws {Error} If this method is called when there is no context created by\n * {@link module:name_resolver.NameResolver#enterContext enterContext}.\n */\nNameResolver.prototype.leaveContext = function leaveContext() {\n  if (this._contextStack.length > 1) {\n    this._contextStack.shift();\n  }\n  else {\n    throw new Error(\"trying to leave the default context\");\n  }\n};\n\n/**\n * Resolves a qualified name to an expanded name. A qualified name is an XML\n * name optionally prefixed by a namespace prefix. For instance, in ``<html\n * xml:lang=\"en\">``, \"html\" is a name without a prefix, and \"xml:lang\" is a name\n * with the \"xml\" prefix. An expanded name is a (URI, name) pair.\n *\n * @param {string} name The name to resolve.\n *\n * @param {boolean} attribute Whether this name appears as an attribute.\n *\n * @throws {Error} If the name is malformed. For instance, a name with two\n * colons would be malformed.\n *\n * @returns {module:ename.EName|undefined} The expanded name, or\n * ``undefined`` if the name cannot be resolved.\n */\nNameResolver.prototype.resolveName = function resolveName(name, attribute) {\n  if (attribute === undefined) {\n    attribute = false;\n  }\n\n  var parts = name.split(\":\");\n\n  if (parts.length === 1) { // If there is no prefix\n    if (attribute) { // Attribute in undefined namespace\n      return new EName(\"\", name);\n    }\n\n    // We are searching for the default namespace currently in effect.\n    parts = [\"\", name];\n  }\n\n  if (parts.length > 2) {\n    throw new Error(\"invalid name passed to resolveName\");\n  }\n\n  // Search through the contexts\n  var uri;\n  for (var cIx = 0; (uri === undefined) && (cIx < this._contextStack.length);\n       ++cIx) {\n    var ctx = this._contextStack[cIx];\n    uri = ctx.forward[parts[0]];\n  }\n\n  if (uri === undefined) {\n    return (parts[0] === \"\") ? new EName(\"\", parts[1]) : undefined;\n  }\n\n  return new EName(uri, parts[1]);\n};\n\n/**\n * Unresolves an expanded name to a qualified name. An expanded name is a\n * (URI, name) pair. Note that if we execute:\n *\n * <pre>\n *   var nameResolver = new NameResolver();\n *   var ename = nameResolver.resolveName(qname);\n *   var qname2 = nameResolver.unresolveName(ename.ns, ename.name);\n * </pre>\n *\n * then ``qname === qname2`` is not necessarily true. This would happen if two\n * prefixes map to the same URI. In such case the prefix provided in the return\n * value is arbitrarily chosen.\n *\n * @param {string} uri The URI part of the expanded name. An empty string is\n * valid, and basically means \"no namespace\". This occurrs for unprefixed\n * attributes but could also happen if the default namespace is undeclared.\n *\n * @param {string} name The name part.\n *\n * @returns {string|undefined} The qualified name that corresponds to the\n * expanded name, or ``undefined`` if it cannot be resolved.\n */\nNameResolver.prototype.unresolveName = function unresolveName(uri, name) {\n  if (uri === \"\") {\n    return name;\n  }\n\n  // Search through the contexts\n  var prefixes;\n  for (var cIx = 0; (prefixes === undefined) &&\n             (cIx < this._contextStack.length); ++cIx) {\n    var ctx = this._contextStack[cIx];\n    prefixes = ctx.backwards[uri];\n  }\n\n  if (prefixes === undefined) {\n    return undefined;\n  }\n\n  var pre = prefixes[0];\n\n  return (pre !== \"\") ? (pre + \":\" + name) : name;\n};\n\n/**\n * Returns a prefix that, in the current context, is mapped to the URI\n * specified. Note that this function will return the first prefix that\n * satisfies the requirement, starting from the innermost context.\n *\n * @param {string} uri A URI for which to get a prefix.\n *\n * @returns {string|undefined} A prefix that maps to this URI. Undefined if\n * there is no prefix available.\n */\nNameResolver.prototype.prefixFromURI = function prefixFromURI(uri) {\n  var prefixes;\n  for (var cIx = 0; (prefixes === undefined) &&\n             (cIx < this._contextStack.length); ++cIx) {\n    var ctx = this._contextStack[cIx];\n    prefixes = ctx.backwards[uri];\n  }\n\n  if (prefixes === undefined) {\n    return undefined;\n  }\n\n  var pre = prefixes[0];\n  return pre;\n};\n\nexports.NameResolver = NameResolver;\nexports.XML1_NAMESPACE = XML1_NAMESPACE;\n\n\n// LocalWords:  namespace unresolving MPL xml resolveName Dubeau URI\n// LocalWords:  Mangalam LocalWords NameResolver lt html lang ename\n// LocalWords:  qname redeclarations Unresolves\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/name_resolver.js\n// module id = 2\n// module chunks = 0 1","/**\n * @desc Class for XML Expanded Names.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\n/**\n * @classdesc Immutable objects modeling XML Expanded Names.\n * @class\n * @static\n *\n * @param {string} ns The namespace URI.\n *\n * @param {string} name The local name of the entity.\n */\nfunction EName(ns, name) {\n  this.ns = ns;\n  this.name = name;\n}\n\n/**\n * @returns {string} A string representing the expanded name.\n */\nEName.prototype.toString = function toString() {\n  return \"{\" + this.ns + \"}\" + this.name;\n};\n\n/**\n * Compares two expanded names.\n *\n * @param {module:ename.EName} other The other object to compare this object\n * with.\n *\n * @returns {boolean} ``true`` if this object equals the other.\n */\nEName.prototype.equal = function equal(other) {\n  return this.ns === other.ns && this.name === other.name;\n};\n\nexports.EName = EName;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/ename.js\n// module id = 3\n// module chunks = 0 1","/**\n * @desc A mock implementation of Node's util package. This module\n * implements only what is actually used in salve.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n/**\n * A mock of Node's ``util.inspect``. The current implementation merely returns\n * what is passed to it.\n */\nexports.inspect = function inspect(x) {\n  return x;\n};\n\n// LocalWords:  util Dubeau MPL Mangalam\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/util.js\n// module id = 4\n// module chunks = 0 1","/**\n * @desc {@link module:hashstructs.HashSet HashSet} and {@link\n * module:hashstructs.HashMap HashMap} implementations. This module is meant for\n * salve's internal purposes only. It may be yanked at any time. Do not use in\n * your own code.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n * @private\n */\n\"use strict\";\n\nvar inherit = require(\"./oop\").inherit;\n\n/**\n * @classdesc The HashBase class provides a base class for the {@link\n * module:hashstructs.HashSet HashSet} and {@link module:hashstructs.HashMap\n * HashMap} classes.\n *\n * @param {Function} hashF A function which returns a uniquely identifying hash\n * when called with an object that a ``HashBase`` instance uses. Note that it is\n * a valid implementation strategy for the hash function to know how to handle\n * only a certain type of object, and not everything under the sun. This entails\n * that a ``HashBase`` object using this hash function can only contain objects\n * of the type that the hash function knows how to handle.\n *\n * @param {Object} [initial] An initial value for the object being constructed.\n *\n * @class\n * @static\n * @private\n */\nfunction HashBase(hashF, initial) {\n  this.hashF = hashF;\n  this.backing = Object.create(null);\n  this._size = 0;\n\n  if (initial !== undefined) {\n    if (initial instanceof HashBase) {\n      var backing = this.backing;\n      var initialBacking = initial.backing;\n      var keys = Object.keys(initialBacking);\n      for (var keysIx = 0; keysIx < keys.length; ++keysIx) {\n        var key = keys[keysIx];\n        backing[key] = initialBacking[key];\n      }\n      this._size = keys.length;\n    }\n    else if (initial instanceof Array) {\n      for (var i = 0; i < initial.length; ++i) {\n        this.add(initial[i]);\n      }\n    }\n    else {\n      this.add(initial);\n    }\n  }\n}\n\nHashBase.prototype.hashF = undefined;\nHashBase.prototype.backing = undefined;\nHashBase.prototype._size = 0;\n\n/**\n * Record a hash and value pair into the backing store. Effectively associates\n * the hash with the value. This method assumes but does not verify that the\n * mapping from hash to value is unique. This method cannot be used to\n * **change** such mapping.\n *\n * @private\n *\n * @param hash Hash to which to associate the value. Can be any type that can be\n * used as an array index.\n *\n * @param val The value to associate with the hash.\n *\n * @throws {Error} If the hash is undefined or null.\n */\nHashBase.prototype._store = function _store(hash, val) {\n  if (hash === undefined || hash === null) {\n    throw new Error(\"undefined or null hash\");\n  }\n  if (this.backing[hash] === undefined) {\n    this.backing[hash] = val;\n    this._size++;\n  }\n  // else noop\n};\n\n/**\n * Unites this object with another object. This method modifies the object upon\n * which it is called so as to make it a mathematical union of the two objects.\n *\n * @param s The object to unite with this one. Must be of the same class as this\n * object.\n *\n * @throws {Error} If ``s`` is not of the same type as this object.\n */\nHashBase.prototype.union = function union(s) {\n  if (s === null || s === undefined) {\n    return;\n  }\n\n  if (!(s instanceof this.constructor)) {\n    throw new Error(\"union invalid class object; my class \" +\n                    this.constructor.name + \" other class \" +\n                    s.constructor.name);\n  }\n\n  var backing = s.backing;\n  var keys = Object.keys(backing);\n  for (var keysIx = 0; keysIx < keys.length; ++keysIx) {\n    var key = keys[keysIx];\n    this._store(key, backing[key]);\n  }\n};\n\n/**\n * Applies a function on each value stored in the object.\n *\n * @param {Function} f A function which accepts one parameter. The function will\n * be called on each value.\n */\nHashBase.prototype.forEach = function forEach(f) {\n  var backing = this.backing;\n  var keys = Object.keys(backing);\n  for (var keysIx = 0; keysIx < keys.length; ++keysIx) {\n    var key = keys[keysIx];\n    f(backing[key]);\n  }\n};\n\n/**\n * @returns {integer} The number of values stored.\n */\nHashBase.prototype.size = function size() {\n  return this._size;\n};\n\n/**\n * Selects a subset of values.\n *\n * @param {Function} f A function that selects values. It is called with each\n * value. If the value happens to be an ``Array`` then the function is *applied*\n * to this array. A return value which is truthy includes the value, otherwise\n * the value is excluded.  @returns An object of the same class as the object on\n * which the method is called. This object contains only the value selected by\n * the function.\n */\nHashBase.prototype.filter = function filter(f) {\n  var ret = new this.constructor();\n  if (ret.hashF === undefined) {\n    ret.hashF = this.hashF;\n  }\n  var backing = this.backing;\n  var keys = Object.keys(backing);\n  for (var keysIx = 0; keysIx < keys.length; ++keysIx) {\n    var key = keys[keysIx];\n    var data = backing[key];\n    var args = data instanceof Array ? data : [data];\n    if (f.apply(undefined, args)) {\n      ret._store(key, data);\n    }\n  }\n  return ret;\n};\n\n/**\n * Tests whether a value is contained in the object on which this method is\n * called.\n *\n * @param obj The value for which to test.\n *\n * @returns {boolean} ``true`` if the value is present, ``false`` if not.\n */\nHashBase.prototype.has = function has(obj) {\n  var hash = this.hashF(obj);\n  return !!this.backing[hash];\n};\n\n/**\n * Converts the object on which this method is called to a string.\n *\n * @returns {string} All the values, joined with \", \".\n */\nHashBase.prototype.toString = function toString() {\n  return this.toArray().join(\", \");\n};\n\n/**\n * Converts the object on which this method is called to an array.\n *\n * @returns {Array} An array that corresponds to the object.\n *\n */\nHashBase.prototype.toArray = function toArray() {\n  var t = [];\n  var backing = this.backing;\n  var keys = Object.keys(backing);\n  for (var keysIx = 0; keysIx < keys.length; ++keysIx) {\n    var key = keys[keysIx];\n    t.push(backing[key]);\n  }\n  return t;\n};\n\n/**\n * @classdesc A set of objects. The objects are distinguished by a hash\n * function.\n *\n * @extends module:hashstructs.HashBase\n *\n * @param {Function} hashF A function which returns a uniquely identifying hash\n * when called with an object that a ``HashSet`` instance uses. Note that it is\n * a valid implementation strategy for the hash function to know how to handle\n * only a certain type of object, and not everything under the sun. This entails\n * that a ``HashSet`` object using this hash function can only contain objects\n * of the type that the hash function knows how to handle.\n *\n * @param {Object} [initial] An initial value for the object being constructed.\n *\n * @class\n * @static\n * @private\n */\nfunction HashSet() {\n  HashBase.apply(this, arguments);\n}\ninherit(HashSet, HashBase);\n\n/**\n * Adds a value to the set.\n *\n * @param x The value to add.\n */\nHashSet.prototype.add = function add(x) {\n  this._store(this.hashF(x), x);\n};\n\n/**\n * @classdesc A map of (key, value) pairs. The keys are distinguished by means\n * of a hash function.\n *\n * @extends module:hashstructs.HashBase\n *\n * @param {Function} hashF A function which returns a uniquely identifying hash\n * when called with an object that a ``HashMap`` instance uses. Note that it is\n * a valid implementation strategy for the hash function to know how to handle\n * only a certain type of object, and not everything under the sun. This entails\n * that a ``HashMap`` object using this hash function can only contain objects\n * of the type that the hash function knows how to handle.\n *\n * @param {Object} [initial] An initial value for the object being constructed.\n *\n * @class\n * @static\n * @private\n */\nfunction HashMap(hashF, initial) {\n  if (initial instanceof Array) {\n    throw new Error(\"cannot initialize a map with an array\");\n  }\n  HashBase.apply(this, arguments);\n}\ninherit(HashMap, HashBase);\n\n// The arrays stored in the backing store are considered immutable.\n\n/**\n * Adds a (key, value) mapping to the map.\n *\n * @param key\n * @param value\n */\nHashMap.prototype.add = function add(key, value) {\n  this._store(this.hashF(key), [key, value]);\n};\n\nHashMap.prototype.forEach = function forEach(f) {\n  var backing = this.backing;\n  var keys = Object.keys(backing);\n  for (var keysIx = 0; keysIx < keys.length; ++keysIx) {\n    var key = keys[keysIx];\n    f(backing[key][0], backing[key][1]);\n  }\n};\n\n/**\n * Checks whether an object is a key of the map, and returns its associated\n * value if present.\n *\n * @param obj The object to check.\n *\n * @returns The value associated with the object if present. ``undefined`` if\n * not.\n */\nHashMap.prototype.has = function has(obj) {\n  var hash = this.hashF(obj);\n  var pair = this.backing[hash];\n  if (pair !== undefined) {\n    return pair[1];\n  }\n\n  return undefined;\n};\n\n/**\n * Gets the keys present in this mapping.\n *\n * @returns {Array}\n */\nHashMap.prototype.keys = function keys() {\n  return Object.keys(this.backing);\n};\n\nexports.HashSet = HashSet;\nexports.HashMap = HashMap;\n\n//  LocalWords:  hashstructs MPL oop HashBase noop HashSet HashMap\n//  LocalWords:  Dubeau Mangalam LocalWords truthy\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/hashstructs.js\n// module id = 5\n// module chunks = 0 1","/**\n * @desc OOP utilities\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\n/**\n * Makes a class inherit from another. After the call the inheritor has a\n * prototype which is a copy of the prototype of the inherited class.\n *\n * @static\n *\n * @param {Function} inheritor The class that inherits.\n *\n * @param {Function} inherited The class that is inherited.\n */\nfunction inherit(inheritor, inherited) {\n  inheritor.prototype = Object.create(inherited.prototype);\n  inheritor.prototype.constructor = inheritor;\n}\n\n/**\n * Makes a class implement a mixin. This means that the prototype fields of the\n * mixin are copied into the class that implements it.\n *\n * @static\n *\n * @param {Function} mixes The class that implements the mixin.\n *\n * @param {Function} mixin The mixin to implement.\n */\nfunction implement(mixes, mixin) {\n  for (var f in mixin.prototype) {\n    if ({}.hasOwnProperty.call(mixin.prototype, f)) {\n      mixes.prototype[f] = mixin.prototype[f];\n    }\n  }\n}\n\nexports.inherit = inherit;\nexports.implement = implement;\n\n// LocalWords:  oop Dubeau MPL Mangalam mixin\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/oop.js\n// module id = 6\n// module chunks = 0 1","/**\n * @desc Naive set implementation.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\n/* eslint-disable no-extend-native */\n\n/**\n * @classdesc This is a naive implementation of sets. It stores all elements in\n * an array. All array manipulations are done by searching through the array\n * from start to hit. So when adding a new element to the Set for instance, the\n * add method will scan the whole array, find the element is not there and then\n * add the element at the end of the array. As naive as this implementation is,\n * it has been shown to be faster than {@link module:hashstructs.HashSet\n * HashSet} when used in the context of this library.\n *\n * Note that Set cannot hold undefined values.\n *\n * @class\n * @static\n *\n * @param {module:set.Set|Array} initial The value to initialize the set\n * with. If a Set, then the new Set will be a clone of the parameter. If an\n * Array, then the new Set will be initialized with the Array. If something\n * else, then the new Set will contain whatever value was passed.\n */\nfunction Set(initial) {\n  if (initial !== undefined) {\n    if (initial instanceof Set) {\n      this.b = initial.b.concat([]);\n    }\n    else if (initial instanceof Array) {\n      this.b = [];\n      for (var i = 0; i < initial.length; ++i) {\n        this.add(initial[i]);\n      }\n    }\n    else {\n      this.b = [initial];\n    }\n  }\n  else {\n    this.b = [];\n  }\n}\n\nSet.prototype.b = undefined;\n\n/**\n * Adds a value to the set.\n *\n * @param value The value to add.\n */\nSet.prototype.add = function add(value) {\n  var t = this.b.indexOf(value);\n  if (t < 0) {\n    this.b.push(value);\n  }\n};\n\n/**\n * Destructively adds the elements of another set to this set.\n *\n * @param {module:set.Set} s The set to add.\n * @throws {Error} If ``s`` is not a Set object\n */\nSet.prototype.union = function union(s) {\n  if (s === null || s === undefined) {\n    return;\n  }\n  if (!(s instanceof Set)) {\n    throw new Error(\"union with non-Set\");\n  }\n  var len = s.b.length;\n  for (var i = 0; i < len; ++i) {\n    this.add(s.b[i]);\n  }\n};\n\n/**\n * Selects a subset of values.\n *\n * @param {Function} f A function that selects values. It is called with each\n * value. If the value happens to be an ``Array``, then the function is\n * *applied* to this array. A return value which is truthy includes the value,\n * otherwise the value is excluded.\n *\n * @returns An object of the same class as the object on which the method is\n * called. This object contains only the value selected by the function.\n */\nSet.prototype.filter = function filter(f) {\n  var ret = new this.constructor();\n  // Yep, we cheat\n  ret.b = this.b.filter(f);\n  return ret;\n};\n\n/**\n * This method works like Array.map but with a provision for eliminating\n * elements from the resulting Set.\n *\n * @param {Function} f This parameter plays the same role as for Array.map.\n * However, when it returns an undefined value, this return value is not added\n * to the Set that will be returned.\n *\n * @returns The new set. This set is of the same class as the original set.\n */\nSet.prototype.map = function map(f) {\n  var ret = new this.constructor();\n  for (var i = 0; i < this.b.length; ++i) {\n    var result = f(this.b[i]);\n\n    // Undefined is not added.\n    if (result !== undefined) {\n      ret.add(result);\n    }\n  }\n  return ret;\n};\n\n/**\n * Applies a function on each value stored in the set.\n *\n * @param {Function} f A function which accepts one parameter. The function will\n * be called on each value.\n */\nSet.prototype.forEach = function forEach(f) {\n  this.b.forEach(f);\n};\n\n/**\n * Converts the set to a string.\n *\n * @returns {string} All the values, joined with \", \".\n */\nSet.prototype.toString = function toString() {\n  return this.b.join(\", \");\n};\n\n/**\n * @returns {integer} The number of values stored.\n */\nSet.prototype.size = function size() {\n  return this.b.length;\n};\n\n/**\n * Determines whether or not this set has the parameter passed.\n *\n * @param obj The object which we want to look for.\n *\n * @returns {boolean} True if the object is present, false if not.\n */\nSet.prototype.has = function has(obj) {\n  return this.b.indexOf(obj) >= 0;\n};\n\n/**\n * Converts the object on which this method is called to an array.\n *\n * @returns {Array} An array that corresponds to the object.\n */\nSet.prototype.toArray = function toArray() {\n  return this.b.slice();\n};\n\n// End of Set\n\nexports.Set = Set;\n\n// LocalWords:  hashstructs HashSet Dubeau MPL Mangalam LocalWords\n// LocalWords:  param truthy\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/set.js\n// module id = 7\n// module chunks = 0 1","/**\n * @desc Classes that model datatypes used in RNG schemas.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n *\n */\n\"use strict\";\n\nvar builtin = require(\"./datatypes/builtin\").builtin;\nvar xmlschema = require(\"./datatypes/xmlschema\").xmlschema;\nvar errors = require(\"./datatypes/errors\");\n\n/**\n * @classdesc This class does not exist as a JavaScript entity. This is a\n * pseudo-class describing the structure that all datatypes share.\n *\n * @name module:datatypes.Datatype\n * @class\n * @static\n *\n * @property {boolean} needsContext ``true`` if this builtin type needs a\n * context, ``false`` if not.\n *\n * @property {RegExp} regexp A JavaScript regular expression which can be used\n * to partially validate a value. This regular expression is such that if it\n * does *not* match a value, then the value is invalid. If it does match the\n * value, then {@link module:datatypes.Datatype#disallows disallows} must be\n * called to determine whether the value is actually allowed or not.\n */\n\n/**\n * Parses the parameters.\n *\n * @method\n * @name module:datatypes.Datatype#parseParams\n *\n * @param {string} location A string indicating the location of the ``<data>``\n * element for which we are parsing parameters.\n *\n * @param {Array.<{name: string, value: string}>} params The parameters.\n *\n * @returns {Object} The parsed parameters, to be used with the other methods on\n * this class. Data types are free to change the format of this object at any\n * time.\n *\n * @throws {module:datatypes.ParameterParsingError} If the parameters are\n * erroneous.\n */\n\n/**\n * Parses a value. Checks that the value is allowed by the type and converts it\n * to an internal representation.\n *\n * @method\n * @name module:datatypes.Datatype#parseValue\n *\n * @returns {Object} The parsed value, to be used with the other methods on this\n * class. Data types are free to change the format of this object at any time.\n *\n * @param {module:datatypes~Context} context The context of the value.\n *\n * @throws {module:datatypes.ValueValidationError} If the value is\n * erroneous.\n */\n\n/**\n * Checks whether two strings are equal according to the type.\n *\n * @method\n * @name module:datatypes.Datatype#equal\n *\n * @param {string} value The string from the XML document to be validated.\n *\n * @param {Object} schemaValue The **parsed** value from the schema.\n *\n * @param {module:datatypes~Context} context The context in the document, if\n * needed.\n *\n * @returns {boolean} ``true`` if equal, ``false`` if not.\n */\n\n/**\n * Checks whether the type disallows a certain string.\n *\n * @method\n * @name module:datatypes.Datatype#disallows\n *\n * @param {string} value The string from the XML document to be validated.\n *\n * @param {Object} params The type parameters. These must be **parsed** already.\n *\n * @param {module:datatypes~Context} context The context in the document, if\n * needed.\n *\n * @returns {boolean} ``true`` if allowed, ``false`` if not.\n */\n\n/**\n * @typedef {Object} module:datatypes.TypeLibrary\n *\n * @property {string} uri The uri of the type library.\n *\n * @property {Array.<string, module:datatypes.Datatype>} types A map of builtin\n * type names to builtin types.\n */\n\n/**\n * A context as defined by the Relax NG specification, minus the base URI.  (Why\n * no base URI? Because none of the types implemented by salve require it. So\n * there is no point in keeping track of it.)\n *\n * @typedef {Object} module:datatypes~Context\n *\n * @property {module:name_resolver.NameResolver} resolver A name resolver that\n * can resolve namespace prefixes to namespace URI.\n */\n\n/**\n * @classdesc The registry of types.\n * @class\n * @static\n */\nfunction Registry() {\n  this.libraries = Object.create(null);\n}\n\n/**\n * Adds a library to the registry.\n *\n * @param {module:datatypes.TypeLibrary} library The library to add to the\n * registry.\n *\n * @throws {Error} If the URI is already registered.\n */\nRegistry.prototype.add = function add(library) {\n  var uri = library.uri;\n  if (uri in this.libraries) {\n    throw new Error(\"URI clash: \" + uri);\n  }\n  this.libraries[uri] = library;\n};\n\n/**\n * Searches for a URI in the library.\n *\n * @param {string} uri The URI to search for.\n *\n * @returns {module:datatypes.TypeLibrary|undefined} The library that\n * corresponds to the URI or undefined if no such library exists.\n */\nRegistry.prototype.find = function find(uri) {\n  return this.libraries[uri];\n};\n\n/**\n * Gets the library corresponding to a URI.\n *\n * @param {string} uri The URI.\n *\n * @returns {module:datatypes.TypeLibrary} The library that corresponds to the\n * URI.\n *\n * @throws {Error} If the library does not exist.\n */\nRegistry.prototype.get = function get(uri) {\n  var ret = this.find(uri);\n  if (!ret) {\n    throw new Error(\"can't get library with URI: \" + uri);\n  }\n  return ret;\n};\n\nvar registry = new Registry();\nregistry.add(builtin);\nregistry.add(xmlschema);\n\nexports.registry = registry;\n\n/**\n * @see module:datatypes/errors.ParameterParsingError\n * @static\n */\nexports.ParameterParsingError = errors.ParameterParsingError;\n\n/**\n * @see module:datatypes/errors.ValueValidationError\n * @static\n */\nexports.ValueValidationError = errors.ValueValidationError;\n\n/**\n * @see module:datatypes/errors.ValueError\n * @static\n */\nexports.ValueError = errors.ValueError;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/datatypes.js\n// module id = 8\n// module chunks = 0 1","/**\n * @desc Implementation of the builtin Relax NG datatype library.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\nvar extend = require(\"../tools\").extend;\nvar errorsMod = require(\"./errors\");\n\nvar ParameterParsingError = errorsMod.ParameterParsingError;\nvar ParamError = errorsMod.ParamError;\nvar ValueValidationError = errorsMod.ValueValidationError;\n\n/**\n * Strips leading and trailing space. Normalize all internal spaces to a single\n * space.\n *\n * @private\n *\n * @param {string} value The value whose space we want to normalize.\n *\n * @returns {string} The normalized value.\n */\nfunction normalizeSpace(value) {\n  return value.trim().replace(/\\s{2,}/g, \" \");\n}\n\nvar base = {\n  parseParams: function parseParams(location, params) {\n    if (params && params.length > 0) {\n      throw new ParameterParsingError(location,\n                                      new ParamError(\"this type does\" +\n                                                     \" not accept parameters\"));\n    }\n  },\n  parseValue: function parseValue(value, context) {\n    var errors = this.disallows(value, [], context);\n    if (errors.length) {\n      throw new ValueValidationError(errors);\n    }\n    return { value: value };\n  },\n};\n\nvar string = extend({}, base, {\n  equal: function equal(value, schemaValue, _context, _schemaContext) {\n    if (schemaValue.value === undefined) {\n      throw Error(\"it looks like you are trying to use an unparsed value\");\n    }\n\n    return value === schemaValue.value;\n  },\n  disallows: function disallows(_value, _params, _context) {\n    return false;\n  },\n  regexp: /.*/,\n  needsContext: false,\n});\n\nvar token = extend({}, base, {\n  equal: function equal(value, schemaValue, _context) {\n    if (schemaValue.value === undefined) {\n      throw Error(\"it looks like you are trying to use an unparsed value\");\n    }\n\n    return normalizeSpace(value) === normalizeSpace(schemaValue.value);\n  },\n  disallows: function disallows(_value, _params, _context) {\n    // Yep, token allows anything, just like string.\n    return false;\n  },\n  regexp: /.*/,\n  needsContext: false,\n});\n\n/**\n * The builtin datatype library.\n *\n * @type module:datatypes.TypeLibrary\n */\nvar builtin = {\n  uri: \"\",\n  types: {\n    string: string,\n    token: token,\n  },\n};\n\nexports.builtin = builtin;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/datatypes/builtin.js\n// module id = 9\n// module chunks = 0 1","/**\n * @desc Common tools for salve.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\nfunction copy(target, source) {\n  for (var i in source) { // eslint-disable-line guard-for-in\n    target[i] = source[i];\n  }\n}\n\n/**\n * Modify ``target`` by copying the sources into it. This function is designed\n * to fit the internal needs of salve and is not meant as a general purpose\n * \"extend\" function like provided by jQuery or Lodash (for instance).\n *\n * @param {Object} target The target to copy into.\n *\n * @param {Object} sources... The sources from which to copy. These sources are\n * processed in order.\n *\n * @returns {Object} The target.\n */\nfunction extend() {\n  var target = arguments[0];\n  var limit = arguments.length;\n  for (var ix = 1; ix < limit; ++ix) {\n    copy(target, arguments[ix]);\n  }\n\n  return target;\n}\n\nexports.extend = extend;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/tools.js\n// module id = 10\n// module chunks = 0 1","/**\n * @desc Errors that can be raised during parsing of types.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\nvar oop = require(\"../oop\");\n\n/**\n * Records an error due to an incorrect parameter (``<param>``) value. This is\n * an error in the **schema** used to validate a document. Note that these\n * errors are *returned* by salve's internal code. They are not *thrown*.\n *\n * @constructor\n * @static\n * @param {string} message The actual error description.\n */\nfunction ParamError(message) {\n  this.message = message;\n}\n\nParamError.prototype.toString = function toString() {\n  return this.message;\n};\n\n/**\n * Records an error due to an incorrect value (``<value>``).  This is an error\n * in the **schema** used to validate a document. Note that these errors are\n * *returned* by salve's internal code. They are not *thrown*.\n *\n * @constructor\n * @static\n * @param {string} message The actual error description.\n */\nfunction ValueError(message) {\n  this.message = message;\n}\n\nValueError.prototype.toString = function toString() {\n  return this.message;\n};\n\n/**\n * Records the failure of parsing a parameter (``<param>``) value. Whereas\n * {@link module:datatypes/errors.ParamError ParamError} records each individual\n * issue with a parameter's parsing, this object is used to throw a single\n * failure that collects all the individual issues that were encountered.\n *\n * @constructor\n * @static\n *\n * @param {string} location The location of the ``<param>`` in the schema.\n *\n * @param {Array.<module:datatypes/errors.ParamError>} errors The errors\n *        encountered.\n *\n * @extends Error\n */\nfunction ParameterParsingError(location, errors) {\n  // This is crap to work around the fact that Error is a terribly badly\n  // designed class or prototype or whatever. Unfortunately the stack trace is\n  // off...\n  var msg = location + \": \" + errors.map(function map(x) {\n    return x.toString();\n  }).join(\"\\n\");\n  var err = new Error(msg);\n  this.errors = errors;\n  this.name = \"ParameterParsingError\";\n  this.stack = err.stack;\n  this.message = err.message;\n}\n\noop.inherit(ParameterParsingError, Error);\n\n/**\n * Records the failure of parsing a value (``<value>``). Whereas {@link\n * module:datatypes/errors.ValueError ValueError} records each individual issue\n * with a value's parsing, this object is used to throw a single failure that\n * collects all the individual issues that were encountered.\n *\n * @constructor\n * @static\n *\n * @param {Array.<module:datatypes/errors.ValueError>} errors The errors\n * encountered.\n *\n * @extends Error\n */\nfunction ValueValidationError(errors) {\n  // This is crap to work around the fact that Error is a terribly badly\n  // designed class or prototype or whatever. Unfortunately the stack trace is\n  // off...\n  var msg = errors.map(function msg(x) {\n    return x.toString();\n  }).join(\"\\n\");\n  var err = new Error(msg);\n  this.errors = errors;\n  this.name = \"ValueValidationError\";\n  this.stack = err.stack;\n  this.message = err.message;\n}\n\noop.inherit(ValueValidationError, Error);\n\nexports.ParamError = ParamError;\nexports.ValueError = ValueError;\nexports.ParameterParsingError = ParameterParsingError;\nexports.ValueValidationError = ValueValidationError;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/datatypes/errors.js\n// module id = 11\n// module chunks = 0 1","/**\n * @desc Implementation of the XMLSchema datatypes.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\nvar extend = require(\"../tools\").extend;\nvar errorsMod = require(\"./errors\");\nvar regexp = require(\"./regexp\"); // eslint-disable-line import/no-unresolved\nvar xmlcharacters = require(\"./xmlcharacters\");\n\n// Whitespace processing.\n\n/**\n * Preserve the whitespace\n * @private\n */\nvar PRESERVE = 1;\n\n/**\n * Replace all instances of whitespace by spaces.\n * @private\n */\nvar REPLACE = 2;\n\n/**\n * Replace all instances of whitespace by spaces and collapse consecutive\n * spaces.\n * @private\n */\nvar COLLAPSE = 3;\n\nvar xmlNameRe = xmlcharacters.xmlNameRe;\nvar xmlNcname = xmlcharacters.xmlNcname;\nvar xmlNcnameRe = xmlcharacters.xmlNcnameRe;\nvar xmlNameChar = xmlcharacters.xmlNameChar;\nvar ParamError = errorsMod.ParamError;\nvar ValueError = errorsMod.ValueError;\nvar ParameterParsingError = errorsMod.ParameterParsingError;\nvar ValueValidationError = errorsMod.ValueValidationError;\n\nfunction failIfNotInteger(value, name) {\n  if (value.search(/^\\d+$/) !== -1) {\n    return false;\n  }\n\n  return new ParamError(name + \" must have an integer value\");\n}\n\nfunction failIfNotNonNegativeInteger(value, name) {\n  if (!failIfNotInteger(value, name) && Number(value) >= 0) {\n    return false;\n  }\n\n  return new ParamError(name + \" must have a non-negative integer value\");\n}\n\nfunction failIfNotPositiveInteger(value, name) {\n  if (!failIfNotInteger(value, name) && Number(value) > 0) {\n    return false;\n  }\n\n  return new ParamError(name + \" must have a positive value\");\n}\n\n//\n// The parameters\n//\n\n/**\n * @classdesc This class does not exist as a JavaScript entity. This is a\n * pseudo-class describing the structure that all parameter types used for XML\n * Schema type processing share.\n *\n * @name module:datatypes/xmlschema~Parameter\n * @class\n * @private\n *\n * @property {string} name Name of the parameter.\n *\n * @property {boolean} repeatable Whether it can appear more than once on the\n * same type.\n */\n\n/**\n * Convert the parameter value from a string to a value to be used internally by\n * this code.\n *\n * @method\n * @name module:datatypes/xmlschema~Parameter#convert\n * @param {string} value Value to convert.\n * @returns The converted value.\n */\n\n\n/**\n * Checks whether a parameter is invalid.\n *\n * @method\n * @name module:datatypes/xmlschema~Parameter#isInvalidParam\n *\n * @param {string} value The parameter value to check. This is the raw string\n * from the schema, not a value converted by {@link\n * module:datatypes/xmlschema~Parameter#convert convert}.\n *\n * @param {string} name The name of the parameter. This allows using generic\n * functions to check on values.\n *\n * @param {string} type The {@link module:datatypes.Datatype Datatype} object\n * for which this parameter is checked.\n *\n * @returns {false|Array.<module:datatypes/errors~ParamError>} ``false`` if\n * there is no problem. Otherwise, an array of errors.\n */\n\n/**\n * Checks whether a value that appears in the XML document being validated is\n * invalid according to this parameter.\n *\n * @method\n * @name module:datatypes/xmlschema~Parameter#isInvalidValue\n *\n * @param {Object} value The value from the XML document. This is the parsed\n * value, converted by {@link module:datatypes.Datatype#parseValue parseValue}.\n *\n * @param param The parameter value. This must be the value obtained from {@link\n * module:datatypes/xmlschema~Parameter#convert convert}.\n *\n * @param {string} type The {@link module:datatypes.Datatype Datatype} object\n * for which this parameter is checked.\n *\n * @returns {false|module:datatypes/errors.ValueError} ``false`` if there is no\n * problem. Otherwise, an error.\n */\n\nvar lengthP = {\n  name: \"length\",\n  repeatable: false,\n  convert: Number,\n  isInvalidParam: failIfNotNonNegativeInteger,\n  isInvalidValue: function isInvalidValue(value, param, type) {\n    if (type.valueLength(value) === param) {\n      return false;\n    }\n\n    return new ValueError(\"length of value should be \" + param);\n  },\n};\n\nvar minLengthP = {\n  name: \"minLength\",\n  repeatable: false,\n  convert: Number,\n  isInvalidParam: failIfNotNonNegativeInteger,\n  isInvalidValue: function isInvalidValue(value, param, type) {\n    if (type.valueLength(value) >= param) {\n      return false;\n    }\n\n    return new ValueError(\"length of value should be greater than \" +\n                          \"or equal to \" + param);\n  },\n};\n\nvar maxLengthP = {\n  name: \"maxLength\",\n  repeatable: false,\n  convert: Number,\n  isInvalidParam: failIfNotNonNegativeInteger,\n  isInvalidValue: function isInvalidValue(value, param, type) {\n    if (type.valueLength(value) <= param) {\n      return false;\n    }\n\n    return new ValueError(\"length of value should be less than \" +\n                          \"or equal to \" + param);\n  },\n};\n\n//\n// pattern is special. It converts the param value found in the RNG file into an\n// object with two fields: ``rng`` and ``internal``. RNG is the string value\n// from the RNG file, and ``internal`` is a representation internal to salve. We\n// use ``internal`` for performing the validation but present ``rng`` to the\n// user. Note that if pattern appears multiple times as a parameter, the two\n// values are the result of the concatenation of all the instance of the pattern\n// parameter. (Why this? Because it would be confusing to show the internal\n// value in error messages to the user.)\n//\n\nvar reCache = Object.create(null);\n\nvar patternP = {\n  name: \"pattern\",\n  repeatable: \"combine\",\n  convert: function convert(value) {\n    var internal = reCache[value];\n    if (internal === undefined) {\n      internal = reCache[value] = regexp.parse(value);\n    }\n    return {\n      rng: value,\n      internal: internal,\n    };\n  },\n  combine: function combine(values) {\n    return values.map(this.convert);\n  },\n  isInvalidParam: function isInvalidParam(value) {\n    try {\n      this.convert(value);\n    }\n    catch (ex) {\n      // Convert the error into something that makes sense for salve.\n      if (ex instanceof regexp.SalveParsingError) {\n        return new ParamError(ex.message);\n      }\n\n      // Rethrow\n      throw ex;\n    }\n    return false;\n  },\n  isInvalidValue: function isInvalidValue(value, param, _type) {\n    if (param instanceof Array) {\n      var failedOn;\n      for (var i = 0; !failedOn && i < param.length; ++i) {\n        if (!param[i].internal.test(value)) {\n          failedOn = param[i];\n        }\n      }\n\n      if (!failedOn) {\n        return false;\n      }\n\n      return new ValueError(\"value does not match the pattern \" + failedOn.rng);\n    }\n\n    if (param.internal.test(value)) {\n      return false;\n    }\n\n    return new ValueError(\"value does not match the pattern \" + param.rng);\n  },\n};\n\nvar totalDigitsP = {\n  name: \"totalDigits\",\n  repeatable: false,\n  convert: Number,\n  isInvalidParam: failIfNotPositiveInteger,\n  isInvalidValue: function isInvalidValue(value, param, _type) {\n    var str = String(Number(value)).replace(/[-+.]/g, \"\");\n    if (str.length > param) {\n      return new ValueError(\"value must have at most \" + param + \" digits\");\n    }\n\n    return false;\n  },\n};\n\nvar fractionDigitsP = {\n  name: \"fractionDigits\",\n  repeatable: false,\n  convert: Number,\n  isInvalidParam: failIfNotNonNegativeInteger,\n  isInvalidValue: function isInvalidValue(value, param, _type) {\n    var str = String(Number(value)).replace(/^.*\\./, \"\");\n    if (str.length > param) {\n      return new ValueError(\"value must have at most \" + param +\n                            \" fraction digits\");\n    }\n\n    return false;\n  },\n};\n\nvar maxInclusiveP = {\n  name: \"maxInclusive\",\n  repeatable: false,\n  convert: Number,\n  isInvalidParam: function isInvalidParam(value, name, type) {\n    return type.disallows(value);\n  },\n  isInvalidValue: function isInvalidValue(value, param, _type) {\n    if (value > param) {\n      return new ValueError(\"value must be less than or equal to \" + param);\n    }\n    return false;\n  },\n};\n\nvar maxExclusiveP = {\n  name: \"maxExclusive\",\n  repeatable: false,\n  convert: Number,\n  isInvalidParam: function isInvalidParam(value, name, type) {\n    return type.disallows(value);\n  },\n  isInvalidValue: function isInvalidValue(value, param, _type) {\n    if (value >= param) {\n      return new ValueError(\"value must be less than \" + param);\n    }\n    return false;\n  },\n};\n\nvar minInclusiveP = {\n  name: \"minInclusive\",\n  repeatable: false,\n  convert: Number,\n  isInvalidParam: function isInvalidParam(value, name, type) {\n    return type.disallows(value);\n  },\n  isInvalidValue: function isInvalidValue(value, param, _type) {\n    if (value < param) {\n      return new ValueError(\"value must be greater than or equal to \" + param);\n    }\n    return false;\n  },\n};\n\nvar minExclusiveP = {\n  name: \"minExclusive\",\n  repeatable: false,\n  convert: Number,\n  isInvalidParam: function isInvalidParam(value, name, type) {\n    return type.disallows(value);\n  },\n  isInvalidValue: function isInvalidValue(value, param, _type) {\n    if (value <= param) {\n      return new ValueError(\"value must be greater than \" + param);\n    }\n    return false;\n  },\n};\n\n/**\n * @private\n * @param {string} value The value to process.\n *\n * @param param One of {@link module:datatypes/xmlschema~PRESERVE PRESERVE},\n * {@link module:datatypes/xmlschema~REPLACE REPLACE} or {@link\n * module:datatypes/xmlschema~COLLAPSE COLLAPSE}.\n *\n * @returns {string} The white-space-processed value. That is, the ``value``\n * parameter once its white-spaces have been processed according to the\n * parameter passed. See the XML Schema Datatype standard for the meaning.\n */\nfunction whiteSpaceProcessed(value, param) {\n  switch (param) {\n  case PRESERVE:\n    break;\n  case REPLACE:\n    value = value.replace(/\\r\\n\\t/g, \" \");\n    break;\n  case COLLAPSE:\n    value = value.replace(/\\r\\n\\t/g, \" \").trim().replace(/\\s{2,}/g, \" \");\n    break;\n  default:\n    throw new Error(\"unexpected value: \" + param);\n  }\n  return value;\n}\n\n/**\n * @classdesc This class does not exist as a JavaScript entity. This is a\n * pseudo-class describing the structure that all datatype implementations in\n * this module share.\n *\n * @name module:datatypes/xmlschema.Base\n * @extends module:datatypes.Datatype\n * @class\n * @private\n *\n * @property whiteSpaceDefault The default whitespace processing for this type.\n *\n * @property {string} typeErrorMsg The error message to give if a value is\n * disallowed.\n *\n * @property {Array.<module:datatypes/xmlschema~Parameter>} validParams\n * Parameters that are valid for this type.\n *\n * @property {Object} paramNameToObj An object that contains a mapping of\n * parameter names to parameter objects. It is constructed during initialization\n * of the type.\n */\n\n/**\n * Initializes the type. Must be called once before the type is used.\n *\n * @name module:datatypes/xmlschema.Base#init\n * @method\n */\n\n/**\n * Converts a value. It does the strict minimum to convert the value from a\n * string to an internal representation. It is never interchangeable with {@link\n * module:datatypes.Datatype#parseValue parseValue}.\n *\n * @name module:datatypes/xmlschema.Base#convertValue\n * @method\n *\n * @param {string} value The value from the XML document.\n *\n * @param {module:datatypes~Context} context The context of the value in the XML\n * document.\n *\n * @returns An internal representation.\n */\n\n/**\n * Computes the value's length. This may differ from the value's length, as it\n * appears in the XML document it comes from.\n *\n * @name module:datatypes/xmlschema.Base#valueLength\n * @method\n *\n * @param {string} value The value from the XML document.\n *\n * @returns {integer} The length.\n */\n\n/**\n * Determines whether the parameters disallow a value.\n *\n * @name module:datatypes/xmlschema.Base#disallowedByParams\n * @method\n *\n * @param {string} raw The value from the XML document.\n *\n * @param value The internal representation of the value, as returned from\n * {@link module:datatypes/xmlschema.Base#convertValue}.\n *\n * @param params The parameters, as returned from {@link\n * module:datatypes.Datatype#parseParams}.\n *\n * @param context The context, if needed.\n *\n * @returns {false|Array.<module:datatypes/errors.ValueError>} ``false`` if\n * there is no error. Otherwise, an array of errors.\n */\n\nvar base = {\n  init: function init() {\n    if (this.validParams) {\n      this.paramNameToObj = Object.create(null);\n      for (var i = 0; i < this.validParams.length; ++i) {\n        var param = this.validParams[i];\n        this.paramNameToObj[param.name] = param;\n      }\n    }\n    // Initialize this value to the same value one would get is not\n    // specifying any parameters on the type.\n    this.defaultParams = this.parseParams();\n  },\n  whiteSpaceDefault: COLLAPSE,\n  convertValue: function convertValue(value, _context) {\n    return whiteSpaceProcessed(value, this.whiteSpaceDefault);\n  },\n  valueLength: function valueLength(value) {\n    return value.length;\n  },\n  parseValue: function parseValue(value, context) {\n    var errors = this.disallows(value, {}, context);\n    if (errors.length) {\n      throw new ValueValidationError(errors);\n    }\n    return { value: this.convertValue(value, context) };\n  },\n  parseParams: function parseParams(location, params) {\n    var me = this;\n    var errors = [];\n    var names = Object.create(null);\n    params = params || [];\n    params.forEach(function each(x) {\n      var name = x.name;\n\n      // Do we know this parameter?\n      if (!me.paramNameToObj[name]) {\n        errors.push(new ParamError(\"unexpected parameter: \" + name));\n        return;\n      }\n\n      var prop = me.paramNameToObj[name];\n\n      // Is the value valid at all?\n      var invalid = prop.isInvalidParam(x.value, name, me);\n      if (invalid) {\n        errors.push(invalid);\n      }\n\n      // Is it repeated, and repeatable?\n      if (names[name] && !prop.repeatable) {\n        errors.push(new ParamError(\"cannot repeat parameter \" + name));\n      }\n\n      // We gather all the values in a map of name to value.\n      var values = names[name];\n      if (!values) {\n        values = names[name] = [];\n      }\n\n      values.push(x.value);\n    });\n\n    if (errors.length) {\n      throw new ParameterParsingError(location, errors);\n    }\n\n    // We just modify the ``names`` object to produce a return value.\n    var ret = names;\n    Object.keys(ret).forEach(function each(key) {\n      var value = ret[key];\n      var prop = me.paramNameToObj[key];\n      if (value.length > 1) {\n        ret[key] = prop.combine(value);\n      }\n      else {\n        ret[key] = ((prop.convert) ? prop.convert(value[0]) : value[0]);\n      }\n    });\n\n    // Inter-parameter checks. There's no point is trying to generalize\n    // this.\n\n    if (ret.minLength > ret.maxLength) {\n      errors.push(new ParamError(\n        \"minLength must be less than or equal to maxLength\"));\n    }\n\n    if (ret.length !== undefined) {\n      if (ret.minLength !== undefined) {\n        errors.push(new ParamError(\n          \"length and minLength cannot appear together\"));\n      }\n      if (ret.maxLength !== undefined) {\n        errors.push(new ParamError(\n          \"length and maxLength cannot appear together\"));\n      }\n    }\n\n    if (ret.maxInclusive !== undefined) {\n      if (ret.maxExclusive !== undefined) {\n        errors.push(new ParamError(\n          \"maxInclusive and maxExclusive cannot appear together\"));\n      }\n\n      // maxInclusive, minExclusive\n      if (ret.minExclusive >= ret.maxInclusive) {\n        errors.push(new ParamError(\n          \"minExclusive must be less than maxInclusive\"));\n      }\n    }\n\n    if (ret.minInclusive !== undefined) {\n      if (ret.minExclusive !== undefined) {\n        errors.push(new ParamError(\n          \"minInclusive and minExclusive cannot appear together\"));\n      }\n\n      // maxInclusive, minInclusive\n      if (ret.minInclusive > ret.maxInclusive) {\n        errors.push(new ParamError(\n          \"minInclusive must be less than or equal to maxInclusive\"));\n      }\n\n      // maxExclusive, minInclusive\n      if (ret.minInclusive >= ret.maxExclusive) {\n        errors.push(new ParamError(\n          \"minInclusive must be less than maxExclusive\"));\n      }\n    }\n\n    // maxExclusive, minExclusive\n    if (ret.minExclusive > ret.maxExclusive) {\n      errors.push(new ParamError(\n        \"minExclusive must be less than or equal to maxExclusive\"));\n    }\n\n    if (errors.length) {\n      throw new ParameterParsingError(location, errors);\n    }\n\n    return ret;\n  },\n  disallowedByParams: function disallowedByParams(raw, value, params, _context) {\n    var me = this;\n    if (params) {\n      var errors = [];\n      Object.keys(params).forEach(function each(name) {\n        var param = me.paramNameToObj[name];\n        var err = param.isInvalidValue(value, params[name], me);\n        if (err) {\n          errors.push(err);\n        }\n      });\n\n      if (errors.length) {\n        return errors;\n      }\n    }\n\n    return false;\n  },\n  equal: function equal(value, schemaValue, context) {\n    if (schemaValue.value === undefined) {\n      throw Error(\"it looks like you are trying to use an \" +\n                  \"unparsed value\");\n    }\n    var converted;\n\n    try {\n      converted = this.convertValue(value, context);\n    }\n    catch (ex) {\n      // An invalid value cannot be equal.\n      if (ex instanceof ValueValidationError) {\n        return false;\n      }\n      throw ex;\n    }\n\n    return converted === schemaValue.value;\n  },\n  disallows: function disallows(value, params, context) {\n    if (params instanceof Array) {\n      throw new Error(\"it looks like you are passing unparsed \" +\n                      \"parameters to disallows\");\n    }\n    else if (!params || Object.keys(params).length === 0) {\n      // If no params were passed, get the default params.\n      params = this.defaultParams;\n    }\n\n    // This must be done against the raw value because the **lexical** space of\n    // this type must match this.\n    if (this.regexp &&\n        !whiteSpaceProcessed(value, COLLAPSE).match(this.regexp)) {\n      return [new ValueError(this.typeErrorMsg)];\n    }\n\n\n    var converted;\n    try {\n      converted = this.convertValue(value, context);\n    }\n    catch (ex) {\n      // An invalid value is not allowed.\n      if (ex instanceof ValueValidationError) {\n        return ex.errors;\n      }\n      throw ex;\n    }\n\n    var errors = this.disallowedByParams(value, converted, params, context);\n    if (errors.length) {\n      return errors;\n    }\n\n    return false;\n  },\n};\n\n//\n// String family\n//\n\nvar string = extend({}, base, {\n  name: \"string\",\n  typeErrorMsg: \"value is not a string\",\n  whiteSpaceDefault: PRESERVE,\n  validParams: [lengthP, minLengthP, maxLengthP, patternP],\n  needsContext: false,\n  regexp: /^.*$/,\n});\n\nvar normalizedString = extend({}, string, {\n  name: \"normalizedString\",\n  typeErrorMsg: \"string contains a tab, carriage return or newline\",\n  regexp: /^[^\\r\\n\\t]+$/,\n});\n\nvar token = extend({}, normalizedString, {\n  name: \"token\",\n  typeErrorMsg: \"not a valid token\",\n  regexp: /^(?:(?! )(?:(?! {3})[^\\r\\n\\t])*[^\\r\\n\\t ])?$/,\n});\n\nvar language = extend({}, token, {\n  name: \"language\",\n  typeErrorMsg: \"not a valid language identifier\",\n  regexp: /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/,\n});\n\nvar Name = extend({}, token, {\n  name: \"Name\",\n  typeErrorMsg: \"not a valid Name\",\n  regexp: xmlNameRe,\n});\n\nvar NCName = extend({}, Name, {\n  name: \"NCName\",\n  typeErrorMsg: \"not a valid NCName\",\n  regexp: xmlNcnameRe,\n});\n\nvar xmlNmtokenRe = new RegExp(\"^[\" + xmlNameChar + \"]+$\");\nvar NMTOKEN = extend({}, token, {\n  name: \"NMTOKEN\",\n  typeErrorMsg: \"not a valid NMTOKEN\",\n  regexp: xmlNmtokenRe,\n});\n\nvar xmlNmtokensRe = new RegExp(\"^[\" + xmlNameChar + \"]+(?: [\" + xmlNameChar\n                               + \"]+)*$\");\nvar NMTOKENS = extend({}, NMTOKEN, {\n  name: \"NMTOKENS\",\n  typeErrorMsg: \"not a valid NMTOKENS\",\n  regexp: xmlNmtokensRe,\n  whiteSpaceDefault: COLLAPSE,\n});\n\nvar ID = extend({}, NCName, {\n  name: \"ID\",\n  typeErrorMsg: \"not a valid ID\",\n});\n\nvar IDREF = extend({}, NCName, {\n  name: \"IDREF\",\n  typeErrorMsg: \"not a valid IDREF\",\n});\n\nvar IDREFS_RE = new RegExp(\"^\" + xmlNcname + \"(?: \" + xmlNcname + \")*$\");\nvar IDREFS = extend({}, IDREF, {\n  name: \"IDREFS\",\n  typeErrorMsg: \"not a valid IDREFS\",\n  regexp: IDREFS_RE,\n  whiteSpaceDefault: COLLAPSE,\n});\n\nvar entity = extend({}, string, {\n  name: \"ENTITY\",\n  typeErrorMsg: \"not a valid ENTITY\",\n});\n\nvar entities = extend({}, string, {\n  name: \"ENTITIES\",\n  typeErrorMsg: \"not a valid ENTITIES\",\n});\n\n//\n// Decimal family\n//\n\nvar decimalPattern = \"[-+]?(?!$)\\\\d*(\\\\.\\\\d*)?\";\nvar decimal = extend({}, base, {\n  name: \"decimal\",\n  typeErrorMsg: \"value not a decimal number\",\n  regexp: new RegExp(\"^\" + decimalPattern + \"$\"),\n  whiteSpaceDefault: COLLAPSE,\n  convertValue: function convertValue(value, _context) {\n    return Number(base.convertValue(value));\n  },\n  validParams: [\n    totalDigitsP, fractionDigitsP, patternP, minExclusiveP, minInclusiveP,\n    maxExclusiveP, maxInclusiveP,\n  ],\n  needsContext: false,\n});\n\nvar integerPattern = \"[-+]?\\\\d+\";\nvar integer = extend({}, decimal, {\n  name: \"integer\",\n  typeErrorMsg: \"value is not an integer\",\n  regexp: new RegExp(\"^\" + integerPattern + \"$\"),\n  validParams: [\n    totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n    maxInclusiveP,\n  ],\n  parseParams: function parseParams(location, params) {\n    var me;\n    var mi;\n    var ret = decimal.parseParams(location, params);\n    if (this.highestVal !== undefined) {\n      if (ret.maxExclusive !== undefined) {\n        me = ret.maxExclusive;\n        if (me > this.highestVal) {\n          throw new ParameterParsingError(\n            location,\n            [new ParamError(\"maxExclusive cannot be greater than \" +\n                            this.highestVal)]);\n        }\n      }\n      else if (ret.maxInclusive !== undefined) {\n        mi = ret.maxInclusive;\n        if (mi > this.highestVal) {\n          throw new ParameterParsingError(\n            location,\n            [new ParamError(\"maxInclusive cannot be greater than \" +\n                           this.highestVal)]);\n        }\n      }\n      else {\n        ret.maxInclusive = this.highestVal;\n      }\n    }\n\n    if (this.lowestVal !== undefined) {\n      if (ret.minExclusive !== undefined) {\n        me = ret.minExclusive;\n        if (me < this.lowestVal) {\n          throw new ParameterParsingError(\n            location,\n            [new ParamError(\"minExclusive cannot be lower than \" +\n                           this.lowestVal)]);\n        }\n      }\n      else if (ret.minInclusive !== undefined) {\n        mi = ret.minInclusive;\n        if (mi < this.lowestVal) {\n          throw new ParameterParsingError(\n            location,\n            [new ParamError(\"minInclusive cannot be lower than \" +\n                           this.lowestVal)]);\n        }\n      }\n      else {\n        ret.minInclusive = this.lowestVal;\n      }\n    }\n\n    return ret;\n  },\n});\n\nvar nonPositiveInteger = extend({}, integer, {\n  name: \"nonPositiveInteger\",\n  typeErrorMsg: \"value is not a nonPositiveInteger\",\n  regexp: /^\\+?0+|-\\d+$/,\n  highestVal: 0,\n  validParams: [\n    totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n    maxInclusiveP,\n  ],\n});\n\nvar negativeInteger = extend({}, nonPositiveInteger, {\n  name: \"negativeInteger\",\n  typeErrorMsg: \"value is not a negativeInteger\",\n  regexp: /^-\\d+$/,\n  highestVal: -1,\n  validParams: [\n    totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n    maxInclusiveP,\n  ],\n});\n\nvar nonNegativeInteger = extend({}, integer, {\n  name: \"nonNegativeInteger\",\n  typeErrorMsg: \"value is not a nonNegativeInteger\",\n  regexp: /^\\+?\\d+$/,\n  lowestVal: 0,\n  validParams: [\n    totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n    maxInclusiveP,\n  ],\n});\n\nvar positiveInteger = extend({}, nonNegativeInteger, {\n  name: \"positiveInteger\",\n  typeErrorMsg: \"value is not a positiveInteger\",\n  regexp: /^\\+?\\d+$/,\n  lowestVal: 1,\n  validParams: [\n    totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n    maxInclusiveP,\n  ],\n});\n\nvar long_ = extend({}, integer, {\n  name: \"long\",\n  typeErrorMsg: \"value is not a long\",\n  highestVal: 9223372036854775807,\n  lowestVal: -9223372036854775808,\n  validParams: [\n    totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n    maxInclusiveP,\n  ],\n});\n\nvar int_ = extend({}, long_, {\n  name: \"int\",\n  typeErrorMsg: \"value is not an int\",\n  highestVal: 2147483647,\n  lowestVal: -2147483648,\n});\n\nvar short_ = extend({}, int_, {\n  name: \"short\",\n  typeErrorMsg: \"value is not a short\",\n  highestVal: 32767,\n  lowestVal: -32768,\n});\n\nvar byte_ = extend({}, short_, {\n  name: \"byte\",\n  typeErrorMsg: \"value is not a byte\",\n  highestVal: 127,\n  lowestVal: -128,\n});\n\nvar unsignedLong = extend({}, nonNegativeInteger, {\n  name: \"unsignedLong\",\n  typeErrorMsg: \"value is not an unsignedLong\",\n  highestVal: 18446744073709551615,\n  validParams: [\n    totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n    maxInclusiveP,\n  ],\n});\n\nvar unsignedInt = extend({}, unsignedLong, {\n  name: \"unsignedInt\",\n  typeErrorMsg: \"value is not an unsignedInt\",\n  highestVal: 4294967295,\n  validParams: [\n    totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n    maxInclusiveP,\n  ],\n});\n\nvar unsignedShort = extend({}, unsignedInt, {\n  name: \"unsignedShort\",\n  typeErrorMsg: \"value is not an unsignedShort\",\n  highestVal: 65535,\n  validParams: [\n    totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n    maxInclusiveP,\n  ],\n});\n\nvar unsignedByte = extend({}, unsignedShort, {\n  name: \"unsignedShort\",\n  typeErrorMsg: \"value is not an unsignedByte\",\n  highestVal: 255,\n  validParams: [\n    totalDigitsP, patternP, minExclusiveP, minInclusiveP, maxExclusiveP,\n    maxInclusiveP,\n  ],\n});\n\nvar boolean_ = extend({}, base, {\n  name: \"boolean\",\n  typeErrorMsg: \"not a valid boolean\",\n  regexp: /^(1|0|true|false)$/,\n  validParams: [patternP],\n  convertValue: function convertValue(value, _context) {\n    return (value === \"1\" || value === \"true\");\n  },\n});\n\nvar B04 = \"[AQgw]\";\nvar B16 = \"[AEIMQUYcgkosw048]\";\nvar B64 = \"[A-Za-z0-9+/]\";\n\nvar B64S = \"(?:\" + B64 + \" ?)\";\nvar B16S = \"(?:\" + B16 + \" ?)\";\nvar B04S = \"(?:\" + B04 + \" ?)\";\n\nvar base64BinaryRe = new RegExp(\n  \"^(?:(?:\" + B64S + \"{4})*(?:(?:\" + B64S + \"{3}\" + B64 + \")|(?:\" + B64S +\n    \"{2}\" + B16S + \"=)|(?:\" + B64S + B04S + \"= ?=)))?$\");\n\nvar base64Binary = extend({}, base, {\n  name: \"base64Binary\",\n  typeErrorMsg: \"not a valid base64Binary\",\n  regexp: base64BinaryRe,\n  validParams: [lengthP, minLengthP, maxLengthP, patternP],\n  convertValue: function convertValue(value, _context) {\n    // We don't need to actually decode it.\n    return value.replace(/\\s/g, \"\");\n  },\n  valueLength: function valueLength(value) {\n    // Length of the decoded value.\n    return Math.floor((value.replace(/[\\s=]/g, \"\").length * 3) / 4);\n  },\n});\n\nvar hexBinary = extend({}, base, {\n  name: \"hexBinary\",\n  typeErrorMsg: \"not a valid hexBinary\",\n  regexp: /^(?:[0-9a-fA-F]{2})*$/,\n  validParams: [lengthP, minLengthP, maxLengthP, patternP],\n  convertValue: function convertValue(value, _context) {\n    return value;\n  },\n  valueLength: function valueLength(value) {\n    // Length of the byte list.\n    return value.length / 2;\n  },\n});\n\nvar doubleRe =\n      new RegExp(\"^(?:(?:[-+]?INF)|(?:NaN)|(?:\" +\n                 decimalPattern + \"(?:[Ee]\" + integerPattern + \")?))$\");\n\nvar float_ = extend({}, base, {\n  name: \"float\",\n  typeErrorMsg: \"not a valid float\",\n  regexp: doubleRe,\n  validParams: [\n    patternP, minInclusiveP, minExclusiveP, maxInclusiveP, maxExclusiveP,\n  ],\n  convertValue: parseFloat,\n});\n\nvar double_ = extend({}, base, {\n  name: \"double\",\n  typeErrorMsg: \"not a valid double\",\n  regexp: doubleRe,\n  validParams: [\n    patternP, minInclusiveP, minExclusiveP, maxInclusiveP, maxExclusiveP,\n  ],\n  convertValue: parseFloat,\n});\n\nvar QName = extend({}, base, {\n  name: \"QName\",\n  typeErrorMsg: \"not a valid QName\",\n  regexp: new RegExp(\"^(?:\" + xmlNcname + \":)?\" + xmlNcname + \"$\"),\n  needsContext: true,\n  convertValue: function convertValue(value, context) {\n    var ret = context.resolver.resolveName(base.convertValue(value));\n    if (ret === undefined) {\n      throw new ValueValidationError(\n        [new ValueError(\"cannot resolve the name \" + value)]);\n    }\n    return \"{\" + ret.ns + \"}\" + ret.name;\n  },\n  validParams: [patternP, lengthP, minLengthP, maxLengthP],\n});\n\nvar NOTATION = extend({}, base, {\n  name: \"NOTATION\",\n  typeErrorMsg: \"not a valid NOTATION\",\n  regexp: new RegExp(\"^(?:\" + xmlNcname + \":)?\" + xmlNcname + \"$\"),\n  needsContext: true,\n  convertValue: function convertValue(value, context) {\n    var ret = context.resolver.resolveName(base.convertValue(value));\n    if (ret === undefined) {\n      throw new ValueValidationError(\n        [new ValueError(\"cannot resolve the name \" + value)]);\n    }\n    return \"{\" + ret.ns + \"}\" + ret.name;\n  },\n  validParams: [patternP, lengthP, minLengthP, maxLengthP],\n});\n\nvar duration = extend({}, base, {\n  name: \"duration\",\n  typeErrorMsg: \"not a valid duration\",\n  regexp: /^-?P(?!$)(?:\\d+Y)?(?:\\d+M)?(?:\\d+D)?(?:T(?!$)(?:\\d+H)?(?:\\d+M)?(?:\\d+(\\.\\d+)?S)?)?$/,\n  validParams: [patternP],\n});\n\nvar yearPattern = \"-?(?:[1-9]\\\\d*)?\\\\d{4}\";\nvar monthPattern = \"[01]\\\\d\";\nvar domPattern = \"[0-3]\\\\d\";\nvar timePattern = \"[012]\\\\d:[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d+)?\";\nvar tzPattern = \"(?:[+-][01]\\\\d:[0-5]\\\\d|Z)\";\nvar tzRe = new RegExp(tzPattern + \"$\");\n\nfunction isLeapYear(year) {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n\nvar dateGroupingRe = new RegExp(\n  \"^(\" + yearPattern + \")-(\" + monthPattern + \")-(\" +\n    domPattern + \")T(\" + timePattern + \")(\" + tzPattern + \"?)$\");\n\nvar maxDoms = [undefined, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction checkDate(value) {\n  // The Date.parse method of JavaScript is not reliable.\n  var match = value.match(dateGroupingRe);\n  if (!match) {\n    return NaN;\n  }\n\n  var year = match[1];\n  var leap = isLeapYear(Number(year));\n  var month = Number(match[2]);\n  if (month === 0 || month > 12) {\n    return NaN;\n  }\n\n  var dom = Number(match[3]);\n  var maxDom = maxDoms[month];\n  if (month === 2 && !leap) {\n    maxDom = 28;\n  }\n  if (dom === 0 || dom > maxDom) {\n    return NaN;\n  }\n\n  var timeParts = match[4].split(\":\");\n  var minutes = Number(timeParts[1]);\n  if (minutes > 59) {\n    return NaN;\n  }\n\n  var seconds = Number(timeParts[2]);\n  if (seconds > 59) {\n    return NaN;\n  }\n\n  // 24 is valid if minutes and seconds are at 0, otherwise 23 is the\n  // limit.\n  var hoursLimit = (!minutes && !seconds) ? 24 : 23;\n  if (Number(timeParts[0]) > hoursLimit) {\n    return NaN;\n  }\n\n  if (match[5] && match[5] !== \"Z\") { // We have a TZ\n    var tzParts = match[5].split(\":\");\n    var tzHours = Number(tzParts[0].slice(1)); // Slice: skip the sign.\n    if (tzHours > 14) {\n      return NaN;\n    }\n\n    var tzSeconds = Number(tzParts[1]);\n    if (tzSeconds > 59) {\n      return NaN;\n    }\n\n    if (tzHours === 14 && tzSeconds !== 0) {\n      return NaN;\n    }\n  }\n\n  return true;\n}\n\nvar dateTime = extend({}, base, {\n  name: \"dateTime\",\n  typeErrorMsg: \"not a valid dateTime\",\n  regexp: new RegExp(\"^\" + yearPattern + \"-\" + monthPattern + \"-\" +\n                     domPattern + \"T\" + timePattern + tzPattern + \"?$\"),\n  validParams: [patternP],\n  disallows: function disallows(value, params, context) {\n    var ret = base.disallows.call(this, value, params, context);\n    if (ret) {\n      return ret;\n    }\n\n    if (isNaN(checkDate(value))) {\n      return [new ValueError(this.typeErrorMsg)];\n    }\n\n    return false;\n  },\n});\n\nvar time = extend({}, base, {\n  name: \"time\",\n  typeErrorMsg: \"not a valid time\",\n  regexp: new RegExp(\"^\" + timePattern + tzPattern + \"?$\"),\n  validParams: [patternP],\n  disallows: function disallows(value, params, context) {\n    var ret = base.disallows.call(this, value, params, context);\n    if (ret) {\n      return ret;\n    }\n\n    // Date does not validate times, so set the date to something fake.\n    if (isNaN(checkDate(\"1901-01-01T\" + value))) {\n      return [new ValueError(this.typeErrorMsg)];\n    }\n\n    return false;\n  },\n});\n\nvar date = extend({}, base, {\n  name: \"date\",\n  typeErrorMsg: \"not a valid date\",\n  regexp: new RegExp(\"^\" + yearPattern + \"-\" + monthPattern + \"-\" +\n                     domPattern + tzPattern + \"?$\"),\n  validParams: [patternP],\n  disallows: function disallows(value, params, context) {\n    var ret = base.disallows.call(this, value, params, context);\n    if (ret) {\n      return ret;\n    }\n\n    // We have to add time for Date() to parse it.\n    var match = value.match(tzRe);\n    value = (match) ? (value.slice(0, match.index) + \"T00:00:00\" + match[0]) :\n      (value + \"T00:00:00\");\n    if (isNaN(checkDate(value))) {\n      return [new ValueError(this.typeErrorMsg)];\n    }\n\n    return false;\n  },\n});\n\nvar gYearMonth = extend({}, base, {\n  name: \"gYearMonth\",\n  typeErrorMsg: \"not a valid gYearMonth\",\n  regexp: new RegExp(\"^\" + yearPattern + \"-\" + monthPattern + tzPattern + \"?$\"),\n  validParams: [patternP],\n  disallows: function disallows(value, params, context) {\n    var ret = base.disallows.call(this, value, params, context);\n    if (ret) {\n      return ret;\n    }\n\n    // We have to add a day and time for Date() to parse it.\n    var match = value.match(tzRe);\n    value = (match) ? (value.slice(0, match.index) + \"-01T00:00:00\" + match[0]) :\n      (value + \"-01T00:00:00\");\n    if (isNaN(checkDate(value))) {\n      return [new ValueError(this.typeErrorMsg)];\n    }\n\n    return false;\n  },\n});\n\nvar gYear = extend({}, base, {\n  name: \"gYear\",\n  typeErrorMsg: \"not a valid gYear\",\n  regexp: new RegExp(\"^\" + yearPattern + tzPattern + \"?$\"),\n  validParams: [patternP],\n  disallows: function disallows(value, params, context) {\n    var ret = base.disallows.call(this, value, params, context);\n    if (ret) {\n      return ret;\n    }\n\n    // We have to add a month, a day and a time for Date() to parse it.\n    var match = value.match(tzRe);\n    value = (match) ?\n      (value.slice(0, match.index) + \"-01-01T00:00:00\" + match[0]) :\n      (value + \"-01-01T00:00:00\");\n    if (isNaN(checkDate(value))) {\n      return [new ValueError(this.typeErrorMsg)];\n    }\n\n    return false;\n  },\n});\n\nvar gMonthDay = extend({}, base, {\n  name: \"gMonthDay\",\n  typeErrorMsg: \"not a valid gMonthDay\",\n  regexp: new RegExp(\"^\" + monthPattern + \"-\" + domPattern + tzPattern + \"?$\"),\n  validParams: [patternP],\n  disallows: function disallows(value, params, context) {\n    var ret = base.disallows.call(this, value, params, context);\n    if (ret) {\n      return ret;\n    }\n\n    // We have to add a year and a time for Date() to parse it.\n    var match = value.match(tzRe);\n    value = (match) ? (value.slice(0, match.index) + \"T00:00:00\" + match[0]) :\n      (value + \"T00:00:00\");\n    // We always add 2000, which is a leap year, so 01-29 won't raise an\n    // error.\n    if (isNaN(checkDate(\"2000-\" + value))) {\n      return [new ValueError(this.typeErrorMsg)];\n    }\n\n    return false;\n  },\n});\n\nvar gDay = extend({}, base, {\n  name: \"gDay\",\n  typeErrorMsg: \"not a valid gDay\",\n  regexp: new RegExp(\"^\" + domPattern + tzPattern + \"?$\"),\n  validParams: [patternP],\n  disallows: function disallows(value, params, context) {\n    var ret = base.disallows.call(this, value, params, context);\n    if (ret) {\n      return ret;\n    }\n\n    // We have to add a year and a time for Date() to parse it.\n    var match = value.match(tzRe);\n    value = (match) ? (value.slice(0, match.index) + \"T00:00:00\" + match[0]) :\n      (value + \"T00:00:00\");\n    // We always add 2000, which is a leap year, so 01-29 won't raise an\n    // error.\n    if (isNaN(checkDate(\"2000-01-\" + value))) {\n      return [new ValueError(this.typeErrorMsg)];\n    }\n\n    return false;\n  },\n});\n\nvar gMonth = extend({}, base, {\n  name: \"gMonth\",\n  typeErrorMsg: \"not a valid gMonth\",\n  regexp: new RegExp(\"^\" + monthPattern + tzPattern + \"?$\"),\n  validParams: [patternP],\n  disallows: function disallows(value, params, context) {\n    var ret = base.disallows.call(this, value, params, context);\n    if (ret) {\n      return ret;\n    }\n\n    // We have to add a year and a time for Date() to parse it.\n    var match = value.match(tzRe);\n    value = (match) ? (value.slice(0, match.index) + \"-01T00:00:00\" + match[0]) :\n      (value + \"-01T00:00:00\");\n    // We always add 2000, which is a leap year, so 01-29 won't raise an\n    // error.\n    if (isNaN(checkDate(\"2000-\" + value))) {\n      return [new ValueError(this.typeErrorMsg)];\n    }\n\n    return false;\n  },\n});\n\n// Generated from http://jmrware.com/articles/2009/uri_regexp/URI_regex.html\n// eslint-disable-next-line\nvar reJsRfc3986UriReference = /^(?:[A-Za-z][A-Za-z0-9+\\-.]*:(?:\\/\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9A-Fa-f]{1,4}:){6}|::(?:[0-9A-Fa-f]{1,4}:){5}|(?:[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}|(?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}|(?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:|(?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)(?:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\\.[A-Za-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-Za-z0-9\\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*)(?::[0-9]*)?(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|)(?:\\?(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?(?:\\#(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?|(?:\\/\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9A-Fa-f]{1,4}:){6}|::(?:[0-9A-Fa-f]{1,4}:){5}|(?:[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}|(?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}|(?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:|(?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)(?:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\\.[A-Za-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-Za-z0-9\\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*)(?::[0-9]*)?(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|(?:[A-Za-z0-9\\-._~!$&'()*+,;=@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|)(?:\\?(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?(?:\\#(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?)$/;\n\nvar anyURI = extend({}, base, {\n  name: \"anyURI\",\n  typeErrorMsg: \"not a valid anyURI\",\n  regexp: reJsRfc3986UriReference,\n  validParams: [patternP, lengthP, minLengthP, maxLengthP],\n});\n\nvar xmlschema = {\n  uri: \"http://www.w3.org/2001/XMLSchema-datatypes\",\n  types: {\n    string: string,\n    normalizedString: normalizedString,\n    token: token,\n    language: language,\n    Name: Name,\n    NCName: NCName,\n    NMTOKEN: NMTOKEN,\n    NMTOKENS: NMTOKENS,\n    ID: ID,\n    IDREF: IDREF,\n    IDREFS: IDREFS,\n    ENTITY: entity,\n    ENTITIES: entities,\n    decimal: decimal,\n    integer: integer,\n    nonPositiveInteger: nonPositiveInteger,\n    negativeInteger: negativeInteger,\n    nonNegativeInteger: nonNegativeInteger,\n    positiveInteger: positiveInteger,\n    long: long_,\n    int: int_,\n    short: short_,\n    byte: byte_,\n    unsignedLong: unsignedLong,\n    unsignedInt: unsignedInt,\n    unsignedShort: unsignedShort,\n    unsignedByte: unsignedByte,\n    boolean: boolean_,\n    base64Binary: base64Binary,\n    hexBinary: hexBinary,\n    float: float_,\n    double: double_,\n    QName: QName,\n    NOTATION: NOTATION,\n    duration: duration,\n    dateTime: dateTime,\n    time: time,\n    date: date,\n    gYearMonth: gYearMonth,\n    gYear: gYear,\n    gMonthDay: gMonthDay,\n    gDay: gDay,\n    gMonth: gMonth,\n    anyURI: anyURI,\n  },\n};\n\nObject.keys(xmlschema.types).forEach(function each(name) {\n  xmlschema.types[name].init();\n});\n\n/**\n * The XML Schema datatype library.\n *\n * @type module:datatypes.TypeLibrary\n */\nexports.xmlschema = xmlschema;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/datatypes/xmlschema.js\n// module id = 12\n// module chunks = 0 1","/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,8],$V1=[1,10],$V2=[1,13],$V3=[1,19],$V4=[1,20],$V5=[1,14],$V6=[1,15],$V7=[1,16],$V8=[1,17],$V9=[5,23],$Va=[5,8,20,22,23,26,30,31,42,43,44,45],$Vb=[5,8,12,13,14,15,20,22,23,26,30,31,42,43,44,45],$Vc=[5,8,12,13,14,15,20,22,23,26,29,30,31,36,38,40,41,42,43,44,45],$Vd=[1,37],$Ve=[1,39],$Vf=[1,40],$Vg=[38,40,41,42,43,44,45],$Vh=[29,36,38,40,41,42,43,44,45];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"input\":4,\"EOF\":5,\"regexp\":6,\"branch\":7,\"|\":8,\"piece\":9,\"atom\":10,\"quantifier\":11,\"?\":12,\"*\":13,\"+\":14,\"{\":15,\"quantity\":16,\"}\":17,\"NUMBER\":18,\",\":19,\"CHAR\":20,\"charClass\":21,\"(\":22,\")\":23,\"charClassEsc\":24,\"charClassExpr\":25,\"WILDCARDESC\":26,\"charClassExprStart\":27,\"charGroup\":28,\"]\":29,\"[\":30,\"[^\":31,\"posCharGroups\":32,\"charClassSub\":33,\"posCharGroup\":34,\"charRange\":35,\"CLASSSUBTRACTION\":36,\"seRange\":37,\"-\":38,\"charOrEsc\":39,\"XMLCHAR\":40,\"SingleCharEsc\":41,\"SINGLECHARESC\":42,\"MULTICHARESC\":43,\"CATESC\":44,\"COMPLESC\":45,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",8:\"|\",12:\"?\",13:\"*\",14:\"+\",15:\"{\",17:\"}\",18:\"NUMBER\",19:\",\",20:\"CHAR\",22:\"(\",23:\")\",26:\"WILDCARDESC\",29:\"]\",30:\"[\",31:\"[^\",36:\"CLASSSUBTRACTION\",38:\"-\",40:\"XMLCHAR\",41:\"SingleCharEsc\",42:\"SINGLECHARESC\",43:\"MULTICHARESC\",44:\"CATESC\",45:\"COMPLESC\"},\nproductions_: [0,[3,1],[4,1],[4,2],[6,1],[6,3],[7,1],[7,2],[9,1],[9,2],[11,1],[11,1],[11,1],[11,3],[16,1],[16,3],[16,2],[10,1],[10,1],[10,3],[21,1],[21,1],[21,1],[25,3],[27,1],[27,1],[28,1],[28,1],[32,1],[32,2],[34,1],[34,1],[33,3],[35,1],[35,1],[37,3],[37,1],[39,1],[39,1],[24,1],[24,1],[24,1],[24,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */, outputType) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n      // Overwrite the parseError method with our own. NOTE: Our own\n      // method does not allow recovering from recoverable parsing\n      // errors.\n      this.parseError = parseError;\n      outputType = outputType || \"re\";\n      switch(outputType) {\n      case \"string\":\n        return $$[$0];\n      case \"re\":\n        var constructor = (needsXRegExpRe.test($$[$0]) ? XRegExp : RegExp);\n        return new constructor($$[$0]);\n      default:\n        throw new Error(\"unsupported output type: \" + outputType);\n      }\n    \nbreak;\ncase 2:\nthis.$ = '^$';\nbreak;\ncase 3:\nthis.$ = '^' + $$[$0-1] + '$';\nbreak;\ncase 5: case 13: case 35:\nthis.$ = $$[$0-2].concat($$[$0-1], $$[$0]);\nbreak;\ncase 7: case 9: case 29:\nthis.$ = $$[$0-1] + $$[$0];\nbreak;\ncase 15:\nthis.$ = $$[$0-2].concat(',', $$[$0]);\nbreak;\ncase 16:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 19:\nthis.$ = '(?:' + $$[$0-1] + $$[$0];\nbreak;\ncase 23:\n\n      var state = groupState.shift();\n      var capturedMultiChar = state.capturedMultiChar;\n\n      var subtraction = state.subtraction ?\n            (\"(?!\" +  state.subtraction + \")\") : \"\";\n      if (capturedMultiChar.length !== 0) {\n        var out = [\"(?:\", subtraction];\n        if (state.negative) {\n          out.push(\"(?=[\");\n          for (var i = 0; i < capturedMultiChar.length; ++i) {\n            out.push(multiCharEscapesInGroup[capturedMultiChar[i]].slice(1));\n          }\n          out.push(\"])\");\n        }\n        else {\n          for (var i = 0; i < capturedMultiChar.length; ++i) {\n            out.push(\"[\", multiCharEscapesInGroup[capturedMultiChar[i]], \"]|\");\n          }\n        }\n        out.push($$[$0-2], $$[$0-1], $$[$0], \")\");\n        this.$ = out.join(\"\");\n      }\n      else {\n        this.$ = (subtraction !== \"\") ?\n          \"(?:\" + subtraction + $$[$0-2].concat($$[$0-1], $$[$0]) + \")\":\n          $$[$0-2].concat($$[$0-1], $$[$0]);\n      }\n    \nbreak;\ncase 24:\n\n      unshiftGroupState(false);\n      this.$ = $$[$0];\n    \nbreak;\ncase 25:\n\n      unshiftGroupState(true);\n      this.$ = $$[$0];\n    \nbreak;\ncase 32:\n\n      this.$ = $$[$0-2];\n      groupState[0].subtraction = $$[$0];\n    \nbreak;\ncase 40:\n\n      if (groupState.length) {\n        var repl = multiCharEscapesInGroup[$$[$0]]\n        if (repl.charAt(0) === \"^\") {\n          groupState[0].capturedMultiChar.push($$[$0]);\n          this.$ = \"\";\n        }\n        else {\n          this.$ = repl;\n        }\n      }\n      else {\n        this.$ = multiCharEscapes[$$[$0]]\n      }\n    \nbreak;\n}\n},\ntable: [{3:1,4:2,5:[1,3],6:4,7:5,9:6,10:7,20:$V0,21:9,22:$V1,24:11,25:12,26:$V2,27:18,30:$V3,31:$V4,42:$V5,43:$V6,44:$V7,45:$V8},{1:[3]},{1:[2,1]},{1:[2,2]},{5:[1,21]},o($V9,[2,4],{10:7,21:9,24:11,25:12,27:18,9:23,8:[1,22],20:$V0,22:$V1,26:$V2,30:$V3,31:$V4,42:$V5,43:$V6,44:$V7,45:$V8}),o($Va,[2,6]),o($Va,[2,8],{11:24,12:[1,25],13:[1,26],14:[1,27],15:[1,28]}),o($Vb,[2,17]),o($Vb,[2,18]),{6:29,7:5,9:6,10:7,20:$V0,21:9,22:$V1,24:11,25:12,26:$V2,27:18,30:$V3,31:$V4,42:$V5,43:$V6,44:$V7,45:$V8},o($Vb,[2,20]),o($Vb,[2,21]),o($Vb,[2,22]),o($Vc,[2,39]),o($Vc,[2,40]),o($Vc,[2,41]),o($Vc,[2,42]),{24:34,28:30,32:31,33:32,34:33,35:35,37:36,38:$Vd,39:38,40:$Ve,41:$Vf,42:$V5,43:$V6,44:$V7,45:$V8},o($Vg,[2,24]),o($Vg,[2,25]),{1:[2,3]},{6:41,7:5,9:6,10:7,20:$V0,21:9,22:$V1,24:11,25:12,26:$V2,27:18,30:$V3,31:$V4,42:$V5,43:$V6,44:$V7,45:$V8},o($Va,[2,7]),o($Va,[2,9]),o($Va,[2,10]),o($Va,[2,11]),o($Va,[2,12]),{16:42,18:[1,43]},{23:[1,44]},{29:[1,45]},{24:34,29:[2,26],34:46,35:35,36:[1,47],37:36,38:$Vd,39:38,40:$Ve,41:$Vf,42:$V5,43:$V6,44:$V7,45:$V8},{29:[2,27]},o($Vh,[2,28]),o($Vh,[2,30]),o($Vh,[2,31]),o($Vh,[2,33]),o($Vh,[2,34]),o([29,36,40,41,42,43,44,45],[2,36],{38:[1,48]}),o($Vh,[2,37]),o($Vh,[2,38]),o($V9,[2,5]),{17:[1,49]},{17:[2,14],19:[1,50]},o($Vb,[2,19]),o([5,8,12,13,14,15,20,22,23,26,29,30,31,42,43,44,45],[2,23]),o($Vh,[2,29]),{25:51,27:18,30:$V3,31:$V4},{39:52,40:$Ve,41:$Vf},o($Va,[2,13]),{17:[2,16],18:[1,53]},{29:[2,32]},o($Vh,[2,35]),{17:[2,15]}],\ndefaultActions: {2:[2,1],3:[2,2],21:[2,3],32:[2,27],51:[2,32],53:[2,15]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\nvar xmlcharacters = require(\"./xmlcharacters\");\nvar XRegExp = require(\"xregexp\");\n\n// We use the name ``Salve`` to help avoid potential\n// clashes. ``ParsingError`` seems too risky.\nfunction SalveParsingError(msg) {\n  // This is crap to work around the fact that Error is a terribly\n  // designed class or prototype or whatever. Unfortunately the\n  // stack trace contains an extra frame.\n  var err = new Error(msg);\n  this.name = \"SalveParsingError\";\n  this.stack = err.stack;\n  this.message = err.message;\n}\n\nSalveParsingError.prototype = new Error();\n\n// This will serve as a replacement for the default parseError method on\n// the parser.\nfunction parseError(str, hash) {\n  throw new SalveParsingError(str);\n}\n\n// Export this error.\nif (typeof exports !== 'undefined') {\n  exports.SalveParsingError = SalveParsingError;\n}\nelse {\n  parser.SalveParsingError = SalveParsingError;\n}\n\n\nvar xmlNameChar = xmlcharacters.xmlNameChar;\nvar xmlLetter = xmlcharacters.xmlLetter;\n\n// Maintain a group state.\nvar groupState = [];\nvar needsXRegExpRe = /\\\\p/i;\n\nfunction unshiftGroupState(negative) {\n  groupState.unshift({\n    negative: negative,\n    capturedMultiChar: [],\n  });\n}\n\nvar multiCharEscapesInGroup = {\n    \"\\\\s\": \" \\\\t\\\\n\\\\r\",\n    \"\\\\S\": \"^ \\\\t\\\\n\\\\r\",\n    \"\\\\i\": \"\" + xmlLetter + \"_:\",\n    \"\\\\I\": \"^\" + xmlLetter + \"_:\",\n    \"\\\\c\": \"\" + xmlNameChar,\n    \"\\\\C\": \"^\" + xmlNameChar,\n    \"\\\\d\": \"\\\\p{Nd}\",\n    \"\\\\D\": \"^\\\\p{Nd}\",\n    \"\\\\w\": \"^\\\\p{P}\\\\p{Z}\\\\p{C}\",\n    \"\\\\W\": \"\\\\p{P}\\\\p{Z}\\\\p{C}\"\n};\n\nvar multiCharEscapes = [];\nfor(var i in multiCharEscapesInGroup) {\n  if (!multiCharEscapesInGroup.hasOwnProperty(i)) {\n    continue;\n  }\n  multiCharEscapes[i] = \"[\" + multiCharEscapesInGroup[i] + \"]\";\n}\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 18;\nbreak;\ncase 1:return 19;\nbreak;\ncase 2:this.popState(); return 17;\nbreak;\ncase 3:this.begin('CHARCLASS'); return 31;\nbreak;\ncase 4:this.begin('CHARCLASS'); return 30;\nbreak;\ncase 5:return 42;\nbreak;\ncase 6:return 43;\nbreak;\ncase 7:return 36;\nbreak;\ncase 8:return 38;\nbreak;\ncase 9:return 40;\nbreak;\ncase 10:this.popState(); return 29;\nbreak;\ncase 11:return 22;\nbreak;\ncase 12:return 8;\nbreak;\ncase 13:return 23;\nbreak;\ncase 14:return 13;\nbreak;\ncase 15:return 14;\nbreak;\ncase 16:return 12;\nbreak;\ncase 17:this.begin('QUANTITY'); return 15;\nbreak;\ncase 18:return 17;\nbreak;\ncase 19:return 29;\nbreak;\ncase 20:return '^';\nbreak;\ncase 21:return 44;\nbreak;\ncase 22:return 45;\nbreak;\ncase 23:return 26;\nbreak;\ncase 24:return 5;\nbreak;\ncase 25:return 20;\nbreak;\n}\n},\nrules: [/^(?:[0-9])/,/^(?:,)/,/^(?:\\})/,/^(?:\\[\\^)/,/^(?:\\[)/,/^(?:\\\\[-nrt\\|.?*+(){}[\\]^])/,/^(?:\\\\[sSiIcCdDwW])/,/^(?:-(?=\\[))/,/^(?:-)/,/^(?:[^-[\\]])/,/^(?:\\])/,/^(?:\\()/,/^(?:\\|)/,/^(?:\\))/,/^(?:\\*)/,/^(?:\\+)/,/^(?:\\?)/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\])/,/^(?:\\^)/,/^(?:\\\\p\\{.*?\\})/,/^(?:\\\\P\\{.*?\\})/,/^(?:\\.)/,/^(?:$)/,/^(?:[^\\\\])/],\nconditions: {\"CHARCLASS\":{\"rules\":[3,4,5,6,7,8,9,10],\"inclusive\":false},\"QUANTITY\":{\"rules\":[0,1,2],\"inclusive\":false},\"INITIAL\":{\"rules\":[3,4,5,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function moduleMain() {\n      throw new Error(\"this module cannot be used as main\");\n    };\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/datatypes/regexp.js\n// module id = 13\n// module chunks = 0 1","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 14\n// module chunks = 0 1","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 15\n// module chunks = 0 1","/**\n * @desc Collection of constants that model the way XML refers to various\n * characters and groups of characters. This module is essentially private to\n * salve.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\n// The constants here are just representations in JavaScript of the character\n// classes that the XML standard uses. So we don't document them.  See the XML\n// standard and read salve's code to figure out what they are for.\n\n/* eslint-disable max-len */\nvar xmlBaseChar = \"A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF\\u0100-\\u0131\\u0134-\\u013E\\u0141-\\u0148\\u014A-\\u017E\\u0180-\\u01C3\\u01CD-\\u01F0\\u01F4-\\u01F5\\u01FA-\\u0217\\u0250-\\u02A8\\u02BB-\\u02C1\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D6\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2-\\u03F3\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E-\\u0481\\u0490-\\u04C4\\u04C7-\\u04C8\\u04CB-\\u04CC\\u04D0-\\u04EB\\u04EE-\\u04F5\\u04F8-\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0586\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0641-\\u064A\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D3\\u06D5\\u06E5-\\u06E6\\u0905-\\u0939\\u093D\\u0958-\\u0961\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AE0\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B36-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CDE\\u0CE0-\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D60-\\u0D61\\u0E01-\\u0E2E\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E45\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EAE\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0F40-\\u0F47\\u0F49-\\u0F69\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100\\u1102-\\u1103\\u1105-\\u1107\\u1109\\u110B-\\u110C\\u110E-\\u1112\\u113C\\u113E\\u1140\\u114C\\u114E\\u1150\\u1154-\\u1155\\u1159\\u115F-\\u1161\\u1163\\u1165\\u1167\\u1169\\u116D-\\u116E\\u1172-\\u1173\\u1175\\u119E\\u11A8\\u11AB\\u11AE-\\u11AF\\u11B7-\\u11B8\\u11BA\\u11BC-\\u11C2\\u11EB\\u11F0\\u11F9\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2126\\u212A-\\u212B\\u212E\\u2180-\\u2182\\u3041-\\u3094\\u30A1-\\u30FA\\u3105-\\u312C\\uAC00-\\uD7A3\";\nvar xmlIdeographic = \"\\u4E00-\\u9FA5\\u3007\\u3021-\\u3029\";\nvar xmlLetter = xmlBaseChar + xmlIdeographic;\nvar xmlDigit = \"\\u0030-\\u0039\\u0660-\\u0669\\u06F0-\\u06F9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE7-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\";\nvar xmlCombiningChar = \"\\u0300-\\u0345\\u0360-\\u0361\\u0483-\\u0486\\u0591-\\u05A1\\u05A3-\\u05B9\\u05BB-\\u05BD\\u05BF\\u05C1-\\u05C2\\u05C4\\u064B-\\u0652\\u0670\\u06D6-\\u06DC\\u06DD-\\u06DF\\u06E0-\\u06E4\\u06E7-\\u06E8\\u06EA-\\u06ED\\u0901-\\u0903\\u093C\\u093E-\\u094C\\u094D\\u0951-\\u0954\\u0962-\\u0963\\u0981-\\u0983\\u09BC\\u09BE\\u09BF\\u09C0-\\u09C4\\u09C7-\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2-\\u09E3\\u0A02\\u0A3C\\u0A3E\\u0A3F\\u0A40-\\u0A42\\u0A47-\\u0A48\\u0A4B-\\u0A4D\\u0A70-\\u0A71\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B43\\u0B47-\\u0B48\\u0B4B-\\u0B4D\\u0B56-\\u0B57\\u0B82-\\u0B83\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C01-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55-\\u0C56\\u0C82-\\u0C83\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5-\\u0CD6\\u0D02-\\u0D03\\u0D3E-\\u0D43\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB-\\u0EBC\\u0EC8-\\u0ECD\\u0F18-\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86-\\u0F8B\\u0F90-\\u0F95\\u0F97\\u0F99-\\u0FAD\\u0FB1-\\u0FB7\\u0FB9\\u20D0-\\u20DC\\u20E1\\u302A-\\u302F\\u3099\\u309A\";\nvar xmlExtender = \"\\u00B7\\u02D0\\u02D1\\u0387\\u0640\\u0E46\\u0EC6\\u3005\\u3031-\\u3035\\u309D-\\u309E\\u30FC-\\u30FE\";\n/* eslint-enable max-len */\n\n// It is improtant to have the dash first to avoid issues with ranges in\n// regexps. Also, the following contain periods. However, they are doing to\n// appear inside square bracket in the regexps.\n\nvar xmlNameChar = \"-\" + xmlLetter + xmlDigit + \"._:\" + xmlCombiningChar +\n      xmlExtender;\nvar xmlName = \"[\" + xmlLetter + \"_:](?:[\" + xmlNameChar + \"])*\";\n\nvar xmlNameRe = new RegExp(\"^\" + xmlName + \"$\");\n\nvar xmlNcname = \"[\" + xmlLetter + \"_](?:[-\" + xmlLetter + xmlDigit + \"._\" +\n      xmlCombiningChar + xmlExtender + \"])*\";\nvar xmlNcnameRe = new RegExp(\"^\" + xmlNcname + \"$\");\n\nexports.xmlNameRe = xmlNameRe;\nexports.xmlNcname = xmlNcname;\nexports.xmlNcnameRe = xmlNcnameRe;\nexports.xmlNameChar = xmlNameChar;\nexports.xmlLetter = xmlLetter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/datatypes/xmlcharacters.js\n// module id = 16\n// module chunks = 0 1","var XRegExp = require('./xregexp');\n\nrequire('./addons/build')(XRegExp);\nrequire('./addons/matchrecursive')(XRegExp);\nrequire('./addons/unicode-base')(XRegExp);\nrequire('./addons/unicode-blocks')(XRegExp);\nrequire('./addons/unicode-categories')(XRegExp);\nrequire('./addons/unicode-properties')(XRegExp);\nrequire('./addons/unicode-scripts')(XRegExp);\n\nmodule.exports = XRegExp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/index.js\n// module id = 17\n// module chunks = 0 1","/*!\n * XRegExp 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2007-2016 MIT License\n */\n\n'use strict';\n\n/**\n * XRegExp provides augmented, extensible regular expressions. You get additional regex syntax and\n * flags, beyond what browsers support natively. XRegExp is also a regex utility belt with tools to\n * make your client-side grepping simpler and more powerful, while freeing you from related\n * cross-browser inconsistencies.\n */\n\n// ==--------------------------==\n// Private stuff\n// ==--------------------------==\n\n// Property name used for extended regex instance data\nvar REGEX_DATA = 'xregexp';\n// Optional features that can be installed and uninstalled\nvar features = {\n    astral: false,\n    natives: false\n};\n// Native methods to use and restore ('native' is an ES3 reserved keyword)\nvar nativ = {\n    exec: RegExp.prototype.exec,\n    test: RegExp.prototype.test,\n    match: String.prototype.match,\n    replace: String.prototype.replace,\n    split: String.prototype.split\n};\n// Storage for fixed/extended native methods\nvar fixed = {};\n// Storage for regexes cached by `XRegExp.cache`\nvar regexCache = {};\n// Storage for pattern details cached by the `XRegExp` constructor\nvar patternCache = {};\n// Storage for regex syntax tokens added internally or by `XRegExp.addToken`\nvar tokens = [];\n// Token scopes\nvar defaultScope = 'default';\nvar classScope = 'class';\n// Regexes that match native regex syntax, including octals\nvar nativeTokens = {\n    // Any native multicharacter token in default scope, or any single character\n    'default': /\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|\\(\\?(?:[:=!]|<[=!])|[?*+]\\?|{\\d+(?:,\\d*)?}\\??|[\\s\\S]/,\n    // Any native multicharacter token in character class scope, or any single character\n    'class': /\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|[\\s\\S]/\n};\n// Any backreference or dollar-prefixed character in replacement strings\nvar replacementToken = /\\$(?:{([\\w$]+)}|(\\d\\d?|[\\s\\S]))/g;\n// Check for correct `exec` handling of nonparticipating capturing groups\nvar correctExecNpcg = nativ.exec.call(/()??/, '')[1] === undefined;\n// Check for ES6 `flags` prop support\nvar hasFlagsProp = /x/.flags !== undefined;\n// Shortcut to `Object.prototype.toString`\nvar toString = {}.toString;\n\nfunction hasNativeFlag(flag) {\n    // Can't check based on the presense of properties/getters since browsers might support such\n    // properties even when they don't support the corresponding flag in regex construction (tested\n    // in Chrome 48, where `'unicode' in /x/` is true but trying to construct a regex with flag `u`\n    // throws an error)\n    var isSupported = true;\n    try {\n        // Can't use regex literals for testing even in a `try` because regex literals with\n        // unsupported flags cause a compilation error in IE\n        new RegExp('', flag);\n    } catch (exception) {\n        isSupported = false;\n    }\n    if (isSupported && flag === 'y') {\n        // Work around Safari 9.1.1 bug\n        return new RegExp('aa|.', 'y').test('b');\n    }\n    return isSupported;\n}\n// Check for ES6 `u` flag support\nvar hasNativeU = hasNativeFlag('u');\n// Check for ES6 `y` flag support\nvar hasNativeY = hasNativeFlag('y');\n// Tracker for known flags, including addon flags\nvar registeredFlags = {\n    g: true,\n    i: true,\n    m: true,\n    u: hasNativeU,\n    y: hasNativeY\n};\n\n/**\n * Attaches extended data and `XRegExp.prototype` properties to a regex object.\n *\n * @param {RegExp} regex Regex to augment.\n * @param {Array} captureNames Array with capture names, or `null`.\n * @param {String} xSource XRegExp pattern used to generate `regex`, or `null` if N/A.\n * @param {String} xFlags XRegExp flags used to generate `regex`, or `null` if N/A.\n * @param {Boolean} [isInternalOnly=false] Whether the regex will be used only for internal\n *   operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *   skipping some operations like attaching `XRegExp.prototype` properties.\n * @returns {RegExp} Augmented regex.\n */\nfunction augment(regex, captureNames, xSource, xFlags, isInternalOnly) {\n    var p;\n\n    regex[REGEX_DATA] = {\n        captureNames: captureNames\n    };\n\n    if (isInternalOnly) {\n        return regex;\n    }\n\n    // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value\n    if (regex.__proto__) {\n        regex.__proto__ = XRegExp.prototype;\n    } else {\n        for (p in XRegExp.prototype) {\n            // An `XRegExp.prototype.hasOwnProperty(p)` check wouldn't be worth it here, since this\n            // is performance sensitive, and enumerable `Object.prototype` or `RegExp.prototype`\n            // extensions exist on `regex.prototype` anyway\n            regex[p] = XRegExp.prototype[p];\n        }\n    }\n\n    regex[REGEX_DATA].source = xSource;\n    // Emulate the ES6 `flags` prop by ensuring flags are in alphabetical order\n    regex[REGEX_DATA].flags = xFlags ? xFlags.split('').sort().join('') : xFlags;\n\n    return regex;\n}\n\n/**\n * Removes any duplicate characters from the provided string.\n *\n * @param {String} str String to remove duplicate characters from.\n * @returns {String} String with any duplicate characters removed.\n */\nfunction clipDuplicates(str) {\n    return nativ.replace.call(str, /([\\s\\S])(?=[\\s\\S]*\\1)/g, '');\n}\n\n/**\n * Copies a regex object while preserving extended data and augmenting with `XRegExp.prototype`\n * properties. The copy has a fresh `lastIndex` property (set to zero). Allows adding and removing\n * flags g and y while copying the regex.\n *\n * @param {RegExp} regex Regex to copy.\n * @param {Object} [options] Options object with optional properties:\n *   <li>`addG` {Boolean} Add flag g while copying the regex.\n *   <li>`addY` {Boolean} Add flag y while copying the regex.\n *   <li>`removeG` {Boolean} Remove flag g while copying the regex.\n *   <li>`removeY` {Boolean} Remove flag y while copying the regex.\n *   <li>`isInternalOnly` {Boolean} Whether the copied regex will be used only for internal\n *     operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *     skipping some operations like attaching `XRegExp.prototype` properties.\n * @returns {RegExp} Copy of the provided regex, possibly with modified flags.\n */\nfunction copyRegex(regex, options) {\n    if (!XRegExp.isRegExp(regex)) {\n        throw new TypeError('Type RegExp expected');\n    }\n\n    var xData = regex[REGEX_DATA] || {},\n        flags = getNativeFlags(regex),\n        flagsToAdd = '',\n        flagsToRemove = '',\n        xregexpSource = null,\n        xregexpFlags = null;\n\n    options = options || {};\n\n    if (options.removeG) {flagsToRemove += 'g';}\n    if (options.removeY) {flagsToRemove += 'y';}\n    if (flagsToRemove) {\n        flags = nativ.replace.call(flags, new RegExp('[' + flagsToRemove + ']+', 'g'), '');\n    }\n\n    if (options.addG) {flagsToAdd += 'g';}\n    if (options.addY) {flagsToAdd += 'y';}\n    if (flagsToAdd) {\n        flags = clipDuplicates(flags + flagsToAdd);\n    }\n\n    if (!options.isInternalOnly) {\n        if (xData.source !== undefined) {\n            xregexpSource = xData.source;\n        }\n        // null or undefined; don't want to add to `flags` if the previous value was null, since\n        // that indicates we're not tracking original precompilation flags\n        if (xData.flags != null) {\n            // Flags are only added for non-internal regexes by `XRegExp.globalize`. Flags are never\n            // removed for non-internal regexes, so don't need to handle it\n            xregexpFlags = flagsToAdd ? clipDuplicates(xData.flags + flagsToAdd) : xData.flags;\n        }\n    }\n\n    // Augment with `XRegExp.prototype` properties, but use the native `RegExp` constructor to avoid\n    // searching for special tokens. That would be wrong for regexes constructed by `RegExp`, and\n    // unnecessary for regexes constructed by `XRegExp` because the regex has already undergone the\n    // translation to native regex syntax\n    regex = augment(\n        new RegExp(regex.source, flags),\n        hasNamedCapture(regex) ? xData.captureNames.slice(0) : null,\n        xregexpSource,\n        xregexpFlags,\n        options.isInternalOnly\n    );\n\n    return regex;\n}\n\n/**\n * Converts hexadecimal to decimal.\n *\n * @param {String} hex\n * @returns {Number}\n */\nfunction dec(hex) {\n    return parseInt(hex, 16);\n}\n\n/**\n * Returns native `RegExp` flags used by a regex object.\n *\n * @param {RegExp} regex Regex to check.\n * @returns {String} Native flags in use.\n */\nfunction getNativeFlags(regex) {\n    return hasFlagsProp ?\n        regex.flags :\n        // Explicitly using `RegExp.prototype.toString` (rather than e.g. `String` or concatenation\n        // with an empty string) allows this to continue working predictably when\n        // `XRegExp.proptotype.toString` is overriden\n        nativ.exec.call(/\\/([a-z]*)$/i, RegExp.prototype.toString.call(regex))[1];\n}\n\n/**\n * Determines whether a regex has extended instance data used to track capture names.\n *\n * @param {RegExp} regex Regex to check.\n * @returns {Boolean} Whether the regex uses named capture.\n */\nfunction hasNamedCapture(regex) {\n    return !!(regex[REGEX_DATA] && regex[REGEX_DATA].captureNames);\n}\n\n/**\n * Converts decimal to hexadecimal.\n *\n * @param {Number|String} dec\n * @returns {String}\n */\nfunction hex(dec) {\n    return parseInt(dec, 10).toString(16);\n}\n\n/**\n * Returns the first index at which a given value can be found in an array.\n *\n * @param {Array} array Array to search.\n * @param {*} value Value to locate in the array.\n * @returns {Number} Zero-based index at which the item is found, or -1.\n */\nfunction indexOf(array, value) {\n    var len = array.length, i;\n\n    for (i = 0; i < len; ++i) {\n        if (array[i] === value) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n/**\n * Determines whether a value is of the specified type, by resolving its internal [[Class]].\n *\n * @param {*} value Object to check.\n * @param {String} type Type to check for, in TitleCase.\n * @returns {Boolean} Whether the object matches the type.\n */\nfunction isType(value, type) {\n    return toString.call(value) === '[object ' + type + ']';\n}\n\n/**\n * Checks whether the next nonignorable token after the specified position is a quantifier.\n *\n * @param {String} pattern Pattern to search within.\n * @param {Number} pos Index in `pattern` to search at.\n * @param {String} flags Flags used by the pattern.\n * @returns {Boolean} Whether the next token is a quantifier.\n */\nfunction isQuantifierNext(pattern, pos, flags) {\n    return nativ.test.call(\n        flags.indexOf('x') > -1 ?\n            // Ignore any leading whitespace, line comments, and inline comments\n            /^(?:\\s|#[^#\\n]*|\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})/ :\n            // Ignore any leading inline comments\n            /^(?:\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})/,\n        pattern.slice(pos)\n    );\n}\n\n/**\n * Adds leading zeros if shorter than four characters. Used for fixed-length hexadecimal values.\n *\n * @param {String} str\n * @returns {String}\n */\nfunction pad4(str) {\n    while (str.length < 4) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Checks for flag-related errors, and strips/applies flags in a leading mode modifier. Offloads\n * the flag preparation logic from the `XRegExp` constructor.\n *\n * @param {String} pattern Regex pattern, possibly with a leading mode modifier.\n * @param {String} flags Any combination of flags.\n * @returns {Object} Object with properties `pattern` and `flags`.\n */\nfunction prepareFlags(pattern, flags) {\n    var i;\n\n    // Recent browsers throw on duplicate flags, so copy this behavior for nonnative flags\n    if (clipDuplicates(flags) !== flags) {\n        throw new SyntaxError('Invalid duplicate regex flag ' + flags);\n    }\n\n    // Strip and apply a leading mode modifier with any combination of flags except g or y\n    pattern = nativ.replace.call(pattern, /^\\(\\?([\\w$]+)\\)/, function($0, $1) {\n        if (nativ.test.call(/[gy]/, $1)) {\n            throw new SyntaxError('Cannot use flag g or y in mode modifier ' + $0);\n        }\n        // Allow duplicate flags within the mode modifier\n        flags = clipDuplicates(flags + $1);\n        return '';\n    });\n\n    // Throw on unknown native or nonnative flags\n    for (i = 0; i < flags.length; ++i) {\n        if (!registeredFlags[flags.charAt(i)]) {\n            throw new SyntaxError('Unknown regex flag ' + flags.charAt(i));\n        }\n    }\n\n    return {\n        pattern: pattern,\n        flags: flags\n    };\n}\n\n/**\n * Prepares an options object from the given value.\n *\n * @param {String|Object} value Value to convert to an options object.\n * @returns {Object} Options object.\n */\nfunction prepareOptions(value) {\n    var options = {};\n\n    if (isType(value, 'String')) {\n        XRegExp.forEach(value, /[^\\s,]+/, function(match) {\n            options[match] = true;\n        });\n\n        return options;\n    }\n\n    return value;\n}\n\n/**\n * Registers a flag so it doesn't throw an 'unknown flag' error.\n *\n * @param {String} flag Single-character flag to register.\n */\nfunction registerFlag(flag) {\n    if (!/^[\\w$]$/.test(flag)) {\n        throw new Error('Flag must be a single character A-Za-z0-9_$');\n    }\n\n    registeredFlags[flag] = true;\n}\n\n/**\n * Runs built-in and custom regex syntax tokens in reverse insertion order at the specified\n * position, until a match is found.\n *\n * @param {String} pattern Original pattern from which an XRegExp object is being built.\n * @param {String} flags Flags being used to construct the regex.\n * @param {Number} pos Position to search for tokens within `pattern`.\n * @param {Number} scope Regex scope to apply: 'default' or 'class'.\n * @param {Object} context Context object to use for token handler functions.\n * @returns {Object} Object with properties `matchLength`, `output`, and `reparse`; or `null`.\n */\nfunction runTokens(pattern, flags, pos, scope, context) {\n    var i = tokens.length,\n        leadChar = pattern.charAt(pos),\n        result = null,\n        match,\n        t;\n\n    // Run in reverse insertion order\n    while (i--) {\n        t = tokens[i];\n        if (\n            (t.leadChar && t.leadChar !== leadChar) ||\n            (t.scope !== scope && t.scope !== 'all') ||\n            (t.flag && flags.indexOf(t.flag) === -1)\n        ) {\n            continue;\n        }\n\n        match = XRegExp.exec(pattern, t.regex, pos, 'sticky');\n        if (match) {\n            result = {\n                matchLength: match[0].length,\n                output: t.handler.call(context, match, scope, flags),\n                reparse: t.reparse\n            };\n            // Finished with token tests\n            break;\n        }\n    }\n\n    return result;\n}\n\n/**\n * Enables or disables implicit astral mode opt-in. When enabled, flag A is automatically added to\n * all new regexes created by XRegExp. This causes an error to be thrown when creating regexes if\n * the Unicode Base addon is not available, since flag A is registered by that addon.\n *\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\nfunction setAstral(on) {\n    features.astral = on;\n}\n\n/**\n * Enables or disables native method overrides.\n *\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\nfunction setNatives(on) {\n    RegExp.prototype.exec = (on ? fixed : nativ).exec;\n    RegExp.prototype.test = (on ? fixed : nativ).test;\n    String.prototype.match = (on ? fixed : nativ).match;\n    String.prototype.replace = (on ? fixed : nativ).replace;\n    String.prototype.split = (on ? fixed : nativ).split;\n\n    features.natives = on;\n}\n\n/**\n * Returns the object, or throws an error if it is `null` or `undefined`. This is used to follow\n * the ES5 abstract operation `ToObject`.\n *\n * @param {*} value Object to check and return.\n * @returns {*} The provided object.\n */\nfunction toObject(value) {\n    // null or undefined\n    if (value == null) {\n        throw new TypeError('Cannot convert null or undefined to object');\n    }\n\n    return value;\n}\n\n// ==--------------------------==\n// Constructor\n// ==--------------------------==\n\n/**\n * Creates an extended regular expression object for matching text with a pattern. Differs from a\n * native regular expression in that additional syntax and flags are supported. The returned object\n * is in fact a native `RegExp` and works with all native methods.\n *\n * @class XRegExp\n * @constructor\n * @param {String|RegExp} pattern Regex pattern string, or an existing regex object to copy.\n * @param {String} [flags] Any combination of flags.\n *   Native flags:\n *     <li>`g` - global\n *     <li>`i` - ignore case\n *     <li>`m` - multiline anchors\n *     <li>`u` - unicode (ES6)\n *     <li>`y` - sticky (Firefox 3+, ES6)\n *   Additional XRegExp flags:\n *     <li>`n` - explicit capture\n *     <li>`s` - dot matches all (aka singleline)\n *     <li>`x` - free-spacing and line comments (aka extended)\n *     <li>`A` - astral (requires the Unicode Base addon)\n *   Flags cannot be provided when constructing one `RegExp` from another.\n * @returns {RegExp} Extended regular expression object.\n * @example\n *\n * // With named capture and flag x\n * XRegExp('(?<year>  [0-9]{4} ) -?  # year  \\n\\\n *          (?<month> [0-9]{2} ) -?  # month \\n\\\n *          (?<day>   [0-9]{2} )     # day   ', 'x');\n *\n * // Providing a regex object copies it. Native regexes are recompiled using native (not XRegExp)\n * // syntax. Copies maintain extended data, are augmented with `XRegExp.prototype` properties, and\n * // have fresh `lastIndex` properties (set to zero).\n * XRegExp(/regex/);\n */\nfunction XRegExp(pattern, flags) {\n    if (XRegExp.isRegExp(pattern)) {\n        if (flags !== undefined) {\n            throw new TypeError('Cannot supply flags when copying a RegExp');\n        }\n        return copyRegex(pattern);\n    }\n\n    // Copy the argument behavior of `RegExp`\n    pattern = pattern === undefined ? '' : String(pattern);\n    flags = flags === undefined ? '' : String(flags);\n\n    if (XRegExp.isInstalled('astral') && flags.indexOf('A') === -1) {\n        // This causes an error to be thrown if the Unicode Base addon is not available\n        flags += 'A';\n    }\n\n    if (!patternCache[pattern]) {\n        patternCache[pattern] = {};\n    }\n\n    if (!patternCache[pattern][flags]) {\n        var context = {\n            hasNamedCapture: false,\n            captureNames: []\n        };\n        var scope = defaultScope;\n        var output = '';\n        var pos = 0;\n        var result;\n\n        // Check for flag-related errors, and strip/apply flags in a leading mode modifier\n        var applied = prepareFlags(pattern, flags);\n        var appliedPattern = applied.pattern;\n        var appliedFlags = applied.flags;\n\n        // Use XRegExp's tokens to translate the pattern to a native regex pattern.\n        // `appliedPattern.length` may change on each iteration if tokens use `reparse`\n        while (pos < appliedPattern.length) {\n            do {\n                // Check for custom tokens at the current position\n                result = runTokens(appliedPattern, appliedFlags, pos, scope, context);\n                // If the matched token used the `reparse` option, splice its output into the\n                // pattern before running tokens again at the same position\n                if (result && result.reparse) {\n                    appliedPattern = appliedPattern.slice(0, pos) +\n                        result.output +\n                        appliedPattern.slice(pos + result.matchLength);\n                }\n            } while (result && result.reparse);\n\n            if (result) {\n                output += result.output;\n                pos += (result.matchLength || 1);\n            } else {\n                // Get the native token at the current position\n                var token = XRegExp.exec(appliedPattern, nativeTokens[scope], pos, 'sticky')[0];\n                output += token;\n                pos += token.length;\n                if (token === '[' && scope === defaultScope) {\n                    scope = classScope;\n                } else if (token === ']' && scope === classScope) {\n                    scope = defaultScope;\n                }\n            }\n        }\n\n        patternCache[pattern][flags] = {\n            // Use basic cleanup to collapse repeated empty groups like `(?:)(?:)` to `(?:)`. Empty\n            // groups are sometimes inserted during regex transpilation in order to keep tokens\n            // separated. However, more than one empty group in a row is never needed.\n            pattern: nativ.replace.call(output, /(?:\\(\\?:\\))+/g, '(?:)'),\n            // Strip all but native flags\n            flags: nativ.replace.call(appliedFlags, /[^gimuy]+/g, ''),\n            // `context.captureNames` has an item for each capturing group, even if unnamed\n            captures: context.hasNamedCapture ? context.captureNames : null\n        };\n    }\n\n    var generated = patternCache[pattern][flags];\n    return augment(\n        new RegExp(generated.pattern, generated.flags),\n        generated.captures,\n        pattern,\n        flags\n    );\n}\n\n// Add `RegExp.prototype` to the prototype chain\nXRegExp.prototype = new RegExp();\n\n// ==--------------------------==\n// Public properties\n// ==--------------------------==\n\n/**\n * The XRegExp version number as a string containing three dot-separated parts. For example,\n * '2.0.0-beta-3'.\n *\n * @static\n * @type String\n */\nXRegExp.version = '3.1.1';\n\n// ==--------------------------==\n// Public methods\n// ==--------------------------==\n\n// Intentionally undocumented; used in tests and addons\nXRegExp._hasNativeFlag = hasNativeFlag;\nXRegExp._dec = dec;\nXRegExp._hex = hex;\nXRegExp._pad4 = pad4;\n\n/**\n * Extends XRegExp syntax and allows custom flags. This is used internally and can be used to\n * create XRegExp addons. If more than one token can match the same string, the last added wins.\n *\n * @param {RegExp} regex Regex object that matches the new token.\n * @param {Function} handler Function that returns a new pattern string (using native regex syntax)\n *   to replace the matched token within all future XRegExp regexes. Has access to persistent\n *   properties of the regex being built, through `this`. Invoked with three arguments:\n *   <li>The match array, with named backreference properties.\n *   <li>The regex scope where the match was found: 'default' or 'class'.\n *   <li>The flags used by the regex, including any flags in a leading mode modifier.\n *   The handler function becomes part of the XRegExp construction process, so be careful not to\n *   construct XRegExps within the function or you will trigger infinite recursion.\n * @param {Object} [options] Options object with optional properties:\n *   <li>`scope` {String} Scope where the token applies: 'default', 'class', or 'all'.\n *   <li>`flag` {String} Single-character flag that triggers the token. This also registers the\n *     flag, which prevents XRegExp from throwing an 'unknown flag' error when the flag is used.\n *   <li>`optionalFlags` {String} Any custom flags checked for within the token `handler` that are\n *     not required to trigger the token. This registers the flags, to prevent XRegExp from\n *     throwing an 'unknown flag' error when any of the flags are used.\n *   <li>`reparse` {Boolean} Whether the `handler` function's output should not be treated as\n *     final, and instead be reparseable by other tokens (including the current token). Allows\n *     token chaining or deferring.\n *   <li>`leadChar` {String} Single character that occurs at the beginning of any successful match\n *     of the token (not always applicable). This doesn't change the behavior of the token unless\n *     you provide an erroneous value. However, providing it can increase the token's performance\n *     since the token can be skipped at any positions where this character doesn't appear.\n * @example\n *\n * // Basic usage: Add \\a for the ALERT control code\n * XRegExp.addToken(\n *   /\\\\a/,\n *   function() {return '\\\\x07';},\n *   {scope: 'all'}\n * );\n * XRegExp('\\\\a[\\\\a-\\\\n]+').test('\\x07\\n\\x07'); // -> true\n *\n * // Add the U (ungreedy) flag from PCRE and RE2, which reverses greedy and lazy quantifiers.\n * // Since `scope` is not specified, it uses 'default' (i.e., transformations apply outside of\n * // character classes only)\n * XRegExp.addToken(\n *   /([?*+]|{\\d+(?:,\\d*)?})(\\??)/,\n *   function(match) {return match[1] + (match[2] ? '' : '?');},\n *   {flag: 'U'}\n * );\n * XRegExp('a+', 'U').exec('aaa')[0]; // -> 'a'\n * XRegExp('a+?', 'U').exec('aaa')[0]; // -> 'aaa'\n */\nXRegExp.addToken = function(regex, handler, options) {\n    options = options || {};\n    var optionalFlags = options.optionalFlags, i;\n\n    if (options.flag) {\n        registerFlag(options.flag);\n    }\n\n    if (optionalFlags) {\n        optionalFlags = nativ.split.call(optionalFlags, '');\n        for (i = 0; i < optionalFlags.length; ++i) {\n            registerFlag(optionalFlags[i]);\n        }\n    }\n\n    // Add to the private list of syntax tokens\n    tokens.push({\n        regex: copyRegex(regex, {\n            addG: true,\n            addY: hasNativeY,\n            isInternalOnly: true\n        }),\n        handler: handler,\n        scope: options.scope || defaultScope,\n        flag: options.flag,\n        reparse: options.reparse,\n        leadChar: options.leadChar\n    });\n\n    // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and flags\n    // might now produce different results\n    XRegExp.cache.flush('patterns');\n};\n\n/**\n * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with\n * the same pattern and flag combination, the cached copy of the regex is returned.\n *\n * @param {String} pattern Regex pattern string.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @returns {RegExp} Cached XRegExp object.\n * @example\n *\n * while (match = XRegExp.cache('.', 'gs').exec(str)) {\n *   // The regex is compiled once only\n * }\n */\nXRegExp.cache = function(pattern, flags) {\n    if (!regexCache[pattern]) {\n        regexCache[pattern] = {};\n    }\n    return regexCache[pattern][flags] || (\n        regexCache[pattern][flags] = XRegExp(pattern, flags)\n    );\n};\n\n// Intentionally undocumented; used in tests\nXRegExp.cache.flush = function(cacheName) {\n    if (cacheName === 'patterns') {\n        // Flush the pattern cache used by the `XRegExp` constructor\n        patternCache = {};\n    } else {\n        // Flush the regex cache populated by `XRegExp.cache`\n        regexCache = {};\n    }\n};\n\n/**\n * Escapes any regular expression metacharacters, for use when matching literal strings. The result\n * can safely be used at any point within a regex that uses any flags.\n *\n * @param {String} str String to escape.\n * @returns {String} String with regex metacharacters escaped.\n * @example\n *\n * XRegExp.escape('Escaped? <.>');\n * // -> 'Escaped\\?\\ <\\.>'\n */\nXRegExp.escape = function(str) {\n    return nativ.replace.call(toObject(str), /[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * Executes a regex search in a specified string. Returns a match array or `null`. If the provided\n * regex uses named capture, named backreference properties are included on the match array.\n * Optional `pos` and `sticky` arguments specify the search start position, and whether the match\n * must start at the specified position only. The `lastIndex` property of the provided regex is not\n * used, but is updated for compatibility. Also fixes browser bugs compared to the native\n * `RegExp.prototype.exec` and can be used reliably cross-browser.\n *\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {Array} Match array with named backreference properties, or `null`.\n * @example\n *\n * // Basic use, with named backreference\n * var match = XRegExp.exec('U+2620', XRegExp('U\\\\+(?<hex>[0-9A-F]{4})'));\n * match.hex; // -> '2620'\n *\n * // With pos and sticky, in a loop\n * var pos = 2, result = [], match;\n * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\\d)>/, pos, 'sticky')) {\n *   result.push(match[1]);\n *   pos = match.index + match[0].length;\n * }\n * // result -> ['2', '3', '4']\n */\nXRegExp.exec = function(str, regex, pos, sticky) {\n    var cacheKey = 'g',\n        addY = false,\n        match,\n        r2;\n\n    addY = hasNativeY && !!(sticky || (regex.sticky && sticky !== false));\n    if (addY) {\n        cacheKey += 'y';\n    }\n\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\n\n    // Shares cached copies with `XRegExp.match`/`replace`\n    r2 = regex[REGEX_DATA][cacheKey] || (\n        regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n            addG: true,\n            addY: addY,\n            removeY: sticky === false,\n            isInternalOnly: true\n        })\n    );\n\n    r2.lastIndex = pos = pos || 0;\n\n    // Fixed `exec` required for `lastIndex` fix, named backreferences, etc.\n    match = fixed.exec.call(r2, str);\n\n    if (sticky && match && match.index !== pos) {\n        match = null;\n    }\n\n    if (regex.global) {\n        regex.lastIndex = match ? r2.lastIndex : 0;\n    }\n\n    return match;\n};\n\n/**\n * Executes a provided function once per regex match. Searches always start at the beginning of the\n * string and continue until the end, regardless of the state of the regex's `global` property and\n * initial `lastIndex`.\n *\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Function} callback Function to execute for each match. Invoked with four arguments:\n *   <li>The match array, with named backreference properties.\n *   <li>The zero-based match index.\n *   <li>The string being traversed.\n *   <li>The regex object being used to traverse the string.\n * @example\n *\n * // Extracts every other digit from a string\n * var evens = [];\n * XRegExp.forEach('1a2345', /\\d/, function(match, i) {\n *   if (i % 2) evens.push(+match[0]);\n * });\n * // evens -> [2, 4]\n */\nXRegExp.forEach = function(str, regex, callback) {\n    var pos = 0,\n        i = -1,\n        match;\n\n    while ((match = XRegExp.exec(str, regex, pos))) {\n        // Because `regex` is provided to `callback`, the function could use the deprecated/\n        // nonstandard `RegExp.prototype.compile` to mutate the regex. However, since `XRegExp.exec`\n        // doesn't use `lastIndex` to set the search position, this can't lead to an infinite loop,\n        // at least. Actually, because of the way `XRegExp.exec` caches globalized versions of\n        // regexes, mutating the regex will not have any effect on the iteration or matched strings,\n        // which is a nice side effect that brings extra safety.\n        callback(match, ++i, str, regex);\n\n        pos = match.index + (match[0].length || 1);\n    }\n};\n\n/**\n * Copies a regex object and adds flag `g`. The copy maintains extended data, is augmented with\n * `XRegExp.prototype` properties, and has a fresh `lastIndex` property (set to zero). Native\n * regexes are not recompiled using XRegExp syntax.\n *\n * @param {RegExp} regex Regex to globalize.\n * @returns {RegExp} Copy of the provided regex with flag `g` added.\n * @example\n *\n * var globalCopy = XRegExp.globalize(/regex/);\n * globalCopy.global; // -> true\n */\nXRegExp.globalize = function(regex) {\n    return copyRegex(regex, {addG: true});\n};\n\n/**\n * Installs optional features according to the specified options. Can be undone using\n * `XRegExp.uninstall`.\n *\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.install({\n *   // Enables support for astral code points in Unicode addons (implicitly sets flag A)\n *   astral: true,\n *\n *   // DEPRECATED: Overrides native regex methods with fixed/extended versions\n *   natives: true\n * });\n *\n * // With an options string\n * XRegExp.install('astral natives');\n */\nXRegExp.install = function(options) {\n    options = prepareOptions(options);\n\n    if (!features.astral && options.astral) {\n        setAstral(true);\n    }\n\n    if (!features.natives && options.natives) {\n        setNatives(true);\n    }\n};\n\n/**\n * Checks whether an individual optional feature is installed.\n *\n * @param {String} feature Name of the feature to check. One of:\n *   <li>`astral`\n *   <li>`natives`\n * @returns {Boolean} Whether the feature is installed.\n * @example\n *\n * XRegExp.isInstalled('astral');\n */\nXRegExp.isInstalled = function(feature) {\n    return !!(features[feature]);\n};\n\n/**\n * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes\n * created in another frame, when `instanceof` and `constructor` checks would fail.\n *\n * @param {*} value Object to check.\n * @returns {Boolean} Whether the object is a `RegExp` object.\n * @example\n *\n * XRegExp.isRegExp('string'); // -> false\n * XRegExp.isRegExp(/regex/i); // -> true\n * XRegExp.isRegExp(RegExp('^', 'm')); // -> true\n * XRegExp.isRegExp(XRegExp('(?s).')); // -> true\n */\nXRegExp.isRegExp = function(value) {\n    return toString.call(value) === '[object RegExp]';\n    //return isType(value, 'RegExp');\n};\n\n/**\n * Returns the first matched string, or in global mode, an array containing all matched strings.\n * This is essentially a more convenient re-implementation of `String.prototype.match` that gives\n * the result types you actually want (string instead of `exec`-style array in match-first mode,\n * and an empty array instead of `null` when no matches are found in match-all mode). It also lets\n * you override flag g and ignore `lastIndex`, and fixes browser bugs.\n *\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {String} [scope='one'] Use 'one' to return the first match as a string. Use 'all' to\n *   return an array of all matched strings. If not explicitly specified and `regex` uses flag g,\n *   `scope` is 'all'.\n * @returns {String|Array} In match-first mode: First match as a string, or `null`. In match-all\n *   mode: Array of all matched strings, or an empty array.\n * @example\n *\n * // Match first\n * XRegExp.match('abc', /\\w/); // -> 'a'\n * XRegExp.match('abc', /\\w/g, 'one'); // -> 'a'\n * XRegExp.match('abc', /x/g, 'one'); // -> null\n *\n * // Match all\n * XRegExp.match('abc', /\\w/g); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /\\w/, 'all'); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /x/, 'all'); // -> []\n */\nXRegExp.match = function(str, regex, scope) {\n    var global = (regex.global && scope !== 'one') || scope === 'all',\n        cacheKey = ((global ? 'g' : '') + (regex.sticky ? 'y' : '')) || 'noGY',\n        result,\n        r2;\n\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\n\n    // Shares cached copies with `XRegExp.exec`/`replace`\n    r2 = regex[REGEX_DATA][cacheKey] || (\n        regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n            addG: !!global,\n            removeG: scope === 'one',\n            isInternalOnly: true\n        })\n    );\n\n    result = nativ.match.call(toObject(str), r2);\n\n    if (regex.global) {\n        regex.lastIndex = (\n            (scope === 'one' && result) ?\n                // Can't use `r2.lastIndex` since `r2` is nonglobal in this case\n                (result.index + result[0].length) : 0\n        );\n    }\n\n    return global ? (result || []) : (result && result[0]);\n};\n\n/**\n * Retrieves the matches from searching a string using a chain of regexes that successively search\n * within previous matches. The provided `chain` array can contain regexes and or objects with\n * `regex` and `backref` properties. When a backreference is specified, the named or numbered\n * backreference is passed forward to the next regex or returned.\n *\n * @param {String} str String to search.\n * @param {Array} chain Regexes that each search for matches within preceding results.\n * @returns {Array} Matches by the last regex in the chain, or an empty array.\n * @example\n *\n * // Basic usage; matches numbers within <b> tags\n * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [\n *   XRegExp('(?is)<b>.*?</b>'),\n *   /\\d+/\n * ]);\n * // -> ['2', '4', '56']\n *\n * // Passing forward and returning specific backreferences\n * html = '<a href=\"http://xregexp.com/api/\">XRegExp</a>\\\n *         <a href=\"http://www.google.com/\">Google</a>';\n * XRegExp.matchChain(html, [\n *   {regex: /<a href=\"([^\"]+)\">/i, backref: 1},\n *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}\n * ]);\n * // -> ['xregexp.com', 'www.google.com']\n */\nXRegExp.matchChain = function(str, chain) {\n    return (function recurseChain(values, level) {\n        var item = chain[level].regex ? chain[level] : {regex: chain[level]};\n        var matches = [];\n\n        function addMatch(match) {\n            if (item.backref) {\n                // Safari 4.0.5 (but not 5.0.5+) inappropriately uses sparse arrays to hold the\n                // `undefined`s for backreferences to nonparticipating capturing groups. In such\n                // cases, a `hasOwnProperty` or `in` check on its own would inappropriately throw\n                // the exception, so also check if the backreference is a number that is within the\n                // bounds of the array.\n                if (!(match.hasOwnProperty(item.backref) || +item.backref < match.length)) {\n                    throw new ReferenceError('Backreference to undefined group: ' + item.backref);\n                }\n\n                matches.push(match[item.backref] || '');\n            } else {\n                matches.push(match[0]);\n            }\n        }\n\n        for (var i = 0; i < values.length; ++i) {\n            XRegExp.forEach(values[i], item.regex, addMatch);\n        }\n\n        return ((level === chain.length - 1) || !matches.length) ?\n            matches :\n            recurseChain(matches, level + 1);\n    }([str], 0));\n};\n\n/**\n * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string\n * or regex, and the replacement can be a string or a function to be called for each match. To\n * perform a global search and replace, use the optional `scope` argument or include flag g if using\n * a regex. Replacement strings can use `${n}` for named and numbered backreferences. Replacement\n * functions can use named backreferences via `arguments[0].name`. Also fixes browser bugs compared\n * to the native `String.prototype.replace` and can be used reliably cross-browser.\n *\n * @param {String} str String to search.\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n *   Replacement strings can include special replacement syntax:\n *     <li>$$ - Inserts a literal $ character.\n *     <li>$&, $0 - Inserts the matched substring.\n *     <li>$` - Inserts the string that precedes the matched substring (left context).\n *     <li>$' - Inserts the string that follows the matched substring (right context).\n *     <li>$n, $nn - Where n/nn are digits referencing an existent capturing group, inserts\n *       backreference n/nn.\n *     <li>${n} - Where n is a name or any number of digits that reference an existent capturing\n *       group, inserts backreference n.\n *   Replacement functions are invoked with three or more arguments:\n *     <li>The matched substring (corresponds to $& above). Named backreferences are accessible as\n *       properties of this first argument.\n *     <li>0..n arguments, one for each backreference (corresponding to $1, $2, etc. above).\n *     <li>The zero-based index of the match within the total search string.\n *     <li>The total string being searched.\n * @param {String} [scope='one'] Use 'one' to replace the first match only, or 'all'. If not\n *   explicitly specified and using a regex with flag g, `scope` is 'all'.\n * @returns {String} New string with one or all matches replaced.\n * @example\n *\n * // Regex search, using named backreferences in replacement string\n * var name = XRegExp('(?<first>\\\\w+) (?<last>\\\\w+)');\n * XRegExp.replace('John Smith', name, '${last}, ${first}');\n * // -> 'Smith, John'\n *\n * // Regex search, using named backreferences in replacement function\n * XRegExp.replace('John Smith', name, function(match) {\n *   return match.last + ', ' + match.first;\n * });\n * // -> 'Smith, John'\n *\n * // String search, with replace-all\n * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');\n * // -> 'XRegExp builds XRegExps'\n */\nXRegExp.replace = function(str, search, replacement, scope) {\n    var isRegex = XRegExp.isRegExp(search),\n        global = (search.global && scope !== 'one') || scope === 'all',\n        cacheKey = ((global ? 'g' : '') + (search.sticky ? 'y' : '')) || 'noGY',\n        s2 = search,\n        result;\n\n    if (isRegex) {\n        search[REGEX_DATA] = search[REGEX_DATA] || {};\n\n        // Shares cached copies with `XRegExp.exec`/`match`. Since a copy is used, `search`'s\n        // `lastIndex` isn't updated *during* replacement iterations\n        s2 = search[REGEX_DATA][cacheKey] || (\n            search[REGEX_DATA][cacheKey] = copyRegex(search, {\n                addG: !!global,\n                removeG: scope === 'one',\n                isInternalOnly: true\n            })\n        );\n    } else if (global) {\n        s2 = new RegExp(XRegExp.escape(String(search)), 'g');\n    }\n\n    // Fixed `replace` required for named backreferences, etc.\n    result = fixed.replace.call(toObject(str), s2, replacement);\n\n    if (isRegex && search.global) {\n        // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n        search.lastIndex = 0;\n    }\n\n    return result;\n};\n\n/**\n * Performs batch processing of string replacements. Used like `XRegExp.replace`, but accepts an\n * array of replacement details. Later replacements operate on the output of earlier replacements.\n * Replacement details are accepted as an array with a regex or string to search for, the\n * replacement string or function, and an optional scope of 'one' or 'all'. Uses the XRegExp\n * replacement text syntax, which supports named backreference properties via `${name}`.\n *\n * @param {String} str String to search.\n * @param {Array} replacements Array of replacement detail arrays.\n * @returns {String} New string with all replacements.\n * @example\n *\n * str = XRegExp.replaceEach(str, [\n *   [XRegExp('(?<name>a)'), 'z${name}'],\n *   [/b/gi, 'y'],\n *   [/c/g, 'x', 'one'], // scope 'one' overrides /g\n *   [/d/, 'w', 'all'],  // scope 'all' overrides lack of /g\n *   ['e', 'v', 'all'],  // scope 'all' allows replace-all for strings\n *   [/f/g, function($0) {\n *     return $0.toUpperCase();\n *   }]\n * ]);\n */\nXRegExp.replaceEach = function(str, replacements) {\n    var i, r;\n\n    for (i = 0; i < replacements.length; ++i) {\n        r = replacements[i];\n        str = XRegExp.replace(str, r[0], r[1], r[2]);\n    }\n\n    return str;\n};\n\n/**\n * Splits a string into an array of strings using a regex or string separator. Matches of the\n * separator are not included in the result array. However, if `separator` is a regex that contains\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n * cross-browser.\n *\n * @param {String} str String to split.\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n * @example\n *\n * // Basic use\n * XRegExp.split('a b c', ' ');\n * // -> ['a', 'b', 'c']\n *\n * // With limit\n * XRegExp.split('a b c', ' ', 2);\n * // -> ['a', 'b']\n *\n * // Backreferences in result array\n * XRegExp.split('..word1..', /([a-z]+)(\\d+)/i);\n * // -> ['..', 'word', '1', '..']\n */\nXRegExp.split = function(str, separator, limit) {\n    return fixed.split.call(toObject(str), separator, limit);\n};\n\n/**\n * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and\n * `sticky` arguments specify the search start position, and whether the match must start at the\n * specified position only. The `lastIndex` property of the provided regex is not used, but is\n * updated for compatibility. Also fixes browser bugs compared to the native\n * `RegExp.prototype.test` and can be used reliably cross-browser.\n *\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {Boolean} Whether the regex matched the provided value.\n * @example\n *\n * // Basic use\n * XRegExp.test('abc', /c/); // -> true\n *\n * // With pos and sticky\n * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false\n * XRegExp.test('abc', /c/, 2, 'sticky'); // -> true\n */\nXRegExp.test = function(str, regex, pos, sticky) {\n    // Do this the easy way :-)\n    return !!XRegExp.exec(str, regex, pos, sticky);\n};\n\n/**\n * Uninstalls optional features according to the specified options. All optional features start out\n * uninstalled, so this is used to undo the actions of `XRegExp.install`.\n *\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.uninstall({\n *   // Disables support for astral code points in Unicode addons\n *   astral: true,\n *\n *   // DEPRECATED: Restores native regex methods\n *   natives: true\n * });\n *\n * // With an options string\n * XRegExp.uninstall('astral natives');\n */\nXRegExp.uninstall = function(options) {\n    options = prepareOptions(options);\n\n    if (features.astral && options.astral) {\n        setAstral(false);\n    }\n\n    if (features.natives && options.natives) {\n        setNatives(false);\n    }\n};\n\n/**\n * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as\n * regex objects or strings. Metacharacters are escaped in patterns provided as strings.\n * Backreferences in provided regex objects are automatically renumbered to work correctly within\n * the larger combined pattern. Native flags used by provided regexes are ignored in favor of the\n * `flags` argument.\n *\n * @param {Array} patterns Regexes and strings to combine.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @returns {RegExp} Union of the provided regexes and strings.\n * @example\n *\n * XRegExp.union(['a+b*c', /(dogs)\\1/, /(cats)\\1/], 'i');\n * // -> /a\\+b\\*c|(dogs)\\1|(cats)\\2/i\n */\nXRegExp.union = function(patterns, flags) {\n    var numCaptures = 0;\n    var numPriorCaptures;\n    var captureNames;\n\n    function rewrite(match, paren, backref) {\n        var name = captureNames[numCaptures - numPriorCaptures];\n\n        // Capturing group\n        if (paren) {\n            ++numCaptures;\n            // If the current capture has a name, preserve the name\n            if (name) {\n                return '(?<' + name + '>';\n            }\n        // Backreference\n        } else if (backref) {\n            // Rewrite the backreference\n            return '\\\\' + (+backref + numPriorCaptures);\n        }\n\n        return match;\n    }\n\n    if (!(isType(patterns, 'Array') && patterns.length)) {\n        throw new TypeError('Must provide a nonempty array of patterns to merge');\n    }\n\n    var parts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]/g;\n    var output = [];\n    var pattern;\n    for (var i = 0; i < patterns.length; ++i) {\n        pattern = patterns[i];\n\n        if (XRegExp.isRegExp(pattern)) {\n            numPriorCaptures = numCaptures;\n            captureNames = (pattern[REGEX_DATA] && pattern[REGEX_DATA].captureNames) || [];\n\n            // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns are\n            // independently valid; helps keep this simple. Named captures are put back\n            output.push(nativ.replace.call(XRegExp(pattern.source).source, parts, rewrite));\n        } else {\n            output.push(XRegExp.escape(pattern));\n        }\n    }\n\n    return XRegExp(output.join('|'), flags);\n};\n\n// ==--------------------------==\n// Fixed/extended native methods\n// ==--------------------------==\n\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `RegExp.prototype.exec`. Calling `XRegExp.install('natives')` uses this to\n * override the native method. Use via `XRegExp.exec` without overriding natives.\n *\n * @param {String} str String to search.\n * @returns {Array} Match array with named backreference properties, or `null`.\n */\nfixed.exec = function(str) {\n    var origLastIndex = this.lastIndex,\n        match = nativ.exec.apply(this, arguments),\n        name,\n        r2,\n        i;\n\n    if (match) {\n        // Fix browsers whose `exec` methods don't return `undefined` for nonparticipating capturing\n        // groups. This fixes IE 5.5-8, but not IE 9's quirks mode or emulation of older IEs. IE 9\n        // in standards mode follows the spec.\n        if (!correctExecNpcg && match.length > 1 && indexOf(match, '') > -1) {\n            r2 = copyRegex(this, {\n                removeG: true,\n                isInternalOnly: true\n            });\n            // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed\n            // matching due to characters outside the match\n            nativ.replace.call(String(str).slice(match.index), r2, function() {\n                var len = arguments.length, i;\n                // Skip index 0 and the last 2\n                for (i = 1; i < len - 2; ++i) {\n                    if (arguments[i] === undefined) {\n                        match[i] = undefined;\n                    }\n                }\n            });\n        }\n\n        // Attach named capture properties\n        if (this[REGEX_DATA] && this[REGEX_DATA].captureNames) {\n            // Skip index 0\n            for (i = 1; i < match.length; ++i) {\n                name = this[REGEX_DATA].captureNames[i - 1];\n                if (name) {\n                    match[name] = match[i];\n                }\n            }\n        }\n\n        // Fix browsers that increment `lastIndex` after zero-length matches\n        if (this.global && !match[0].length && (this.lastIndex > match.index)) {\n            this.lastIndex = match.index;\n        }\n    }\n\n    if (!this.global) {\n        // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n        this.lastIndex = origLastIndex;\n    }\n\n    return match;\n};\n\n/**\n * Fixes browser bugs in the native `RegExp.prototype.test`. Calling `XRegExp.install('natives')`\n * uses this to override the native method.\n *\n * @param {String} str String to search.\n * @returns {Boolean} Whether the regex matched the provided value.\n */\nfixed.test = function(str) {\n    // Do this the easy way :-)\n    return !!fixed.exec.call(this, str);\n};\n\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `String.prototype.match`. Calling `XRegExp.install('natives')` uses this to\n * override the native method.\n *\n * @param {RegExp|*} regex Regex to search with. If not a regex object, it is passed to `RegExp`.\n * @returns {Array} If `regex` uses flag g, an array of match strings or `null`. Without flag g,\n *   the result of calling `regex.exec(this)`.\n */\nfixed.match = function(regex) {\n    var result;\n\n    if (!XRegExp.isRegExp(regex)) {\n        // Use the native `RegExp` rather than `XRegExp`\n        regex = new RegExp(regex);\n    } else if (regex.global) {\n        result = nativ.match.apply(this, arguments);\n        // Fixes IE bug\n        regex.lastIndex = 0;\n\n        return result;\n    }\n\n    return fixed.exec.call(regex, toObject(this));\n};\n\n/**\n * Adds support for `${n}` tokens for named and numbered backreferences in replacement text, and\n * provides named backreferences to replacement functions as `arguments[0].name`. Also fixes browser\n * bugs in replacement text syntax when performing a replacement using a nonregex search value, and\n * the value of a replacement regex's `lastIndex` property during replacement iterations and upon\n * completion. Calling `XRegExp.install('natives')` uses this to override the native method. Note\n * that this doesn't support SpiderMonkey's proprietary third (`flags`) argument. Use via\n * `XRegExp.replace` without overriding natives.\n *\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n * @returns {String} New string with one or all matches replaced.\n */\nfixed.replace = function(search, replacement) {\n    var isRegex = XRegExp.isRegExp(search),\n        origLastIndex,\n        captureNames,\n        result;\n\n    if (isRegex) {\n        if (search[REGEX_DATA]) {\n            captureNames = search[REGEX_DATA].captureNames;\n        }\n        // Only needed if `search` is nonglobal\n        origLastIndex = search.lastIndex;\n    } else {\n        search += ''; // Type-convert\n    }\n\n    // Don't use `typeof`; some older browsers return 'function' for regex objects\n    if (isType(replacement, 'Function')) {\n        // Stringifying `this` fixes a bug in IE < 9 where the last argument in replacement\n        // functions isn't type-converted to a string\n        result = nativ.replace.call(String(this), search, function() {\n            var args = arguments, i;\n            if (captureNames) {\n                // Change the `arguments[0]` string primitive to a `String` object that can store\n                // properties. This really does need to use `String` as a constructor\n                args[0] = new String(args[0]);\n                // Store named backreferences on the first argument\n                for (i = 0; i < captureNames.length; ++i) {\n                    if (captureNames[i]) {\n                        args[0][captureNames[i]] = args[i + 1];\n                    }\n                }\n            }\n            // Update `lastIndex` before calling `replacement`. Fixes IE, Chrome, Firefox, Safari\n            // bug (last tested IE 9, Chrome 17, Firefox 11, Safari 5.1)\n            if (isRegex && search.global) {\n                search.lastIndex = args[args.length - 2] + args[0].length;\n            }\n            // ES6 specs the context for replacement functions as `undefined`\n            return replacement.apply(undefined, args);\n        });\n    } else {\n        // Ensure that the last value of `args` will be a string when given nonstring `this`,\n        // while still throwing on null or undefined context\n        result = nativ.replace.call(this == null ? this : String(this), search, function() {\n            // Keep this function's `arguments` available through closure\n            var args = arguments;\n            return nativ.replace.call(String(replacement), replacementToken, function($0, $1, $2) {\n                var n;\n                // Named or numbered backreference with curly braces\n                if ($1) {\n                    // XRegExp behavior for `${n}`:\n                    // 1. Backreference to numbered capture, if `n` is an integer. Use `0` for the\n                    //    entire match. Any number of leading zeros may be used.\n                    // 2. Backreference to named capture `n`, if it exists and is not an integer\n                    //    overridden by numbered capture. In practice, this does not overlap with\n                    //    numbered capture since XRegExp does not allow named capture to use a bare\n                    //    integer as the name.\n                    // 3. If the name or number does not refer to an existing capturing group, it's\n                    //    an error.\n                    n = +$1; // Type-convert; drop leading zeros\n                    if (n <= args.length - 3) {\n                        return args[n] || '';\n                    }\n                    // Groups with the same name is an error, else would need `lastIndexOf`\n                    n = captureNames ? indexOf(captureNames, $1) : -1;\n                    if (n < 0) {\n                        throw new SyntaxError('Backreference to undefined group ' + $0);\n                    }\n                    return args[n + 1] || '';\n                }\n                // Else, special variable or numbered backreference without curly braces\n                if ($2 === '$') { // $$\n                    return '$';\n                }\n                if ($2 === '&' || +$2 === 0) { // $&, $0 (not followed by 1-9), $00\n                    return args[0];\n                }\n                if ($2 === '`') { // $` (left context)\n                    return args[args.length - 1].slice(0, args[args.length - 2]);\n                }\n                if ($2 === \"'\") { // $' (right context)\n                    return args[args.length - 1].slice(args[args.length - 2] + args[0].length);\n                }\n                // Else, numbered backreference without curly braces\n                $2 = +$2; // Type-convert; drop leading zero\n                // XRegExp behavior for `$n` and `$nn`:\n                // - Backrefs end after 1 or 2 digits. Use `${..}` for more digits.\n                // - `$1` is an error if no capturing groups.\n                // - `$10` is an error if less than 10 capturing groups. Use `${1}0` instead.\n                // - `$01` is `$1` if at least one capturing group, else it's an error.\n                // - `$0` (not followed by 1-9) and `$00` are the entire match.\n                // Native behavior, for comparison:\n                // - Backrefs end after 1 or 2 digits. Cannot reference capturing group 100+.\n                // - `$1` is a literal `$1` if no capturing groups.\n                // - `$10` is `$1` followed by a literal `0` if less than 10 capturing groups.\n                // - `$01` is `$1` if at least one capturing group, else it's a literal `$01`.\n                // - `$0` is a literal `$0`.\n                if (!isNaN($2)) {\n                    if ($2 > args.length - 3) {\n                        throw new SyntaxError('Backreference to undefined group ' + $0);\n                    }\n                    return args[$2] || '';\n                }\n                // `$` followed by an unsupported char is an error, unlike native JS\n                throw new SyntaxError('Invalid token ' + $0);\n            });\n        });\n    }\n\n    if (isRegex) {\n        if (search.global) {\n            // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n            search.lastIndex = 0;\n        } else {\n            // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n            search.lastIndex = origLastIndex;\n        }\n    }\n\n    return result;\n};\n\n/**\n * Fixes browser bugs in the native `String.prototype.split`. Calling `XRegExp.install('natives')`\n * uses this to override the native method. Use via `XRegExp.split` without overriding natives.\n *\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n */\nfixed.split = function(separator, limit) {\n    if (!XRegExp.isRegExp(separator)) {\n        // Browsers handle nonregex split correctly, so use the faster native method\n        return nativ.split.apply(this, arguments);\n    }\n\n    var str = String(this),\n        output = [],\n        origLastIndex = separator.lastIndex,\n        lastLastIndex = 0,\n        lastLength;\n\n    // Values for `limit`, per the spec:\n    // If undefined: pow(2,32) - 1\n    // If 0, Infinity, or NaN: 0\n    // If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);\n    // If negative number: pow(2,32) - floor(abs(limit))\n    // If other: Type-convert, then use the above rules\n    // This line fails in very strange ways for some values of `limit` in Opera 10.5-10.63, unless\n    // Opera Dragonfly is open (go figure). It works in at least Opera 9.5-10.1 and 11+\n    limit = (limit === undefined ? -1 : limit) >>> 0;\n\n    XRegExp.forEach(str, separator, function(match) {\n        // This condition is not the same as `if (match[0].length)`\n        if ((match.index + match[0].length) > lastLastIndex) {\n            output.push(str.slice(lastLastIndex, match.index));\n            if (match.length > 1 && match.index < str.length) {\n                Array.prototype.push.apply(output, match.slice(1));\n            }\n            lastLength = match[0].length;\n            lastLastIndex = match.index + lastLength;\n        }\n    });\n\n    if (lastLastIndex === str.length) {\n        if (!nativ.test.call(separator, '') || lastLength) {\n            output.push('');\n        }\n    } else {\n        output.push(str.slice(lastLastIndex));\n    }\n\n    separator.lastIndex = origLastIndex;\n    return output.length > limit ? output.slice(0, limit) : output;\n};\n\n// ==--------------------------==\n// Built-in syntax/flag tokens\n// ==--------------------------==\n\n/*\n * Letter escapes that natively match literal characters: `\\a`, `\\A`, etc. These should be\n * SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-browser\n * consistency and to reserve their syntax, but lets them be superseded by addons.\n */\nXRegExp.addToken(\n    /\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|x(?![\\dA-Fa-f]{2}))/,\n    function(match, scope) {\n        // \\B is allowed in default scope only\n        if (match[1] === 'B' && scope === defaultScope) {\n            return match[0];\n        }\n        throw new SyntaxError('Invalid escape ' + match[0]);\n    },\n    {\n        scope: 'all',\n        leadChar: '\\\\'\n    }\n);\n\n/*\n * Unicode code point escape with curly braces: `\\u{N..}`. `N..` is any one or more digit\n * hexadecimal number from 0-10FFFF, and can include leading zeros. Requires the native ES6 `u` flag\n * to support code points greater than U+FFFF. Avoids converting code points above U+FFFF to\n * surrogate pairs (which could be done without flag `u`), since that could lead to broken behavior\n * if you follow a `\\u{N..}` token that references a code point above U+FFFF with a quantifier, or\n * if you use the same in a character class.\n */\nXRegExp.addToken(\n    /\\\\u{([\\dA-Fa-f]+)}/,\n    function(match, scope, flags) {\n        var code = dec(match[1]);\n        if (code > 0x10FFFF) {\n            throw new SyntaxError('Invalid Unicode code point ' + match[0]);\n        }\n        if (code <= 0xFFFF) {\n            // Converting to \\uNNNN avoids needing to escape the literal character and keep it\n            // separate from preceding tokens\n            return '\\\\u' + pad4(hex(code));\n        }\n        // If `code` is between 0xFFFF and 0x10FFFF, require and defer to native handling\n        if (hasNativeU && flags.indexOf('u') > -1) {\n            return match[0];\n        }\n        throw new SyntaxError('Cannot use Unicode code point above \\\\u{FFFF} without flag u');\n    },\n    {\n        scope: 'all',\n        leadChar: '\\\\'\n    }\n);\n\n/*\n * Empty character class: `[]` or `[^]`. This fixes a critical cross-browser syntax inconsistency.\n * Unless this is standardized (per the ES spec), regex syntax can't be accurately parsed because\n * character class endings can't be determined.\n */\nXRegExp.addToken(\n    /\\[(\\^?)]/,\n    function(match) {\n        // For cross-browser compatibility with ES3, convert [] to \\b\\B and [^] to [\\s\\S].\n        // (?!) should work like \\b\\B, but is unreliable in some versions of Firefox\n        return match[1] ? '[\\\\s\\\\S]' : '\\\\b\\\\B';\n    },\n    {leadChar: '['}\n);\n\n/*\n * Comment pattern: `(?# )`. Inline comments are an alternative to the line comments allowed in\n * free-spacing mode (flag x).\n */\nXRegExp.addToken(\n    /\\(\\?#[^)]*\\)/,\n    function(match, scope, flags) {\n        // Keep tokens separated unless the following token is a quantifier. This avoids e.g.\n        // inadvertedly changing `\\1(?#)1` to `\\11`.\n        return isQuantifierNext(match.input, match.index + match[0].length, flags) ?\n            '' : '(?:)';\n    },\n    {leadChar: '('}\n);\n\n/*\n * Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.\n */\nXRegExp.addToken(\n    /\\s+|#[^\\n]*\\n?/,\n    function(match, scope, flags) {\n        // Keep tokens separated unless the following token is a quantifier. This avoids e.g.\n        // inadvertedly changing `\\1 1` to `\\11`.\n        return isQuantifierNext(match.input, match.index + match[0].length, flags) ?\n            '' : '(?:)';\n    },\n    {flag: 'x'}\n);\n\n/*\n * Dot, in dotall mode (aka singleline mode, flag s) only.\n */\nXRegExp.addToken(\n    /\\./,\n    function() {\n        return '[\\\\s\\\\S]';\n    },\n    {\n        flag: 's',\n        leadChar: '.'\n    }\n);\n\n/*\n * Named backreference: `\\k<name>`. Backreference names can use the characters A-Z, a-z, 0-9, _,\n * and $ only. Also allows numbered backreferences as `\\k<n>`.\n */\nXRegExp.addToken(\n    /\\\\k<([\\w$]+)>/,\n    function(match) {\n        // Groups with the same name is an error, else would need `lastIndexOf`\n        var index = isNaN(match[1]) ? (indexOf(this.captureNames, match[1]) + 1) : +match[1],\n            endIndex = match.index + match[0].length;\n        if (!index || index > this.captureNames.length) {\n            throw new SyntaxError('Backreference to undefined group ' + match[0]);\n        }\n        // Keep backreferences separate from subsequent literal numbers. This avoids e.g.\n        // inadvertedly changing `(?<n>)\\k<n>1` to `()\\11`.\n        return '\\\\' + index + (\n            endIndex === match.input.length || isNaN(match.input.charAt(endIndex)) ?\n                '' : '(?:)'\n        );\n    },\n    {leadChar: '\\\\'}\n);\n\n/*\n * Numbered backreference or octal, plus any following digits: `\\0`, `\\11`, etc. Octals except `\\0`\n * not followed by 0-9 and backreferences to unopened capture groups throw an error. Other matches\n * are returned unaltered. IE < 9 doesn't support backreferences above `\\99` in regex syntax.\n */\nXRegExp.addToken(\n    /\\\\(\\d+)/,\n    function(match, scope) {\n        if (\n            !(\n                scope === defaultScope &&\n                /^[1-9]/.test(match[1]) &&\n                +match[1] <= this.captureNames.length\n            ) &&\n            match[1] !== '0'\n        ) {\n            throw new SyntaxError('Cannot use octal escape or backreference to undefined group ' +\n                match[0]);\n        }\n        return match[0];\n    },\n    {\n        scope: 'all',\n        leadChar: '\\\\'\n    }\n);\n\n/*\n * Named capturing group; match the opening delimiter only: `(?<name>`. Capture names can use the\n * characters A-Z, a-z, 0-9, _, and $ only. Names can't be integers. Supports Python-style\n * `(?P<name>` as an alternate syntax to avoid issues in some older versions of Opera which natively\n * supported the Python-style syntax. Otherwise, XRegExp might treat numbered backreferences to\n * Python-style named capture as octals.\n */\nXRegExp.addToken(\n    /\\(\\?P?<([\\w$]+)>/,\n    function(match) {\n        // Disallow bare integers as names because named backreferences are added to match arrays\n        // and therefore numeric properties may lead to incorrect lookups\n        if (!isNaN(match[1])) {\n            throw new SyntaxError('Cannot use integer as capture name ' + match[0]);\n        }\n        if (match[1] === 'length' || match[1] === '__proto__') {\n            throw new SyntaxError('Cannot use reserved word as capture name ' + match[0]);\n        }\n        if (indexOf(this.captureNames, match[1]) > -1) {\n            throw new SyntaxError('Cannot use same name for multiple groups ' + match[0]);\n        }\n        this.captureNames.push(match[1]);\n        this.hasNamedCapture = true;\n        return '(';\n    },\n    {leadChar: '('}\n);\n\n/*\n * Capturing group; match the opening parenthesis only. Required for support of named capturing\n * groups. Also adds explicit capture mode (flag n).\n */\nXRegExp.addToken(\n    /\\((?!\\?)/,\n    function(match, scope, flags) {\n        if (flags.indexOf('n') > -1) {\n            return '(?:';\n        }\n        this.captureNames.push(null);\n        return '(';\n    },\n    {\n        optionalFlags: 'n',\n        leadChar: '('\n    }\n);\n\nmodule.exports = XRegExp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/xregexp.js\n// module id = 18\n// module chunks = 0 1","/*!\n * XRegExp.build 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2012-2016 MIT License\n * Inspired by Lea Verou's RegExp.create <lea.verou.me>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    var REGEX_DATA = 'xregexp';\n    var subParts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]/g;\n    var parts = XRegExp.union([/\\({{([\\w$]+)}}\\)|{{([\\w$]+)}}/, subParts], 'g');\n\n    /**\n     * Strips a leading `^` and trailing unescaped `$`, if both are present.\n     *\n     * @param {String} pattern Pattern to process.\n     * @returns {String} Pattern with edge anchors removed.\n     */\n    function deanchor(pattern) {\n        // Allow any number of empty noncapturing groups before/after anchors, because regexes\n        // built/generated by XRegExp sometimes include them\n        var leadingAnchor = /^(?:\\(\\?:\\))*\\^/,\n            trailingAnchor = /\\$(?:\\(\\?:\\))*$/;\n\n        if (\n            leadingAnchor.test(pattern) &&\n            trailingAnchor.test(pattern) &&\n            // Ensure that the trailing `$` isn't escaped\n            trailingAnchor.test(pattern.replace(/\\\\[\\s\\S]/g, ''))\n        ) {\n            return pattern.replace(leadingAnchor, '').replace(trailingAnchor, '');\n        }\n\n        return pattern;\n    }\n\n    /**\n     * Converts the provided value to an XRegExp. Native RegExp flags are not preserved.\n     *\n     * @param {String|RegExp} value Value to convert.\n     * @returns {RegExp} XRegExp object with XRegExp syntax applied.\n     */\n    function asXRegExp(value) {\n        return XRegExp.isRegExp(value) ?\n            (value[REGEX_DATA] && value[REGEX_DATA].captureNames ?\n                // Don't recompile, to preserve capture names\n                value :\n                // Recompile as XRegExp\n                XRegExp(value.source)\n            ) :\n            // Compile string as XRegExp\n            XRegExp(value);\n    }\n\n    /**\n     * Builds regexes using named subpatterns, for readability and pattern reuse. Backreferences in\n     * the outer pattern and provided subpatterns are automatically renumbered to work correctly.\n     * Native flags used by provided subpatterns are ignored in favor of the `flags` argument.\n     *\n     * @param {String} pattern XRegExp pattern using `{{name}}` for embedded subpatterns. Allows\n     *   `({{name}})` as shorthand for `(?<name>{{name}})`. Patterns cannot be embedded within\n     *   character classes.\n     * @param {Object} subs Lookup object for named subpatterns. Values can be strings or regexes. A\n     *   leading `^` and trailing unescaped `$` are stripped from subpatterns, if both are present.\n     * @param {String} [flags] Any combination of XRegExp flags.\n     * @returns {RegExp} Regex with interpolated subpatterns.\n     * @example\n     *\n     * var time = XRegExp.build('(?x)^ {{hours}} ({{minutes}}) $', {\n     *   hours: XRegExp.build('{{h12}} : | {{h24}}', {\n     *     h12: /1[0-2]|0?[1-9]/,\n     *     h24: /2[0-3]|[01][0-9]/\n     *   }, 'x'),\n     *   minutes: /^[0-5][0-9]$/\n     * });\n     * time.test('10:59'); // -> true\n     * XRegExp.exec('10:59', time).minutes; // -> '59'\n     */\n    XRegExp.build = function(pattern, subs, flags) {\n        var inlineFlags = /^\\(\\?([\\w$]+)\\)/.exec(pattern),\n            data = {},\n            numCaps = 0, // 'Caps' is short for captures\n            numPriorCaps,\n            numOuterCaps = 0,\n            outerCapsMap = [0],\n            outerCapNames,\n            sub,\n            p;\n\n        // Add flags within a leading mode modifier to the overall pattern's flags\n        if (inlineFlags) {\n            flags = flags || '';\n            inlineFlags[1].replace(/./g, function(flag) {\n                // Don't add duplicates\n                flags += (flags.indexOf(flag) > -1 ? '' : flag);\n            });\n        }\n\n        for (p in subs) {\n            if (subs.hasOwnProperty(p)) {\n                // Passing to XRegExp enables extended syntax and ensures independent validity,\n                // lest an unescaped `(`, `)`, `[`, or trailing `\\` breaks the `(?:)` wrapper. For\n                // subpatterns provided as native regexes, it dies on octals and adds the property\n                // used to hold extended regex instance data, for simplicity\n                sub = asXRegExp(subs[p]);\n                data[p] = {\n                    // Deanchoring allows embedding independently useful anchored regexes. If you\n                    // really need to keep your anchors, double them (i.e., `^^...$$`)\n                    pattern: deanchor(sub.source),\n                    names: sub[REGEX_DATA].captureNames || []\n                };\n            }\n        }\n\n        // Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;\n        // helps keep this simple. Named captures will be put back\n        pattern = asXRegExp(pattern);\n        outerCapNames = pattern[REGEX_DATA].captureNames || [];\n        pattern = pattern.source.replace(parts, function($0, $1, $2, $3, $4) {\n            var subName = $1 || $2,\n                capName,\n                intro,\n                localCapIndex;\n            // Named subpattern\n            if (subName) {\n                if (!data.hasOwnProperty(subName)) {\n                    throw new ReferenceError('Undefined property ' + $0);\n                }\n                // Named subpattern was wrapped in a capturing group\n                if ($1) {\n                    capName = outerCapNames[numOuterCaps];\n                    outerCapsMap[++numOuterCaps] = ++numCaps;\n                    // If it's a named group, preserve the name. Otherwise, use the subpattern name\n                    // as the capture name\n                    intro = '(?<' + (capName || subName) + '>';\n                } else {\n                    intro = '(?:';\n                }\n                numPriorCaps = numCaps;\n                return intro + data[subName].pattern.replace(subParts, function(match, paren, backref) {\n                    // Capturing group\n                    if (paren) {\n                        capName = data[subName].names[numCaps - numPriorCaps];\n                        ++numCaps;\n                        // If the current capture has a name, preserve the name\n                        if (capName) {\n                            return '(?<' + capName + '>';\n                        }\n                    // Backreference\n                    } else if (backref) {\n                        localCapIndex = +backref - 1;\n                        // Rewrite the backreference\n                        return data[subName].names[localCapIndex] ?\n                            // Need to preserve the backreference name in case using flag `n`\n                            '\\\\k<' + data[subName].names[localCapIndex] + '>' :\n                            '\\\\' + (+backref + numPriorCaps);\n                    }\n                    return match;\n                }) + ')';\n            }\n            // Capturing group\n            if ($3) {\n                capName = outerCapNames[numOuterCaps];\n                outerCapsMap[++numOuterCaps] = ++numCaps;\n                // If the current capture has a name, preserve the name\n                if (capName) {\n                    return '(?<' + capName + '>';\n                }\n            // Backreference\n            } else if ($4) {\n                localCapIndex = +$4 - 1;\n                // Rewrite the backreference\n                return outerCapNames[localCapIndex] ?\n                    // Need to preserve the backreference name in case using flag `n`\n                    '\\\\k<' + outerCapNames[localCapIndex] + '>' :\n                    '\\\\' + outerCapsMap[+$4];\n            }\n            return $0;\n        });\n\n        return XRegExp(pattern, flags);\n    };\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/build.js\n// module id = 19\n// module chunks = 0 1","/*!\n * XRegExp.matchRecursive 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2009-2016 MIT License\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Returns a match detail object composed of the provided values.\n     */\n    function row(name, value, start, end) {\n        return {\n            name: name,\n            value: value,\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Returns an array of match strings between outermost left and right delimiters, or an array of\n     * objects with detailed match parts and position data. An error is thrown if delimiters are\n     * unbalanced within the data.\n     *\n     * @param {String} str String to search.\n     * @param {String} left Left delimiter as an XRegExp pattern.\n     * @param {String} right Right delimiter as an XRegExp pattern.\n     * @param {String} [flags] Any native or XRegExp flags, used for the left and right delimiters.\n     * @param {Object} [options] Lets you specify `valueNames` and `escapeChar` options.\n     * @returns {Array} Array of matches, or an empty array.\n     * @example\n     *\n     * // Basic usage\n     * var str = '(t((e))s)t()(ing)';\n     * XRegExp.matchRecursive(str, '\\\\(', '\\\\)', 'g');\n     * // -> ['t((e))s', '', 'ing']\n     *\n     * // Extended information mode with valueNames\n     * str = 'Here is <div> <div>an</div></div> example';\n     * XRegExp.matchRecursive(str, '<div\\\\s*>', '</div>', 'gi', {\n     *   valueNames: ['between', 'left', 'match', 'right']\n     * });\n     * // -> [\n     * // {name: 'between', value: 'Here is ',       start: 0,  end: 8},\n     * // {name: 'left',    value: '<div>',          start: 8,  end: 13},\n     * // {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},\n     * // {name: 'right',   value: '</div>',         start: 27, end: 33},\n     * // {name: 'between', value: ' example',       start: 33, end: 41}\n     * // ]\n     *\n     * // Omitting unneeded parts with null valueNames, and using escapeChar\n     * str = '...{1}.\\\\{{function(x,y){return {y:x}}}';\n     * XRegExp.matchRecursive(str, '{', '}', 'g', {\n     *   valueNames: ['literal', null, 'value', null],\n     *   escapeChar: '\\\\'\n     * });\n     * // -> [\n     * // {name: 'literal', value: '...',  start: 0, end: 3},\n     * // {name: 'value',   value: '1',    start: 4, end: 5},\n     * // {name: 'literal', value: '.\\\\{', start: 6, end: 9},\n     * // {name: 'value',   value: 'function(x,y){return {y:x}}', start: 10, end: 37}\n     * // ]\n     *\n     * // Sticky mode via flag y\n     * str = '<1><<<2>>><3>4<5>';\n     * XRegExp.matchRecursive(str, '<', '>', 'gy');\n     * // -> ['1', '<<2>>', '3']\n     */\n    XRegExp.matchRecursive = function(str, left, right, flags, options) {\n        flags = flags || '';\n        options = options || {};\n        var global = flags.indexOf('g') > -1,\n            sticky = flags.indexOf('y') > -1,\n            // Flag `y` is controlled internally\n            basicFlags = flags.replace(/y/g, ''),\n            escapeChar = options.escapeChar,\n            vN = options.valueNames,\n            output = [],\n            openTokens = 0,\n            delimStart = 0,\n            delimEnd = 0,\n            lastOuterEnd = 0,\n            outerStart,\n            innerStart,\n            leftMatch,\n            rightMatch,\n            esc;\n        left = XRegExp(left, basicFlags);\n        right = XRegExp(right, basicFlags);\n\n        if (escapeChar) {\n            if (escapeChar.length > 1) {\n                throw new Error('Cannot use more than one escape character');\n            }\n            escapeChar = XRegExp.escape(escapeChar);\n            // Using `XRegExp.union` safely rewrites backreferences in `left` and `right`\n            esc = new RegExp(\n                '(?:' + escapeChar + '[\\\\S\\\\s]|(?:(?!' +\n                    XRegExp.union([left, right]).source +\n                    ')[^' + escapeChar + '])+)+',\n                // Flags `gy` not needed here\n                flags.replace(/[^imu]+/g, '')\n            );\n        }\n\n        while (true) {\n            // If using an escape character, advance to the delimiter's next starting position,\n            // skipping any escaped characters in between\n            if (escapeChar) {\n                delimEnd += (XRegExp.exec(str, esc, delimEnd, 'sticky') || [''])[0].length;\n            }\n            leftMatch = XRegExp.exec(str, left, delimEnd);\n            rightMatch = XRegExp.exec(str, right, delimEnd);\n            // Keep the leftmost match only\n            if (leftMatch && rightMatch) {\n                if (leftMatch.index <= rightMatch.index) {\n                    rightMatch = null;\n                } else {\n                    leftMatch = null;\n                }\n            }\n            // Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):\n            // LM | RM | OT | Result\n            // 1  | 0  | 1  | loop\n            // 1  | 0  | 0  | loop\n            // 0  | 1  | 1  | loop\n            // 0  | 1  | 0  | throw\n            // 0  | 0  | 1  | throw\n            // 0  | 0  | 0  | break\n            // The paths above don't include the sticky mode special case. The loop ends after the\n            // first completed match if not `global`.\n            if (leftMatch || rightMatch) {\n                delimStart = (leftMatch || rightMatch).index;\n                delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\n            } else if (!openTokens) {\n                break;\n            }\n            if (sticky && !openTokens && delimStart > lastOuterEnd) {\n                break;\n            }\n            if (leftMatch) {\n                if (!openTokens) {\n                    outerStart = delimStart;\n                    innerStart = delimEnd;\n                }\n                ++openTokens;\n            } else if (rightMatch && openTokens) {\n                if (!--openTokens) {\n                    if (vN) {\n                        if (vN[0] && outerStart > lastOuterEnd) {\n                            output.push(row(vN[0], str.slice(lastOuterEnd, outerStart), lastOuterEnd, outerStart));\n                        }\n                        if (vN[1]) {\n                            output.push(row(vN[1], str.slice(outerStart, innerStart), outerStart, innerStart));\n                        }\n                        if (vN[2]) {\n                            output.push(row(vN[2], str.slice(innerStart, delimStart), innerStart, delimStart));\n                        }\n                        if (vN[3]) {\n                            output.push(row(vN[3], str.slice(delimStart, delimEnd), delimStart, delimEnd));\n                        }\n                    } else {\n                        output.push(str.slice(innerStart, delimStart));\n                    }\n                    lastOuterEnd = delimEnd;\n                    if (!global) {\n                        break;\n                    }\n                }\n            } else {\n                throw new Error('Unbalanced delimiter found in string');\n            }\n            // If the delimiter matched an empty string, avoid an infinite loop\n            if (delimStart === delimEnd) {\n                ++delimEnd;\n            }\n        }\n\n        if (global && !sticky && vN && vN[0] && str.length > lastOuterEnd) {\n            output.push(row(vN[0], str.slice(lastOuterEnd), lastOuterEnd, str.length));\n        }\n\n        return output;\n    };\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/matchrecursive.js\n// module id = 20\n// module chunks = 0 1","/*!\n * XRegExp Unicode Base 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2008-2016 MIT License\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds base support for Unicode matching:\n     * - Adds syntax `\\p{..}` for matching Unicode tokens. Tokens can be inverted using `\\P{..}` or\n     *   `\\p{^..}`. Token names ignore case, spaces, hyphens, and underscores. You can omit the\n     *   braces for token names that are a single letter (e.g. `\\pL` or `PL`).\n     * - Adds flag A (astral), which enables 21-bit Unicode support.\n     * - Adds the `XRegExp.addUnicodeData` method used by other addons to provide character data.\n     *\n     * Unicode Base relies on externally provided Unicode character data. Official addons are\n     * available to provide data for Unicode categories, scripts, blocks, and properties.\n     *\n     * @requires XRegExp\n     */\n\n    // ==--------------------------==\n    // Private stuff\n    // ==--------------------------==\n\n    // Storage for Unicode data\n    var unicode = {};\n\n    // Reuse utils\n    var dec = XRegExp._dec;\n    var hex = XRegExp._hex;\n    var pad4 = XRegExp._pad4;\n\n    // Generates a token lookup name: lowercase, with hyphens, spaces, and underscores removed\n    function normalize(name) {\n        return name.replace(/[- _]+/g, '').toLowerCase();\n    }\n\n    // Gets the decimal code of a literal code unit, \\xHH, \\uHHHH, or a backslash-escaped literal\n    function charCode(chr) {\n        var esc = /^\\\\[xu](.+)/.exec(chr);\n        return esc ?\n            dec(esc[1]) :\n            chr.charCodeAt(chr.charAt(0) === '\\\\' ? 1 : 0);\n    }\n\n    // Inverts a list of ordered BMP characters and ranges\n    function invertBmp(range) {\n        var output = '';\n        var lastEnd = -1;\n        XRegExp.forEach(\n            range,\n            /(\\\\x..|\\\\u....|\\\\?[\\s\\S])(?:-(\\\\x..|\\\\u....|\\\\?[\\s\\S]))?/,\n            function(m) {\n                var start = charCode(m[1]);\n                if (start > (lastEnd + 1)) {\n                    output += '\\\\u' + pad4(hex(lastEnd + 1));\n                    if (start > (lastEnd + 2)) {\n                        output += '-\\\\u' + pad4(hex(start - 1));\n                    }\n                }\n                lastEnd = charCode(m[2] || m[1]);\n            }\n        );\n        if (lastEnd < 0xFFFF) {\n            output += '\\\\u' + pad4(hex(lastEnd + 1));\n            if (lastEnd < 0xFFFE) {\n                output += '-\\\\uFFFF';\n            }\n        }\n        return output;\n    }\n\n    // Generates an inverted BMP range on first use\n    function cacheInvertedBmp(slug) {\n        var prop = 'b!';\n        return unicode[slug][prop] || (\n            unicode[slug][prop] = invertBmp(unicode[slug].bmp)\n        );\n    }\n\n    // Combines and optionally negates BMP and astral data\n    function buildAstral(slug, isNegated) {\n        var item = unicode[slug],\n            combined = '';\n        if (item.bmp && !item.isBmpLast) {\n            combined = '[' + item.bmp + ']' + (item.astral ? '|' : '');\n        }\n        if (item.astral) {\n            combined += item.astral;\n        }\n        if (item.isBmpLast && item.bmp) {\n            combined += (item.astral ? '|' : '') + '[' + item.bmp + ']';\n        }\n        // Astral Unicode tokens always match a code point, never a code unit\n        return isNegated ?\n            '(?:(?!' + combined + ')(?:[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\0-\\uFFFF]))' :\n            '(?:' + combined + ')';\n    }\n\n    // Builds a complete astral pattern on first use\n    function cacheAstral(slug, isNegated) {\n        var prop = isNegated ? 'a!' : 'a=';\n        return unicode[slug][prop] || (\n            unicode[slug][prop] = buildAstral(slug, isNegated)\n        );\n    }\n\n    // ==--------------------------==\n    // Core functionality\n    // ==--------------------------==\n\n    /*\n     * Add Unicode token syntax: \\p{..}, \\P{..}, \\p{^..}. Also add astral mode (flag A).\n     */\n    XRegExp.addToken(\n        // Use `*` instead of `+` to avoid capturing `^` as the token name in `\\p{^}`\n        /\\\\([pP])(?:{(\\^?)([^}]*)}|([A-Za-z]))/,\n        function(match, scope, flags) {\n            var ERR_DOUBLE_NEG = 'Invalid double negation ',\n                ERR_UNKNOWN_NAME = 'Unknown Unicode token ',\n                ERR_UNKNOWN_REF = 'Unicode token missing data ',\n                ERR_ASTRAL_ONLY = 'Astral mode required for Unicode token ',\n                ERR_ASTRAL_IN_CLASS = 'Astral mode does not support Unicode tokens within character classes',\n                // Negated via \\P{..} or \\p{^..}\n                isNegated = match[1] === 'P' || !!match[2],\n                // Switch from BMP (0-FFFF) to astral (0-10FFFF) mode via flag A\n                isAstralMode = flags.indexOf('A') > -1,\n                // Token lookup name. Check `[4]` first to avoid passing `undefined` via `\\p{}`\n                slug = normalize(match[4] || match[3]),\n                // Token data object\n                item = unicode[slug];\n\n            if (match[1] === 'P' && match[2]) {\n                throw new SyntaxError(ERR_DOUBLE_NEG + match[0]);\n            }\n            if (!unicode.hasOwnProperty(slug)) {\n                throw new SyntaxError(ERR_UNKNOWN_NAME + match[0]);\n            }\n\n            // Switch to the negated form of the referenced Unicode token\n            if (item.inverseOf) {\n                slug = normalize(item.inverseOf);\n                if (!unicode.hasOwnProperty(slug)) {\n                    throw new ReferenceError(ERR_UNKNOWN_REF + match[0] + ' -> ' + item.inverseOf);\n                }\n                item = unicode[slug];\n                isNegated = !isNegated;\n            }\n\n            if (!(item.bmp || isAstralMode)) {\n                throw new SyntaxError(ERR_ASTRAL_ONLY + match[0]);\n            }\n            if (isAstralMode) {\n                if (scope === 'class') {\n                    throw new SyntaxError(ERR_ASTRAL_IN_CLASS);\n                }\n\n                return cacheAstral(slug, isNegated);\n            }\n\n            return scope === 'class' ?\n                (isNegated ? cacheInvertedBmp(slug) : item.bmp) :\n                (isNegated ? '[^' : '[') + item.bmp + ']';\n        },\n        {\n            scope: 'all',\n            optionalFlags: 'A',\n            leadChar: '\\\\'\n        }\n    );\n\n    /**\n     * Adds to the list of Unicode tokens that XRegExp regexes can match via `\\p` or `\\P`.\n     *\n     * @param {Array} data Objects with named character ranges. Each object may have properties\n     *   `name`, `alias`, `isBmpLast`, `inverseOf`, `bmp`, and `astral`. All but `name` are\n     *   optional, although one of `bmp` or `astral` is required (unless `inverseOf` is set). If\n     *   `astral` is absent, the `bmp` data is used for BMP and astral modes. If `bmp` is absent,\n     *   the name errors in BMP mode but works in astral mode. If both `bmp` and `astral` are\n     *   provided, the `bmp` data only is used in BMP mode, and the combination of `bmp` and\n     *   `astral` data is used in astral mode. `isBmpLast` is needed when a token matches orphan\n     *   high surrogates *and* uses surrogate pairs to match astral code points. The `bmp` and\n     *   `astral` data should be a combination of literal characters and `\\xHH` or `\\uHHHH` escape\n     *   sequences, with hyphens to create ranges. Any regex metacharacters in the data should be\n     *   escaped, apart from range-creating hyphens. The `astral` data can additionally use\n     *   character classes and alternation, and should use surrogate pairs to represent astral code\n     *   points. `inverseOf` can be used to avoid duplicating character data if a Unicode token is\n     *   defined as the exact inverse of another token.\n     * @example\n     *\n     * // Basic use\n     * XRegExp.addUnicodeData([{\n     *   name: 'XDigit',\n     *   alias: 'Hexadecimal',\n     *   bmp: '0-9A-Fa-f'\n     * }]);\n     * XRegExp('\\\\p{XDigit}:\\\\p{Hexadecimal}+').test('0:3D'); // -> true\n     */\n    XRegExp.addUnicodeData = function(data) {\n        var ERR_NO_NAME = 'Unicode token requires name',\n            ERR_NO_DATA = 'Unicode token has no character data ',\n            item,\n            i;\n\n        for (i = 0; i < data.length; ++i) {\n            item = data[i];\n            if (!item.name) {\n                throw new Error(ERR_NO_NAME);\n            }\n            if (!(item.inverseOf || item.bmp || item.astral)) {\n                throw new Error(ERR_NO_DATA + item.name);\n            }\n            unicode[normalize(item.name)] = item;\n            if (item.alias) {\n                unicode[normalize(item.alias)] = item;\n            }\n        }\n\n        // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and\n        // flags might now produce different results\n        XRegExp.cache.flush('patterns');\n    };\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/unicode-base.js\n// module id = 21\n// module chunks = 0 1","/*!\n * XRegExp Unicode Blocks 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2010-2016 MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds support for all Unicode blocks. Block names use the prefix 'In'. E.g.,\n     * `\\p{InBasicLatin}`. Token names are case insensitive, and any spaces, hyphens, and\n     * underscores are ignored.\n     *\n     * Uses Unicode 8.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Blocks');\n    }\n\n    XRegExp.addUnicodeData([\n        {\n            name: 'InAegean_Numbers',\n            astral: '\\uD800[\\uDD00-\\uDD3F]'\n        },\n        {\n            name: 'InAhom',\n            astral: '\\uD805[\\uDF00-\\uDF3F]'\n        },\n        {\n            name: 'InAlchemical_Symbols',\n            astral: '\\uD83D[\\uDF00-\\uDF7F]'\n        },\n        {\n            name: 'InAlphabetic_Presentation_Forms',\n            bmp: '\\uFB00-\\uFB4F'\n        },\n        {\n            name: 'InAnatolian_Hieroglyphs',\n            astral: '\\uD811[\\uDC00-\\uDE7F]'\n        },\n        {\n            name: 'InAncient_Greek_Musical_Notation',\n            astral: '\\uD834[\\uDE00-\\uDE4F]'\n        },\n        {\n            name: 'InAncient_Greek_Numbers',\n            astral: '\\uD800[\\uDD40-\\uDD8F]'\n        },\n        {\n            name: 'InAncient_Symbols',\n            astral: '\\uD800[\\uDD90-\\uDDCF]'\n        },\n        {\n            name: 'InArabic',\n            bmp: '\\u0600-\\u06FF'\n        },\n        {\n            name: 'InArabic_Extended_A',\n            bmp: '\\u08A0-\\u08FF'\n        },\n        {\n            name: 'InArabic_Mathematical_Alphabetic_Symbols',\n            astral: '\\uD83B[\\uDE00-\\uDEFF]'\n        },\n        {\n            name: 'InArabic_Presentation_Forms_A',\n            bmp: '\\uFB50-\\uFDFF'\n        },\n        {\n            name: 'InArabic_Presentation_Forms_B',\n            bmp: '\\uFE70-\\uFEFF'\n        },\n        {\n            name: 'InArabic_Supplement',\n            bmp: '\\u0750-\\u077F'\n        },\n        {\n            name: 'InArmenian',\n            bmp: '\\u0530-\\u058F'\n        },\n        {\n            name: 'InArrows',\n            bmp: '\\u2190-\\u21FF'\n        },\n        {\n            name: 'InAvestan',\n            astral: '\\uD802[\\uDF00-\\uDF3F]'\n        },\n        {\n            name: 'InBalinese',\n            bmp: '\\u1B00-\\u1B7F'\n        },\n        {\n            name: 'InBamum',\n            bmp: '\\uA6A0-\\uA6FF'\n        },\n        {\n            name: 'InBamum_Supplement',\n            astral: '\\uD81A[\\uDC00-\\uDE3F]'\n        },\n        {\n            name: 'InBasic_Latin',\n            bmp: '\\0-\\x7F'\n        },\n        {\n            name: 'InBassa_Vah',\n            astral: '\\uD81A[\\uDED0-\\uDEFF]'\n        },\n        {\n            name: 'InBatak',\n            bmp: '\\u1BC0-\\u1BFF'\n        },\n        {\n            name: 'InBengali',\n            bmp: '\\u0980-\\u09FF'\n        },\n        {\n            name: 'InBlock_Elements',\n            bmp: '\\u2580-\\u259F'\n        },\n        {\n            name: 'InBopomofo',\n            bmp: '\\u3100-\\u312F'\n        },\n        {\n            name: 'InBopomofo_Extended',\n            bmp: '\\u31A0-\\u31BF'\n        },\n        {\n            name: 'InBox_Drawing',\n            bmp: '\\u2500-\\u257F'\n        },\n        {\n            name: 'InBrahmi',\n            astral: '\\uD804[\\uDC00-\\uDC7F]'\n        },\n        {\n            name: 'InBraille_Patterns',\n            bmp: '\\u2800-\\u28FF'\n        },\n        {\n            name: 'InBuginese',\n            bmp: '\\u1A00-\\u1A1F'\n        },\n        {\n            name: 'InBuhid',\n            bmp: '\\u1740-\\u175F'\n        },\n        {\n            name: 'InByzantine_Musical_Symbols',\n            astral: '\\uD834[\\uDC00-\\uDCFF]'\n        },\n        {\n            name: 'InCJK_Compatibility',\n            bmp: '\\u3300-\\u33FF'\n        },\n        {\n            name: 'InCJK_Compatibility_Forms',\n            bmp: '\\uFE30-\\uFE4F'\n        },\n        {\n            name: 'InCJK_Compatibility_Ideographs',\n            bmp: '\\uF900-\\uFAFF'\n        },\n        {\n            name: 'InCJK_Compatibility_Ideographs_Supplement',\n            astral: '\\uD87E[\\uDC00-\\uDE1F]'\n        },\n        {\n            name: 'InCJK_Radicals_Supplement',\n            bmp: '\\u2E80-\\u2EFF'\n        },\n        {\n            name: 'InCJK_Strokes',\n            bmp: '\\u31C0-\\u31EF'\n        },\n        {\n            name: 'InCJK_Symbols_and_Punctuation',\n            bmp: '\\u3000-\\u303F'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs',\n            bmp: '\\u4E00-\\u9FFF'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_A',\n            bmp: '\\u3400-\\u4DBF'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_B',\n            astral: '[\\uD840-\\uD868][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDEDF]'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_C',\n            astral: '\\uD86D[\\uDC00-\\uDF3F]|[\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD869[\\uDF00-\\uDFFF]'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_D',\n            astral: '\\uD86D[\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1F]'\n        },\n        {\n            name: 'InCJK_Unified_Ideographs_Extension_E',\n            astral: '[\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD873[\\uDC00-\\uDEAF]|\\uD86E[\\uDC20-\\uDFFF]'\n        },\n        {\n            name: 'InCarian',\n            astral: '\\uD800[\\uDEA0-\\uDEDF]'\n        },\n        {\n            name: 'InCaucasian_Albanian',\n            astral: '\\uD801[\\uDD30-\\uDD6F]'\n        },\n        {\n            name: 'InChakma',\n            astral: '\\uD804[\\uDD00-\\uDD4F]'\n        },\n        {\n            name: 'InCham',\n            bmp: '\\uAA00-\\uAA5F'\n        },\n        {\n            name: 'InCherokee',\n            bmp: '\\u13A0-\\u13FF'\n        },\n        {\n            name: 'InCherokee_Supplement',\n            bmp: '\\uAB70-\\uABBF'\n        },\n        {\n            name: 'InCombining_Diacritical_Marks',\n            bmp: '\\u0300-\\u036F'\n        },\n        {\n            name: 'InCombining_Diacritical_Marks_Extended',\n            bmp: '\\u1AB0-\\u1AFF'\n        },\n        {\n            name: 'InCombining_Diacritical_Marks_Supplement',\n            bmp: '\\u1DC0-\\u1DFF'\n        },\n        {\n            name: 'InCombining_Diacritical_Marks_for_Symbols',\n            bmp: '\\u20D0-\\u20FF'\n        },\n        {\n            name: 'InCombining_Half_Marks',\n            bmp: '\\uFE20-\\uFE2F'\n        },\n        {\n            name: 'InCommon_Indic_Number_Forms',\n            bmp: '\\uA830-\\uA83F'\n        },\n        {\n            name: 'InControl_Pictures',\n            bmp: '\\u2400-\\u243F'\n        },\n        {\n            name: 'InCoptic',\n            bmp: '\\u2C80-\\u2CFF'\n        },\n        {\n            name: 'InCoptic_Epact_Numbers',\n            astral: '\\uD800[\\uDEE0-\\uDEFF]'\n        },\n        {\n            name: 'InCounting_Rod_Numerals',\n            astral: '\\uD834[\\uDF60-\\uDF7F]'\n        },\n        {\n            name: 'InCuneiform',\n            astral: '\\uD808[\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'InCuneiform_Numbers_and_Punctuation',\n            astral: '\\uD809[\\uDC00-\\uDC7F]'\n        },\n        {\n            name: 'InCurrency_Symbols',\n            bmp: '\\u20A0-\\u20CF'\n        },\n        {\n            name: 'InCypriot_Syllabary',\n            astral: '\\uD802[\\uDC00-\\uDC3F]'\n        },\n        {\n            name: 'InCyrillic',\n            bmp: '\\u0400-\\u04FF'\n        },\n        {\n            name: 'InCyrillic_Extended_A',\n            bmp: '\\u2DE0-\\u2DFF'\n        },\n        {\n            name: 'InCyrillic_Extended_B',\n            bmp: '\\uA640-\\uA69F'\n        },\n        {\n            name: 'InCyrillic_Supplement',\n            bmp: '\\u0500-\\u052F'\n        },\n        {\n            name: 'InDeseret',\n            astral: '\\uD801[\\uDC00-\\uDC4F]'\n        },\n        {\n            name: 'InDevanagari',\n            bmp: '\\u0900-\\u097F'\n        },\n        {\n            name: 'InDevanagari_Extended',\n            bmp: '\\uA8E0-\\uA8FF'\n        },\n        {\n            name: 'InDingbats',\n            bmp: '\\u2700-\\u27BF'\n        },\n        {\n            name: 'InDomino_Tiles',\n            astral: '\\uD83C[\\uDC30-\\uDC9F]'\n        },\n        {\n            name: 'InDuployan',\n            astral: '\\uD82F[\\uDC00-\\uDC9F]'\n        },\n        {\n            name: 'InEarly_Dynastic_Cuneiform',\n            astral: '\\uD809[\\uDC80-\\uDD4F]'\n        },\n        {\n            name: 'InEgyptian_Hieroglyphs',\n            astral: '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F]'\n        },\n        {\n            name: 'InElbasan',\n            astral: '\\uD801[\\uDD00-\\uDD2F]'\n        },\n        {\n            name: 'InEmoticons',\n            astral: '\\uD83D[\\uDE00-\\uDE4F]'\n        },\n        {\n            name: 'InEnclosed_Alphanumeric_Supplement',\n            astral: '\\uD83C[\\uDD00-\\uDDFF]'\n        },\n        {\n            name: 'InEnclosed_Alphanumerics',\n            bmp: '\\u2460-\\u24FF'\n        },\n        {\n            name: 'InEnclosed_CJK_Letters_and_Months',\n            bmp: '\\u3200-\\u32FF'\n        },\n        {\n            name: 'InEnclosed_Ideographic_Supplement',\n            astral: '\\uD83C[\\uDE00-\\uDEFF]'\n        },\n        {\n            name: 'InEthiopic',\n            bmp: '\\u1200-\\u137F'\n        },\n        {\n            name: 'InEthiopic_Extended',\n            bmp: '\\u2D80-\\u2DDF'\n        },\n        {\n            name: 'InEthiopic_Extended_A',\n            bmp: '\\uAB00-\\uAB2F'\n        },\n        {\n            name: 'InEthiopic_Supplement',\n            bmp: '\\u1380-\\u139F'\n        },\n        {\n            name: 'InGeneral_Punctuation',\n            bmp: '\\u2000-\\u206F'\n        },\n        {\n            name: 'InGeometric_Shapes',\n            bmp: '\\u25A0-\\u25FF'\n        },\n        {\n            name: 'InGeometric_Shapes_Extended',\n            astral: '\\uD83D[\\uDF80-\\uDFFF]'\n        },\n        {\n            name: 'InGeorgian',\n            bmp: '\\u10A0-\\u10FF'\n        },\n        {\n            name: 'InGeorgian_Supplement',\n            bmp: '\\u2D00-\\u2D2F'\n        },\n        {\n            name: 'InGlagolitic',\n            bmp: '\\u2C00-\\u2C5F'\n        },\n        {\n            name: 'InGothic',\n            astral: '\\uD800[\\uDF30-\\uDF4F]'\n        },\n        {\n            name: 'InGrantha',\n            astral: '\\uD804[\\uDF00-\\uDF7F]'\n        },\n        {\n            name: 'InGreek_Extended',\n            bmp: '\\u1F00-\\u1FFF'\n        },\n        {\n            name: 'InGreek_and_Coptic',\n            bmp: '\\u0370-\\u03FF'\n        },\n        {\n            name: 'InGujarati',\n            bmp: '\\u0A80-\\u0AFF'\n        },\n        {\n            name: 'InGurmukhi',\n            bmp: '\\u0A00-\\u0A7F'\n        },\n        {\n            name: 'InHalfwidth_and_Fullwidth_Forms',\n            bmp: '\\uFF00-\\uFFEF'\n        },\n        {\n            name: 'InHangul_Compatibility_Jamo',\n            bmp: '\\u3130-\\u318F'\n        },\n        {\n            name: 'InHangul_Jamo',\n            bmp: '\\u1100-\\u11FF'\n        },\n        {\n            name: 'InHangul_Jamo_Extended_A',\n            bmp: '\\uA960-\\uA97F'\n        },\n        {\n            name: 'InHangul_Jamo_Extended_B',\n            bmp: '\\uD7B0-\\uD7FF'\n        },\n        {\n            name: 'InHangul_Syllables',\n            bmp: '\\uAC00-\\uD7AF'\n        },\n        {\n            name: 'InHanunoo',\n            bmp: '\\u1720-\\u173F'\n        },\n        {\n            name: 'InHatran',\n            astral: '\\uD802[\\uDCE0-\\uDCFF]'\n        },\n        {\n            name: 'InHebrew',\n            bmp: '\\u0590-\\u05FF'\n        },\n        {\n            name: 'InHigh_Private_Use_Surrogates',\n            bmp: '\\uDB80-\\uDBFF'\n        },\n        {\n            name: 'InHigh_Surrogates',\n            bmp: '\\uD800-\\uDB7F'\n        },\n        {\n            name: 'InHiragana',\n            bmp: '\\u3040-\\u309F'\n        },\n        {\n            name: 'InIPA_Extensions',\n            bmp: '\\u0250-\\u02AF'\n        },\n        {\n            name: 'InIdeographic_Description_Characters',\n            bmp: '\\u2FF0-\\u2FFF'\n        },\n        {\n            name: 'InImperial_Aramaic',\n            astral: '\\uD802[\\uDC40-\\uDC5F]'\n        },\n        {\n            name: 'InInscriptional_Pahlavi',\n            astral: '\\uD802[\\uDF60-\\uDF7F]'\n        },\n        {\n            name: 'InInscriptional_Parthian',\n            astral: '\\uD802[\\uDF40-\\uDF5F]'\n        },\n        {\n            name: 'InJavanese',\n            bmp: '\\uA980-\\uA9DF'\n        },\n        {\n            name: 'InKaithi',\n            astral: '\\uD804[\\uDC80-\\uDCCF]'\n        },\n        {\n            name: 'InKana_Supplement',\n            astral: '\\uD82C[\\uDC00-\\uDCFF]'\n        },\n        {\n            name: 'InKanbun',\n            bmp: '\\u3190-\\u319F'\n        },\n        {\n            name: 'InKangxi_Radicals',\n            bmp: '\\u2F00-\\u2FDF'\n        },\n        {\n            name: 'InKannada',\n            bmp: '\\u0C80-\\u0CFF'\n        },\n        {\n            name: 'InKatakana',\n            bmp: '\\u30A0-\\u30FF'\n        },\n        {\n            name: 'InKatakana_Phonetic_Extensions',\n            bmp: '\\u31F0-\\u31FF'\n        },\n        {\n            name: 'InKayah_Li',\n            bmp: '\\uA900-\\uA92F'\n        },\n        {\n            name: 'InKharoshthi',\n            astral: '\\uD802[\\uDE00-\\uDE5F]'\n        },\n        {\n            name: 'InKhmer',\n            bmp: '\\u1780-\\u17FF'\n        },\n        {\n            name: 'InKhmer_Symbols',\n            bmp: '\\u19E0-\\u19FF'\n        },\n        {\n            name: 'InKhojki',\n            astral: '\\uD804[\\uDE00-\\uDE4F]'\n        },\n        {\n            name: 'InKhudawadi',\n            astral: '\\uD804[\\uDEB0-\\uDEFF]'\n        },\n        {\n            name: 'InLao',\n            bmp: '\\u0E80-\\u0EFF'\n        },\n        {\n            name: 'InLatin_Extended_Additional',\n            bmp: '\\u1E00-\\u1EFF'\n        },\n        {\n            name: 'InLatin_Extended_A',\n            bmp: '\\u0100-\\u017F'\n        },\n        {\n            name: 'InLatin_Extended_B',\n            bmp: '\\u0180-\\u024F'\n        },\n        {\n            name: 'InLatin_Extended_C',\n            bmp: '\\u2C60-\\u2C7F'\n        },\n        {\n            name: 'InLatin_Extended_D',\n            bmp: '\\uA720-\\uA7FF'\n        },\n        {\n            name: 'InLatin_Extended_E',\n            bmp: '\\uAB30-\\uAB6F'\n        },\n        {\n            name: 'InLatin_1_Supplement',\n            bmp: '\\x80-\\xFF'\n        },\n        {\n            name: 'InLepcha',\n            bmp: '\\u1C00-\\u1C4F'\n        },\n        {\n            name: 'InLetterlike_Symbols',\n            bmp: '\\u2100-\\u214F'\n        },\n        {\n            name: 'InLimbu',\n            bmp: '\\u1900-\\u194F'\n        },\n        {\n            name: 'InLinear_A',\n            astral: '\\uD801[\\uDE00-\\uDF7F]'\n        },\n        {\n            name: 'InLinear_B_Ideograms',\n            astral: '\\uD800[\\uDC80-\\uDCFF]'\n        },\n        {\n            name: 'InLinear_B_Syllabary',\n            astral: '\\uD800[\\uDC00-\\uDC7F]'\n        },\n        {\n            name: 'InLisu',\n            bmp: '\\uA4D0-\\uA4FF'\n        },\n        {\n            name: 'InLow_Surrogates',\n            bmp: '\\uDC00-\\uDFFF'\n        },\n        {\n            name: 'InLycian',\n            astral: '\\uD800[\\uDE80-\\uDE9F]'\n        },\n        {\n            name: 'InLydian',\n            astral: '\\uD802[\\uDD20-\\uDD3F]'\n        },\n        {\n            name: 'InMahajani',\n            astral: '\\uD804[\\uDD50-\\uDD7F]'\n        },\n        {\n            name: 'InMahjong_Tiles',\n            astral: '\\uD83C[\\uDC00-\\uDC2F]'\n        },\n        {\n            name: 'InMalayalam',\n            bmp: '\\u0D00-\\u0D7F'\n        },\n        {\n            name: 'InMandaic',\n            bmp: '\\u0840-\\u085F'\n        },\n        {\n            name: 'InManichaean',\n            astral: '\\uD802[\\uDEC0-\\uDEFF]'\n        },\n        {\n            name: 'InMathematical_Alphanumeric_Symbols',\n            astral: '\\uD835[\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'InMathematical_Operators',\n            bmp: '\\u2200-\\u22FF'\n        },\n        {\n            name: 'InMeetei_Mayek',\n            bmp: '\\uABC0-\\uABFF'\n        },\n        {\n            name: 'InMeetei_Mayek_Extensions',\n            bmp: '\\uAAE0-\\uAAFF'\n        },\n        {\n            name: 'InMende_Kikakui',\n            astral: '\\uD83A[\\uDC00-\\uDCDF]'\n        },\n        {\n            name: 'InMeroitic_Cursive',\n            astral: '\\uD802[\\uDDA0-\\uDDFF]'\n        },\n        {\n            name: 'InMeroitic_Hieroglyphs',\n            astral: '\\uD802[\\uDD80-\\uDD9F]'\n        },\n        {\n            name: 'InMiao',\n            astral: '\\uD81B[\\uDF00-\\uDF9F]'\n        },\n        {\n            name: 'InMiscellaneous_Mathematical_Symbols_A',\n            bmp: '\\u27C0-\\u27EF'\n        },\n        {\n            name: 'InMiscellaneous_Mathematical_Symbols_B',\n            bmp: '\\u2980-\\u29FF'\n        },\n        {\n            name: 'InMiscellaneous_Symbols',\n            bmp: '\\u2600-\\u26FF'\n        },\n        {\n            name: 'InMiscellaneous_Symbols_and_Arrows',\n            bmp: '\\u2B00-\\u2BFF'\n        },\n        {\n            name: 'InMiscellaneous_Symbols_and_Pictographs',\n            astral: '\\uD83D[\\uDC00-\\uDDFF]|\\uD83C[\\uDF00-\\uDFFF]'\n        },\n        {\n            name: 'InMiscellaneous_Technical',\n            bmp: '\\u2300-\\u23FF'\n        },\n        {\n            name: 'InModi',\n            astral: '\\uD805[\\uDE00-\\uDE5F]'\n        },\n        {\n            name: 'InModifier_Tone_Letters',\n            bmp: '\\uA700-\\uA71F'\n        },\n        {\n            name: 'InMongolian',\n            bmp: '\\u1800-\\u18AF'\n        },\n        {\n            name: 'InMro',\n            astral: '\\uD81A[\\uDE40-\\uDE6F]'\n        },\n        {\n            name: 'InMultani',\n            astral: '\\uD804[\\uDE80-\\uDEAF]'\n        },\n        {\n            name: 'InMusical_Symbols',\n            astral: '\\uD834[\\uDD00-\\uDDFF]'\n        },\n        {\n            name: 'InMyanmar',\n            bmp: '\\u1000-\\u109F'\n        },\n        {\n            name: 'InMyanmar_Extended_A',\n            bmp: '\\uAA60-\\uAA7F'\n        },\n        {\n            name: 'InMyanmar_Extended_B',\n            bmp: '\\uA9E0-\\uA9FF'\n        },\n        {\n            name: 'InNKo',\n            bmp: '\\u07C0-\\u07FF'\n        },\n        {\n            name: 'InNabataean',\n            astral: '\\uD802[\\uDC80-\\uDCAF]'\n        },\n        {\n            name: 'InNew_Tai_Lue',\n            bmp: '\\u1980-\\u19DF'\n        },\n        {\n            name: 'InNumber_Forms',\n            bmp: '\\u2150-\\u218F'\n        },\n        {\n            name: 'InOgham',\n            bmp: '\\u1680-\\u169F'\n        },\n        {\n            name: 'InOl_Chiki',\n            bmp: '\\u1C50-\\u1C7F'\n        },\n        {\n            name: 'InOld_Hungarian',\n            astral: '\\uD803[\\uDC80-\\uDCFF]'\n        },\n        {\n            name: 'InOld_Italic',\n            astral: '\\uD800[\\uDF00-\\uDF2F]'\n        },\n        {\n            name: 'InOld_North_Arabian',\n            astral: '\\uD802[\\uDE80-\\uDE9F]'\n        },\n        {\n            name: 'InOld_Permic',\n            astral: '\\uD800[\\uDF50-\\uDF7F]'\n        },\n        {\n            name: 'InOld_Persian',\n            astral: '\\uD800[\\uDFA0-\\uDFDF]'\n        },\n        {\n            name: 'InOld_South_Arabian',\n            astral: '\\uD802[\\uDE60-\\uDE7F]'\n        },\n        {\n            name: 'InOld_Turkic',\n            astral: '\\uD803[\\uDC00-\\uDC4F]'\n        },\n        {\n            name: 'InOptical_Character_Recognition',\n            bmp: '\\u2440-\\u245F'\n        },\n        {\n            name: 'InOriya',\n            bmp: '\\u0B00-\\u0B7F'\n        },\n        {\n            name: 'InOrnamental_Dingbats',\n            astral: '\\uD83D[\\uDE50-\\uDE7F]'\n        },\n        {\n            name: 'InOsmanya',\n            astral: '\\uD801[\\uDC80-\\uDCAF]'\n        },\n        {\n            name: 'InPahawh_Hmong',\n            astral: '\\uD81A[\\uDF00-\\uDF8F]'\n        },\n        {\n            name: 'InPalmyrene',\n            astral: '\\uD802[\\uDC60-\\uDC7F]'\n        },\n        {\n            name: 'InPau_Cin_Hau',\n            astral: '\\uD806[\\uDEC0-\\uDEFF]'\n        },\n        {\n            name: 'InPhags_pa',\n            bmp: '\\uA840-\\uA87F'\n        },\n        {\n            name: 'InPhaistos_Disc',\n            astral: '\\uD800[\\uDDD0-\\uDDFF]'\n        },\n        {\n            name: 'InPhoenician',\n            astral: '\\uD802[\\uDD00-\\uDD1F]'\n        },\n        {\n            name: 'InPhonetic_Extensions',\n            bmp: '\\u1D00-\\u1D7F'\n        },\n        {\n            name: 'InPhonetic_Extensions_Supplement',\n            bmp: '\\u1D80-\\u1DBF'\n        },\n        {\n            name: 'InPlaying_Cards',\n            astral: '\\uD83C[\\uDCA0-\\uDCFF]'\n        },\n        {\n            name: 'InPrivate_Use_Area',\n            bmp: '\\uE000-\\uF8FF'\n        },\n        {\n            name: 'InPsalter_Pahlavi',\n            astral: '\\uD802[\\uDF80-\\uDFAF]'\n        },\n        {\n            name: 'InRejang',\n            bmp: '\\uA930-\\uA95F'\n        },\n        {\n            name: 'InRumi_Numeral_Symbols',\n            astral: '\\uD803[\\uDE60-\\uDE7F]'\n        },\n        {\n            name: 'InRunic',\n            bmp: '\\u16A0-\\u16FF'\n        },\n        {\n            name: 'InSamaritan',\n            bmp: '\\u0800-\\u083F'\n        },\n        {\n            name: 'InSaurashtra',\n            bmp: '\\uA880-\\uA8DF'\n        },\n        {\n            name: 'InSharada',\n            astral: '\\uD804[\\uDD80-\\uDDDF]'\n        },\n        {\n            name: 'InShavian',\n            astral: '\\uD801[\\uDC50-\\uDC7F]'\n        },\n        {\n            name: 'InShorthand_Format_Controls',\n            astral: '\\uD82F[\\uDCA0-\\uDCAF]'\n        },\n        {\n            name: 'InSiddham',\n            astral: '\\uD805[\\uDD80-\\uDDFF]'\n        },\n        {\n            name: 'InSinhala',\n            bmp: '\\u0D80-\\u0DFF'\n        },\n        {\n            name: 'InSinhala_Archaic_Numbers',\n            astral: '\\uD804[\\uDDE0-\\uDDFF]'\n        },\n        {\n            name: 'InSmall_Form_Variants',\n            bmp: '\\uFE50-\\uFE6F'\n        },\n        {\n            name: 'InSora_Sompeng',\n            astral: '\\uD804[\\uDCD0-\\uDCFF]'\n        },\n        {\n            name: 'InSpacing_Modifier_Letters',\n            bmp: '\\u02B0-\\u02FF'\n        },\n        {\n            name: 'InSpecials',\n            bmp: '\\uFFF0-\\uFFFF'\n        },\n        {\n            name: 'InSundanese',\n            bmp: '\\u1B80-\\u1BBF'\n        },\n        {\n            name: 'InSundanese_Supplement',\n            bmp: '\\u1CC0-\\u1CCF'\n        },\n        {\n            name: 'InSuperscripts_and_Subscripts',\n            bmp: '\\u2070-\\u209F'\n        },\n        {\n            name: 'InSupplemental_Arrows_A',\n            bmp: '\\u27F0-\\u27FF'\n        },\n        {\n            name: 'InSupplemental_Arrows_B',\n            bmp: '\\u2900-\\u297F'\n        },\n        {\n            name: 'InSupplemental_Arrows_C',\n            astral: '\\uD83E[\\uDC00-\\uDCFF]'\n        },\n        {\n            name: 'InSupplemental_Mathematical_Operators',\n            bmp: '\\u2A00-\\u2AFF'\n        },\n        {\n            name: 'InSupplemental_Punctuation',\n            bmp: '\\u2E00-\\u2E7F'\n        },\n        {\n            name: 'InSupplemental_Symbols_and_Pictographs',\n            astral: '\\uD83E[\\uDD00-\\uDDFF]'\n        },\n        {\n            name: 'InSupplementary_Private_Use_Area_A',\n            astral: '[\\uDB80-\\uDBBF][\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'InSupplementary_Private_Use_Area_B',\n            astral: '[\\uDBC0-\\uDBFF][\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'InSutton_SignWriting',\n            astral: '\\uD836[\\uDC00-\\uDEAF]'\n        },\n        {\n            name: 'InSyloti_Nagri',\n            bmp: '\\uA800-\\uA82F'\n        },\n        {\n            name: 'InSyriac',\n            bmp: '\\u0700-\\u074F'\n        },\n        {\n            name: 'InTagalog',\n            bmp: '\\u1700-\\u171F'\n        },\n        {\n            name: 'InTagbanwa',\n            bmp: '\\u1760-\\u177F'\n        },\n        {\n            name: 'InTags',\n            astral: '\\uDB40[\\uDC00-\\uDC7F]'\n        },\n        {\n            name: 'InTai_Le',\n            bmp: '\\u1950-\\u197F'\n        },\n        {\n            name: 'InTai_Tham',\n            bmp: '\\u1A20-\\u1AAF'\n        },\n        {\n            name: 'InTai_Viet',\n            bmp: '\\uAA80-\\uAADF'\n        },\n        {\n            name: 'InTai_Xuan_Jing_Symbols',\n            astral: '\\uD834[\\uDF00-\\uDF5F]'\n        },\n        {\n            name: 'InTakri',\n            astral: '\\uD805[\\uDE80-\\uDECF]'\n        },\n        {\n            name: 'InTamil',\n            bmp: '\\u0B80-\\u0BFF'\n        },\n        {\n            name: 'InTelugu',\n            bmp: '\\u0C00-\\u0C7F'\n        },\n        {\n            name: 'InThaana',\n            bmp: '\\u0780-\\u07BF'\n        },\n        {\n            name: 'InThai',\n            bmp: '\\u0E00-\\u0E7F'\n        },\n        {\n            name: 'InTibetan',\n            bmp: '\\u0F00-\\u0FFF'\n        },\n        {\n            name: 'InTifinagh',\n            bmp: '\\u2D30-\\u2D7F'\n        },\n        {\n            name: 'InTirhuta',\n            astral: '\\uD805[\\uDC80-\\uDCDF]'\n        },\n        {\n            name: 'InTransport_and_Map_Symbols',\n            astral: '\\uD83D[\\uDE80-\\uDEFF]'\n        },\n        {\n            name: 'InUgaritic',\n            astral: '\\uD800[\\uDF80-\\uDF9F]'\n        },\n        {\n            name: 'InUnified_Canadian_Aboriginal_Syllabics',\n            bmp: '\\u1400-\\u167F'\n        },\n        {\n            name: 'InUnified_Canadian_Aboriginal_Syllabics_Extended',\n            bmp: '\\u18B0-\\u18FF'\n        },\n        {\n            name: 'InVai',\n            bmp: '\\uA500-\\uA63F'\n        },\n        {\n            name: 'InVariation_Selectors',\n            bmp: '\\uFE00-\\uFE0F'\n        },\n        {\n            name: 'InVariation_Selectors_Supplement',\n            astral: '\\uDB40[\\uDD00-\\uDDEF]'\n        },\n        {\n            name: 'InVedic_Extensions',\n            bmp: '\\u1CD0-\\u1CFF'\n        },\n        {\n            name: 'InVertical_Forms',\n            bmp: '\\uFE10-\\uFE1F'\n        },\n        {\n            name: 'InWarang_Citi',\n            astral: '\\uD806[\\uDCA0-\\uDCFF]'\n        },\n        {\n            name: 'InYi_Radicals',\n            bmp: '\\uA490-\\uA4CF'\n        },\n        {\n            name: 'InYi_Syllables',\n            bmp: '\\uA000-\\uA48F'\n        },\n        {\n            name: 'InYijing_Hexagram_Symbols',\n            bmp: '\\u4DC0-\\u4DFF'\n        }\n    ]);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/unicode-blocks.js\n// module id = 22\n// module chunks = 0 1","/*!\n * XRegExp Unicode Categories 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2010-2016 MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds support for Unicode's general categories. E.g., `\\p{Lu}` or `\\p{Uppercase Letter}`. See\n     * category descriptions in UAX #44 <http://unicode.org/reports/tr44/#GC_Values_Table>. Token\n     * names are case insensitive, and any spaces, hyphens, and underscores are ignored.\n     *\n     * Uses Unicode 8.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Categories');\n    }\n\n    XRegExp.addUnicodeData([\n        {\n            name: 'C',\n            alias: 'Other',\n            isBmpLast: true,\n            bmp: '\\0-\\x1F\\x7F-\\x9F\\xAD\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u0605\\u061C\\u061D\\u06DD\\u070E\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u089F\\u08B5-\\u08E2\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0AFA-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C80\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D00\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D4F-\\u0D56\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D76-\\u0D78\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180E\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C80-\\u1CBF\\u1CC8-\\u1CCF\\u1CF7\\u1CFA-\\u1CFF\\u1DF6-\\u1DFB\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BF-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u23FB-\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2B97\\u2BBA-\\u2BBC\\u2BC9\\u2BD2-\\u2BEB\\u2BF0-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E43-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FD6-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7AE\\uA7AF\\uA7B8-\\uA7F6\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C5-\\uA8CD\\uA8DA-\\uA8DF\\uA8FE\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB66-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD-\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFFB\\uFFFE\\uFFFF',\n            astral: '\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDD73-\\uDD7A\\uDDE9-\\uDDFF\\uDE46-\\uDEFF\\uDF57-\\uDF5F\\uDF72-\\uDFFF]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDD0D-\\uDD0F\\uDD2F\\uDD6C-\\uDD6F\\uDD9B-\\uDDE5\\uDE03-\\uDE0F\\uDE3B-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDEFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDE70-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|\\uD81B[\\uDC00-\\uDEFF\\uDF45-\\uDF4F\\uDF7F-\\uDF8E\\uDFA0-\\uDFFF]|\\uD86E[\\uDC1E\\uDC1F]|\\uD83D[\\uDD7A\\uDDA4\\uDED1-\\uDEDF\\uDEED-\\uDEEF\\uDEF4-\\uDEFF\\uDF74-\\uDF7F\\uDFD5-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD70-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8D-\\uDD8F\\uDD9C-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2F\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC70-\\uDC7E\\uDCBD\\uDCC2-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD44-\\uDD4F\\uDD77-\\uDD7F\\uDDCE\\uDDCF\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3E-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF3B\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD86D[\\uDF35-\\uDF3F]|[\\uD807\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD81C-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837-\\uD839\\uD83F\\uD874-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD806[\\uDC00-\\uDC9F\\uDCF3-\\uDCFE\\uDD00-\\uDEBF\\uDEF9-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD00-\\uDE5F\\uDE7F-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD805[\\uDC00-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB8-\\uDEBF\\uDECA-\\uDEFF\\uDF1A-\\uDF1C\\uDF2C-\\uDF2F\\uDF40-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE34-\\uDE37\\uDE3B-\\uDE3E\\uDE48-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA0-\\uDFFF]|\\uD82C[\\uDC02-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE-\\uDD0F\\uDD19-\\uDD7F\\uDD85-\\uDDBF\\uDDC1-\\uDFFF]|\\uD873[\\uDEA2-\\uDFFF]'\n        },\n        {\n            name: 'Cc',\n            alias: 'Control',\n            bmp: '\\0-\\x1F\\x7F-\\x9F'\n        },\n        {\n            name: 'Cf',\n            alias: 'Format',\n            bmp: '\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB',\n            astral: '\\uDB40[\\uDC01\\uDC20-\\uDC7F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uD804\\uDCBD'\n        },\n        {\n            name: 'Cn',\n            alias: 'Unassigned',\n            bmp: '\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u05FF\\u061D\\u070E\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u089F\\u08B5-\\u08E2\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0AFA-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C80\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D00\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D4F-\\u0D56\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D76-\\u0D78\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C80-\\u1CBF\\u1CC8-\\u1CCF\\u1CF7\\u1CFA-\\u1CFF\\u1DF6-\\u1DFB\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u2065\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BF-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u23FB-\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2B97\\u2BBA-\\u2BBC\\u2BC9\\u2BD2-\\u2BEB\\u2BF0-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E43-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FD6-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7AE\\uA7AF\\uA7B8-\\uA7F6\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C5-\\uA8CD\\uA8DA-\\uA8DF\\uA8FE\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB66-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD\\uFEFE\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFF8\\uFFFE\\uFFFF',\n            astral: '\\uDB40[\\uDC00\\uDC02-\\uDC1F\\uDC80-\\uDCFF\\uDDF0-\\uDFFF]|\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDDE9-\\uDDFF\\uDE46-\\uDEFF\\uDF57-\\uDF5F\\uDF72-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDD0D-\\uDD0F\\uDD2F\\uDD6C-\\uDD6F\\uDD9B-\\uDDE5\\uDE03-\\uDE0F\\uDE3B-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDEFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDE70-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|\\uD81B[\\uDC00-\\uDEFF\\uDF45-\\uDF4F\\uDF7F-\\uDF8E\\uDFA0-\\uDFFF]|\\uD86E[\\uDC1E\\uDC1F]|\\uD83D[\\uDD7A\\uDDA4\\uDED1-\\uDEDF\\uDEED-\\uDEEF\\uDEF4-\\uDEFF\\uDF74-\\uDF7F\\uDFD5-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD70-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8D-\\uDD8F\\uDD9C-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2F\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA4-\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD86D[\\uDF35-\\uDF3F]|[\\uD807\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD81C-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837-\\uD839\\uD83F\\uD874-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDB7F][\\uDC00-\\uDFFF]|\\uD806[\\uDC00-\\uDC9F\\uDCF3-\\uDCFE\\uDD00-\\uDEBF\\uDEF9-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD00-\\uDE5F\\uDE7F-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD805[\\uDC00-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB8-\\uDEBF\\uDECA-\\uDEFF\\uDF1A-\\uDF1C\\uDF2C-\\uDF2F\\uDF40-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE34-\\uDE37\\uDE3B-\\uDE3E\\uDE48-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC70-\\uDC7E\\uDCC2-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD44-\\uDD4F\\uDD77-\\uDD7F\\uDDCE\\uDDCF\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3E-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF3B\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD82C[\\uDC02-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE-\\uDD0F\\uDD19-\\uDD7F\\uDD85-\\uDDBF\\uDDC1-\\uDFFF]|\\uD873[\\uDEA2-\\uDFFF]'\n        },\n        {\n            name: 'Co',\n            alias: 'Private_Use',\n            bmp: '\\uE000-\\uF8FF',\n            astral: '[\\uDB80-\\uDBBE\\uDBC0-\\uDBFE][\\uDC00-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDC00-\\uDFFD]'\n        },\n        {\n            name: 'Cs',\n            alias: 'Surrogate',\n            bmp: '\\uD800-\\uDFFF'\n        },\n        {\n            name: 'L',\n            alias: 'Letter',\n            bmp: 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n            astral: '\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD83A[\\uDC00-\\uDCC4]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD87E[\\uDC00-\\uDE1D]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD809[\\uDC80-\\uDD43]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD808[\\uDC00-\\uDF99]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD811[\\uDC00-\\uDE46]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD82C[\\uDC00\\uDC01]|\\uD873[\\uDC00-\\uDEA1]'\n        },\n        {\n            name: 'Ll',\n            alias: 'Lowercase_Letter',\n            bmp: 'a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\n            astral: '\\uD803[\\uDCC0-\\uDCF2]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD801[\\uDC28-\\uDC4F]|\\uD806[\\uDCC0-\\uDCDF]'\n        },\n        {\n            name: 'Lm',\n            alias: 'Modifier_Letter',\n            bmp: '\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E\\uFF9F',\n            astral: '\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F]'\n        },\n        {\n            name: 'Lo',\n            alias: 'Other_Letter',\n            bmp: '\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n            astral: '\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD83A[\\uDC00-\\uDCC4]|\\uD803[\\uDC00-\\uDC48]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD87E[\\uDC00-\\uDE1D]|\\uD81B[\\uDF00-\\uDF44\\uDF50]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCFF\\uDEC0-\\uDEF8]|\\uD809[\\uDC80-\\uDD43]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD808[\\uDC00-\\uDF99]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD811[\\uDC00-\\uDE46]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD82C[\\uDC00\\uDC01]|\\uD873[\\uDC00-\\uDEA1]'\n        },\n        {\n            name: 'Lt',\n            alias: 'Titlecase_Letter',\n            bmp: '\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC'\n        },\n        {\n            name: 'Lu',\n            alias: 'Uppercase_Letter',\n            bmp: 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A',\n            astral: '\\uD806[\\uDCA0-\\uDCBF]|\\uD803[\\uDC80-\\uDCB2]|\\uD801[\\uDC00-\\uDC27]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]'\n        },\n        {\n            name: 'M',\n            alias: 'Mark',\n            bmp: '\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\n            astral: '\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDDDC\\uDDDD\\uDE30-\\uDE40\\uDEAB-\\uDEB7\\uDF1D-\\uDF2B]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDDCA-\\uDDCC\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF00-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD82F[\\uDC9D\\uDC9E]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]'\n        },\n        {\n            name: 'Mc',\n            alias: 'Spacing_Mark',\n            bmp: '\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u094F\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1A19\\u1A1A\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF2\\u1CF3\\u302E\\u302F\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BD-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uAA7D\\uAAEB\\uAAEE\\uAAEF\\uAAF5\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC',\n            astral: '\\uD834[\\uDD65\\uDD66\\uDD6D-\\uDD72]|\\uD804[\\uDC00\\uDC02\\uDC82\\uDCB0-\\uDCB2\\uDCB7\\uDCB8\\uDD2C\\uDD82\\uDDB3-\\uDDB5\\uDDBF\\uDDC0\\uDE2C-\\uDE2E\\uDE32\\uDE33\\uDE35\\uDEE0-\\uDEE2\\uDF02\\uDF03\\uDF3E\\uDF3F\\uDF41-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63]|\\uD805[\\uDCB0-\\uDCB2\\uDCB9\\uDCBB-\\uDCBE\\uDCC1\\uDDAF-\\uDDB1\\uDDB8-\\uDDBB\\uDDBE\\uDE30-\\uDE32\\uDE3B\\uDE3C\\uDE3E\\uDEAC\\uDEAE\\uDEAF\\uDEB6\\uDF20\\uDF21\\uDF26]|\\uD81B[\\uDF51-\\uDF7E]'\n        },\n        {\n            name: 'Me',\n            alias: 'Enclosing_Mark',\n            bmp: '\\u0488\\u0489\\u1ABE\\u20DD-\\u20E0\\u20E2-\\u20E4\\uA670-\\uA672'\n        },\n        {\n            name: 'Mn',\n            alias: 'Nonspacing_Mark',\n            bmp: '\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D01\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\n            astral: '\\uD805[\\uDCB3-\\uDCB8\\uDCBA\\uDCBF\\uDCC0\\uDCC2\\uDCC3\\uDDB2-\\uDDB5\\uDDBC\\uDDBD\\uDDBF\\uDDC0\\uDDDC\\uDDDD\\uDE33-\\uDE3A\\uDE3D\\uDE3F\\uDE40\\uDEAB\\uDEAD\\uDEB0-\\uDEB5\\uDEB7\\uDF1D-\\uDF1F\\uDF22-\\uDF25\\uDF27-\\uDF2B]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC01\\uDC38-\\uDC46\\uDC7F-\\uDC81\\uDCB3-\\uDCB6\\uDCB9\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD2B\\uDD2D-\\uDD34\\uDD73\\uDD80\\uDD81\\uDDB6-\\uDDBE\\uDDCA-\\uDDCC\\uDE2F-\\uDE31\\uDE34\\uDE36\\uDE37\\uDEDF\\uDEE3-\\uDEEA\\uDF00\\uDF01\\uDF3C\\uDF40\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]'\n        },\n        {\n            name: 'N',\n            alias: 'Number',\n            bmp: '0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\n            astral: '\\uD800[\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD801[\\uDCA0-\\uDCA9]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E]|\\uD835[\\uDFCE-\\uDFFF]|\\uD83A[\\uDCC7-\\uDCCF]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59\\uDF5B-\\uDF61]|\\uD806[\\uDCE0-\\uDCF2]|\\uD804[\\uDC52-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDDE1-\\uDDF4\\uDEF0-\\uDEF9]|\\uD834[\\uDF60-\\uDF71]|\\uD83C[\\uDD00-\\uDD0C]|\\uD809[\\uDC00-\\uDC6E]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE47\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD805[\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF3B]'\n        },\n        {\n            name: 'Nd',\n            alias: 'Decimal_Number',\n            bmp: '0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\n            astral: '\\uD801[\\uDCA0-\\uDCA9]|\\uD835[\\uDFCE-\\uDFFF]|\\uD805[\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF39]|\\uD806[\\uDCE0-\\uDCE9]|\\uD804[\\uDC66-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDEF0-\\uDEF9]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59]'\n        },\n        {\n            name: 'Nl',\n            alias: 'Letter_Number',\n            bmp: '\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF',\n            astral: '\\uD809[\\uDC00-\\uDC6E]|\\uD800[\\uDD40-\\uDD74\\uDF41\\uDF4A\\uDFD1-\\uDFD5]'\n        },\n        {\n            name: 'No',\n            alias: 'Other_Number',\n            bmp: '\\xB2\\xB3\\xB9\\xBC-\\xBE\\u09F4-\\u09F9\\u0B72-\\u0B77\\u0BF0-\\u0BF2\\u0C78-\\u0C7E\\u0D70-\\u0D75\\u0F2A-\\u0F33\\u1369-\\u137C\\u17F0-\\u17F9\\u19DA\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u215F\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA830-\\uA835',\n            astral: '\\uD804[\\uDC52-\\uDC65\\uDDE1-\\uDDF4]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E]|\\uD83C[\\uDD00-\\uDD0C]|\\uD806[\\uDCEA-\\uDCF2]|\\uD83A[\\uDCC7-\\uDCCF]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE47\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD805[\\uDF3A\\uDF3B]|\\uD81A[\\uDF5B-\\uDF61]|\\uD834[\\uDF60-\\uDF71]|\\uD800[\\uDD07-\\uDD33\\uDD75-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23]'\n        },\n        {\n            name: 'P',\n            alias: 'Punctuation',\n            bmp: '\\x21-\\x23\\x25-\\\\x2A\\x2C-\\x2F\\x3A\\x3B\\\\x3F\\x40\\\\x5B-\\\\x5D\\x5F\\\\x7B\\x7D\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65',\n            astral: '\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD809[\\uDC70-\\uDC74]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD836[\\uDE87-\\uDE8B]|\\uD801\\uDD6F|\\uD82F\\uDC9F|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]'\n        },\n        {\n            name: 'Pc',\n            alias: 'Connector_Punctuation',\n            bmp: '\\x5F\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F'\n        },\n        {\n            name: 'Pd',\n            alias: 'Dash_Punctuation',\n            bmp: '\\\\x2D\\u058A\\u05BE\\u1400\\u1806\\u2010-\\u2015\\u2E17\\u2E1A\\u2E3A\\u2E3B\\u2E40\\u301C\\u3030\\u30A0\\uFE31\\uFE32\\uFE58\\uFE63\\uFF0D'\n        },\n        {\n            name: 'Pe',\n            alias: 'Close_Punctuation',\n            bmp: '\\\\x29\\\\x5D\\x7D\\u0F3B\\u0F3D\\u169C\\u2046\\u207E\\u208E\\u2309\\u230B\\u232A\\u2769\\u276B\\u276D\\u276F\\u2771\\u2773\\u2775\\u27C6\\u27E7\\u27E9\\u27EB\\u27ED\\u27EF\\u2984\\u2986\\u2988\\u298A\\u298C\\u298E\\u2990\\u2992\\u2994\\u2996\\u2998\\u29D9\\u29DB\\u29FD\\u2E23\\u2E25\\u2E27\\u2E29\\u3009\\u300B\\u300D\\u300F\\u3011\\u3015\\u3017\\u3019\\u301B\\u301E\\u301F\\uFD3E\\uFE18\\uFE36\\uFE38\\uFE3A\\uFE3C\\uFE3E\\uFE40\\uFE42\\uFE44\\uFE48\\uFE5A\\uFE5C\\uFE5E\\uFF09\\uFF3D\\uFF5D\\uFF60\\uFF63'\n        },\n        {\n            name: 'Pf',\n            alias: 'Final_Punctuation',\n            bmp: '\\xBB\\u2019\\u201D\\u203A\\u2E03\\u2E05\\u2E0A\\u2E0D\\u2E1D\\u2E21'\n        },\n        {\n            name: 'Pi',\n            alias: 'Initial_Punctuation',\n            bmp: '\\xAB\\u2018\\u201B\\u201C\\u201F\\u2039\\u2E02\\u2E04\\u2E09\\u2E0C\\u2E1C\\u2E20'\n        },\n        {\n            name: 'Po',\n            alias: 'Other_Punctuation',\n            bmp: '\\x21-\\x23\\x25-\\x27\\\\x2A\\x2C\\\\x2E\\x2F\\x3A\\x3B\\\\x3F\\x40\\\\x5C\\xA1\\xA7\\xB6\\xB7\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u166D\\u166E\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u1805\\u1807-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2016\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203B-\\u203E\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205E\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00\\u2E01\\u2E06-\\u2E08\\u2E0B\\u2E0E-\\u2E16\\u2E18\\u2E19\\u2E1B\\u2E1E\\u2E1F\\u2E2A-\\u2E2E\\u2E30-\\u2E39\\u2E3C-\\u2E3F\\u2E41\\u3001-\\u3003\\u303D\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFE10-\\uFE16\\uFE19\\uFE30\\uFE45\\uFE46\\uFE49-\\uFE4C\\uFE50-\\uFE52\\uFE54-\\uFE57\\uFE5F-\\uFE61\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF07\\uFF0A\\uFF0C\\uFF0E\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3C\\uFF61\\uFF64\\uFF65',\n            astral: '\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD809[\\uDC70-\\uDC74]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD836[\\uDE87-\\uDE8B]|\\uD801\\uDD6F|\\uD82F\\uDC9F|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]'\n        },\n        {\n            name: 'Ps',\n            alias: 'Open_Punctuation',\n            bmp: '\\\\x28\\\\x5B\\\\x7B\\u0F3A\\u0F3C\\u169B\\u201A\\u201E\\u2045\\u207D\\u208D\\u2308\\u230A\\u2329\\u2768\\u276A\\u276C\\u276E\\u2770\\u2772\\u2774\\u27C5\\u27E6\\u27E8\\u27EA\\u27EC\\u27EE\\u2983\\u2985\\u2987\\u2989\\u298B\\u298D\\u298F\\u2991\\u2993\\u2995\\u2997\\u29D8\\u29DA\\u29FC\\u2E22\\u2E24\\u2E26\\u2E28\\u2E42\\u3008\\u300A\\u300C\\u300E\\u3010\\u3014\\u3016\\u3018\\u301A\\u301D\\uFD3F\\uFE17\\uFE35\\uFE37\\uFE39\\uFE3B\\uFE3D\\uFE3F\\uFE41\\uFE43\\uFE47\\uFE59\\uFE5B\\uFE5D\\uFF08\\uFF3B\\uFF5B\\uFF5F\\uFF62'\n        },\n        {\n            name: 'S',\n            alias: 'Symbol',\n            bmp: '\\\\x24\\\\x2B\\x3C-\\x3E\\\\x5E\\x60\\\\x7C\\x7E\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BE\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u23FA\\u2400-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u32FE\\u3300-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD',\n            astral: '\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDD9A\\uDDE6-\\uDE02\\uDE10-\\uDE3A\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDD79\\uDD7B-\\uDDA3\\uDDA5-\\uDED0\\uDEE0-\\uDEEC\\uDEF0-\\uDEF3\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD82F\\uDC9C|\\uD805\\uDF3F|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD83B[\\uDEF0\\uDEF1]'\n        },\n        {\n            name: 'Sc',\n            alias: 'Currency_Symbol',\n            bmp: '\\\\x24\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20BE\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6'\n        },\n        {\n            name: 'Sk',\n            alias: 'Modifier_Symbol',\n            bmp: '\\\\x5E\\x60\\xA8\\xAF\\xB4\\xB8\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u309B\\u309C\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uAB5B\\uFBB2-\\uFBC1\\uFF3E\\uFF40\\uFFE3',\n            astral: '\\uD83C[\\uDFFB-\\uDFFF]'\n        },\n        {\n            name: 'Sm',\n            alias: 'Math_Symbol',\n            bmp: '\\\\x2B\\x3C-\\x3E\\\\x7C\\x7E\\xAC\\xB1\\xD7\\xF7\\u03F6\\u0606-\\u0608\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u2118\\u2140-\\u2144\\u214B\\u2190-\\u2194\\u219A\\u219B\\u21A0\\u21A3\\u21A6\\u21AE\\u21CE\\u21CF\\u21D2\\u21D4\\u21F4-\\u22FF\\u2320\\u2321\\u237C\\u239B-\\u23B3\\u23DC-\\u23E1\\u25B7\\u25C1\\u25F8-\\u25FF\\u266F\\u27C0-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u27FF\\u2900-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2AFF\\u2B30-\\u2B44\\u2B47-\\u2B4C\\uFB29\\uFE62\\uFE64-\\uFE66\\uFF0B\\uFF1C-\\uFF1E\\uFF5C\\uFF5E\\uFFE2\\uFFE9-\\uFFEC',\n            astral: '\\uD83B[\\uDEF0\\uDEF1]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]'\n        },\n        {\n            name: 'So',\n            alias: 'Other_Symbol',\n            bmp: '\\xA6\\xA9\\xAE\\xB0\\u0482\\u058D\\u058E\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09FA\\u0B70\\u0BF3-\\u0BF8\\u0BFA\\u0C7F\\u0D79\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116\\u2117\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u214A\\u214C\\u214D\\u214F\\u218A\\u218B\\u2195-\\u2199\\u219C-\\u219F\\u21A1\\u21A2\\u21A4\\u21A5\\u21A7-\\u21AD\\u21AF-\\u21CD\\u21D0\\u21D1\\u21D3\\u21D5-\\u21F3\\u2300-\\u2307\\u230C-\\u231F\\u2322-\\u2328\\u232B-\\u237B\\u237D-\\u239A\\u23B4-\\u23DB\\u23E2-\\u23FA\\u2400-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u25B6\\u25B8-\\u25C0\\u25C2-\\u25F7\\u2600-\\u266E\\u2670-\\u2767\\u2794-\\u27BF\\u2800-\\u28FF\\u2B00-\\u2B2F\\u2B45\\u2B46\\u2B4D-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u32FE\\u3300-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA828-\\uA82B\\uA836\\uA837\\uA839\\uAA77-\\uAA79\\uFDFD\\uFFE4\\uFFE8\\uFFED\\uFFEE\\uFFFC\\uFFFD',\n            astral: '\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD83D[\\uDC00-\\uDD79\\uDD7B-\\uDDA3\\uDDA5-\\uDED0\\uDEE0-\\uDEEC\\uDEF0-\\uDEF3\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDD9A\\uDDE6-\\uDE02\\uDE10-\\uDE3A\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFA]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD82F\\uDC9C|\\uD805\\uDF3F|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]'\n        },\n        {\n            name: 'Z',\n            alias: 'Separator',\n            bmp: '\\x20\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\n        },\n        {\n            name: 'Zl',\n            alias: 'Line_Separator',\n            bmp: '\\u2028'\n        },\n        {\n            name: 'Zp',\n            alias: 'Paragraph_Separator',\n            bmp: '\\u2029'\n        },\n        {\n            name: 'Zs',\n            alias: 'Space_Separator',\n            bmp: '\\x20\\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000'\n        }\n    ]);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/unicode-categories.js\n// module id = 23\n// module chunks = 0 1","/*!\n * XRegExp Unicode Properties 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2012-2016 MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds properties to meet the UTS #18 Level 1 RL1.2 requirements for Unicode regex support. See\n     * <http://unicode.org/reports/tr18/#RL1.2>. Following are definitions of these properties from\n     * UAX #44 <http://unicode.org/reports/tr44/>:\n     *\n     * - Alphabetic\n     *   Characters with the Alphabetic property. Generated from: Lowercase + Uppercase + Lt + Lm +\n     *   Lo + Nl + Other_Alphabetic.\n     *\n     * - Default_Ignorable_Code_Point\n     *   For programmatic determination of default ignorable code points. New characters that should\n     *   be ignored in rendering (unless explicitly supported) will be assigned in these ranges,\n     *   permitting programs to correctly handle the default rendering of such characters when not\n     *   otherwise supported.\n     *\n     * - Lowercase\n     *   Characters with the Lowercase property. Generated from: Ll + Other_Lowercase.\n     *\n     * - Noncharacter_Code_Point\n     *   Code points permanently reserved for internal use.\n     *\n     * - Uppercase\n     *   Characters with the Uppercase property. Generated from: Lu + Other_Uppercase.\n     *\n     * - White_Space\n     *   Spaces, separator characters and other control characters which should be treated by\n     *   programming languages as \"white space\" for the purpose of parsing elements.\n     *\n     * The properties ASCII, Any, and Assigned are also included but are not defined in UAX #44. UTS\n     * #18 RL1.2 additionally requires support for Unicode scripts and general categories. These are\n     * included in XRegExp's Unicode Categories and Unicode Scripts addons.\n     *\n     * Token names are case insensitive, and any spaces, hyphens, and underscores are ignored.\n     *\n     * Uses Unicode 8.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Properties');\n    }\n\n    var unicodeData = [\n        {\n            name: 'ASCII',\n            bmp: '\\0-\\x7F'\n        },\n        {\n            name: 'Alphabetic',\n            bmp: 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0345\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05B0-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0657\\u0659-\\u065F\\u066E-\\u06D3\\u06D5-\\u06DC\\u06E1-\\u06E8\\u06ED-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710-\\u073F\\u074D-\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0817\\u081A-\\u082C\\u0840-\\u0858\\u08A0-\\u08B4\\u08E3-\\u08E9\\u08F0-\\u093B\\u093D-\\u094C\\u094E-\\u0950\\u0955-\\u0963\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C4\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09F0\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B\\u0A4C\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A70-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0-\\u0AE3\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D-\\u0B44\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4C\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCC\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E46\\u0E4D\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ECD\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F81\\u0F88-\\u0F97\\u0F99-\\u0FBC\\u1000-\\u1036\\u1038\\u103B-\\u103F\\u1050-\\u1062\\u1065-\\u1068\\u106E-\\u1086\\u108E\\u109C\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1713\\u1720-\\u1733\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17B3\\u17B6-\\u17C8\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u1938\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A61-\\u1A74\\u1AA7\\u1B00-\\u1B33\\u1B35-\\u1B43\\u1B45-\\u1B4B\\u1B80-\\u1BA9\\u1BAC-\\u1BAF\\u1BBA-\\u1BE5\\u1BE7-\\u1BF1\\u1C00-\\u1C35\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1DE7-\\u1DF4\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u24B6-\\u24E9\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA674-\\uA67B\\uA67F-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA827\\uA840-\\uA873\\uA880-\\uA8C3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA92A\\uA930-\\uA952\\uA960-\\uA97C\\uA980-\\uA9B2\\uA9B4-\\uA9BF\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAABE\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n            astral: '\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD804[\\uDC00-\\uDC45\\uDC82-\\uDCB8\\uDCD0-\\uDCE8\\uDD00-\\uDD32\\uDD50-\\uDD72\\uDD76\\uDD80-\\uDDBF\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE34\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEE8\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D-\\uDF44\\uDF47\\uDF48\\uDF4B\\uDF4C\\uDF50\\uDF57\\uDF5D-\\uDF63]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD83A[\\uDC00-\\uDCC4]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]|\\uD80D[\\uDC00-\\uDC2E]|\\uD87E[\\uDC00-\\uDE1D]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9E]|\\uD808[\\uDC00-\\uDF99]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD805[\\uDC80-\\uDCC1\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDB5\\uDDB8-\\uDDBE\\uDDD8-\\uDDDD\\uDE00-\\uDE3E\\uDE40\\uDE44\\uDE80-\\uDEB5\\uDF00-\\uDF19\\uDF1D-\\uDF2A]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD811[\\uDC00-\\uDE46]|\\uD82C[\\uDC00\\uDC01]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF93-\\uDF9F]|\\uD873[\\uDC00-\\uDEA1]'\n        },\n        {\n            name: 'Any',\n            isBmpLast: true,\n            bmp: '\\0-\\uFFFF',\n            astral: '[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]'\n        },\n        {\n            name: 'Default_Ignorable_Code_Point',\n            bmp: '\\xAD\\u034F\\u061C\\u115F\\u1160\\u17B4\\u17B5\\u180B-\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u3164\\uFE00-\\uFE0F\\uFEFF\\uFFA0\\uFFF0-\\uFFF8',\n            astral: '[\\uDB40-\\uDB43][\\uDC00-\\uDFFF]|\\uD834[\\uDD73-\\uDD7A]|\\uD82F[\\uDCA0-\\uDCA3]'\n        },\n        {\n            name: 'Lowercase',\n            bmp: 'a-z\\xAA\\xB5\\xBA\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02B8\\u02C0\\u02C1\\u02E0-\\u02E4\\u0345\\u0371\\u0373\\u0377\\u037A-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1DBF\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u2071\\u207F\\u2090-\\u209C\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2170-\\u217F\\u2184\\u24D0-\\u24E9\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7D\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B-\\uA69D\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7F8-\\uA7FA\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\n            astral: '\\uD803[\\uDCC0-\\uDCF2]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD801[\\uDC28-\\uDC4F]|\\uD806[\\uDCC0-\\uDCDF]'\n        },\n        {\n            name: 'Noncharacter_Code_Point',\n            bmp: '\\uFDD0-\\uFDEF\\uFFFE\\uFFFF',\n            astral: '[\\uDB3F\\uDB7F\\uDBBF\\uDBFF\\uD83F\\uD87F\\uD8BF\\uDAFF\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uD8FF\\uDABF\\uDA7F\\uD93F][\\uDFFE\\uDFFF]'\n        },\n        {\n            name: 'Uppercase',\n            bmp: 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2160-\\u216F\\u2183\\u24B6-\\u24CF\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A',\n            astral: '\\uD806[\\uDCA0-\\uDCBF]|\\uD803[\\uDC80-\\uDCB2]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD801[\\uDC00-\\uDC27]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]'\n        },\n        {\n            name: 'White_Space',\n            bmp: '\\x09-\\x0D\\x20\\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\n        }\n    ];\n\n    // Add non-generated data\n    unicodeData.push({\n        name: 'Assigned',\n        // Since this is defined as the inverse of Unicode category Cn (Unassigned), the Unicode\n        // Categories addon is required to use this property\n        inverseOf: 'Cn'\n    });\n\n    XRegExp.addUnicodeData(unicodeData);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/unicode-properties.js\n// module id = 24\n// module chunks = 0 1","/*!\n * XRegExp Unicode Scripts 3.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2010-2016 MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nmodule.exports = function(XRegExp) {\n    'use strict';\n\n    /**\n     * Adds support for all Unicode scripts. E.g., `\\p{Latin}`. Token names are case insensitive,\n     * and any spaces, hyphens, and underscores are ignored.\n     *\n     * Uses Unicode 8.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Scripts');\n    }\n\n    XRegExp.addUnicodeData([\n        {\n            name: 'Ahom',\n            astral: '\\uD805[\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF3F]'\n        },\n        {\n            name: 'Anatolian_Hieroglyphs',\n            astral: '\\uD811[\\uDC00-\\uDE46]'\n        },\n        {\n            name: 'Arabic',\n            bmp: '\\u0600-\\u0604\\u0606-\\u060B\\u060D-\\u061A\\u061E\\u0620-\\u063F\\u0641-\\u064A\\u0656-\\u066F\\u0671-\\u06DC\\u06DE-\\u06FF\\u0750-\\u077F\\u08A0-\\u08B4\\u08E3-\\u08FF\\uFB50-\\uFBC1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFD\\uFE70-\\uFE74\\uFE76-\\uFEFC',\n            astral: '\\uD803[\\uDE60-\\uDE7E]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB\\uDEF0\\uDEF1]'\n        },\n        {\n            name: 'Armenian',\n            bmp: '\\u0531-\\u0556\\u0559-\\u055F\\u0561-\\u0587\\u058A\\u058D-\\u058F\\uFB13-\\uFB17'\n        },\n        {\n            name: 'Avestan',\n            astral: '\\uD802[\\uDF00-\\uDF35\\uDF39-\\uDF3F]'\n        },\n        {\n            name: 'Balinese',\n            bmp: '\\u1B00-\\u1B4B\\u1B50-\\u1B7C'\n        },\n        {\n            name: 'Bamum',\n            bmp: '\\uA6A0-\\uA6F7',\n            astral: '\\uD81A[\\uDC00-\\uDE38]'\n        },\n        {\n            name: 'Bassa_Vah',\n            astral: '\\uD81A[\\uDED0-\\uDEED\\uDEF0-\\uDEF5]'\n        },\n        {\n            name: 'Batak',\n            bmp: '\\u1BC0-\\u1BF3\\u1BFC-\\u1BFF'\n        },\n        {\n            name: 'Bengali',\n            bmp: '\\u0980-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FB'\n        },\n        {\n            name: 'Bopomofo',\n            bmp: '\\u02EA\\u02EB\\u3105-\\u312D\\u31A0-\\u31BA'\n        },\n        {\n            name: 'Brahmi',\n            astral: '\\uD804[\\uDC00-\\uDC4D\\uDC52-\\uDC6F\\uDC7F]'\n        },\n        {\n            name: 'Braille',\n            bmp: '\\u2800-\\u28FF'\n        },\n        {\n            name: 'Buginese',\n            bmp: '\\u1A00-\\u1A1B\\u1A1E\\u1A1F'\n        },\n        {\n            name: 'Buhid',\n            bmp: '\\u1740-\\u1753'\n        },\n        {\n            name: 'Canadian_Aboriginal',\n            bmp: '\\u1400-\\u167F\\u18B0-\\u18F5'\n        },\n        {\n            name: 'Carian',\n            astral: '\\uD800[\\uDEA0-\\uDED0]'\n        },\n        {\n            name: 'Caucasian_Albanian',\n            astral: '\\uD801[\\uDD30-\\uDD63\\uDD6F]'\n        },\n        {\n            name: 'Chakma',\n            astral: '\\uD804[\\uDD00-\\uDD34\\uDD36-\\uDD43]'\n        },\n        {\n            name: 'Cham',\n            bmp: '\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA5F'\n        },\n        {\n            name: 'Cherokee',\n            bmp: '\\u13A0-\\u13F5\\u13F8-\\u13FD\\uAB70-\\uABBF'\n        },\n        {\n            name: 'Common',\n            bmp: '\\0-\\x40\\\\x5B-\\x60\\\\x7B-\\xA9\\xAB-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9-\\u02DF\\u02E5-\\u02E9\\u02EC-\\u02FF\\u0374\\u037E\\u0385\\u0387\\u0589\\u0605\\u060C\\u061B\\u061C\\u061F\\u0640\\u06DD\\u0964\\u0965\\u0E3F\\u0FD5-\\u0FD8\\u10FB\\u16EB-\\u16ED\\u1735\\u1736\\u1802\\u1803\\u1805\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u2000-\\u200B\\u200E-\\u2064\\u2066-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20BE\\u2100-\\u2125\\u2127-\\u2129\\u212C-\\u2131\\u2133-\\u214D\\u214F-\\u215F\\u2189-\\u218B\\u2190-\\u23FA\\u2400-\\u2426\\u2440-\\u244A\\u2460-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2E00-\\u2E42\\u2FF0-\\u2FFB\\u3000-\\u3004\\u3006\\u3008-\\u3020\\u3030-\\u3037\\u303C-\\u303F\\u309B\\u309C\\u30A0\\u30FB\\u30FC\\u3190-\\u319F\\u31C0-\\u31E3\\u3220-\\u325F\\u327F-\\u32CF\\u3358-\\u33FF\\u4DC0-\\u4DFF\\uA700-\\uA721\\uA788-\\uA78A\\uA830-\\uA839\\uA92E\\uA9CF\\uAB5B\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFF70\\uFF9E\\uFF9F\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD',\n            astral: '\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDFCB\\uDFCE-\\uDFFF]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]|\\uD83D[\\uDC00-\\uDD79\\uDD7B-\\uDDA3\\uDDA5-\\uDED0\\uDEE0-\\uDEEC\\uDEF0-\\uDEF3\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD800[\\uDD00-\\uDD02\\uDD07-\\uDD33\\uDD37-\\uDD3F\\uDD90-\\uDD9B\\uDDD0-\\uDDFC\\uDEE1-\\uDEFB]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD66\\uDD6A-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDF00-\\uDF56\\uDF60-\\uDF71]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD00-\\uDD0C\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE10-\\uDE3A\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFF]'\n        },\n        {\n            name: 'Coptic',\n            bmp: '\\u03E2-\\u03EF\\u2C80-\\u2CF3\\u2CF9-\\u2CFF'\n        },\n        {\n            name: 'Cuneiform',\n            astral: '\\uD809[\\uDC00-\\uDC6E\\uDC70-\\uDC74\\uDC80-\\uDD43]|\\uD808[\\uDC00-\\uDF99]'\n        },\n        {\n            name: 'Cypriot',\n            astral: '\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F]'\n        },\n        {\n            name: 'Cyrillic',\n            bmp: '\\u0400-\\u0484\\u0487-\\u052F\\u1D2B\\u1D78\\u2DE0-\\u2DFF\\uA640-\\uA69F\\uFE2E\\uFE2F'\n        },\n        {\n            name: 'Deseret',\n            astral: '\\uD801[\\uDC00-\\uDC4F]'\n        },\n        {\n            name: 'Devanagari',\n            bmp: '\\u0900-\\u0950\\u0953-\\u0963\\u0966-\\u097F\\uA8E0-\\uA8FD'\n        },\n        {\n            name: 'Duployan',\n            astral: '\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9C-\\uDC9F]'\n        },\n        {\n            name: 'Egyptian_Hieroglyphs',\n            astral: '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]'\n        },\n        {\n            name: 'Elbasan',\n            astral: '\\uD801[\\uDD00-\\uDD27]'\n        },\n        {\n            name: 'Ethiopic',\n            bmp: '\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E'\n        },\n        {\n            name: 'Georgian',\n            bmp: '\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u10FF\\u2D00-\\u2D25\\u2D27\\u2D2D'\n        },\n        {\n            name: 'Glagolitic',\n            bmp: '\\u2C00-\\u2C2E\\u2C30-\\u2C5E'\n        },\n        {\n            name: 'Gothic',\n            astral: '\\uD800[\\uDF30-\\uDF4A]'\n        },\n        {\n            name: 'Grantha',\n            astral: '\\uD804[\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]'\n        },\n        {\n            name: 'Greek',\n            bmp: '\\u0370-\\u0373\\u0375-\\u0377\\u037A-\\u037D\\u037F\\u0384\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03E1\\u03F0-\\u03FF\\u1D26-\\u1D2A\\u1D5D-\\u1D61\\u1D66-\\u1D6A\\u1DBF\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u2126\\uAB65',\n            astral: '\\uD800[\\uDD40-\\uDD8C\\uDDA0]|\\uD834[\\uDE00-\\uDE45]'\n        },\n        {\n            name: 'Gujarati',\n            bmp: '\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9'\n        },\n        {\n            name: 'Gurmukhi',\n            bmp: '\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75'\n        },\n        {\n            name: 'Han',\n            bmp: '\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u3005\\u3007\\u3021-\\u3029\\u3038-\\u303B\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uF900-\\uFA6D\\uFA70-\\uFAD9',\n            astral: '\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]'\n        },\n        {\n            name: 'Hangul',\n            bmp: '\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\u3200-\\u321E\\u3260-\\u327E\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC'\n        },\n        {\n            name: 'Hanunoo',\n            bmp: '\\u1720-\\u1734'\n        },\n        {\n            name: 'Hatran',\n            astral: '\\uD802[\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDCFF]'\n        },\n        {\n            name: 'Hebrew',\n            bmp: '\\u0591-\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F'\n        },\n        {\n            name: 'Hiragana',\n            bmp: '\\u3041-\\u3096\\u309D-\\u309F',\n            astral: '\\uD82C\\uDC01|\\uD83C\\uDE00'\n        },\n        {\n            name: 'Imperial_Aramaic',\n            astral: '\\uD802[\\uDC40-\\uDC55\\uDC57-\\uDC5F]'\n        },\n        {\n            name: 'Inherited',\n            bmp: '\\u0300-\\u036F\\u0485\\u0486\\u064B-\\u0655\\u0670\\u0951\\u0952\\u1AB0-\\u1ABE\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u200C\\u200D\\u20D0-\\u20F0\\u302A-\\u302D\\u3099\\u309A\\uFE00-\\uFE0F\\uFE20-\\uFE2D',\n            astral: '\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD]|\\uD800[\\uDDFD\\uDEE0]|\\uDB40[\\uDD00-\\uDDEF]'\n        },\n        {\n            name: 'Inscriptional_Pahlavi',\n            astral: '\\uD802[\\uDF60-\\uDF72\\uDF78-\\uDF7F]'\n        },\n        {\n            name: 'Inscriptional_Parthian',\n            astral: '\\uD802[\\uDF40-\\uDF55\\uDF58-\\uDF5F]'\n        },\n        {\n            name: 'Javanese',\n            bmp: '\\uA980-\\uA9CD\\uA9D0-\\uA9D9\\uA9DE\\uA9DF'\n        },\n        {\n            name: 'Kaithi',\n            astral: '\\uD804[\\uDC80-\\uDCC1]'\n        },\n        {\n            name: 'Kannada',\n            bmp: '\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2'\n        },\n        {\n            name: 'Katakana',\n            bmp: '\\u30A1-\\u30FA\\u30FD-\\u30FF\\u31F0-\\u31FF\\u32D0-\\u32FE\\u3300-\\u3357\\uFF66-\\uFF6F\\uFF71-\\uFF9D',\n            astral: '\\uD82C\\uDC00'\n        },\n        {\n            name: 'Kayah_Li',\n            bmp: '\\uA900-\\uA92D\\uA92F'\n        },\n        {\n            name: 'Kharoshthi',\n            astral: '\\uD802[\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F-\\uDE47\\uDE50-\\uDE58]'\n        },\n        {\n            name: 'Khmer',\n            bmp: '\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u19E0-\\u19FF'\n        },\n        {\n            name: 'Khojki',\n            astral: '\\uD804[\\uDE00-\\uDE11\\uDE13-\\uDE3D]'\n        },\n        {\n            name: 'Khudawadi',\n            astral: '\\uD804[\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9]'\n        },\n        {\n            name: 'Lao',\n            bmp: '\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF'\n        },\n        {\n            name: 'Latin',\n            bmp: 'A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02E0-\\u02E4\\u1D00-\\u1D25\\u1D2C-\\u1D5C\\u1D62-\\u1D65\\u1D6B-\\u1D77\\u1D79-\\u1DBE\\u1E00-\\u1EFF\\u2071\\u207F\\u2090-\\u209C\\u212A\\u212B\\u2132\\u214E\\u2160-\\u2188\\u2C60-\\u2C7F\\uA722-\\uA787\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA7FF\\uAB30-\\uAB5A\\uAB5C-\\uAB64\\uFB00-\\uFB06\\uFF21-\\uFF3A\\uFF41-\\uFF5A'\n        },\n        {\n            name: 'Lepcha',\n            bmp: '\\u1C00-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C4F'\n        },\n        {\n            name: 'Limbu',\n            bmp: '\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u194F'\n        },\n        {\n            name: 'Linear_A',\n            astral: '\\uD801[\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]'\n        },\n        {\n            name: 'Linear_B',\n            astral: '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA]'\n        },\n        {\n            name: 'Lisu',\n            bmp: '\\uA4D0-\\uA4FF'\n        },\n        {\n            name: 'Lycian',\n            astral: '\\uD800[\\uDE80-\\uDE9C]'\n        },\n        {\n            name: 'Lydian',\n            astral: '\\uD802[\\uDD20-\\uDD39\\uDD3F]'\n        },\n        {\n            name: 'Mahajani',\n            astral: '\\uD804[\\uDD50-\\uDD76]'\n        },\n        {\n            name: 'Malayalam',\n            bmp: '\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D75\\u0D79-\\u0D7F'\n        },\n        {\n            name: 'Mandaic',\n            bmp: '\\u0840-\\u085B\\u085E'\n        },\n        {\n            name: 'Manichaean',\n            astral: '\\uD802[\\uDEC0-\\uDEE6\\uDEEB-\\uDEF6]'\n        },\n        {\n            name: 'Meetei_Mayek',\n            bmp: '\\uAAE0-\\uAAF6\\uABC0-\\uABED\\uABF0-\\uABF9'\n        },\n        {\n            name: 'Mende_Kikakui',\n            astral: '\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCD6]'\n        },\n        {\n            name: 'Meroitic_Cursive',\n            astral: '\\uD802[\\uDDA0-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDDFF]'\n        },\n        {\n            name: 'Meroitic_Hieroglyphs',\n            astral: '\\uD802[\\uDD80-\\uDD9F]'\n        },\n        {\n            name: 'Miao',\n            astral: '\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]'\n        },\n        {\n            name: 'Modi',\n            astral: '\\uD805[\\uDE00-\\uDE44\\uDE50-\\uDE59]'\n        },\n        {\n            name: 'Mongolian',\n            bmp: '\\u1800\\u1801\\u1804\\u1806-\\u180E\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA'\n        },\n        {\n            name: 'Mro',\n            astral: '\\uD81A[\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE6E\\uDE6F]'\n        },\n        {\n            name: 'Multani',\n            astral: '\\uD804[\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA9]'\n        },\n        {\n            name: 'Myanmar',\n            bmp: '\\u1000-\\u109F\\uA9E0-\\uA9FE\\uAA60-\\uAA7F'\n        },\n        {\n            name: 'Nabataean',\n            astral: '\\uD802[\\uDC80-\\uDC9E\\uDCA7-\\uDCAF]'\n        },\n        {\n            name: 'New_Tai_Lue',\n            bmp: '\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE\\u19DF'\n        },\n        {\n            name: 'Nko',\n            bmp: '\\u07C0-\\u07FA'\n        },\n        {\n            name: 'Ogham',\n            bmp: '\\u1680-\\u169C'\n        },\n        {\n            name: 'Ol_Chiki',\n            bmp: '\\u1C50-\\u1C7F'\n        },\n        {\n            name: 'Old_Hungarian',\n            astral: '\\uD803[\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDCFF]'\n        },\n        {\n            name: 'Old_Italic',\n            astral: '\\uD800[\\uDF00-\\uDF23]'\n        },\n        {\n            name: 'Old_North_Arabian',\n            astral: '\\uD802[\\uDE80-\\uDE9F]'\n        },\n        {\n            name: 'Old_Permic',\n            astral: '\\uD800[\\uDF50-\\uDF7A]'\n        },\n        {\n            name: 'Old_Persian',\n            astral: '\\uD800[\\uDFA0-\\uDFC3\\uDFC8-\\uDFD5]'\n        },\n        {\n            name: 'Old_South_Arabian',\n            astral: '\\uD802[\\uDE60-\\uDE7F]'\n        },\n        {\n            name: 'Old_Turkic',\n            astral: '\\uD803[\\uDC00-\\uDC48]'\n        },\n        {\n            name: 'Oriya',\n            bmp: '\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77'\n        },\n        {\n            name: 'Osmanya',\n            astral: '\\uD801[\\uDC80-\\uDC9D\\uDCA0-\\uDCA9]'\n        },\n        {\n            name: 'Pahawh_Hmong',\n            astral: '\\uD81A[\\uDF00-\\uDF45\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]'\n        },\n        {\n            name: 'Palmyrene',\n            astral: '\\uD802[\\uDC60-\\uDC7F]'\n        },\n        {\n            name: 'Pau_Cin_Hau',\n            astral: '\\uD806[\\uDEC0-\\uDEF8]'\n        },\n        {\n            name: 'Phags_Pa',\n            bmp: '\\uA840-\\uA877'\n        },\n        {\n            name: 'Phoenician',\n            astral: '\\uD802[\\uDD00-\\uDD1B\\uDD1F]'\n        },\n        {\n            name: 'Psalter_Pahlavi',\n            astral: '\\uD802[\\uDF80-\\uDF91\\uDF99-\\uDF9C\\uDFA9-\\uDFAF]'\n        },\n        {\n            name: 'Rejang',\n            bmp: '\\uA930-\\uA953\\uA95F'\n        },\n        {\n            name: 'Runic',\n            bmp: '\\u16A0-\\u16EA\\u16EE-\\u16F8'\n        },\n        {\n            name: 'Samaritan',\n            bmp: '\\u0800-\\u082D\\u0830-\\u083E'\n        },\n        {\n            name: 'Saurashtra',\n            bmp: '\\uA880-\\uA8C4\\uA8CE-\\uA8D9'\n        },\n        {\n            name: 'Sharada',\n            astral: '\\uD804[\\uDD80-\\uDDCD\\uDDD0-\\uDDDF]'\n        },\n        {\n            name: 'Shavian',\n            astral: '\\uD801[\\uDC50-\\uDC7F]'\n        },\n        {\n            name: 'Siddham',\n            astral: '\\uD805[\\uDD80-\\uDDB5\\uDDB8-\\uDDDD]'\n        },\n        {\n            name: 'SignWriting',\n            astral: '\\uD836[\\uDC00-\\uDE8B\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]'\n        },\n        {\n            name: 'Sinhala',\n            bmp: '\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4',\n            astral: '\\uD804[\\uDDE1-\\uDDF4]'\n        },\n        {\n            name: 'Sora_Sompeng',\n            astral: '\\uD804[\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9]'\n        },\n        {\n            name: 'Sundanese',\n            bmp: '\\u1B80-\\u1BBF\\u1CC0-\\u1CC7'\n        },\n        {\n            name: 'Syloti_Nagri',\n            bmp: '\\uA800-\\uA82B'\n        },\n        {\n            name: 'Syriac',\n            bmp: '\\u0700-\\u070D\\u070F-\\u074A\\u074D-\\u074F'\n        },\n        {\n            name: 'Tagalog',\n            bmp: '\\u1700-\\u170C\\u170E-\\u1714'\n        },\n        {\n            name: 'Tagbanwa',\n            bmp: '\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773'\n        },\n        {\n            name: 'Tai_Le',\n            bmp: '\\u1950-\\u196D\\u1970-\\u1974'\n        },\n        {\n            name: 'Tai_Tham',\n            bmp: '\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD'\n        },\n        {\n            name: 'Tai_Viet',\n            bmp: '\\uAA80-\\uAAC2\\uAADB-\\uAADF'\n        },\n        {\n            name: 'Takri',\n            astral: '\\uD805[\\uDE80-\\uDEB7\\uDEC0-\\uDEC9]'\n        },\n        {\n            name: 'Tamil',\n            bmp: '\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA'\n        },\n        {\n            name: 'Telugu',\n            bmp: '\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C78-\\u0C7F'\n        },\n        {\n            name: 'Thaana',\n            bmp: '\\u0780-\\u07B1'\n        },\n        {\n            name: 'Thai',\n            bmp: '\\u0E01-\\u0E3A\\u0E40-\\u0E5B'\n        },\n        {\n            name: 'Tibetan',\n            bmp: '\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FD4\\u0FD9\\u0FDA'\n        },\n        {\n            name: 'Tifinagh',\n            bmp: '\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F'\n        },\n        {\n            name: 'Tirhuta',\n            astral: '\\uD805[\\uDC80-\\uDCC7\\uDCD0-\\uDCD9]'\n        },\n        {\n            name: 'Ugaritic',\n            astral: '\\uD800[\\uDF80-\\uDF9D\\uDF9F]'\n        },\n        {\n            name: 'Vai',\n            bmp: '\\uA500-\\uA62B'\n        },\n        {\n            name: 'Warang_Citi',\n            astral: '\\uD806[\\uDCA0-\\uDCF2\\uDCFF]'\n        },\n        {\n            name: 'Yi',\n            bmp: '\\uA000-\\uA48C\\uA490-\\uA4C6'\n        }\n    ]);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/src/addons/unicode-scripts.js\n// module id = 25\n// module chunks = 0 1","/**\n * @desc Validation errors.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\nvar oop = require(\"./oop\");\n\nvar inherit = oop.inherit;\n\n/**\n * @classdesc The fireEvent methods return an array of objects of this class to\n * notify the caller of errors in the file being validated.\n *\n * @class\n * @static\n *\n * @param {string} msg The error message.\n */\nfunction ValidationError(msg) {\n  this.msg = msg;\n  // May be useful for debugging:\n  // this.stack_trace = new Error().stack;\n}\n\n/**\n * @returns {string} The text representation of the error.\n */\nValidationError.prototype.toString = function toString() {\n  return this.msg;\n};\n\n/**\n * This method provides the caller with the list of all names that are used in\n * the error message.\n *\n * @returns {Array.<module:name_patterns.Base>} The list of names used in the\n * error message.\n */\nValidationError.prototype.getNames = function getNames() {\n  return [];\n};\n\n/**\n * This method transforms the ValidationError object to a string but uses the\n * names in the parameter passed to it to format the string.\n *\n * Since salve does not work with namespace prefixes, someone using salve would\n * typically use this method so as to replace the name patterns passed in error\n * messages with qualified names.\n *\n * @param {Array.<string>} names The array of names to use. This should be an\n * array of the same length as that returned by ``getNames()``, with\n * each name replaced by a corresponding string.\n *\n * @returns {string} The object formatted as a string.\n */\nValidationError.prototype.toStringWithNames =\n  function toStringWithNames(_names) {\n    // We do not have names in ValidationError\n    return this.msg;\n  };\n\n/**\n * @classdesc This class serves as a base for all those errors that have only\n * one name involved.\n *\n * @class\n * @static\n * @extends module:errors.ValidationError\n *\n * @param {string} msg The error message.\n *\n * @param {module:name_patterns.Base} name The name of the XML entity at stake.\n */\nfunction SingleNameError(msg, name) {\n  ValidationError.call(this, msg);\n  this.name = name;\n}\ninherit(SingleNameError, ValidationError);\n\nSingleNameError.prototype.toString = function toString() {\n  return this.toStringWithNames([this.name]);\n};\n\nSingleNameError.prototype.getNames = function getNames() {\n  return [this.name];\n};\n\nSingleNameError.prototype.toStringWithNames =\n  function toStringWithNames(names) {\n    return this.msg + \": \" + names[0];\n  };\n\n/**\n * @classdesc Error returned when an attribute name is invalid.\n *\n * @class\n * @static\n * @extends module:errors.SingleNameError\n *\n * @param {string} msg The error message.\n *\n * @param {module:name_patterns.Base} name The name of the attribute at stake.\n */\nfunction AttributeNameError() {\n  SingleNameError.apply(this, arguments);\n}\ninherit(AttributeNameError, SingleNameError);\n\n/**\n * @classdesc Error returned when an attribute value is invalid.\n *\n * @class\n * @static\n * @extends module:errors.SingleNameError\n *\n * @param {string} msg The error message.\n *\n * @param {module:name_patterns.Base} name The name of the attribute at stake.\n */\nfunction AttributeValueError() {\n  SingleNameError.apply(this, arguments);\n}\ninherit(AttributeValueError, SingleNameError);\n\n/**\n * @classdesc Error returned when an element is invalid.\n *\n * @class\n * @static\n * @extends module:errors.SingleNameError\n *\n * @param {string} msg The error message.\n *\n * @param {module:name_patterns.Base} name The name of the element at stake.\n */\nfunction ElementNameError() {\n  SingleNameError.apply(this, arguments);\n}\ninherit(ElementNameError, SingleNameError);\n\n/**\n * @classdesc Error returned when choice was not satisfied.\n *\n * @class\n * @static\n * @extends module:errors.ValidationError\n *\n * @param {Array.<module:name_patterns.Base>} namesA The names of the first XML\n * entities at stake.\n *\n * @param {Array.<module:name_patterns.Base>} namesB The names of the second XML\n * entities at stake.\n */\nfunction ChoiceError(namesA, namesB) {\n  ValidationError.call(this, \"\");\n  this.namesA = namesA;\n  this.namesB = namesB;\n}\ninherit(ChoiceError, ValidationError);\n\nChoiceError.prototype.toString = function toString() {\n  return this.toStringWithNames(this.namesA.concat(this.namesB));\n};\n\nChoiceError.prototype.getNames = function getNames() {\n  return this.namesA.concat(this.namesB);\n};\n\nChoiceError.prototype.toStringWithNames = function toStringWithNames(names) {\n  var first = names.slice(0, this.namesA.length);\n  var second = names.slice(this.namesA.length);\n  return \"must choose either \" + first.join(\", \") + \" or \" + second.join(\", \");\n};\n\nexports.ValidationError = ValidationError;\nexports.ChoiceError = ChoiceError;\nexports.ElementNameError = ElementNameError;\nexports.AttributeNameError = AttributeNameError;\nexports.AttributeValueError = AttributeValueError;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/errors.js\n// module id = 26\n// module chunks = 0 1","/**\n * @desc Classes that model RNG patterns that pertain to names.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\nvar oop = require(\"./oop\");\n\n/**\n * @classdesc Base class for all name patterns.\n *\n * @class\n * @static\n *\n * @param {string} path The XML path of the element that corresponds to this\n * object in the Relax NG schema from which this object was contructed.\n */\nfunction Base(path) {\n  this.path = path;\n}\n\n/**\n * Tests whether the pattern matches a name.\n *\n * @param {string} ns The namespace to match.\n * @param {string} name The name to match.\n * @returns {boolean} ``true`` if there is a match.\n */\nBase.prototype.match = function match(_ns, _name) {\n  throw new Error(\"subclasses must implement this method.\");\n};\n\n/**\n * Tests whether the pattern matches a name and this match is due only to a\n * wildcard match (``nsName`` or ``anyName``).\n *\n * @param {string} ns The namespace to match.\n * @param {string} name The name to match.\n *\n * @returns {boolean} ``true`` if there is a match **and** the match is due only\n * to a wildcard match. If there is a choice between matching with a wildcard\n * and matching with a regular ``name`` pattern, this will return false because\n * of the ``name`` pattern.\n */\nBase.prototype.wildcardMatch = function wildcardMatch(_ns, _name) {\n  throw new Error(\"subclasses must implement this method.\");\n};\n\n/**\n * Determines whether a pattern is simple or not. A pattern is deemed simple if\n * it does not use ``<except>``, ``<anyName>`` or ``<NsName>``.  Put in\n * practical terms, non-simple patterns cannot generally be presented as a list\n * of choices to the user. In most cases, the appropriate input from the user\n * should be obtained by presenting an input field in which the user can type\n * the namespace and name of the entity to be named and the GUI reports whether\n * the name is allowed or not by the schema.\n *\n * @returns {boolean} ``true`` if the pattern is simple.\n */\nBase.prototype.simple = function simple() {\n  throw new Error(\"subclasses must implement this method.\");\n};\n\n/**\n * Gets the list of namespaces used in the pattern. An ``::except`` entry\n * indicates that there are exceptions in the pattern. A ``*`` entry indicates\n * that any namespace is allowed.\n *\n * This method should be used by client code to help determine how to prompt the\n * user for a namespace. If the return value is a list without ``::except`` or\n * ``*``, the client code knows there is a finite list of namespaces expected,\n * and what the possible values are. So it could present the user with a choice\n * from the set. If ``::except`` or ``*`` appears in the list, then a different\n * strategy must be used.\n *\n * @returns {Array.<string>} The list of namespaces.\n */\nBase.prototype.getNamespaces = function getNamespaces() {\n  var namespaces = Object.create(null);\n  this._recordNamespaces(namespaces);\n  return Object.keys(namespaces);\n};\n\nBase.prototype._recordNamespaces =\n  function _recordNamespaces(_namespaces) {\n    throw new Error(\"subclasses must implement this method.\");\n  };\n\n/**\n * Represent the name pattern as a plain object. The object returned contains a\n * ``pattern`` field which has the name of the JavaScript class that was used to\n * create the object. Other fields are present, depending on the actual needs of\n * the class.\n *\n * @returns {Object} The object representing the instance.\n */\nBase.prototype.toObject = function toObject() {\n  throw new Error(\"subclasses must implement this method.\");\n};\n\n/**\n * Alias of {@link module:name_patterns.Base#toObject toObject}.\n *\n * ``toJSON`` is a misnomer, as the data returned is not JSON but a JavaScript\n * object. This method exists so that ``JSON.stringify`` can use it.\n */\nBase.prototype.toJSON = function toJSON() {\n  return this.toObject();\n};\n\n/**\n * Returns an array of {@link module:name_patterns.Name Name} objects which is a\n * list of all the possible names that this pattern allows.\n *\n * @returns {Array.<module:name_patterns.Name>|null} An array of names. The value\n * ``null`` is returned if the pattern is not simple.\n */\nBase.prototype.toArray = function toArray() {\n  throw new Error(\"subclasses must implement this method.\");\n};\n\n/**\n * Stringify the pattern to a JSON string.\n *\n * @returns {string} The stringified instance.\n */\nBase.prototype.toString = function toString() {\n  return JSON.stringify(this);\n};\n\n/**\n * @classdesc Models the Relax NG ``<name>`` element.\n *\n * @class\n * @static\n *\n * @extends module:name_patterns.Base\n *\n * @param {string} path See parent class.\n *\n * @param {string} ns The namespace URI for this name. Corresponds to the\n * ``ns`` attribute in the simplified Relax NG syntax.\n *\n * @param {string} name The name. Corresponds to the content of ``<name>``\n * in the simplified Relax NG syntax.\n */\nfunction Name(path, ns, name) {\n  Base.call(this, path);\n  this.ns = ns;\n  this.name = name;\n}\n\noop.inherit(Name, Base);\n\nName.prototype.match = function match(ns, name) {\n  return this.ns === ns && this.name === name;\n};\n\nName.prototype.wildcardMatch = function wildcardMatch(_ns, _name) {\n  return false; // This is not a wildcard.\n};\n\nName.prototype.toObject = function toObject() {\n  return {\n    ns: this.ns,\n    name: this.name,\n  };\n};\n\nName.prototype.simple = function simple() {\n  return true;\n};\n\nName.prototype.toArray = function toArray() {\n  return [this];\n};\n\nName.prototype._recordNamespaces = function _recordNamespaces(namespaces) {\n  namespaces[this.ns] = 1;\n};\n\n/**\n * @classdesc Models the Relax NG ``<choice>`` element when it appears in a name\n * class.\n *\n * @class\n * @static\n *\n * @extends module:name_patterns.Base\n *\n * @param {string} path See parent class.\n *\n * @param {Array.<module:name_patterns.Base>} pats An array of length 2 which\n * contains the two choices allowed by this object.\n */\nfunction NameChoice(path, pats) {\n  Base.call(this, path);\n  this.a = pats[0];\n  this.b = pats[1];\n}\n\noop.inherit(NameChoice, Base);\n\nNameChoice.prototype.match = function match(ns, name) {\n  return this.a.match(ns, name) || this.b.match(ns, name);\n};\n\nNameChoice.prototype.wildcardMatch = function wildcardMatch(ns, name) {\n  return this.a.wildcardMatch(ns, name) || this.b.wildcardMatch(ns, name);\n};\n\nNameChoice.prototype.toObject = function toObject() {\n  return {\n    a: this.a.toObject(),\n    b: this.b.toObject(),\n  };\n};\n\nNameChoice.prototype.simple = function simple() {\n  return this.a.simple() && this.b.simple();\n};\n\nNameChoice.prototype.toArray = function toArray() {\n  var aArr = this.a.toArray();\n\n  if (!aArr) {\n    return null;\n  }\n\n  var bArr = this.b.toArray();\n  if (!bArr) {\n    return null;\n  }\n\n  return aArr.concat(bArr);\n};\n\nNameChoice.prototype._recordNamespaces =\n  function _recordNamespaces(namespaces) {\n    this.a._recordNamespaces(namespaces);\n    this.b._recordNamespaces(namespaces);\n  };\n\n/**\n * @classdesc Models the Relax NG ``<nsName>`` element.\n *\n * @class\n * @static\n *\n * @extends module:name_patterns.Base\n *\n * @param {string} path See parent class.\n *\n * @param {string} ns The namespace URI for this name. Corresponds to the ``ns``\n * attribute in the simplified Relax NG syntax.\n *\n * @param {module:name_patterns.Base} [except] Corresponds to an ``<except>``\n * element appearing as a child of the ``<nsName>`` element in the Relax NG\n * schema.\n */\nfunction NsName(path, ns, except) {\n  Base.call(this, path);\n  this.ns = ns;\n  this.except = except;\n}\n\noop.inherit(NsName, Base);\n\nNsName.prototype.match = function match(ns, name) {\n  return this.ns === ns && !(this.except && this.except.match(ns, name));\n};\n\nNsName.prototype.wildcardMatch = function wildcardMatch(ns, name) {\n  return this.match(ns, name);\n};\n\nNsName.prototype.toObject = function toObject() {\n  var ret = {\n    ns: this.ns,\n  };\n  if (this.except) {\n    ret.except = this.except.toObject();\n  }\n  return ret;\n};\n\nNsName.prototype.simple = function simple() {\n  return false;\n};\n\nNsName.prototype.toArray = function toArray() {\n  return null;\n};\n\nNsName.prototype._recordNamespaces =\n  function _recordNamespaces(namespaces) {\n    namespaces[this.ns] = 1;\n    if (this.except) {\n      namespaces[\"::except\"] = 1;\n    }\n  };\n\n/**\n * @classdesc Models the Relax NG ``<anyName>`` element.\n *\n * @class\n * @static\n *\n * @extends module:name_patterns.Base\n *\n * @param {string} path See parent class.\n *\n * @param {module:name_patterns.Base} [except] Corresponds to an ``<except>``\n * element appearing as a child of the ``<anyName>`` element in the Relax NG\n * schema.\n */\nfunction AnyName(path, except) {\n  Base.call(this, path);\n  this.except = except;\n}\n\noop.inherit(AnyName, Base);\n\nAnyName.prototype.match = function match(ns, name) {\n  return !this.except || !this.except.match(ns, name);\n};\n\nAnyName.prototype.wildcardMatch = function wildcardMatch(ns, name) {\n  return this.match(ns, name);\n};\n\nAnyName.prototype.toObject = function toObject() {\n  var ret = {\n    pattern: \"AnyName\",\n  };\n  if (this.except) {\n    ret.except = this.except.toObject();\n  }\n  return ret;\n};\n\nAnyName.prototype.simple = function simple() {\n  return false;\n};\n\nAnyName.prototype.toArray = function toArray() {\n  return null;\n};\n\nAnyName.prototype._recordNamespaces =\n  function _recordNamespaces(namespaces) {\n    namespaces[\"*\"] = 1;\n    if (this.except) {\n      namespaces[\"::except\"] = 1;\n    }\n  };\n\nexports.Name = Name;\nexports.NameChoice = NameChoice;\nexports.NsName = NsName;\nexports.AnyName = AnyName;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/name_patterns.js\n// module id = 27\n// module chunks = 0 1","/**\n * @desc This module contains data and utilities to work with the\n * schema format that salve uses natively.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\nvar inherit = require(\"./oop\").inherit;\nvar patterns = require(\"./patterns\");\n\nvar pro = patterns.__protected;\n\n//\n// MODIFICATIONS TO THIS TABLE MUST BE REFLECTED IN nameToConstructor\n//\nvar codeToConstructor = [\n  Array,\n  pro.Empty,\n  pro.Data,\n  pro.List,\n  pro.Param,\n  pro.Value,\n  pro.NotAllowed,\n  pro.Text,\n  pro.Ref,\n  pro.OneOrMore,\n  pro.Choice,\n  pro.Group,\n  pro.Attribute,\n  pro.Element,\n  pro.Define,\n  pro.Grammar,\n  pro.EName,\n  pro.Interleave,\n  pro.Name,\n  pro.NameChoice,\n  pro.NsName,\n  pro.AnyName,\n];\n\n//\n// MODIFICATIONS TO THIS TABLE MUST BE REFLECTED IN codeToConstructor\n//\nvar nameToConstructor = {\n  // Array = 0 is hard-coded elsewhere in the conversion code so don't change\n  // it.\n  0: Array,\n  Empty: pro.Empty,\n  1: pro.Empty,\n  Data: pro.Data,\n  2: pro.Data,\n  List: pro.List,\n  3: pro.List,\n  Param: pro.Param,\n  4: pro.Param,\n  Value: pro.Value,\n  5: pro.Value,\n  NotAllowed: pro.NotAllowed,\n  6: pro.NotAllowed,\n  Text: pro.Text,\n  7: pro.Text,\n  Ref: pro.Ref,\n  8: pro.Ref,\n  OneOrMore: pro.OneOrMore,\n  9: pro.OneOrMore,\n  Choice: pro.Choice,\n  10: pro.Choice,\n  Group: pro.Group,\n  11: pro.Group,\n  Attribute: pro.Attribute,\n  12: pro.Attribute,\n  Element: pro.Element,\n  13: pro.Element,\n  Define: pro.Define,\n  14: pro.Define,\n  Grammar: pro.Grammar,\n  15: pro.Grammar,\n  EName: pro.EName,\n  16: pro.EName,\n  Interleave: pro.Interleave,\n  17: pro.Interleave,\n  Name: pro.Name,\n  18: pro.Name,\n  NameChoice: pro.NameChoice,\n  19: pro.NameChoice,\n  NsName: pro.NsName,\n  20: pro.NsName,\n  AnyName: pro.AnyName,\n  21: pro.AnyName,\n};\n\n//\n// MODIFICATIONS TO THESE VARIABLES MUST BE REFLECTED IN rng-to-js.xsl\n//\n\n// This is a bit field\nvar OPTION_NO_PATHS = 1;\n// var OPTION_WHATEVER = 2;\n// var OPTION_WHATEVER_PLUS_1 = 4;\n// etc...\n\nfunction OldFormatError() {\n  Error.call(this, \"your schema file must be recreated with a newer \" +\n             \"version of salve-convert\");\n}\n\ninherit(OldFormatError, Error);\n\n/**\n * A class for walking the JSON object representing a schema.\n *\n * @private\n * @class\n * @static\n *\n * @param {Object} options The options object from the file that contains the\n * schema.\n */\nfunction V2JSONWalker(options) {\n  this.options = options;\n}\n\n/**\n * Walks a V2 representation of a JavaScript object.\n *\n * @private\n *\n * @param {Array} array The array representing the object.\n *\n * @throws {Error} If the object is malformed.\n *\n * @returns {Object} The return value of {@link\n * module:formats.V2JSONWalker#_processObject _processObject}.\n */\nV2JSONWalker.prototype.walkObject = function walkObject(array) {\n  var type = array[0];\n  var ctor = codeToConstructor[type];\n  if (ctor === undefined) {\n    if (array.length < 1) {\n      throw new Error(\"array too small to contain object\");\n    }\n    throw new Error(\"undefined type: \" + type);\n  }\n\n  if (ctor === Array) {\n    throw new Error(\"trying to build array with _constructObjectV2\");\n  }\n\n  // eslint-disable-next-line no-bitwise\n  var addPath = (this.options & OPTION_NO_PATHS) && ctor !== pro.EName;\n\n  var args;\n  if (array.length > 1) {\n    args = array.slice(1);\n    if (addPath) {\n      args.unshift(0, \"\");\n    }\n    else {\n      args.unshift(0);\n    }\n    this._transformArray(args);\n  }\n  else if (addPath) {\n    args = [\"\"];\n  }\n  else {\n    args = [];\n  }\n\n  return this._processObject(ctor, args);\n};\n\n/**\n * Processes an object. Derived classes will want to override this method to\n * perform their work.\n *\n * @param {Function} ctor The object's constructor.\n *\n * @param {Array} args The arguments that should be passed to the constructor.\n *\n * @returns {Object|undefined} If the ``V2JSONWalker`` instance is meant to\n * convert the JSON data, then this method should return an Object. If the\n * ``V2JSONWalker`` instance is meant to check the JSON data, then it should\n * return ``undefined``.\n */\nV2JSONWalker.prototype._processObject =\n  function _processObject(_ctor, _args) {\n    return undefined; // Do nothing\n  };\n\nV2JSONWalker.prototype._transformArray = function _transformArray(arr) {\n  if (arr[0] !== 0) {\n    throw new Error(\"array type not 0, but \" + arr[0] + \" for array \" + arr);\n  }\n\n  arr.splice(0, 1);\n  var limit = arr.length;\n  for (var elIx = 0; elIx < limit; elIx++) {\n    var el = arr[elIx];\n\n    if (el instanceof Array) {\n      if (el[0] !== 0) {\n        arr[elIx] = this.walkObject(el);\n      }\n      else {\n        this._transformArray(el);\n      }\n    }\n  }\n};\n\n/**\n * A JSON walker that constructs a pattern tree as it walks the JSON object.\n *\n * @private\n * @extends module:formats.V2JSONWalker\n */\nfunction V2Constructor() {\n  V2JSONWalker.apply(this, arguments);\n}\ninherit(V2Constructor, V2JSONWalker);\n\nV2Constructor.prototype._processObject =\n  function _processObject(ctor, args) {\n    if (ctor === pro.Data && args.length >= 4) {\n      // Parameters are represented as an array of strings in the file.\n      // Transform this array of strings into an array of objects.\n      var params = args[3];\n      if (params.length % 2 !== 0) {\n        throw new Error(\"parameter array length not a multiple of 2\");\n      }\n\n      var newParams = new Array(params.length / 2);\n      for (var i = 0, limit = params.length; i < limit; i += 2) {\n        newParams[i / 2] = { name: params[i], value: params[i + 1] };\n      }\n      args[3] = newParams;\n    }\n    var newObj = Object.create(ctor.prototype);\n    var ctorRet = ctor.apply(newObj, args);\n\n    // Some constructors return a value; make sure to use it!\n    return ctorRet !== undefined ? ctorRet : newObj;\n  };\n\n/**\n * Constructs a tree of patterns from the data structure produced by running\n * ``salve-convert`` on an RNG file.\n *\n *\n * @static\n *\n * @param {string} code The JSON representation.\n *\n * @throws {Error} When the version of the data is not supported.\n *\n * @returns {module:patterns.Pattern} The tree.\n */\nfunction constructTree(code) {\n  var parsed = JSON.parse(code);\n  if (typeof parsed === \"object\" && !parsed.v) {\n    throw new OldFormatError(); // version 0\n  }\n\n  var version = parsed.v;\n  var options = parsed.o;\n  if (version === 3) {\n    return new V2Constructor(options).walkObject(parsed.d, options);\n  }\n\n  throw new Error(\"unknown version: \" + version);\n}\n\nexports.constructTree = constructTree;\n\n//\n// Exports which are meant for other modules internal to salve.\n//\n// DO NOT USE THIS OUTSIDE SALVE! THIS EXPORT MAY CHANGE AT ANY TIME!\n// YOU'VE BEEN WARNED!\n//\nexports.__protected = {\n  V2JSONWalker: V2JSONWalker,\n  nameToConstructor: nameToConstructor,\n  OPTION_NO_PATHS: OPTION_NO_PATHS,\n};\n\n//  LocalWords:  MPL util oop rng js xsl JSON constructObjectV\n//  LocalWords:  JSONWalker RNG\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/dist/lib/salve/formats.js\n// module id = 28\n// module chunks = 0 1"],"sourceRoot":""}