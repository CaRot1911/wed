{"version":3,"file":"wed-menu-test.js","sourceRoot":"","sources":["../../../../../lib/tests/integration/wed-menu-test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { CaretManager } from \"wed/caret-manager\";\nimport { Editor } from \"wed/editor\";\nimport { EditingMenuManager } from \"wed/gui/editing-menu-manager\";\nimport * as keyConstants from \"wed/key-constants\";\nimport { encodeAttrName } from \"wed/util\";\n\nimport * as globalConfig from \"../base-config\";\nimport { delay } from \"../util\";\nimport { activateContextMenu, contextMenuHasOption, EditorSetup,\n         getAttributeValuesFor} from \"../wed-test-util\";\n\nconst assert = chai.assert;\n\ndescribe(\"wed menus:\", () => {\n  let setup: EditorSetup;\n  let editor: Editor;\n  let caretManager: CaretManager;\n  let ps: NodeListOf<Element>;\n  let guiRoot: Element;\n  let menuManager: EditingMenuManager;\n\n  before(() => {\n    setup = new EditorSetup(\n      \"/base/build/standalone/lib/tests/wed_test_data/source_converted.xml\",\n      globalConfig.config,\n      document);\n    ({ editor } = setup);\n    return setup.init().then(() => {\n      // tslint:disable-next-line:no-any\n      (editor.validator as any)._validateUpTo(editor.dataRoot, -1);\n      caretManager = editor.caretManager;\n      guiRoot = editor.guiRoot;\n      ps = guiRoot.querySelectorAll(\".body .p\");\n      menuManager = editor.editingMenuManager;\n    });\n  });\n\n  afterEach(() => {\n    setup.reset();\n  });\n\n  after(() => {\n    setup.restore();\n\n    // tslint:disable-next-line:no-any\n    (editor as any) = undefined;\n    // tslint:disable-next-line:no-any\n    (caretManager as any) = undefined;\n  });\n\n  function contextMenuHasAttributeOption(myEditor: Editor): void {\n    contextMenuHasOption(myEditor, /^Add @/);\n  }\n\n  describe(\"has context menus\", () => {\n    it(\"when there is no caret\", async () => {\n      const initial = guiRoot.getElementsByClassName(\"title\")[0].childNodes[1];\n      assert.isUndefined(caretManager.getNormalizedCaret());\n      activateContextMenu(editor, initial.parentNode as Element);\n\n      await delay(1);\n      // tslint:disable-next-line:no-any\n      assert.isDefined((menuManager as any).currentDropdown,\n                       \"dropdown defined\");\n      assert.isDefined(caretManager.getNormalizedCaret(), \"caret defined\");\n    });\n\n    it(\"when the user tries to bring up a contextual menu when the caret is \" +\n       \"outside wed\", async () => {\n         caretManager.clearSelection(); // Also clears the caret.\n         assert.isUndefined(caretManager.getNormalizedCaret());\n         activateContextMenu(editor,\n                             guiRoot.getElementsByClassName(\"title\")[0]);\n         await delay(1);\n         // tslint:disable-next-line:no-any\n         assert.isDefined((menuManager as any).currentDropdown);\n       });\n\n    it(\"when there is a caret\", async () => {\n      const initial = guiRoot.getElementsByClassName(\"title\")[0].childNodes[1];\n      caretManager.setCaret(initial, 0);\n\n      activateContextMenu(editor, initial.parentNode as Element);\n      await delay(1);\n        // tslint:disable-next-line:no-any\n      assert.isDefined((menuManager as any).currentDropdown);\n    });\n\n    it(\"with attribute options, when invoked on a start label\", () => {\n      activateContextMenu(\n        editor,\n        guiRoot.querySelector(\".__start_label._title_label ._element_name\")!);\n      contextMenuHasAttributeOption(editor);\n    });\n\n    it(\"with attribute options, when invoked in an attribute\", () => {\n      activateContextMenu(\n        editor,\n        guiRoot.querySelector(\".__start_label._p_label ._attribute_value\")!);\n      contextMenuHasAttributeOption(editor);\n    });\n\n    it(\"on elements inside _phantom_wrap\", () => {\n      const p =\n        guiRoot.querySelector(`.body .p[${encodeAttrName(\"rend\")}='wrap']`)!;\n      const dataNode = $.data(p, \"wed_mirror_node\") as Element;\n      const rend = dataNode.getAttribute(\"rend\");\n      // Make sure the paragraph has rend=\"wrap\".\n      assert.equal(rend, \"wrap\");\n      activateContextMenu(editor, p);\n    });\n  });\n\n  describe(\"has a completion menu when the caret is in an attribute\", () => {\n    it(\"that takes completions\", () => {\n      const p = ps[9];\n      const attrVals = getAttributeValuesFor(p);\n      caretManager.setCaret(attrVals[0].firstChild, 0);\n      // This is an arbitrary menu item we check for.\n      contextMenuHasOption(editor, /^Y$/);\n    });\n\n    it(\"for which the mode provides completion\", () => {\n      const p = ps[13];\n      const attrVals = getAttributeValuesFor(p);\n      caretManager.setCaret(attrVals[0].firstChild, 0);\n      // This is an arbitrary menu item we check for.\n      contextMenuHasOption(editor, /^completion1$/);\n    });\n  });\n\n  describe(\"does not have completion menu\", () => {\n    it(\"when the caret is in an attribute that takes completions but the \" +\n       \"attribute is not visible\", () => {\n         // Reduce visibility to 0 so that no attribute is visible.\n         editor.setLabelVisibilityLevel(0);\n         const attrVals = getAttributeValuesFor(ps[9]);\n         caretManager.setCaret(attrVals[0].firstChild, 0);\n         const menu = editor.window.document.\n           getElementsByClassName(\"wed-context-menu\")[0];\n         assert.isUndefined(menu, \"the menu should not exist\");\n       });\n  });\n\n  describe(\"has a replacement menu when the caret is in an attribute\", () => {\n    it(\"that takes completions\", () => {\n      const p = ps[9];\n      const attrVals = getAttributeValuesFor(p);\n      caretManager.setCaret(attrVals[0].firstChild, 0);\n      contextMenuHasOption(editor, /^Y$/);\n      editor.type(\"Y\");\n      // The context menu should be gone.\n      const menu = editor.window.document.\n        getElementsByClassName(\"wed-context-menu\")[0];\n      assert.isUndefined(menu, \"the menu should not exist\");\n      editor.type(keyConstants.REPLACEMENT_MENU);\n      contextMenuHasOption(editor, /^Y$/);\n    });\n\n    it(\"for which the mode provides completion\", () => {\n      const p = ps[13];\n      const attrVals = getAttributeValuesFor(p);\n      caretManager.setCaret(attrVals[0].firstChild, 0);\n      // This is an arbitrary menu item we check for.\n      contextMenuHasOption(editor, /^completion1$/);\n      editor.type(\"completion1\");\n      // The context menu should be gone.\n      const menu = editor.window.document.\n        getElementsByClassName(\"wed-context-menu\")[0];\n      assert.isUndefined(menu, \"the menu should not exist\");\n      editor.type(keyConstants.REPLACEMENT_MENU);\n      contextMenuHasOption(editor, /^completion1$/);\n    });\n  });\n\n  describe(\"does not have a replacement menu\", () => {\n    it(\"when the caret is in an attribute that takes completions but the \" +\n       \"attribute is not visible\", () => {\n         // Reduce visibility to 0 so that no attribute is visible.\n         editor.setLabelVisibilityLevel(0);\n         const attrVals = getAttributeValuesFor(ps[9]);\n         caretManager.setCaret(attrVals[0].firstChild, 0);\n         let menu = editor.window.document.\n           getElementsByClassName(\"wed-context-menu\")[0];\n         assert.isUndefined(menu, \"the menu should not exist\");\n         // The menu won't come up with a the shortcut.\n         editor.type(keyConstants.REPLACEMENT_MENU);\n         menu = editor.window.document.\n           getElementsByClassName(\"wed-context-menu\")[0];\n         assert.isUndefined(menu, \"the menu should not exist\");\n       });\n  });\n});\n"]}