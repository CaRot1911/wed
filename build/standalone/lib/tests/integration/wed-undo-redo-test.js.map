{"version":3,"file":"wed-undo-redo-test.js","sourceRoot":"","sources":["../../../../../lib/tests/integration/wed-undo-redo-test.ts"],"names":[],"mappings":";;;;;;;;;;;;IAgBA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAE3B,QAAQ,CAAC,gBAAgB,EAAE;QACzB,IAAI,KAAkB,CAAC;QACvB,IAAI,MAAc,CAAC;QACnB,IAAI,YAA0B,CAAC;QAC/B,IAAI,EAAuB,CAAC;QAC5B,IAAI,MAA2B,CAAC;QAChC,IAAI,YAAsC,CAAC;QAE3C,MAAM,CAAC;YACL,KAAK,GAAG,IAAI,2BAAW,CACrB,qEAAqE,EACrE,YAAY,CAAC,MAAM,EACnB,QAAQ,CAAC,CAAC;YACZ,CAAG,qBAAM,CAAW,CAAC;YACrB,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;gBACvB,kCAAkC;gBACjC,MAAM,CAAC,SAAiB,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC7D,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;gBACnC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;gBACjD,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC;YACR,KAAK,CAAC,KAAK,EAAE,CAAC;YACd,8CAA8C;YAC9C,IAAI,YAAY,KAAK,SAAS,EAAE;gBAC9B,YAAY,CAAC,WAAW,EAAE,CAAC;gBAC3B,YAAY,GAAG,SAAS,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC;YACJ,KAAK,CAAC,OAAO,EAAE,CAAC;YAEhB,kCAAkC;YACjC,MAAc,GAAG,SAAS,CAAC;YAC5B,kCAAkC;YACjC,YAAoB,GAAG,SAAS,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mCAAmC,EAAE;YACtC,0BAA0B;YAC1B,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACxC,IAAM,MAAM,GAAG,OAAO,CAAC,UAAW,CAAC;YACnC,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAElC,wEAAwE;YACxE,oEAAoE;YACpE,sCAAsC;YACtC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACpB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,EAAE,iBAAiB,CAAC,CAAC;YAC/D,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAE1C,MAAM,CAAC,IAAI,EAAE,CAAC;YACd,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,EAAE,iBAAiB,CAAC,CAAC;YAC3D,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC1C,0BAAU,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE,kBAAkB,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oDAAoD,EAAE;YACvD,0BAA0B;YAC1B,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,IAAM,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;YAEnD,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC;iBACtD,oBAAoB,CAAC,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAEnE,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAE/C,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjB,IAAM,EAAE,GAAG,SAAS,CAAC,iBAAiB,CAAC;YACvC,IAAM,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,EAAE,iBAAiB,CAAC,CAAC;YACzD,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAE7C,MAAM,CAAC,IAAI,EAAE,CAAC;YACd,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mCAAmC,EAAE;YACtC,0BAA0B;YAC1B,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACxC,IAAM,MAAM,GAAG,OAAO,CAAC,UAAW,CAAC;YACnC,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAElC,wEAAwE;YACxE,oEAAoE;YACpE,sCAAsC;YAEtC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACpB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,EAAE,iBAAiB,CAAC,CAAC;YAC/D,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAE1C,MAAM,CAAC,IAAI,EAAE,CAAC;YACd,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,EAAE,iBAAiB,CAAC,CAAC;YAC3D,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC1C,0BAAU,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE,kBAAkB,CAAC,CAAC;YAEnD,MAAM,CAAC,IAAI,EAAE,CAAC;YACd,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,EAAE,iBAAiB,CAAC,CAAC;YAC/D,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC1C,0BAAU,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE,kBAAkB,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2DAA2D,EAAE;YAC9D,IAAI,OAAO,GAAG,qCAAqB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAkB,CAAC;YACjE,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;YAC1D,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEpB,+DAA+D;YAC/D,OAAO,GAAG,qCAAqB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAkB,CAAC;YAC7D,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;YAC7C,0BAAU,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE,4BAA4B,CAAC,CAAC;YAE7D,uCAAuC;YACvC,IAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO,CAAS,CAAC;YACpD,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;YAE/C,MAAM,CAAC,IAAI,EAAE,CAAC;YAEd,+DAA+D;YAC/D,OAAO,GAAG,qCAAqB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAkB,CAAC;YAC7D,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YACzC,0BAAU,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE,kBAAkB,CAAC,CAAC;YAEnD,8CAA8C;YAC9C,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mDAAmD,EAAE;YACtD,IAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAChB,IAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnC,IAAM,MAAM,GAAG,iCAAiB,CAAC,CAAC,CAAE,CAAC;YACrC,MAAM,CAAC,KAAK,CAAC,qCAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;YAClE,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAC9D,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;YAExC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAC5C,0BAAU,CAAC,MAAM,EAAE,MAAM,CAAC,UAAW,EAAE,CAAC,EAC7B,yCAAyC,CAAC,CAAC;YACtD,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;YAC9C,IAAM,QAAQ,GAAG,qCAAqB,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;YAClD,0BAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAW,EAAE,CAAC,EAClC,4CAA4C,CAAC,CAAC;YAEzD,MAAM,CAAC,IAAI,EAAE,CAAC;YACd,MAAM,CAAC,KAAK,CAAC,qCAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;YAClE,qEAAqE;YACrE,8CAA8C;YAC9C,0BAAU,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,8CAA8C,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mDAAmD,EAAE;YACtD,IAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAChB,IAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAY,CAAC;YAC9C,IAAI,SAAS,GAAG,oCAAoB,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,UAAU,GAAG,qCAAqB,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAM,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAC/C,IAAM,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC;YACxC,MAAM,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,EAAE,sCAAsC,CAAC,CAAC;YACzE,IAAM,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAS,CAAC;YACtD,IAAM,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,WAAY,CAAC;YAC9C,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAC5D,CAAC,kBAAkB,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;YAE3C,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC/B,0BAAU,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,UAAW,EAAE,CAAC,EACpC,sCAAsC,CAAC,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;YAClD,UAAU,GAAG,qCAAqB,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,aAAa,GAAG,CAAC,EACpC,8BAA8B,CAAC,CAAC;YAC7C,0BAAU,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,UAAW,EAAE,CAAC,EACpC,kDAAkD,CAAC,CAAC;YAE/D,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EACjB,oDAAoD,CAAC,CAAC;YACpE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAE7C,MAAM,CAAC,IAAI,EAAE,CAAC;YAEd,UAAU,GAAG,qCAAqB,CAAC,CAAC,CAAC,CAAC;YACtC,SAAS,GAAG,oCAAoB,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,aAAa,EAChC,8BAA8B,CAAC,CAAC;YAC7C,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,WAAW,EACrC,wDAAwD,CAAC,CAAC;YACvE,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,YAAY,EACvC,6CAA6C,CAAC,CAAC;YAC5D,0BAAU,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,UAAW,EAAE,CAAC,EACpC,kDAAkD,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,qDAAqD;QACrD,yEAAyE;QACzE,EAAE,CAAC,kDAAkD,EAAE;YACrD,IAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAChB,IAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnC,IAAM,MAAM,GAAG,iCAAiB,CAAC,CAAC,CAAE,CAAC;YACrC,MAAM,CAAC,KAAK,CAAC,qCAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;YAClE,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAC9D,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;YAExC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAC5C,0BAAU,CAAC,MAAM,EAAE,MAAM,CAAC,UAAW,EAAE,CAAC,EAC7B,yCAAyC,CAAC,CAAC;YACtD,YAAY,GAAG,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,UAAC,EAAE;gBACjD,IAAI,EAAE,CAAC,IAAI,KAAK,mBAAmB,EAAE;oBACnC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBACjB;YACH,CAAC,CAAC,CAAC;YACH,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;YAC9C,MAAM,CAAC,KAAK,CAAC,qCAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,0EAA0E;QAC1E,4DAA4D;QAC5D,EAAE,CAAC,sDAAsD,EAAE;YACzD,IAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAChB,IAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnC,IAAM,MAAM,GAAG,iCAAiB,CAAC,CAAC,CAAE,CAAC;YACrC,MAAM,CAAC,KAAK,CAAC,qCAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;YAClE,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAC9D,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;YAExC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAC5C,0BAAU,CAAC,MAAM,EAAE,MAAM,CAAC,UAAW,EAAE,CAAC,EAC7B,yCAAyC,CAAC,CAAC;YACtD,YAAY,GAAG,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,UAAC,EAAE;gBACjD,IAAI,EAAE,CAAC,IAAI,KAAK,mBAAmB,EAAE;oBACnC,MAAM,CAAC,KAAK,CAAC,qCAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;oBAClE,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,KAAgB,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;iBAClE;YACH,CAAC,CAAC,CAAC;YACH,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;YAC9C,IAAM,QAAQ,GAAG,qCAAqB,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;YAClD,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;YAC7C,MAAM,CAAC,IAAI,EAAE,CAAC;YACd,MAAM,CAAC,KAAK,CAAC,qCAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE;YAC/B,0BAA0B;YAC1B,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACxC,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAElC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACpB,IAAM,IAAI,GAAI,MAAM,CAAC,UAAU;iBAC5B,IAAI,CAAC,kBAAM,CAAC,UAAC,EAAE,IAAK,OAAA,EAAE,CAAC,IAAI,KAAK,MAAM,EAAlB,CAAkB,CAAC,EAAE,iBAAK,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;YACjE,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM;iBACzB,aAAa,CAAC,8BAA8B,CAAgB,CAAC;YAChE,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE;YAC/B,0BAA0B;YAC1B,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACxC,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAElC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEpB,iCAAiC;YACjC,MAAM,CAAC,IAAI,EAAE,CAAC;YAEd,wBAAwB;YACxB,IAAM,IAAI,GAAI,MAAM,CAAC,UAAU;iBAC5B,IAAI,CAAC,kBAAM,CAAC,UAAC,EAAE,IAAK,OAAA,EAAE,CAAC,IAAI,KAAK,MAAM,EAAlB,CAAkB,CAAC,EAAE,iBAAK,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;YACjE,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM;iBACzB,aAAa,CAAC,8BAA8B,CAAgB,CAAC;YAChE,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { Subscription } from \"rxjs\";\nimport { filter, first } from \"rxjs/operators\";\n\nimport { CaretManager } from \"wed/caret-manager\";\nimport { Editor } from \"wed/editor\";\nimport * as keyConstants from \"wed/key-constants\";\n\nimport * as globalConfig from \"../base-config\";\nimport { caretCheck, EditorSetup, getAttributeNamesFor,\n         getAttributeValuesFor, getElementNameFor } from \"../wed-test-util\";\n\nconst assert = chai.assert;\n\ndescribe(\"wed undo redo:\", () => {\n  let setup: EditorSetup;\n  let editor: Editor;\n  let caretManager: CaretManager;\n  let ps: NodeListOf<Element>;\n  let titles: NodeListOf<Element>;\n  let subscription: Subscription | undefined;\n\n  before(() => {\n    setup = new EditorSetup(\n      \"/base/build/standalone/lib/tests/wed_test_data/source_converted.xml\",\n      globalConfig.config,\n      document);\n    ({ editor } = setup);\n    return setup.init().then(() => {\n      // tslint:disable-next-line:no-any\n      (editor.validator as any)._validateUpTo(editor.dataRoot, -1);\n      caretManager = editor.caretManager;\n      ps = editor.guiRoot.querySelectorAll(\".body .p\");\n      titles = editor.guiRoot.getElementsByClassName(\"title\");\n    });\n  });\n\n  afterEach(() => {\n    setup.reset();\n    // We have to clean up subscriptions manually.\n    if (subscription !== undefined) {\n      subscription.unsubscribe();\n      subscription = undefined;\n    }\n  });\n\n  after(() => {\n    setup.restore();\n\n    // tslint:disable-next-line:no-any\n    (editor as any) = undefined;\n    // tslint:disable-next-line:no-any\n    (caretManager as any) = undefined;\n  });\n\n  it(\"undo undoes typed text as a group\", () => {\n    // Text node inside title.\n    const initial = titles[0].childNodes[1];\n    const parent = initial.parentNode!;\n    caretManager.setCaret(initial, 0);\n\n    // There was a version of wed which would fail this test. The fake caret\n    // would be inserted inside the text node, which would throw off the\n    // nodeToPath/pathToNode calculations.\n    editor.type(\"blah\");\n    assert.equal(initial.nodeValue, \"blahabcd\", \"text after edit\");\n    assert.equal(parent.childNodes.length, 3);\n\n    editor.undo();\n    assert.equal(initial.nodeValue, \"abcd\", \"text after undo\");\n    assert.equal(parent.childNodes.length, 3);\n    caretCheck(editor, initial, 0, \"caret after undo\");\n  });\n\n  it(\"undo undoes typed text as a group (inside element)\", () => {\n    // Text node inside title.\n    const title = titles[0];\n    const titleData = $.data(title, \"wed_mirror_node\");\n\n    const trs = editor.modeTree.getMode(titleData.firstChild)\n      .getContextualActions([\"insert\"], \"hi\", titleData.firstChild, 2);\n\n    caretManager.setCaret(titleData.firstChild, 2);\n\n    trs[0].execute({ node: undefined, name: \"hi\" });\n\n    editor.type(\"a\");\n    const hi = titleData.firstElementChild;\n    const hiText = hi.firstChild;\n    assert.equal(hiText.textContent, \"a\", \"text after edit\");\n    assert.equal(titleData.childNodes.length, 3);\n\n    editor.undo();\n    editor.type(keyConstants.UNDO);\n  });\n\n  it(\"redo redoes typed text as a group\", () => {\n    // Text node inside title.\n    const initial = titles[0].childNodes[1];\n    const parent = initial.parentNode!;\n    caretManager.setCaret(initial, 0);\n\n    // There was a version of wed which would fail this test. The fake caret\n    // would be inserted inside the text node, which would throw off the\n    // nodeToPath/pathToNode calculations.\n\n    editor.type(\"blah\");\n    assert.equal(initial.nodeValue, \"blahabcd\", \"text after edit\");\n    assert.equal(parent.childNodes.length, 3);\n\n    editor.undo();\n    assert.equal(initial.nodeValue, \"abcd\", \"text after undo\");\n    assert.equal(parent.childNodes.length, 3);\n    caretCheck(editor, initial, 0, \"caret after undo\");\n\n    editor.redo();\n    assert.equal(initial.nodeValue, \"blahabcd\", \"text after undo\");\n    assert.equal(parent.childNodes.length, 3);\n    caretCheck(editor, initial, 4, \"caret after redo\");\n  });\n\n  it(\"undoing an attribute value change undoes the value change\", () => {\n    let initial = getAttributeValuesFor(ps[7])[0].firstChild as Text;\n    caretManager.setCaret(initial, 4);\n    assert.equal(initial.data, \"rend_value\", \"initial value\");\n    editor.type(\"blah\");\n\n    // We have to refetch because the decorations have been redone.\n    initial = getAttributeValuesFor(ps[7])[0].firstChild as Text;\n    assert.equal(initial.data, \"rendblah_value\");\n    caretCheck(editor, initial, 8, \"caret after text insertion\");\n\n    // Check that the data is also modified\n    const dataNode = editor.toDataNode(initial) as Attr;\n    assert.equal(dataNode.value, \"rendblah_value\");\n\n    editor.undo();\n\n    // We have to refetch because the decorations have been redone.\n    initial = getAttributeValuesFor(ps[7])[0].firstChild as Text;\n    assert.equal(initial.data, \"rend_value\");\n    caretCheck(editor, initial, 4, \"caret after undo\");\n\n    // Check that the data change has been undone.\n    assert.equal(dataNode.value, \"rend_value\", \"value undone\");\n  });\n\n  it(\"undoing an attribute addition undoes the addition\", () => {\n    const p = ps[0];\n    const dataP = editor.toDataNode(p);\n    const elName = getElementNameFor(p)!;\n    assert.equal(getAttributeValuesFor(p).length, 0, \"no attributes\");\n    const trs = editor.modeTree.getMode(elName).getContextualActions(\n      [\"add-attribute\"], \"abbr\", elName, 0);\n\n    caretManager.setCaret(elName.firstChild, 0);\n    caretCheck(editor, elName.firstChild!, 0,\n               \"the caret should be in the element name\");\n    trs[0].execute({ node: dataP, name: \"abbr\" });\n    const attrVals = getAttributeValuesFor(p);\n    assert.equal(attrVals.length, 1, \"one attribute\");\n    caretCheck(editor, attrVals[0].firstChild!, 0,\n               \"the caret should be in the attribute value\");\n\n    editor.undo();\n    assert.equal(getAttributeValuesFor(p).length, 0, \"no attributes\");\n    // We would ideally want the caret to be back in the element name but\n    // there's currently an issue with doing this.\n    caretCheck(editor, p, 1, \"the caret should be in a reasonable position\");\n  });\n\n  it(\"undoing an attribute deletion undoes the deletion\", () => {\n    const p = ps[7];\n    const dataP = editor.toDataNode(p) as Element;\n    let attrNames = getAttributeNamesFor(p);\n    let attrValues = getAttributeValuesFor(p);\n    const initialValue = attrValues[0].textContent;\n    const initialLength = attrValues.length;\n    assert.isTrue(initialLength > 0, \"the paragraph should have attributes\");\n    const attr = editor.toDataNode(attrValues[0]) as Attr;\n    const decodedName = attrNames[0].textContent!;\n    const trs = editor.modeTree.getMode(attr).getContextualActions(\n      [\"delete-attribute\"], decodedName, attr);\n\n    caretManager.setCaret(attr, 0);\n    caretCheck(editor, attrValues[0].firstChild!, 0,\n               \"the caret should be in the attribute\");\n    trs[0].execute({ node: attr, name: decodedName });\n    attrValues = getAttributeValuesFor(p);\n    assert.equal(attrValues.length, initialLength - 1,\n                 \"one attribute should be gone\");\n    caretCheck(editor, attrValues[0].firstChild!, 0,\n               \"the caret should be in the first attribute value\");\n\n    assert.isNull(attr.ownerElement,\n                  \"the old attribute should not have an onwer element\");\n    assert.isNull(dataP.getAttribute(attr.name));\n\n    editor.undo();\n\n    attrValues = getAttributeValuesFor(p);\n    attrNames = getAttributeNamesFor(p);\n    assert.equal(attrValues.length, initialLength,\n                 \"the attribute should be back\");\n    assert.equal(attrNames[0].textContent, decodedName,\n                 \"the first attribute should be the one that was deleted\");\n    assert.equal(attrValues[0].textContent, initialValue,\n                 \"the attribute should have its initial value\");\n    caretCheck(editor, attrValues[0].firstChild!, 0,\n               \"the caret should be in the first attribute value\");\n  });\n\n  // The changes performed if the event listener raises\n  // AbortTransformationException then the whole transformation is aborted.\n  it(\"aborting in event listener undoes transformation\", () => {\n    const p = ps[0];\n    const dataP = editor.toDataNode(p);\n    const elName = getElementNameFor(p)!;\n    assert.equal(getAttributeValuesFor(p).length, 0, \"no attributes\");\n    const trs = editor.modeTree.getMode(elName).getContextualActions(\n      [\"add-attribute\"], \"abbr\", elName, 0);\n\n    caretManager.setCaret(elName.firstChild, 0);\n    caretCheck(editor, elName.firstChild!, 0,\n               \"the caret should be in the element name\");\n    subscription = editor.transformations.subscribe((ev) => {\n      if (ev.name === \"EndTransformation\") {\n        ev.abort(\"moo\");\n      }\n    });\n    trs[0].execute({ node: dataP, name: \"abbr\" });\n    assert.equal(getAttributeValuesFor(p).length, 0, \"no attributes\");\n  });\n\n  // The changes performed in the event listener listening to transformation\n  // events are part of the undo group for the transformation.\n  it(\"changes in event listener are part of the undo group\", () => {\n    const p = ps[0];\n    const dataP = editor.toDataNode(p);\n    const elName = getElementNameFor(p)!;\n    assert.equal(getAttributeValuesFor(p).length, 0, \"no attributes\");\n    const trs = editor.modeTree.getMode(elName).getContextualActions(\n      [\"add-attribute\"], \"abbr\", elName, 0);\n\n    caretManager.setCaret(elName.firstChild, 0);\n    caretCheck(editor, elName.firstChild!, 0,\n               \"the caret should be in the element name\");\n    subscription = editor.transformations.subscribe((ev) => {\n      if (ev.name === \"EndTransformation\") {\n        assert.equal(getAttributeValuesFor(p).length, 1, \"one attribute\");\n        editor.dataUpdater.setAttribute(dataP as Element, \"abbr\", \"moo\");\n      }\n    });\n    trs[0].execute({ node: dataP, name: \"abbr\" });\n    const attrVals = getAttributeValuesFor(p);\n    assert.equal(attrVals.length, 1, \"one attribute\");\n    assert.equal(attrVals[0].textContent, \"moo\");\n    editor.undo();\n    assert.equal(getAttributeValuesFor(p).length, 0, \"no attributes\");\n  });\n\n  it(\"can undo using the toolbar\", () => {\n    // Text node inside title.\n    const initial = titles[0].childNodes[1];\n    caretManager.setCaret(initial, 0);\n\n    editor.type(\"blah\");\n    const prom =  editor.undoEvents\n      .pipe(filter((ev) => ev.name === \"Undo\"), first()).toPromise();\n    const button = editor.widget\n      .querySelector(\"[data-original-title='Undo']\") as HTMLElement;\n    button.click();\n    return prom;\n  });\n\n  it(\"can redo using the toolbar\", () => {\n    // Text node inside title.\n    const initial = titles[0].childNodes[1];\n    caretManager.setCaret(initial, 0);\n\n    editor.type(\"blah\");\n\n    // Undo programmatically first...\n    editor.undo();\n\n    // ... then we can redo.\n    const prom =  editor.undoEvents\n      .pipe(filter((ev) => ev.name === \"Redo\"), first()).toPromise();\n    const button = editor.widget\n      .querySelector(\"[data-original-title='Redo']\") as HTMLElement;\n    button.click();\n    return prom;\n  });\n});\n"]}