{"version":3,"file":"wed-without-saver-test.js","sourceRoot":"","sources":["../../../../../lib/tests/integration/wed-without-saver-test.ts"],"names":[],"mappings":";;;IASA,IAAM,OAAO,GAAG;QACd,MAAM,EAAE,2CAA2C;QACnD,IAAI,EAAE;YACJ,IAAI,EAAE,0BAA0B;YAChC,OAAO,EAAE;gBACP,QAAQ,EAAE,uCAAuC;aAClD;SACF;QACD,OAAO,EAAE;YACP,GAAG,EAAE,qBAAqB;SAC3B;KACF,CAAC;IAEF,QAAQ,CAAC,oBAAoB,EAAE;QAC7B,IAAI,KAAkB,CAAC;QACvB,IAAI,MAAc,CAAC;QAEnB,MAAM,CAAC;YACL,KAAK,GAAG,IAAI,2BAAW,CACrB,qEAAqE,EACrE,OAAO,EACP,QAAQ,CAAC,CAAC;YACZ,CAAG,qBAAM,CAAW,CAAC;YACrB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;gBACrB,kCAAkC;gBACjC,MAAM,CAAC,SAAiB,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC;YACR,KAAK,CAAC,KAAK,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC;YACJ,KAAK,CAAC,OAAO,EAAE,CAAC;YAEhB,kCAAkC;YACjC,MAAc,GAAG,SAAS,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,oCAAoC;QACpC,EAAE,CAAC,kBAAkB,EAAE,cAAO,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { Editor } from \"wed/editor\";\n\nimport { EditorSetup } from \"../wed-test-util\";\n\nconst options = {\n  schema: \"/base/build/schemas/tei-simplified-rng.js\",\n  mode: {\n    path: \"wed/modes/test/test-mode\",\n    options: {\n      metadata: \"/base/build/schemas/tei-metadata.json\",\n    },\n  },\n  ajaxlog: {\n    url: \"/build/ajax/log.txt\",\n  },\n};\n\ndescribe(\"wed without saver:\", () => {\n  let setup: EditorSetup;\n  let editor: Editor;\n\n  before(() => {\n    setup = new EditorSetup(\n      \"/base/build/standalone/lib/tests/wed_test_data/source_converted.xml\",\n      options,\n      document);\n    ({ editor } = setup);\n    return setup.init().then(() => {\n        // tslint:disable-next-line:no-any\n        (editor.validator as any)._validateUpTo(editor.dataRoot, -1);\n      });\n  });\n\n  afterEach(() => {\n    setup.reset();\n  });\n\n  after(() => {\n    setup.restore();\n\n    // tslint:disable-next-line:no-any\n    (editor as any) = undefined;\n  });\n\n  // tslint:disable-next-line:no-empty\n  it(\"is able to start\", () => {});\n});\n"]}