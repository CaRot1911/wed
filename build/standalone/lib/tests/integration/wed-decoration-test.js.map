{"version":3,"file":"wed-decoration-test.js","sourceRoot":"","sources":["../../../../../lib/tests/integration/wed-decoration-test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { CaretManager } from \"wed/caret-manager\";\nimport { isElement } from \"wed/domtypeguards\";\nimport { Editor } from \"wed/editor\";\n\nimport * as globalConfig from \"../base-config\";\nimport { EditorSetup, firstGUI, getAttributeNamesFor } from \"../wed-test-util\";\n\nconst assert = chai.assert;\n\ndescribe(\"wed decoration:\", () => {\n  let setup: EditorSetup;\n  let editor: Editor;\n  let caretManager: CaretManager;\n\n  before(() => {\n    setup = new EditorSetup(\n      \"/base/build/standalone/lib/tests/wed_test_data/source_converted.xml\",\n      globalConfig.config,\n      document);\n    ({ editor } = setup);\n    return setup.init().then(() => {\n      // tslint:disable-next-line:no-any\n      (editor.validator as any)._validateUpTo(editor.dataRoot, -1);\n      caretManager = editor.caretManager;\n    });\n  });\n\n  afterEach(() => {\n    setup.reset();\n  });\n\n  after(() => {\n    setup.restore();\n    // tslint:disable-next-line:no-any\n    (editor as any) = undefined;\n    // tslint:disable-next-line:no-any\n    (caretManager as any) = undefined;\n    // tslint:disable-next-line:no-any\n  });\n\n  it(\"element becoming empty acquires a placeholder\", () => {\n    // Text node inside title.\n    const initial = editor.dataRoot.getElementsByTagName(\"title\")[0];\n\n    // Make sure we are looking at the right thing.\n    assert.equal(initial.childNodes.length, 1);\n    assert.equal(initial.firstChild!.textContent, \"abcd\");\n    caretManager.setCaret(initial, 0);\n    const caret = caretManager.getNormalizedCaret()!;\n    assert.equal(caret.node.childNodes[caret.offset].nodeValue, \"abcd\");\n\n    // Delete all contents.\n    editor.dataUpdater.removeNode(initial.firstChild);\n\n    // We should have a placeholder now, between the two labels.\n    assert.equal(caret.node.childNodes.length, 3);\n    assert.isTrue((caret.node.childNodes[1] as Element).classList.contains(\n      \"_placeholder\"));\n  });\n\n  it(\"element getting filled is properly decorated\", () => {\n    const initial = editor.guiRoot.querySelector(\".publicationStmt>.p\")!;\n    const initialData = editor.toDataNode(initial)!;\n\n    // Make sure we are looking at the right thing.\n    assert.equal(initialData.childNodes.length, 0);\n    caretManager.setCaret(initialData, 0);\n    editor.type(\"a\");\n    assert.equal(initialData.childNodes.length, 1);\n    // Check the contents of the GUI tree to make sure it has a start, end\n    // labels and one text node.\n    assert.equal(initial.childNodes.length, 3);\n    assert.isTrue(isElement(initial.firstChild) &&\n                  initial.firstChild.matches(\"._p_label.__start_label\"),\n                  \"should have a start label\");\n    assert.equal(initial.childNodes[1].nodeType, Node.TEXT_NODE);\n    assert.isTrue(isElement(initial.lastChild) &&\n                  initial.lastChild.matches(\"._p_label.__end_label\"),\n                  \"should have an end label\");\n  });\n\n  function isVisible(el: HTMLElement): boolean {\n    return (el.offsetWidth !== 0 ||\n            el.offsetHeight !== 0 ||\n            el.getClientRects().length !== 0);\n  }\n\n  describe(\"autohidden attributes\", () => {\n    function checkHidden(div: Element): void {\n      for (const name of Array.from(getAttributeNamesFor(div))) {\n        const text = name.textContent;\n        const autohidden = name.closest(\"._shown_when_caret_in_label\") !== null;\n        if (text === \"type\" || text === \"subtype\") {\n          assert.isFalse(autohidden);\n          assert.isTrue(isVisible(name as HTMLElement), \"should be visible\");\n        }\n        else {\n          assert.isTrue(autohidden);\n          assert.isFalse(isVisible(name as HTMLElement), \"should be hidden\");\n        }\n      }\n    }\n\n    function checkVisible(div: Element): void {\n      for (const name of Array.from(getAttributeNamesFor(div))) {\n        const text = name.textContent;\n        const autohidden = name.closest(\"._shown_when_caret_in_label\") !== null;\n        assert.isTrue(isVisible(name as HTMLElement),\n                      `${text} should be visible`);\n        if (text === \"type\" || text === \"subtype\") {\n          assert.isFalse(autohidden);\n        }\n        else {\n          assert.isTrue(autohidden);\n        }\n      }\n    }\n\n    it(\"are hidden when the caret is not in the element\", () => {\n      checkHidden(editor.guiRoot.querySelectorAll(\".body .div\")[1]);\n    });\n\n    it(\"are shown when the caret is in the element\", () => {\n      const div = editor.guiRoot.querySelectorAll(\".body .div\")[1];\n      const label = firstGUI(div);\n      caretManager.setCaret(label, 0);\n      checkVisible(div);\n    });\n\n    it(\"are shown and hidden using the toolbar\", () => {\n      const div = editor.guiRoot.querySelectorAll(\".body .div\")[1];\n      // Initially hidden when the caret it outside the element.\n      checkHidden(div);\n\n      let button = editor.widget\n        .querySelector(\n          \"[data-original-title='Toggle attribute hiding']\") as HTMLElement;\n      button.click();\n\n      checkVisible(div);\n\n      // Toggle again, and they should be all be invisible.\n      button = editor.widget\n        .querySelector(\n          \"[data-original-title='Toggle attribute hiding']\") as HTMLElement;\n      button.click();\n      checkHidden(div);\n    });\n  });\n});\n"]}