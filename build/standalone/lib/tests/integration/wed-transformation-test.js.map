{"version":3,"file":"wed-transformation-test.js","sourceRoot":"","sources":["../../../../../lib/tests/integration/wed-transformation-test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { CaretManager } from \"wed/caret-manager\";\nimport { Editor } from \"wed/editor\";\n\nimport * as globalConfig from \"../base-config\";\nimport { caretCheck, EditorSetup, getAttributeNamesFor, getAttributeValuesFor,\n         getElementNameFor } from \"../wed-test-util\";\n\nconst assert = chai.assert;\n\ndescribe(\"wed transformation:\", () => {\n  let setup: EditorSetup;\n  let editor: Editor;\n  let caretManager: CaretManager;\n  let ps: NodeListOf<Element>;\n  let guiRoot: Element;\n  let titles: NodeListOf<Element>;\n\n  before(() => {\n    setup = new EditorSetup(\n      \"/base/build/standalone/lib/tests/wed_test_data/source_converted.xml\",\n      globalConfig.config,\n      document);\n    ({ editor } = setup);\n    return setup.init().then(() => {\n      // tslint:disable-next-line:no-any\n      (editor.validator as any)._validateUpTo(editor.dataRoot, -1);\n      caretManager = editor.caretManager;\n      guiRoot = editor.guiRoot;\n      ps = guiRoot.querySelectorAll(\".body .p\");\n      titles = guiRoot.getElementsByClassName(\"title\");\n    });\n  });\n\n  afterEach(() => {\n    setup.reset();\n  });\n\n  after(() => {\n    setup.restore();\n\n    // tslint:disable-next-line:no-any\n    (editor as any) = undefined;\n    // tslint:disable-next-line:no-any\n    (caretManager as any) = undefined;\n  });\n\n  it(\"doing an attribute addition changes the data\", () => {\n    const p = ps[0];\n    const dataP = editor.toDataNode(p);\n    const elName = getElementNameFor(p)!;\n    assert.equal(getAttributeValuesFor(p).length, 0, \"no attributes\");\n    const trs = editor.modeTree.getMode(elName).getContextualActions(\n      [\"add-attribute\"], \"abbr\", elName, 0);\n\n    caretManager.setCaret(elName.firstChild, 0);\n    caretCheck(editor, elName.firstChild!, 0,\n               \"the caret should be in the element name\");\n    trs[0].execute({ node: dataP, name: \"abbr\" });\n    const attrVals = getAttributeValuesFor(p);\n    assert.equal(attrVals.length, 1, \"one attribute\");\n    caretCheck(editor, attrVals[0].firstChild!, 0,\n               \"the caret should be in the attribute value\");\n\n    const dataNode = editor.toDataNode(attrVals[0]) as Attr;\n    assert.equal(dataNode.value, \"\");\n    assert.equal(dataNode.name, \"abbr\");\n  });\n\n  it(\"doing an attribute deletion changes the data\", () => {\n    const p = ps[7];\n    const dataP = editor.toDataNode(p) as Element;\n    const attrNames = getAttributeNamesFor(p);\n    let attrValues = getAttributeValuesFor(p);\n    const initialLength = attrValues.length;\n    assert.isTrue(initialLength > 0, \"the paragraph should have attributes\");\n    const attr = editor.toDataNode(attrValues[0]) as Attr;\n    const decodedName = attrNames[0].textContent!;\n    const trs = editor.modeTree.getMode(attr).getContextualActions(\n      [\"delete-attribute\"], decodedName, attr);\n\n    caretManager.setCaret(attr, 0);\n    caretCheck(editor, attrValues[0].firstChild!, 0,\n               \"the caret should be in the attribute\");\n    trs[0].execute({ node: attr, name: decodedName });\n    attrValues = getAttributeValuesFor(p);\n    assert.equal(attrValues.length, initialLength - 1,\n                 \"one attribute should be gone\");\n    caretCheck(editor, attrValues[0].firstChild!, 0,\n               \"the caret should be in the first attribute value\");\n\n    assert.isNull(attr.ownerElement,\n                  \"the old attribute should not have an onwer element\");\n    assert.isNull(dataP.getAttribute(attr.name));\n  });\n\n  it(\"unwraps elements\", () => {\n    const initial = editor.dataRoot.getElementsByTagName(\"title\")[0];\n\n    // Make sure we are looking at the right thing.\n    assert.equal(initial.childNodes.length, 1);\n    assert.equal(initial.firstChild!.textContent, \"abcd\");\n    caretManager.setCaret(initial, 0);\n    let caret = caretManager.getNormalizedCaret()!;\n    assert.equal(caret.node.childNodes[caret.offset].nodeValue, \"abcd\");\n\n    let trs = editor.modeTree.getMode(initial)\n      .getContextualActions([\"wrap\"], \"hi\", initial, 0);\n\n    caretManager.setCaret(initial.firstChild, 1);\n    caret = caretManager.getNormalizedCaret()!;\n    caretManager.setRange(caret, caret.makeWithOffset(caret.offset + 2));\n\n    trs[0].execute({ node: undefined, name: \"hi\" });\n\n    const node = initial.getElementsByTagName(\"hi\")[0];\n    trs = editor.modeTree.getMode(node).getContextualActions([\"unwrap\"], \"hi\",\n                                                             node, 0);\n\n    trs[0].execute({ node, element_name: \"hi\" });\n    assert.equal(initial.childNodes.length, 1, \"length after unwrap\");\n    assert.equal(initial.firstChild!.textContent, \"abcd\");\n  });\n\n  it(\"wraps elements in elements (offset 0)\", () => {\n    const initial = editor.dataRoot.querySelectorAll(\"body>p\")[4];\n\n    // Make sure we are looking at the right thing.\n    assert.equal(initial.childNodes.length, 1);\n    assert.equal(initial.firstChild!.textContent, \"abcdefghij\");\n\n    const trs = editor.modeTree.getMode(initial)\n      .getContextualActions([\"wrap\"], \"hi\", initial, 0);\n\n    caretManager.setCaret(initial.firstChild, 3);\n    let caret = caretManager.getNormalizedCaret()!;\n    caretManager.setRange(caret, caret.makeWithOffset(caret.offset + 2));\n\n    trs[0].execute({ node: undefined, name: \"hi\" });\n\n    assert.equal(\n      initial.outerHTML,\n      `<p xmlns=\"http://www.tei-c.org/ns/1.0\">abc<hi>de</hi>fghij</p>`);\n    assert.equal(initial.childNodes.length, 3, \"length after first wrap\");\n\n    caret = caretManager.fromDataLocation(initial.firstChild!, 0)!;\n    caretManager.setRange(\n      caret, caretManager.fromDataLocation(initial.lastChild!, 0)!);\n\n    trs[0].execute({ node: undefined, name: \"hi\" });\n\n    assert.equal(initial.outerHTML,\n                 `<p xmlns=\"http://www.tei-c.org/ns/1.0\"><hi>abc<hi>de</hi>\\\n</hi>fghij</p>`);\n    assert.equal(initial.childNodes.length, 2, \"length after second wrap\");\n  });\n\n  it(\"wraps elements in elements (offset === nodeValue.length)\", () => {\n    const initial = editor.dataRoot.querySelectorAll(\"body>p\")[4];\n\n    // Make sure we are looking at the right thing.\n    assert.equal(initial.childNodes.length, 1);\n    assert.equal(initial.firstChild!.textContent, \"abcdefghij\");\n\n    const trs = editor.modeTree.getMode(initial).getContextualActions(\n      [\"wrap\"], \"hi\", initial, 0);\n\n    let caret = caretManager.fromDataLocation(initial.firstChild!, 3)!;\n    caretManager.setRange(caret, caret.makeWithOffset(caret.offset + 2));\n\n    trs[0].execute({ node: undefined, name: \"hi\" });\n\n    assert.equal(\n      initial.outerHTML,\n      `<p xmlns=\"http://www.tei-c.org/ns/1.0\">abc<hi>de</hi>fghij</p>`);\n    assert.equal(initial.childNodes.length, 3, \"length after first wrap\");\n\n    // We can't set this to the full length of the node value on Chrome because\n    // Chrome will move the range into the <div> that you see above in the\n    // innerHTML test. :-/\n\n    caret = caretManager.fromDataLocation(\n      initial.firstChild!,\n      initial.firstChild!.textContent!.length - 1)!;\n    caretManager.setRange(\n      caret, caretManager.fromDataLocation(\n        initial.lastChild!,\n        initial.lastChild!.textContent!.length)!);\n\n    trs[0].execute({ node: undefined, name: \"hi\" });\n\n    assert.equal(\n      initial.outerHTML,\n      `<p xmlns=\"http://www.tei-c.org/ns/1.0\">ab<hi>c<hi>de</hi>fghij</hi>\\\n</p>`);\n    assert.equal(initial.childNodes.length, 2, \"length after second wrap\");\n  });\n\n  it(\"wraps elements in elements (no limit case)\", () => {\n    const initial = editor.dataRoot.querySelectorAll(\"body>p\")[4];\n\n    // Make sure we are looking at the right thing.\n    assert.equal(initial.childNodes.length, 1);\n    assert.equal(initial.firstChild!.textContent, \"abcdefghij\");\n\n    const trs = editor.modeTree.getMode(initial)\n      .getContextualActions([\"wrap\"], \"hi\", initial, 0);\n\n    let caret = caretManager.fromDataLocation(initial.firstChild!, 3)!;\n    caretManager.setRange(caret, caret.makeWithOffset(caret.offset + 2));\n\n    trs[0].execute({ node: undefined, name: \"hi\" });\n\n    assert.equal(initial.childNodes.length, 3, \"length after first wrap\");\n    assert.equal(\n      initial.outerHTML,\n      `<p xmlns=\"http://www.tei-c.org/ns/1.0\">abc<hi>de</hi>fghij</p>`);\n\n    caret = caretManager.fromDataLocation(initial.firstChild!, 2)!;\n    caretManager.setRange(\n      caret,\n      caretManager.fromDataLocation(initial.lastChild!, 2)!);\n\n    trs[0].execute({ node: undefined, name: \"hi\" });\n\n    assert.equal(initial.childNodes.length, 3, \"length after second wrap\");\n    assert.equal(initial.outerHTML,\n                 `<p xmlns=\"http://www.tei-c.org/ns/1.0\">ab<hi>c<hi>de</hi>fg\\\n</hi>hij</p>`);\n  });\n\n  it(\"wraps text in elements (no limit case)\", () => {\n    const initial = editor.dataRoot.querySelectorAll(\"body>p\")[4];\n\n    // Make sure we are looking at the right thing.\n    assert.equal(initial.childNodes.length, 1);\n    assert.equal(initial.firstChild!.textContent, \"abcdefghij\");\n\n    const trs = editor.modeTree.getMode(initial)\n      .getContextualActions([\"wrap\"], \"hi\", initial, 0);\n\n    const caret = caretManager.fromDataLocation(initial.firstChild!, 0)!;\n    caretManager.setRange(\n      caret, caret.makeWithOffset(initial.firstChild!.textContent!.length));\n\n    trs[0].execute({ node: undefined, name: \"hi\" });\n\n    assert.equal(initial.childNodes.length, 1, \"length after wrap\");\n    assert.equal(\n      initial.outerHTML,\n      `<p xmlns=\"http://www.tei-c.org/ns/1.0\"><hi>abcdefghij</hi></p>`);\n  });\n\n  it(\"removes mixed content\", () => {\n    const initial = editor.dataRoot.querySelectorAll(\"body>p\")[3];\n\n    // Make sure we are looking at the right thing.\n    assert.equal(initial.outerHTML,\n                 `<p xmlns=\"http://www.tei-c.org/ns/1.0\"><hi>a</hi><hi>b</hi>c\\\n</p>`);\n    const caret = caretManager.fromDataLocation(initial, 0)!;\n    caretManager.setRange(caret,\n                          caret.makeWithOffset(initial.childNodes.length));\n\n    const button = editor.toolbar.top.querySelector(\n      \"[data-original-title='Remove mixed-content markup']\") as HTMLElement;\n    button.click();\n\n    assert.equal(initial.childNodes.length, 1, \"length after removal\");\n    assert.equal(initial.outerHTML,\n                 `<p xmlns=\"http://www.tei-c.org/ns/1.0\">abc</p>`);\n  });\n\n  // This test only checks that the editor does not crash.\n  it(\"autofills in the midst of text\", () => {\n    const p = editor.dataRoot.querySelector(\"body>p\")!;\n    assert.isTrue(p.firstChild!.nodeType === Node.TEXT_NODE,\n                  \"we should set our caret in a text node\");\n    caretManager.setCaret(p.firstChild, 3);\n    const trs = editor.modeTree.getMode(p.firstChild!).getContextualActions(\n      [\"insert\"], \"biblFull\", p.firstChild!, 0);\n\n    trs[0].execute({ node: undefined, name: \"biblFull\" });\n  });\n\n  it(\"the editor emits transformation events\", (done) => {\n    const p = ps[0];\n    const dataP = editor.toDataNode(p);\n    const elName = getElementNameFor(p)!;\n    const tr = editor.modeTree.getMode(elName).getContextualActions(\n      [\"add-attribute\"], \"abbr\", elName, 0)[0];\n\n    caretManager.setCaret(elName.firstChild, 0);\n    caretCheck(editor, elName.firstChild!, 0,\n               \"the caret should be in the element name\");\n    let first = true;\n    editor.transformations.subscribe((ev) => {\n      assert.equal(ev.transformation, tr);\n      if (first) {\n        assert.equal(ev.name, \"StartTransformation\");\n        first = false;\n      }\n      else {\n        assert.equal(ev.name, \"EndTransformation\");\n        done();\n      }\n    });\n    tr.execute({ node: dataP, name: \"abbr\" });\n  });\n});\n"]}