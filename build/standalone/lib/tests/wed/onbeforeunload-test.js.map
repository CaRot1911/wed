{"version":3,"file":"onbeforeunload-test.js","sourceRoot":"","sources":["../../../../../lib/tests/wed/onbeforeunload-test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\nimport * as sinon from \"sinon\";\nimport * as onbeforeunloadMod from \"wed/onbeforeunload\";\n\nconst assert = chai.assert;\n\n// We need any in a bunch of places here.\n// tslint:disable:no-any\n\ndescribe(\"onbeforeunload\", () => {\n  let onbeforeunload: typeof onbeforeunloadMod;\n  let frame: HTMLIFrameElement;\n  let frameWindow: Window;\n\n  beforeEach((done) => {\n    frame = document.createElement(\"iframe\");\n    document.body.appendChild(frame);\n    frameWindow = frame.contentWindow!;\n    // We need <base> in the following code so that the proper protocol\n    // is set when resolving the relative paths.\n    const frameSrc = `\n<html>\n  <base href=\"${window.location.origin}\"></base>\n  <head>\n    <script src=\"/base/node_modules/requirejs/require.js\"></script>\n    <script src=\"/base/build/standalone/requirejs-config.js\"></script>\n  </head>\n  <body>\n  </body>\n</html>`;\n\n    frame.addEventListener(\"load\", () => {\n      const requirejs = (frameWindow as any).requirejs;\n      requirejs.config({\n        baseUrl: \"/base/build/standalone/lib/\",\n      });\n      requirejs([\"wed/onbeforeunload\"],\n                (_onbeforeunload: typeof onbeforeunloadMod) => {\n                  onbeforeunload = _onbeforeunload;\n                  done();\n                });\n    });\n    frame.src = URL.createObjectURL(new Blob([frameSrc],\n                                             { type: \"text/html\" }));\n  });\n\n  afterEach(() => {\n    document.body.removeChild(frame);\n  });\n\n  it(\"does not automatically install itself on window\", () => {\n    assert.isNull(frameWindow.onbeforeunload);\n  });\n\n  describe(\"install\", () => {\n    it(\"fails when already set and force is not set\", () => {\n      onbeforeunload.install(frameWindow);\n      // Upon upgrading from Chai 3.5.0 to 4.1.2 this fails. The problem is that\n      // isCompatibleConstructor in check-error is too strict. It checks whether\n      // the parameter passed to throws is an instance of Error, which fails due\n      // to the error being raised in a frame.\n      //\n      // assert.throws(onbeforeunload.install.bind(undefined, frameWindow),\n      //               (frameWindow as any).Error,\n      //               /^reregistering window with `force` false$/);\n      let e: any;\n      try {\n        onbeforeunload.install(frameWindow);\n      }\n      catch (_e) {\n        e = _e;\n      }\n      assert.instanceOf(e, (frameWindow as any).Error);\n      assert.equal(e.message, \"reregistering window with `force` false\");\n    });\n\n    it(\"works when force is set\", () => {\n      onbeforeunload.install(frameWindow);\n      onbeforeunload.install(frameWindow, undefined, true);\n      assert.isTrue(frameWindow.onbeforeunload!.call(frameWindow,\n                                                     undefined as any));\n    });\n\n    it(\"a true check results in a prompt\", () => {\n      const check = sinon.stub();\n      check.returns(true);\n\n      onbeforeunload.install(frameWindow, check, true);\n      assert.isTrue(frameWindow.onbeforeunload!.call(frameWindow,\n                                                     undefined as any));\n      assert.isTrue(check.calledOnce);\n    });\n\n    it(\"a false check does not result in a prompt\", () => {\n      const check = sinon.stub();\n      check.returns(false);\n\n      onbeforeunload.install(frameWindow, check, true);\n      assert.isUndefined(frameWindow.onbeforeunload!.call(frameWindow,\n                                                          undefined as any));\n      assert.isTrue(check.calledOnce);\n    });\n  });\n});\n\n//  LocalWords:  RequireJS Ctrl Mangalam MPL Dubeau requirejs chai\n//  LocalWords:  makeKey makeCtrlKey anyModifier keyup matchesEvent\n//  LocalWords:  keydown keypress setEventToMatch ctrl\n"]}