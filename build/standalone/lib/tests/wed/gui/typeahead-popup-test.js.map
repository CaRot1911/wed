{"version":3,"file":"typeahead-popup-test.js","sourceRoot":"","sources":["../../../../../../lib/tests/wed/gui/typeahead-popup-test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport * as sinon from \"sinon\";\n\nimport { TypeaheadPopup } from \"wed/gui/typeahead-popup\";\n\nconst assert = chai.assert;\n\ntype MatcherCallback = (matches: { value: string }[]) => void;\n\nfunction substringMatcher(strs: string[]):\n(q: string, cb: MatcherCallback) => void {\n  return function findMatches(q: string, cb: MatcherCallback): void {\n    const re = new RegExp(q, \"i\");\n\n    const matches: { value: string}[] = [];\n    for (const str of strs) {\n      if (re.test(str)) {\n        matches.push({ value: str });\n      }\n    }\n\n    cb(matches);\n  };\n}\n\nconst testData: string[] = [];\nfor (let i = 0; i < 100; ++i) {\n  testData.push(`Test ${i}`);\n}\n\ndescribe(\"TypeaheadPopup\", () => {\n  let ta: TypeaheadPopup;\n  let cb: sinon.SinonSpy;\n\n  beforeEach(() => {\n    cb = sinon.spy();\n    ta = new TypeaheadPopup(\n      window.document, 0, 0, 300, \"Placeholder\",\n      {\n        options: {\n          autoselect: true,\n          hint: true,\n          highlight: true,\n          minLength: 1,\n        },\n        datasets: [{\n          source: substringMatcher(testData),\n        }],\n      },\n      cb,\n    );\n  });\n\n  afterEach(() => {\n    if (ta !== undefined) {\n      ta.dismiss();\n    }\n  });\n\n  describe(\"setValue\", () => {\n    it(\"sets the value\", () => {\n      const ttInput =\n        document.getElementsByClassName(\"tt-input\")[0] as HTMLInputElement;\n      assert.notEqual(ttInput.value, \"foo\");\n\n      ta.setValue(\"foo\");\n      assert.equal(ttInput.value, \"foo\");\n    });\n  });\n\n  describe(\"hideSpinner\", () => {\n    it(\"hides the spinner\", () => {\n      const spinner =\n        document.querySelector(\".wed-typeahead-popup .spinner\") as HTMLElement;\n      assert.notEqual(spinner.style.display, \"none\");\n\n      ta.hideSpinner();\n      assert.equal(spinner.style.display, \"none\");\n    });\n  });\n\n  describe(\"dismiss\", () => {\n    it(\"calls the callback without a value if no value is given\", () => {\n      ta.dismiss();\n      assert.isTrue(cb.calledWith(undefined));\n    });\n\n    it(\"calls the callback with the value passed\", () => {\n      ta.dismiss(testData[0]);\n      assert.isTrue(cb.calledWith(testData[0]));\n    });\n\n    it(\"calls the callback with the value passed\", () => {\n      ta.dismiss(testData[0]);\n      assert.isTrue(cb.calledWith(testData[0]));\n    });\n\n    it(\"calls the callback only once\", () => {\n      ta.dismiss();\n      ta.dismiss();\n      assert.isTrue(cb.calledOnce);\n    });\n  });\n});\n"]}