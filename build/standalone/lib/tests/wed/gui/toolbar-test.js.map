{"version":3,"file":"toolbar-test.js","sourceRoot":"","sources":["../../../../../../lib/tests/wed/gui/toolbar-test.ts"],"names":[],"mappings":";;;IAYA,qDAAqD;IACrD,IAAM,UAAU,GAAc;QAC5B,oCAAoC;QACpC,IAAI,EAAE,cAAO,CAAC;QACd,oCAAoC;QACpC,IAAI,EAAE,cAAO,CAAC;KACF,CAAC;IAEf,QAAQ,CAAC,SAAS,EAAE;QAClB,IAAI,OAAgB,CAAC;QACrB,IAAI,OAA2B,CAAC;QAChC,UAAU,CAAC;YACT,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;YACxB,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC;YACR,OAAO,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,4BAA4B,GAAW;YACrC,aAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QAC3D,CAAC;QAED,0BAA0B,GAAW;YACnC,kCAAkC;YAClC,aAAM,CAAE,OAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACrE,CAAC;QAED,QAAQ,CAAC,YAAY,EAAE;YACrB,EAAE,CAAC,uBAAuB,EAAE;gBAC1B,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAM,MAAM,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;gBAC/D,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAC1B,kBAAkB,CAAC,CAAC,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,gBAAgB,EAAE;gBACnB,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAM,MAAM,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;gBAC/D,IAAM,OAAO,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;gBAChE,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;gBACrC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,oBAAoB,EAAE;gBACvB,IAAM,MAAM,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;gBAC/D,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAC1B,IAAM,OAAO,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;gBAChE,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBAE3B,iEAAiE;gBACjE,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBAC3C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAiB,CAAC,KAAK,EAAE,CAAC;gBACjD,aAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,aAAa,EAAE;gBAChB,IAAM,MAAM,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;gBAC/D,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAC1B,IAAM,OAAO,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;gBAChE,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBAE9C,iEAAiE;gBACjE,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBAC3C,OAAO,CAAC,GAAG,CAAC,iBAAiC,CAAC,KAAK,EAAE,CAAC;gBACvD,aAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,qDAAqD,EAAE;gBACxD,IAAM,MAAM,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;gBAC/D,aAAM,CAAC;oBACL,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC5D,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,EAAE,gDAAgD,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,sBAAsB,EAAE;gBACzB,IAAM,MAAM,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;gBAC/D,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC3C,aAAM,CAAE,OAAO,CAAC,GAAG,CAAC,gBAAgC,CAAC,SAAS;qBACtD,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;YAC7C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,iBAAiB,EAAE;YAC1B,EAAE,CAAC,eAAe,EAAE;gBAClB,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACtB,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAM,MAAM,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;gBAC/D,IAAM,OAAO,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;gBAChE,OAAO,CAAC,cAAc,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;gBAC1C,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACtB,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,kBAAkB,EAAE;gBACrB,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACtB,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAM,MAAM,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;gBAC/D,IAAM,OAAO,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;gBAChE,OAAO,CAAC,cAAc,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;gBAC1C,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACtB,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBACpB,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;gBAC3B,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACtB,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { expect } from \"chai\";\nimport * as sinon from \"sinon\";\n\nimport * as editorActions from \"wed/editor-actions\";\nimport { Toolbar } from \"wed/gui/toolbar\";\nimport { EditorAPI } from \"wed/mode-api\";\n\n// tslint:disable-next-line:mocha-no-side-effect-code\nconst fakeEditor: EditorAPI = {\n  // tslint:disable-next-line:no-empty\n  undo: () => {},\n  // tslint:disable-next-line:no-empty\n  redo: () => {},\n} as EditorAPI;\n\ndescribe(\"Toolbar\", () => {\n  let toolbar: Toolbar;\n  let sandbox: sinon.SinonSandbox;\n  beforeEach(() => {\n    toolbar = new Toolbar();\n    sandbox = sinon.sandbox.create();\n  });\n\n  afterEach(() => {\n    sandbox.restore();\n  });\n\n  function checkCustomButtons(num: number): void {\n    expect(toolbar.top.childNodes).to.have.lengthOf(num + 2);\n  }\n\n  function checkModeButtons(num: number): void {\n    // tslint:disable-next-line:no-any\n    expect((toolbar as any).modeSpan.childNodes).to.have.lengthOf(num);\n  }\n\n  describe(\"#addButton\", () => {\n    it(\"takes a single button\", () => {\n      checkCustomButtons(0);\n      const button = new editorActions.Undo(fakeEditor).makeButton();\n      toolbar.addButton(button);\n      checkCustomButtons(1);\n    });\n\n    it(\"takes an array\", () => {\n      checkCustomButtons(0);\n      const button = new editorActions.Undo(fakeEditor).makeButton();\n      const button2 = new editorActions.Redo(fakeEditor).makeButton();\n      toolbar.addButton([button, button2]);\n      checkCustomButtons(2);\n    });\n\n    it(\"appends by default\", () => {\n      const button = new editorActions.Undo(fakeEditor).makeButton();\n      toolbar.addButton(button);\n      const button2 = new editorActions.Redo(fakeEditor).makeButton();\n      toolbar.addButton(button2);\n\n      // Clicking the 2nd child executes the child that was added last.\n      const spy = sandbox.spy(fakeEditor, \"redo\");\n      (toolbar.top.children[1] as HTMLElement).click();\n      expect(spy).to.have.been.calledOnce;\n    });\n\n    it(\"can prepend\", () => {\n      const button = new editorActions.Undo(fakeEditor).makeButton();\n      toolbar.addButton(button);\n      const button2 = new editorActions.Redo(fakeEditor).makeButton();\n      toolbar.addButton(button2, { prepend: true });\n\n      // Clicking the 1st child executes the child that was added last.\n      const spy = sandbox.spy(fakeEditor, \"redo\");\n      (toolbar.top.firstElementChild as HTMLElement).click();\n      expect(spy).to.have.been.calledOnce;\n    });\n\n    it(\"refuses to allow right and prepend at the same time\", () => {\n      const button = new editorActions.Undo(fakeEditor).makeButton();\n      expect(() => {\n        toolbar.addButton(button, { prepend: true, right: true });\n      }).to.throw(Error, /^cannot use prepend and right at the same time/);\n    });\n\n    it(\"allows pushing right\", () => {\n      const button = new editorActions.Undo(fakeEditor).makeButton();\n      toolbar.addButton(button, { right: true });\n      expect((toolbar.top.lastElementChild as HTMLElement).classList\n             .contains(\"pull-right\")).to.be.true;\n    });\n  });\n\n  describe(\"#setModeButtons\", () => {\n    it(\"takes buttons\", () => {\n      checkCustomButtons(0);\n      checkModeButtons(0);\n      const button = new editorActions.Undo(fakeEditor).makeButton();\n      const button2 = new editorActions.Undo(fakeEditor).makeButton();\n      toolbar.setModeButtons([button, button2]);\n      checkCustomButtons(0);\n      checkModeButtons(2);\n    });\n\n    it(\"replaces buttons\", () => {\n      checkCustomButtons(0);\n      checkModeButtons(0);\n      const button = new editorActions.Undo(fakeEditor).makeButton();\n      const button2 = new editorActions.Undo(fakeEditor).makeButton();\n      toolbar.setModeButtons([button, button2]);\n      checkCustomButtons(0);\n      checkModeButtons(2);\n      toolbar.setModeButtons([]);\n      checkCustomButtons(0);\n      checkModeButtons(0);\n    });\n  });\n});\n"]}