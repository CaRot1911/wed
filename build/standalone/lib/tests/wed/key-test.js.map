{"version":3,"file":"key-test.js","sourceRoot":"","sources":["../../../../../lib/tests/wed/key-test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport * as keyMod from \"wed/key\";\n\nconst assert = chai.assert;\n\ndescribe(\"key\", () => {\n  let key: typeof keyMod;\n  let frame: HTMLIFrameElement;\n  let frameWindow: Window;\n\n  const browsers = {\n    CHROME_31: false,\n    MISE: false,\n    OSX: false,\n  };\n\n  // We load the module into a frame so that we can give it a fake ``browsers``\n  // module.\n  before((done) => {\n    frame = document.createElement(\"iframe\");\n    document.body.appendChild(frame);\n    frameWindow = frame.contentWindow;\n    // We need <base> in the following code so that the proper protocol\n    // is set when resolving the relative paths.\n    const frameSrc = `\n<html>\n  <base href=\"${window.location.origin}\"></base>\n  <head>\n    <script src=\"/base/node_modules/requirejs/require.js\"></script>\n    <script src=\"/base/build/standalone/requirejs-config.js\"></script>\n  </head>\n  <body>\n  </body>\n</html>`;\n\n    frame.addEventListener(\"load\", () => {\n      // tslint:disable-next-line:no-any\n      const requirejs = (frameWindow as any).requirejs;\n      // This will be loaded instead of the real module.\n      // tslint:disable-next-line:no-any\n      (frameWindow as any).define(\"wed/browsers\", browsers);\n      requirejs.config({\n        baseUrl: \"/base/build/standalone/lib/\",\n      });\n      requirejs([\"wed/key\"],\n                (_key: typeof keyMod) => {\n                  key = _key;\n                  done();\n                });\n    });\n    frame.src = URL.createObjectURL(new Blob([frameSrc],\n                                             { type: \"text/html\" }));\n  });\n\n  after(() => {\n    document.body.removeChild(frame);\n  });\n\n  describe(\"makeKey\", () => {\n    it(\"makes a key\", () => {\n      const k = key.makeKey(1, true, 2, 3, true, false, true, key.EITHER);\n      assert.equal(k.which, 1);\n      assert.equal(k.keyCode, 2);\n      assert.equal(k.charCode, 3);\n      assert.equal(k.ctrlKey, true);\n      assert.equal(k.altKey, false);\n      assert.equal(k.metaKey, true);\n      assert.equal(k.shiftKey, key.EITHER);\n      assert.equal(k.keypress, true);\n    });\n\n    it(\"sets sensible defaults\", () => {\n      const k = key.makeKey(1);\n      assert.equal(k.which, 1);\n      assert.equal(k.keyCode, 1);\n      assert.equal(k.charCode, 1);\n      assert.equal(k.ctrlKey, false);\n      assert.equal(k.altKey, false);\n      assert.equal(k.metaKey, false);\n      assert.equal(k.shiftKey, key.EITHER);\n      assert.equal(k.keypress, true);\n    });\n\n    it(\"returns the same value for same parameters\", () => {\n      const k1 = key.makeKey(1, true, 2, 3, true, false, true);\n      const k2 = key.makeKey(1, true, 2, 3, true, false, true);\n      assert.equal(k1, k2);\n      const k3 = key.makeKey(1, true, 2, 3, true, false, true, key.EITHER);\n      assert.equal(k1, k3);\n    });\n  });\n\n  describe(\"makeCtrlKey\", () => {\n    it(\"makes a control key\", () => {\n      const k = key.makeCtrlKey(1);\n      assert.equal(k.which, 1);\n      assert.equal(k.keyCode, 1);\n      assert.equal(k.charCode, 0);\n      assert.equal(k.ctrlKey, true);\n      assert.equal(k.altKey, false);\n      assert.equal(k.metaKey, false);\n      assert.equal(k.shiftKey, key.EITHER);\n      assert.equal(k.keypress, false);\n    });\n  });\n\n  describe(\"makeMetaKey\", () => {\n    it(\"makes a meta key\", () => {\n      const k = key.makeMetaKey(1);\n      assert.equal(k.which, 1);\n      assert.equal(k.keyCode, 1);\n      assert.equal(k.charCode, 0);\n      assert.equal(k.ctrlKey, false);\n      assert.equal(k.altKey, false);\n      assert.equal(k.metaKey, true);\n      assert.equal(k.shiftKey, key.EITHER);\n      assert.equal(k.keypress, false);\n    });\n  });\n\n  describe(\"makeCtrlEqKey\", () => {\n    it(\"makes a control key on non-OSX platforms\", () => {\n      const k = key.makeCtrlEqKey(1);\n      assert.equal(k, key.makeCtrlKey(1));\n    });\n\n    it(\"makes a meta key on OSX platforms\", () => {\n      browsers.OSX = true;\n      const k = key.makeCtrlEqKey(1);\n      assert.equal(k, key.makeMetaKey(1));\n    });\n\n    afterEach(() => {\n      browsers.OSX = false;\n    });\n  });\n\n  describe(\"Key\", () => {\n    describe(\"anyModifier\", () => {\n      it(\"returns true if any modifier is set\", () => {\n        // We set shift true here to show it does not impact anyModifier.\n        let k = key.makeCtrlKey(1, true);\n        assert.isTrue(k.anyModifier());\n\n        k = key.makeKey(1, false, 2, 3, false, true, false);\n        assert.isTrue(k.anyModifier());\n\n        k = key.makeKey(1, false, 2, 3, false, false, true);\n        assert.isTrue(k.anyModifier());\n      });\n    });\n\n    describe(\"matchesEvent\", () => {\n      it(\"matches keydown/keyup keys, with unspecified shift\", () => {\n        const k = key.makeCtrlKey(1);\n        const event = {\n          which: 1,\n          keyCode: 1,\n          charCode: 0,\n          ctrlKey: true,\n          altKey: false,\n          metaKey: false,\n          shiftKey: false,\n          type: \"keydown\",\n        } as KeyboardEvent;\n        assert.isTrue(k.matchesEvent(event));\n\n        // Matches keyup too.\n        // tslint:disable-next-line:no-any\n        (event as any).type = \"keyup\";\n        assert.isTrue(k.matchesEvent(event));\n\n        // Shift state does not matter.\n        // tslint:disable-next-line:no-any\n        (event as any).shiftKey = true;\n        assert.isTrue(k.matchesEvent(event));\n      });\n\n      it(\"matches keydown/keyup keys, with specified shift\", () => {\n        const k = key.makeCtrlKey(1, true);\n        const event = {\n          which: 1,\n          keyCode: 1,\n          charCode: 0,\n          ctrlKey: true,\n          altKey: false,\n          metaKey: false,\n          shiftKey: true,\n          type: \"keydown\",\n        } as KeyboardEvent;\n        assert.isTrue(k.matchesEvent(event));\n\n        // Matches keyup too.\n        // tslint:disable-next-line:no-any\n        (event as any).type = \"keyup\";\n        assert.isTrue(k.matchesEvent(event));\n\n        // Shift state matters.\n        // tslint:disable-next-line:no-any\n        (event as any).shiftKey = false;\n        assert.isFalse(k.matchesEvent(event));\n      });\n\n      it(\"matches a keypress key\", () => {\n        const k = key.makeKey(1);\n        const event = {\n          which: 1,\n          keyCode: 1,\n          charCode: 1,\n          ctrlKey: false,\n          altKey: false,\n          metaKey: false,\n          shiftKey: false,\n          type: \"keypress\",\n        } as KeyboardEvent;\n        assert.isTrue(k.matchesEvent(event));\n\n        // Shift state does not matter.\n        // tslint:disable-next-line:no-any\n        (event as any).shiftKey = true;\n        assert.isTrue(k.matchesEvent(event));\n      });\n\n      it(\"returns false when not matching an event\", () => {\n        const k = key.makeCtrlKey(1);\n        assert.isFalse(k.matchesEvent({\n          which: 1,\n          keyCode: 1,\n          charCode: 1,\n          ctrlKey: false,\n          altKey: false,\n          metaKey: false,\n          shiftKey: false,\n        } as KeyboardEvent));\n      });\n    });\n\n    describe(\"setEventToMatch\", () => {\n      it(\"sets an event to match a ctrl key, with unspecified shift\", () => {\n        const event = {} as KeyboardEvent;\n        const k = key.makeCtrlKey(1);\n        k.setEventToMatch(event);\n        assert.isTrue(k.matchesEvent(event));\n        // Biased towards keydown\n        assert.equal(event.type, \"keydown\");\n        assert.isUndefined(event.shiftKey);\n      });\n\n      it(\"sets an event to match a ctrl key, with specified shift\", () => {\n        const event = {} as KeyboardEvent;\n        const k = key.makeCtrlKey(1, true);\n        k.setEventToMatch(event);\n        assert.isTrue(k.matchesEvent(event));\n        // Biased towards keydown\n        assert.equal(event.type, \"keydown\");\n        assert.equal(event.shiftKey, true);\n      });\n\n      it(\"sets an event to match a keypress\", () => {\n        const event = {} as KeyboardEvent;\n        const k = key.makeKey(1);\n        k.setEventToMatch(event);\n        assert.isTrue(k.matchesEvent(event));\n        assert.isUndefined(event.shiftKey);\n      });\n    });\n  });\n});\n\n//  LocalWords:  RequireJS Ctrl Mangalam MPL Dubeau requirejs chai\n//  LocalWords:  makeKey makeCtrlKey anyModifier keyup matchesEvent\n//  LocalWords:  keydown keypress setEventToMatch ctrl\n"]}