{"version":3,"sources":["../../../tests/wed/search-replace-test.ts"],"names":[],"mappings":"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","file":"search-replace-test.js","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { CaretManager } from \"wed/caret-manager\";\nimport { DLoc, DLocRange } from \"wed/dloc\";\nimport { Context, Direction, SearchReplace } from \"wed/gui/search-replace\";\nimport * as wed from \"wed/wed\";\n\nimport * as globalConfig from \"../base-config\";\n\nimport { EditorSetup } from \"../wed-test-util\";\n\nconst expect = chai.expect;\n\n// tslint:disable:no-any\n\ndescribe(\"search-replace\", () => {\n  let setup: EditorSetup;\n  let editor: wed.Editor;\n  let guiRoot: HTMLElement;\n  let dataRoot: Document;\n  let docScope: DLocRange;\n  let caretManager: CaretManager;\n\n  let ps: Element[];\n  let firstBodyP: Element;\n  let firstBodyPLocation: DLoc;\n  let pFiveFirstThree: DLocRange;\n  let pFiveFirstFour: DLocRange;\n  let pSevenFirstThree: DLocRange;\n  let firstABCText: DLocRange;\n  let firstABCDText: DLocRange;\n  let firstABCAttribute: DLocRange;\n  let firstABCDAttribute: DLocRange;\n  let secondABCAttribute: DLocRange;\n  let titleBCD: DLocRange;\n  let titleABCD: DLocRange;\n\n  beforeEach(() => {\n    setup = new EditorSetup(\n      \"/base/build/standalone/lib/tests/search_test_data/source_converted.xml\",\n      globalConfig.config,\n      document);\n    ({ editor } = setup);\n    return setup.init();\n  });\n\n  beforeEach(() => {\n    guiRoot = editor.guiRoot;\n    dataRoot = editor.dataRoot;\n    caretManager = editor.caretManager;\n    docScope = editor.caretManager.docDLocRange;\n\n    const title = dataRoot.querySelector(\"title\")!;\n    titleBCD = new DLocRange(\n      caretManager.mustFromDataLocation(title.firstChild!, 1),\n      caretManager.mustFromDataLocation(title.firstChild!, 4));\n    titleABCD = new DLocRange(\n      caretManager.mustFromDataLocation(title.firstChild!, 0),\n      caretManager.mustFromDataLocation(title.firstChild!, 4));\n\n    ps = Array.from(dataRoot.querySelectorAll(\"body p\"));\n    firstBodyP = ps[0];\n    firstBodyPLocation = caretManager.mustFromDataLocation(\n      DLoc.mustMakeDLoc(dataRoot, firstBodyP, 0));\n    caretManager.setCaret(firstBodyPLocation);\n\n    // First 3 text characters in the 5th paragraph (at index 4).\n    const pFiveStart = DLoc.mustMakeDLoc(dataRoot, ps[4].firstChild, 0);\n    pFiveFirstThree = new DLocRange(\n      caretManager.mustFromDataLocation(pFiveStart),\n      caretManager.mustFromDataLocation(pFiveStart.makeWithOffset(3)));\n    expect(pFiveFirstThree.mustMakeDOMRange().toString()).to.equal(\"abc\");\n\n    pFiveFirstFour = new DLocRange(\n      caretManager.mustFromDataLocation(pFiveStart),\n      caretManager.mustFromDataLocation(pFiveStart.makeWithOffset(4)));\n    expect(pFiveFirstFour.mustMakeDOMRange().toString()).to.equal(\"abcd\");\n\n    const pSevenStart = DLoc.mustMakeDLoc(dataRoot, ps[6].firstChild, 0);\n    pSevenFirstThree = new DLocRange(\n      caretManager.mustFromDataLocation(pSevenStart),\n      caretManager.mustFromDataLocation(pSevenStart.makeWithOffset(3)));\n    expect(pSevenFirstThree.mustMakeDOMRange().toString()).to.equal(\"abc\");\n\n    // This is the first \"abc\" found when doing a TEXT search.\n    firstABCText = new DLocRange(\n      caretManager.mustFromDataLocation(ps[3].firstChild!.firstChild!, 0),\n      caretManager.mustFromDataLocation(ps[3].lastChild!, 1));\n\n    // This is the first \"abcd\" found when doing a TEXT search.\n    firstABCDText = new DLocRange(\n      caretManager.mustFromDataLocation(ps[3].firstChild!.firstChild!, 0),\n      caretManager.mustFromDataLocation(ps[3].lastChild!, 2));\n\n    const rend = ps[7].getAttributeNode(\"rend\");\n    firstABCAttribute = new DLocRange(\n      caretManager.mustFromDataLocation(rend, 0),\n      caretManager.mustFromDataLocation(rend, 3));\n\n    firstABCDAttribute = new DLocRange(\n      caretManager.mustFromDataLocation(rend, 0),\n      caretManager.mustFromDataLocation(rend, 4));\n\n    secondABCAttribute = new DLocRange(\n      caretManager.mustFromDataLocation(rend, 4),\n      caretManager.mustFromDataLocation(rend, 7));\n  });\n\n  afterEach(() => {\n    setup.restore();\n    (editor as any) = undefined;\n  });\n\n  function makeSr(): SearchReplace {\n    return new SearchReplace(editor, (editor as any).scroller);\n  }\n\n  function equalRanges(a: DLocRange, b: DLocRange): boolean {\n    return a.equals(b);\n  }\n\n  function isDocScope(x: DLocRange): boolean {\n    return x.equals(docScope);\n  }\n\n  function inDocument(x: Node): boolean {\n    return document.contains(x);\n  }\n\n  describe(\"SearchReplace\", () => {\n    it(\"throws if there is no caret set\", () => {\n      // Force the caret to be undefined.\n      (caretManager as any)._sel = undefined;\n      expect(makeSr).to.throw(Error, \"search without a caret!\");\n    });\n\n    it(\"starts with whole document scope if no selection\", () => {\n      expect(makeSr()).to.have.deep.property(\"search.scope\")\n        .satisfy(isDocScope);\n    });\n\n    it(\"starts with start position === caret if no selection\", () => {\n      expect(makeSr()).to.have.deep.property(\"search.start\")\n        .satisfy((x: DLoc) => x.equals(firstBodyPLocation));\n    });\n\n    it(\"starts with scope === selection\", () => {\n      caretManager.setRange(pFiveFirstThree.start.node,\n                            pFiveFirstThree.start.offset,\n                            pFiveFirstThree.end.node,\n                            pFiveFirstThree.end.offset);\n      expect(makeSr()).to.have.deep.property(\"search.scope\")\n        .satisfy(equalRanges.bind(undefined, pFiveFirstThree));\n    });\n\n    it(\"starts with start === selection start\", () => {\n      caretManager.setRange(pFiveFirstThree.start.node,\n                            pFiveFirstThree.start.offset,\n                            pFiveFirstThree.end.node,\n                            pFiveFirstThree.end.offset);\n      expect(makeSr()).to.have.deep.property(\"search.start\")\n        .satisfy((x: DLoc) => x.equals(pFiveFirstThree.start));\n    });\n\n    describe(\"current\", () => {\n      it(\"is initially undefined\", () => {\n        expect(makeSr()).to.have.property(\"current\").undefined;\n      });\n\n      it(\"holds the hit\", () => {\n        const sr = makeSr();\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, pFiveFirstThree));\n      });\n\n      it(\"is null when there's nothing to find\", () => {\n        const sr = makeSr();\n        sr.updatePattern(\"abcDOES NOT MATCH\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").null;\n      });\n    });\n\n    describe(\"canReplace\", () => {\n      it(\"is initially false\", () => {\n        expect(makeSr()).to.have.property(\"canReplace\").false;\n      });\n\n      it(\"is true on a well-formed hit\", () => {\n        const sr = makeSr();\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, pFiveFirstThree));\n        expect(sr).to.have.property(\"canReplace\").true;\n      });\n\n      it(\"is false when there's no hit\", () => {\n        const sr = makeSr();\n        sr.updatePattern(\"abcDOES NOT MATCH\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").null;\n        expect(sr).to.have.property(\"canReplace\").false;\n      });\n\n      it(\"is false on an ill-formed hit\", () => {\n        const sr = makeSr();\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.TEXT,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, firstABCText));\n        expect(sr).to.have.property(\"canReplace\").false;\n      });\n    });\n\n    describe(\"updatePattern\", () => {\n      it(\"searches forward\", () => {\n        const sr = makeSr();\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, pFiveFirstThree));\n\n        sr.updatePattern(\"abcd\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, pFiveFirstFour));\n\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, pFiveFirstThree));\n      });\n\n      it(\"searches backwards\", () => {\n        const sr = makeSr();\n        sr.updatePattern(\"bcd\", {\n          direction: Direction.BACKWARDS,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, titleBCD));\n\n        sr.updatePattern(\"abcd\", {\n          direction: Direction.BACKWARDS,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, titleABCD));\n      });\n\n      it(\"searches in context EVERYWHERE\", () => {\n        const sr = makeSr();\n        const pattern = \"hi >\";\n        sr.updatePattern(pattern, {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to.be.instanceOf(DLocRange);\n\n        sr.updatePattern(pattern, {\n          direction: Direction.FORWARD,\n          context: Context.TEXT,\n        });\n\n        expect(sr).to.have.property(\"current\").null;\n\n        sr.updatePattern(pattern, {\n          direction: Direction.FORWARD,\n          context: Context.ATTRIBUTE_VALUES,\n        });\n\n        expect(sr).to.have.property(\"current\").null;\n      });\n\n      it(\"searches in context TEXT\", () => {\n        const sr = makeSr();\n        const pattern = \"abc\";\n        sr.updatePattern(pattern, {\n          direction: Direction.FORWARD,\n          context: Context.TEXT,\n        });\n\n        expect(sr).to.have.property(\"current\")\n          .to.satisfy(equalRanges.bind(undefined, firstABCText));\n      });\n\n      it(\"searches in context ATTRIBUTE_VALUES\", () => {\n        const sr = makeSr();\n        const pattern = \"abc\";\n        sr.updatePattern(pattern, {\n          direction: Direction.FORWARD,\n          context: Context.ATTRIBUTE_VALUES,\n        });\n\n        expect(sr).to.have.property(\"current\")\n          .to.satisfy(equalRanges.bind(undefined, firstABCAttribute));\n      });\n\n      it(\"sets a highlight\", () => {\n        const sr = makeSr();\n        expect(document.querySelector(\"._wed_highlight\")).to.be.null;\n\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(document.querySelector(\"._wed_highlight\")).to.not.be.null;\n      });\n\n      it(\"changes highlight\", () => {\n        const sr = makeSr();\n\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        const oldHighlights =\n          Array.from(document.querySelectorAll(\"._wed_highlight\"));\n        expect(oldHighlights).to.have.property(\"length\").greaterThan(0);\n\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        for (const h of oldHighlights) {\n          expect(h).to.not.satisfy(inDocument);\n        }\n\n        expect(document.querySelector(\"._wed_highlight\")).to.not.be.null;\n      });\n    });\n\n    describe(\"next\", () => {\n      it(\"searches forward\", () => {\n        const sr = makeSr();\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, pFiveFirstThree));\n\n        sr.next({\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, pSevenFirstThree));\n      });\n\n      it(\"searches backwards\", () => {\n        const sr = makeSr();\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, pFiveFirstThree));\n\n        sr.next({\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, pSevenFirstThree));\n\n        sr.next({\n          direction: Direction.BACKWARDS,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, pFiveFirstThree));\n      });\n\n      it(\"searches in context EVERYWHERE\", () => {\n        const sr = makeSr();\n        const pattern = \"hi >\";\n        sr.updatePattern(pattern, {\n          direction: Direction.FORWARD,\n          context: Context.TEXT,\n        });\n\n        expect(sr).to.have.property(\"current\").null;\n\n        sr.next({\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").instanceOf(DLocRange);\n      });\n\n      it(\"searches in context TEXT\", () => {\n        const sr = makeSr();\n        const pattern = \"abc\";\n        sr.updatePattern(pattern, {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, pFiveFirstThree));\n\n        sr.next({\n          direction: Direction.BACKWARDS,\n          context: Context.TEXT,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, firstABCText));\n      });\n\n      it(\"searches in context ATTRIBUTE_VALUES\", () => {\n        const sr = makeSr();\n        const pattern = \"abc\";\n        sr.updatePattern(pattern, {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").instanceOf(DLocRange);\n\n        sr.next({\n          direction: Direction.FORWARD,\n          context: Context.ATTRIBUTE_VALUES,\n        });\n\n        expect(sr).to.have.property(\"current\")\n          .satisfy(equalRanges.bind(undefined, firstABCAttribute));\n      });\n\n      it(\"sets a highlight\", () => {\n        const sr = makeSr();\n        expect(document.querySelector(\"._wed_highlight\")).to.be.null;\n\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(document.querySelector(\"._wed_highlight\")).to.not.be.null;\n      });\n\n      it(\"changes highlight\", () => {\n        const sr = makeSr();\n\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        const oldHighlights =\n          Array.from(document.querySelectorAll(\"._wed_highlight\"));\n        expect(oldHighlights).to.have.property(\"length\").greaterThan(0);\n\n        sr.next({\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        for (const h of oldHighlights) {\n          expect(h).to.not.satisfy(inDocument);\n        }\n\n        expect(document.querySelector(\"._wed_highlight\")).to.not.be.null;\n      });\n    });\n\n    describe(\"replace\", () => {\n      it(\"replaces text\", () => {\n        const sr = makeSr();\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.EVERYWHERE,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, pFiveFirstThree));\n        const pGUI = pFiveFirstThree.start.node.parentNode!;\n        const p = editor.toDataNode(pGUI);\n        expect(p).to.have.property(\"textContent\").equal(\"abcdefghij\");\n\n        sr.replace(\"x\");\n        expect(p).to.have.property(\"textContent\").equal(\"xdefghij\");\n      });\n\n      it(\"replaces attribute values\", () => {\n        const sr = makeSr();\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.ATTRIBUTE_VALUES,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, firstABCAttribute));\n        const valGUI = firstABCAttribute.start.node.parentNode!;\n        const val = editor.toDataNode(valGUI);\n        expect(val).to.have.property(\"textContent\").equal(\"abcdabcdabcd\");\n\n        sr.replace(\"x\");\n        expect(val).to.have.property(\"textContent\").equal(\"xdabcdabcd\");\n      });\n\n      it(\"throws on ill-formed hit\", () => {\n        const sr = makeSr();\n        sr.updatePattern(\"abc\", {\n          direction: Direction.FORWARD,\n          context: Context.TEXT,\n        });\n\n        expect(sr).to.have.property(\"current\").to\n          .satisfy(equalRanges.bind(undefined, firstABCText));\n        expect(() => {\n          sr.replace(\"x\");\n        }).to.throw(Error, \"tried to replace when it is not possible\");\n      });\n    });\n  });\n});\n"]}