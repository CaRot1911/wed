{"version":3,"file":"gui-selector-test.js","sourceRoot":"","sources":["../../../../../lib/tests/wed/gui-selector-test.ts"],"names":[],"mappings":";IAAA;;;;OAIG;IACH,YAAY,CAAC;;IAKb,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAE3B,QAAQ,CAAC,aAAa,EAAE;QACtB,QAAQ,CAAC,eAAe,EAAE;YACxB,EAAE,CAAC,2BAA2B,EAAE;gBAC9B,IAAM,CAAC,GAAG,0BAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAC1C,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,eAAe,EAAE;gBAClB,IAAM,CAAC,GAAG,0BAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAC1C,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,0BAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,mBAAmB,EAAE;YAC5B,EAAE,CAAC,kBAAkB,EAAE;gBACrB,IAAM,QAAQ,GAAG,SAAS,CAAC;gBAC3B,IAAM,UAAU,GAAG;oBACjB,GAAG,EAAE,WAAW;iBACjB,CAAC;gBAEF,IAAM,CAAC,GAAG,0BAAW,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;gBAC7D,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;qBAChC,KAAK,CAAC,uBAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,eAAe,EAAE;gBAClB,IAAM,UAAU,GAAG;oBACjB,EAAE,EAAE,WAAW;iBAChB,CAAC;gBACF,IAAM,CAAC,GAAG,0BAAW,CAAC,gBAAgB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;gBAC1D,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,0BAAW,CAAC,gBAAgB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\"use strict\";\n\nimport { toGUISelector } from \"wed/domutil\";\nimport { GUISelector } from \"wed/gui-selector\";\n\nconst expect = chai.expect;\n\ndescribe(\"GUISelector\", () => {\n  describe(\"#makeVerbatim\", () => {\n    it(\"makes a selector verbatim\", () => {\n      const v = GUISelector.makeVerbatim(\"foo\");\n      expect(v).to.have.property(\"value\").equal(\"foo\");\n    });\n\n    it(\"caches values\", () => {\n      const v = GUISelector.makeVerbatim(\"foo\");\n      expect(v).to.equal(GUISelector.makeVerbatim(\"foo\"));\n    });\n  });\n\n  describe(\"#fromDataSelector\", () => {\n    it(\"makes a selector\", () => {\n      const selector = \"btw:foo\";\n      const namespaces = {\n        btw: \"something\",\n      };\n\n      const v = GUISelector.fromDataSelector(selector, namespaces);\n      expect(v).to.have.property(\"value\")\n        .equal(toGUISelector(selector, namespaces));\n    });\n\n    it(\"caches values\", () => {\n      const namespaces = {\n        \"\": \"something\",\n      };\n      const v = GUISelector.fromDataSelector(\"foo\", namespaces);\n      expect(v).to.equal(GUISelector.fromDataSelector(\"foo\", namespaces));\n    });\n  });\n});\n"]}