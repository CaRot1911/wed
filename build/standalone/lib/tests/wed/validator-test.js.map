{"version":3,"sources":["../../../tests/wed/validator-test.ts"],"names":[],"mappings":"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","file":"validator-test.js","sourcesContent":["/**\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { constructTree, Event, Grammar, Name, ValidationError } from \"salve\";\nimport { ErrorData } from \"salve-dom\";\n\nimport { DLoc, DLocRoot } from \"wed/dloc\";\nimport * as validator from \"wed/validator\";\n\nimport { DataProvider } from \"../util\";\n\nconst assert = chai.assert;\n\ndescribe(\"validator\", () => {\n  let emptyTree: HTMLElement;\n  let emptyDataRoot: DLocRoot;\n  let grammar: Grammar;\n  let genericTree: Document;\n\n  before(() => {\n    const frag = document.createDocumentFragment();\n    emptyTree = document.createElement(\"div\");\n    frag.appendChild(emptyTree);\n    emptyDataRoot = new DLocRoot(frag as Document);\n\n    const provider = new DataProvider(\"/base/build/\");\n    return Promise.all([\n      provider.getText(\"schemas/simplified-rng.js\").then((schema) => {\n        grammar = constructTree(schema);\n      }),\n      provider.getDoc(\n        \"standalone/lib/tests/validator_test_data/to_parse_converted.xml\")\n        .then((doc) => {\n          genericTree = doc;\n        }),\n    ]);\n  });\n\n  describe(\"possibleAt\", () => {\n    it(\"with DLoc\", () => {\n      const p = new validator.Validator(grammar, emptyTree, []);\n      const evs = p.possibleAt(DLoc.mustMakeDLoc(emptyDataRoot, emptyTree, 0));\n      assert.sameMembers(\n        evs.toArray(),\n        [new Event(\"enterStartTag\", new Name(\"\", \"\", \"html\"))]);\n    });\n  });\n\n  // We test speculativelyValidateFragment through speculativelyValidate\n  describe(\"speculativelyValidate\", () => {\n    it(\"with DLoc\", () => {\n      const tree = genericTree.cloneNode(true) as Document;\n      const dataRoot = new DLocRoot(tree);\n      const p = new validator.Validator(grammar, tree, []);\n      const body = tree.getElementsByTagName(\"body\")[0];\n      const container = body.parentNode!;\n      const index = Array.prototype.indexOf.call(container.childNodes, body);\n      const ret = p.speculativelyValidate(\n        DLoc.mustMakeDLoc(dataRoot, container, index), body);\n      assert.isFalse(ret);\n    });\n  });\n\n  // speculativelyValidateFragment is largely tested through\n  // speculativelyValidate above.\n  describe(\"speculativelyValidateFragment\", () => {\n    it(\"throws an error if toParse is not an element\", () => {\n      const tree = genericTree.cloneNode(true) as Document;\n      const dataRoot = new DLocRoot(tree);\n      const p = new validator.Validator(grammar, tree, []);\n      // tslint:disable-next-line:no-any\n      (p as any)._maxTimespan = 0; // Work forever.\n      const body = tree.getElementsByTagName(\"body\")[0];\n      const container = body.parentNode!;\n      const index = Array.prototype.indexOf.call(container.childNodes, body);\n      assert.throws(p.speculativelyValidateFragment.bind(\n        p, DLoc.makeDLoc(dataRoot, container, index),\n        document.createTextNode(\"blah\")), Error, \"toParse is not an element\");\n    });\n  });\n\n  describe(\"with a mode validator\", () => {\n    let p: validator.Validator;\n    let tree: Document;\n    let validationError: ValidationError;\n\n    before(() => {\n      validationError = new ValidationError(\"Test\");\n      tree = genericTree.cloneNode(true) as Document;\n    });\n\n    beforeEach(() => {\n      // tslint:disable-next-line:completed-docs\n      class Validator {\n        validateDocument(): ErrorData[] {\n          return [{\n            error: validationError,\n            node: tree,\n            index: 0,\n          }];\n        }\n      }\n\n      p = new validator.Validator(grammar, tree, [new Validator()]);\n      // tslint:disable-next-line:no-any\n      (p as any)._maxTimespan = 0; // Work forever.\n    });\n\n    function onCompletion(cb: () => void): void {\n      p.events.addEventListener(\"state-update\", (state) => {\n        if (!(state.state === validator.VALID ||\n              state.state === validator.INVALID)) {\n          return;\n        }\n        cb();\n      });\n    }\n\n    it(\"records additional errors\", (done) => {\n      onCompletion(() => {\n        assert.deepEqual(p.errors, [{ error: validationError, node: tree,\n                                      index: 0 }]);\n        done();\n      });\n      p.start();\n    });\n\n    it(\"emits additional error events\", (done) => {\n      let seen = 0;\n      p.events.addEventListener(\"error\", (error) => {\n        assert.deepEqual(error, { error: validationError, node: tree,\n                                  index: 0 });\n        seen++;\n      });\n      onCompletion(() => {\n        assert.equal(seen, 1);\n        done();\n      });\n      p.start();\n    });\n  });\n});\n\n//  LocalWords:  enterStartTag html jQuery Dubeau MPL Mangalam config\n//  LocalWords:  RequireJS requirejs subdirectory validator jquery js\n//  LocalWords:  chai baseUrl rng\n"]}